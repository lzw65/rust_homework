{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","alt_serde_json","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=0127a530b47a0e01","-C","extra-filename=-0127a530b47a0e01","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps","--extern","serde=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libalt_serde-1f4c29b3a92bfd5f.rmeta","--extern","itoa=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libitoa-cd3dd543e22f67cb.rmeta","--extern","ryu=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libryu-bf1eaf98b51c5de6.rmeta","--cap-lints","allow","--cfg","limb_width_64","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libalt_serde_json-0127a530b47a0e01.rmeta"},"prelude":{"crate_id":{"name":"alt_serde_json","disambiguator":[12960345949961231073,10775306604134617964]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","num":5,"id":{"name":"alt_serde","disambiguator":[8310575308826930113,14953848382810994585]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","num":6,"id":{"name":"serde_derive","disambiguator":[15005227695834228928,13188106083218604858]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","num":7,"id":{"name":"itoa","disambiguator":[708245801620839046,10644891861074126777]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","num":8,"id":{"name":"ryu","disambiguator":[2595139073293063990,3633285781182786758]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":0,"byte_end":15752,"line_start":1,"line_end":472,"column_start":1,"column_end":9}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":372},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14637,"byte_end":14647,"line_start":424,"line_end":424,"column_start":21,"column_end":31},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":375},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14649,"byte_end":14657,"line_start":424,"line_end":424,"column_start":33,"column_end":41},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14659,"byte_end":14671,"line_start":424,"line_end":424,"column_start":43,"column_end":55},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":341},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14673,"byte_end":14691,"line_start":424,"line_end":424,"column_start":57,"column_end":75},"alias_span":null,"name":"StreamDeserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":385},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14732,"byte_end":14737,"line_start":426,"line_end":426,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14739,"byte_end":14745,"line_start":426,"line_end":426,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":984},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14784,"byte_end":14793,"line_start":428,"line_end":428,"column_start":22,"column_end":31},"alias_span":null,"name":"to_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":986},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14795,"byte_end":14811,"line_start":428,"line_end":428,"column_start":33,"column_end":49},"alias_span":null,"name":"to_string_pretty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":980},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14813,"byte_end":14819,"line_start":428,"line_end":428,"column_start":51,"column_end":57},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":982},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14821,"byte_end":14834,"line_start":428,"line_end":428,"column_start":59,"column_end":72},"alias_span":null,"name":"to_vec_pretty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1698},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14977,"byte_end":14987,"line_start":433,"line_end":433,"column_start":24,"column_end":34},"alias_span":null,"name":"from_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1696},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14989,"byte_end":14997,"line_start":433,"line_end":433,"column_start":36,"column_end":44},"alias_span":null,"name":"to_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":14999,"byte_end":15002,"line_start":433,"line_end":433,"column_start":46,"column_end":49},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2734},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":15004,"byte_end":15010,"line_start":433,"line_end":433,"column_start":51,"column_end":57},"alias_span":null,"name":"Number","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2157},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":15012,"byte_end":15017,"line_start":433,"line_end":433,"column_start":59,"column_end":64},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1804},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26338,"byte_end":26342,"line_start":16,"line_end":16,"column_start":23,"column_end":27},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":1839},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26344,"byte_end":26353,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"SliceRead","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":1843},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26355,"byte_end":26362,"line_start":16,"line_end":16,"column_start":40,"column_end":47},"alias_span":null,"name":"StrRead","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":1441},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211623,"byte_end":211628,"line_start":99,"line_end":99,"column_start":22,"column_end":27},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":990}},{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211649,"byte_end":211659,"line_start":100,"line_end":100,"column_start":20,"column_end":30},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":990}},{"kind":"Use","ref_id":{"krate":0,"index":1549},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211649,"byte_end":211659,"line_start":100,"line_end":100,"column_start":20,"column_end":30},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":997}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211681,"byte_end":211684,"line_start":101,"line_end":101,"column_start":21,"column_end":24},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":990}},{"kind":"Use","ref_id":{"krate":0,"index":2734},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211709,"byte_end":211715,"line_start":102,"line_end":102,"column_start":24,"column_end":30},"alias_span":null,"name":"Number","value":"","parent":{"krate":0,"index":990}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":0,"byte_end":15752,"line_start":1,"line_end":472,"column_start":1,"column_end":9},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":87},{"krate":0,"index":378},{"krate":0,"index":472},{"krate":0,"index":632},{"krate":0,"index":990},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1734},{"krate":0,"index":1797}],"decl_id":null,"docs":" # Serde JSON","sig":null,"attributes":[{"value":"/ # Serde JSON","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":0,"byte_end":16,"line_start":1,"line_end":1,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":17,"byte_end":20,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ JSON is a ubiquitous open-standard format that uses human-readable text to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":21,"byte_end":99,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ transmit data objects consisting of key-value pairs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":100,"byte_end":156,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":157,"byte_end":160,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```json","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":161,"byte_end":172,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":173,"byte_end":178,"line_start":7,"line_end":7,"column_start":1,"column_end":6}},{"value":"/     \"name\": \"John Doe\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":179,"byte_end":206,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"/     \"age\": 43,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":207,"byte_end":225,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/     \"address\": {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":226,"byte_end":246,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"/         \"street\": \"10 Downing Street\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":247,"byte_end":289,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/         \"city\": \"London\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":290,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/     },","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":319,"byte_end":329,"line_start":13,"line_end":13,"column_start":1,"column_end":11}},{"value":"/     \"phones\": [","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":330,"byte_end":349,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/         \"+44 1234567\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":350,"byte_end":376,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/         \"+44 2345678\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":377,"byte_end":402,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/     ]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":403,"byte_end":412,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":413,"byte_end":418,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":419,"byte_end":426,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":427,"byte_end":430,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ There are three common ways that you might find yourself needing to work","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":431,"byte_end":507,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ with JSON data in Rust.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":508,"byte_end":535,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":536,"byte_end":539,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  - **As text data.** An unprocessed string of JSON data that you receive on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":540,"byte_end":619,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/    an HTTP endpoint, read from a file, or prepare to send to a remote","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":620,"byte_end":693,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/    server.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":694,"byte_end":708,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/  - **As an untyped or loosely typed representation.** Maybe you want to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":709,"byte_end":784,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/    check that some JSON data is valid before passing it on, but without","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":785,"byte_end":860,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/    knowing the structure of what it contains. Or you want to do very basic","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":861,"byte_end":939,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/    manipulations like insert a key in a particular spot.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":940,"byte_end":1000,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/  - **As a strongly typed Rust data structure.** When you expect all or most","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1001,"byte_end":1080,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/    of your data to conform to a particular structure and want to get real","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1081,"byte_end":1158,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/    work done without JSON's loosey-goosey nature tripping you up.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1159,"byte_end":1228,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1229,"byte_end":1232,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Serde JSON provides efficient, flexible, safe ways of converting data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1233,"byte_end":1306,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ between each of these representations.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1307,"byte_end":1349,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1350,"byte_end":1353,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Operating on untyped JSON values","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1354,"byte_end":1392,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1393,"byte_end":1396,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Any valid JSON data can be manipulated in the following recursive enum","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1397,"byte_end":1471,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ representation. This data structure is [`serde_json::Value`][value].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1472,"byte_end":1544,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1545,"byte_end":1548,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1549,"byte_end":1556,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # use serde_json::{Number, Map};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1557,"byte_end":1593,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1594,"byte_end":1599,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1600,"byte_end":1625,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/ enum Value {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1626,"byte_end":1642,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/     Null,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1643,"byte_end":1656,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/     Bool(bool),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1657,"byte_end":1676,"line_start":49,"line_end":49,"column_start":1,"column_end":20}},{"value":"/     Number(Number),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1677,"byte_end":1700,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/     String(String),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1701,"byte_end":1724,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/     Array(Vec<Value>),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1725,"byte_end":1751,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     Object(Map<String, Value>),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1752,"byte_end":1787,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1788,"byte_end":1793,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1794,"byte_end":1801,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1802,"byte_end":1805,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ A string of JSON data can be parsed into a `serde_json::Value` by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1806,"byte_end":1879,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ [`serde_json::from_str`][from_str] function. There is also","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1880,"byte_end":1942,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/ [`from_slice`][from_slice] for parsing from a byte slice &[u8] and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":1943,"byte_end":2013,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/ [`from_reader`][from_reader] for parsing from any `io::Read` like a File or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2014,"byte_end":2093,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ a TCP stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2094,"byte_end":2111,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2112,"byte_end":2115,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2116,"byte_end":2123,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ use serde_json::{Result, Value};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2124,"byte_end":2160,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2161,"byte_end":2164,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ fn untyped_example() -> Result<()> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2165,"byte_end":2205,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/     // Some JSON input data as a &str. Maybe this comes from the user.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2206,"byte_end":2280,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/     let data = r#\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2281,"byte_end":2303,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"/         {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2304,"byte_end":2317,"line_start":69,"line_end":69,"column_start":1,"column_end":14}},{"value":"/             \"name\": \"John Doe\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2318,"byte_end":2353,"line_start":70,"line_end":70,"column_start":1,"column_end":36}},{"value":"/             \"age\": 43,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2354,"byte_end":2380,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/             \"phones\": [","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2381,"byte_end":2408,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 \"+44 1234567\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2409,"byte_end":2443,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/                 \"+44 2345678\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2444,"byte_end":2477,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/             ]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2478,"byte_end":2495,"line_start":75,"line_end":75,"column_start":1,"column_end":18}},{"value":"/         }\"#;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2496,"byte_end":2512,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2513,"byte_end":2516,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Parse the string of data into serde_json::Value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2517,"byte_end":2576,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/     let v: Value = serde_json::from_str(data)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2577,"byte_end":2628,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2629,"byte_end":2632,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Access parts of the data by indexing with square brackets.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2633,"byte_end":2702,"line_start":81,"line_end":81,"column_start":1,"column_end":70}},{"value":"/     println!(\"Please call {} at the number {}\", v[\"name\"], v[\"phones\"][0]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2703,"byte_end":2782,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2783,"byte_end":2786,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2787,"byte_end":2801,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2802,"byte_end":2807,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2808,"byte_end":2813,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2814,"byte_end":2831,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/ #     untyped_example().unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2832,"byte_end":2869,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2870,"byte_end":2877,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2878,"byte_end":2885,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2886,"byte_end":2889,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ The result of square bracket indexing like `v[\"name\"]` is a borrow of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2890,"byte_end":2967,"line_start":92,"line_end":92,"column_start":1,"column_end":78}},{"value":"/ data at that index, so the type is `&Value`. A JSON map can be indexed with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":2968,"byte_end":3047,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ string keys, while a JSON array can be indexed with integer keys. If the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3048,"byte_end":3124,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ type of the data is not right for the type with which it is being indexed,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3125,"byte_end":3203,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ or if a map does not contain the key being indexed, or if the index into a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3204,"byte_end":3282,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ vector is out of bounds, the returned element is `Value::Null`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3283,"byte_end":3350,"line_start":97,"line_end":97,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3351,"byte_end":3354,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ When a `Value` is printed, it is printed as a JSON string. So in the code","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3355,"byte_end":3432,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ above, the output looks like `Please call \"John Doe\" at the number \"+44","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3433,"byte_end":3508,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ 1234567\"`. The quotation marks appear because `v[\"name\"]` is a `&Value`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3509,"byte_end":3584,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ containing a JSON string and its JSON representation is `\"John Doe\"`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3585,"byte_end":3658,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"/ Printing as a plain string without quotation marks involves converting from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3659,"byte_end":3738,"line_start":103,"line_end":103,"column_start":1,"column_end":80}},{"value":"/ a JSON string to a Rust string with [`as_str()`] or avoiding the use of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3739,"byte_end":3814,"line_start":104,"line_end":104,"column_start":1,"column_end":76}},{"value":"/ `Value` as described in the following section.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3815,"byte_end":3865,"line_start":105,"line_end":105,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3866,"byte_end":3869,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ [`as_str()`]: https://docs.serde.rs/serde_json/enum.Value.html#method.as_str","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3870,"byte_end":3950,"line_start":107,"line_end":107,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3951,"byte_end":3954,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The `Value` representation is sufficient for very basic tasks but can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":3955,"byte_end":4031,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ tedious to work with for anything more significant. Error handling is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4032,"byte_end":4105,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/ verbose to implement correctly, for example imagine trying to detect the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4106,"byte_end":4182,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ presence of unrecognized fields in the input data. The compiler is powerless","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4183,"byte_end":4263,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ to help you when you make a mistake, for example imagine typoing `v[\"name\"]`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4264,"byte_end":4344,"line_start":113,"line_end":113,"column_start":1,"column_end":81}},{"value":"/ as `v[\"nmae\"]` in one of the dozens of places it is used in your code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4345,"byte_end":4419,"line_start":114,"line_end":114,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4420,"byte_end":4423,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Parsing JSON as strongly typed data structures","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4424,"byte_end":4476,"line_start":116,"line_end":116,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4477,"byte_end":4480,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Serde provides a powerful way of mapping JSON data into Rust data structures","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4481,"byte_end":4561,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ largely automatically.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4562,"byte_end":4588,"line_start":119,"line_end":119,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4589,"byte_end":4592,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4593,"byte_end":4600,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ use serde::{Deserialize, Serialize};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4601,"byte_end":4641,"line_start":122,"line_end":122,"column_start":1,"column_end":41}},{"value":"/ use serde_json::Result;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4642,"byte_end":4669,"line_start":123,"line_end":123,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4670,"byte_end":4673,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4674,"byte_end":4711,"line_start":125,"line_end":125,"column_start":1,"column_end":38}},{"value":"/ struct Person {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4712,"byte_end":4731,"line_start":126,"line_end":126,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4732,"byte_end":4753,"line_start":127,"line_end":127,"column_start":1,"column_end":22}},{"value":"/     age: u8,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4754,"byte_end":4770,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/     phones: Vec<String>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4771,"byte_end":4799,"line_start":129,"line_end":129,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4800,"byte_end":4805,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4806,"byte_end":4809,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ fn typed_example() -> Result<()> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4810,"byte_end":4848,"line_start":132,"line_end":132,"column_start":1,"column_end":39}},{"value":"/     // Some JSON input data as a &str. Maybe this comes from the user.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4849,"byte_end":4923,"line_start":133,"line_end":133,"column_start":1,"column_end":75}},{"value":"/     let data = r#\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4924,"byte_end":4946,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/         {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4947,"byte_end":4960,"line_start":135,"line_end":135,"column_start":1,"column_end":14}},{"value":"/             \"name\": \"John Doe\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4961,"byte_end":4996,"line_start":136,"line_end":136,"column_start":1,"column_end":36}},{"value":"/             \"age\": 43,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":4997,"byte_end":5023,"line_start":137,"line_end":137,"column_start":1,"column_end":27}},{"value":"/             \"phones\": [","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5024,"byte_end":5051,"line_start":138,"line_end":138,"column_start":1,"column_end":28}},{"value":"/                 \"+44 1234567\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5052,"byte_end":5086,"line_start":139,"line_end":139,"column_start":1,"column_end":35}},{"value":"/                 \"+44 2345678\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5087,"byte_end":5120,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/             ]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5121,"byte_end":5138,"line_start":141,"line_end":141,"column_start":1,"column_end":18}},{"value":"/         }\"#;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5139,"byte_end":5155,"line_start":142,"line_end":142,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5156,"byte_end":5159,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/     // Parse the string of data into a Person object. This is exactly the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5160,"byte_end":5237,"line_start":144,"line_end":144,"column_start":1,"column_end":78}},{"value":"/     // same function as the one that produced serde_json::Value above, but","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5238,"byte_end":5316,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/     // now we are asking it for a Person as output.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5317,"byte_end":5372,"line_start":146,"line_end":146,"column_start":1,"column_end":56}},{"value":"/     let p: Person = serde_json::from_str(data)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5373,"byte_end":5425,"line_start":147,"line_end":147,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5426,"byte_end":5429,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/     // Do things just like with any other Rust data structure.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5430,"byte_end":5496,"line_start":149,"line_end":149,"column_start":1,"column_end":67}},{"value":"/     println!(\"Please call {} at the number {}\", p.name, p.phones[0]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5497,"byte_end":5570,"line_start":150,"line_end":150,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5571,"byte_end":5574,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5575,"byte_end":5589,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5590,"byte_end":5595,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5596,"byte_end":5601,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5602,"byte_end":5619,"line_start":155,"line_end":155,"column_start":1,"column_end":18}},{"value":"/ #     typed_example().unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5620,"byte_end":5655,"line_start":156,"line_end":156,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5656,"byte_end":5663,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5664,"byte_end":5671,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5672,"byte_end":5675,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This is the same `serde_json::from_str` function as before, but this time we","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5676,"byte_end":5756,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ assign the return value to a variable of type `Person` so Serde will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5757,"byte_end":5829,"line_start":161,"line_end":161,"column_start":1,"column_end":73}},{"value":"/ automatically interpret the input data as a `Person` and produce informative","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5830,"byte_end":5910,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ error messages if the layout does not conform to what a `Person` is expected","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5911,"byte_end":5991,"line_start":163,"line_end":163,"column_start":1,"column_end":81}},{"value":"/ to look like.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":5992,"byte_end":6009,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6010,"byte_end":6013,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Any type that implements Serde's `Deserialize` trait can be deserialized","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6014,"byte_end":6090,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ this way. This includes built-in Rust standard library types like `Vec<T>`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6091,"byte_end":6169,"line_start":167,"line_end":167,"column_start":1,"column_end":79}},{"value":"/ and `HashMap<K, V>`, as well as any structs or enums annotated with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6170,"byte_end":6241,"line_start":168,"line_end":168,"column_start":1,"column_end":72}},{"value":"/ `#[derive(Deserialize)]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6242,"byte_end":6271,"line_start":169,"line_end":169,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6272,"byte_end":6275,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Once we have `p` of type `Person`, our IDE and the Rust compiler can help us","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6276,"byte_end":6356,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ use it correctly like they do for any other Rust code. The IDE can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6357,"byte_end":6427,"line_start":172,"line_end":172,"column_start":1,"column_end":71}},{"value":"/ autocomplete field names to prevent typos, which was impossible in the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6428,"byte_end":6502,"line_start":173,"line_end":173,"column_start":1,"column_end":75}},{"value":"/ `serde_json::Value` representation. And the Rust compiler can check that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6503,"byte_end":6579,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ when we write `p.phones[0]`, then `p.phones` is guaranteed to be a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6580,"byte_end":6650,"line_start":175,"line_end":175,"column_start":1,"column_end":71}},{"value":"/ `Vec<String>` so indexing into it makes sense and produces a `String`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6651,"byte_end":6725,"line_start":176,"line_end":176,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6726,"byte_end":6729,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Constructing JSON values","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6730,"byte_end":6760,"line_start":178,"line_end":178,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6761,"byte_end":6764,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ Serde JSON provides a [`json!` macro][macro] to build `serde_json::Value`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6765,"byte_end":6842,"line_start":180,"line_end":180,"column_start":1,"column_end":78}},{"value":"/ objects with very natural JSON syntax.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6843,"byte_end":6885,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6886,"byte_end":6889,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6890,"byte_end":6897,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6898,"byte_end":6923,"line_start":184,"line_end":184,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6924,"byte_end":6927,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6928,"byte_end":6943,"line_start":186,"line_end":186,"column_start":1,"column_end":16}},{"value":"/     // The type of `john` is `serde_json::Value`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6944,"byte_end":6996,"line_start":187,"line_end":187,"column_start":1,"column_end":53}},{"value":"/     let john = json!({","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":6997,"byte_end":7023,"line_start":188,"line_end":188,"column_start":1,"column_end":27}},{"value":"/         \"name\": \"John Doe\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7024,"byte_end":7055,"line_start":189,"line_end":189,"column_start":1,"column_end":32}},{"value":"/         \"age\": 43,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7056,"byte_end":7078,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/         \"phones\": [","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7079,"byte_end":7102,"line_start":191,"line_end":191,"column_start":1,"column_end":24}},{"value":"/             \"+44 1234567\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7103,"byte_end":7133,"line_start":192,"line_end":192,"column_start":1,"column_end":31}},{"value":"/             \"+44 2345678\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7134,"byte_end":7163,"line_start":193,"line_end":193,"column_start":1,"column_end":30}},{"value":"/         ]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7164,"byte_end":7177,"line_start":194,"line_end":194,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7178,"byte_end":7189,"line_start":195,"line_end":195,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7190,"byte_end":7193,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     println!(\"first phone number: {}\", john[\"phones\"][0]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7194,"byte_end":7256,"line_start":197,"line_end":197,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7257,"byte_end":7260,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/     // Convert to a string of JSON and print it out","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7261,"byte_end":7316,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/     println!(\"{}\", john.to_string());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7317,"byte_end":7358,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7359,"byte_end":7364,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7365,"byte_end":7372,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7373,"byte_end":7376,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ The `Value::to_string()` function converts a `serde_json::Value` into a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7377,"byte_end":7452,"line_start":204,"line_end":204,"column_start":1,"column_end":76}},{"value":"/ `String` of JSON text.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7453,"byte_end":7479,"line_start":205,"line_end":205,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7480,"byte_end":7483,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ One neat thing about the `json!` macro is that variables and expressions can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7484,"byte_end":7564,"line_start":207,"line_end":207,"column_start":1,"column_end":81}},{"value":"/ be interpolated directly into the JSON value as you are building it. Serde","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7565,"byte_end":7643,"line_start":208,"line_end":208,"column_start":1,"column_end":79}},{"value":"/ will check at compile time that the value you are interpolating is able to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7644,"byte_end":7722,"line_start":209,"line_end":209,"column_start":1,"column_end":79}},{"value":"/ be represented as JSON.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7723,"byte_end":7750,"line_start":210,"line_end":210,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7751,"byte_end":7754,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7755,"byte_end":7762,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7763,"byte_end":7790,"line_start":213,"line_end":213,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7791,"byte_end":7796,"line_start":214,"line_end":214,"column_start":1,"column_end":6}},{"value":"/ # fn random_phone() -> u16 { 0 }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7797,"byte_end":7833,"line_start":215,"line_end":215,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7834,"byte_end":7839,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ let full_name = \"John Doe\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7840,"byte_end":7871,"line_start":217,"line_end":217,"column_start":1,"column_end":32}},{"value":"/ let age_last_year = 42;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7872,"byte_end":7899,"line_start":218,"line_end":218,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7900,"byte_end":7903,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ // The type of `john` is `serde_json::Value`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7904,"byte_end":7952,"line_start":220,"line_end":220,"column_start":1,"column_end":49}},{"value":"/ let john = json!({","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7953,"byte_end":7975,"line_start":221,"line_end":221,"column_start":1,"column_end":23}},{"value":"/     \"name\": full_name,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":7976,"byte_end":8002,"line_start":222,"line_end":222,"column_start":1,"column_end":27}},{"value":"/     \"age\": age_last_year + 1,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8003,"byte_end":8036,"line_start":223,"line_end":223,"column_start":1,"column_end":34}},{"value":"/     \"phones\": [","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8037,"byte_end":8056,"line_start":224,"line_end":224,"column_start":1,"column_end":20}},{"value":"/         format!(\"+44 {}\", random_phone())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8057,"byte_end":8102,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/     ]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8103,"byte_end":8112,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8113,"byte_end":8120,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8121,"byte_end":8128,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8129,"byte_end":8132,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ This is amazingly convenient but we have the problem we had before with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8133,"byte_end":8208,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/ `Value` which is that the IDE and Rust compiler cannot help us if we get it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8209,"byte_end":8288,"line_start":231,"line_end":231,"column_start":1,"column_end":80}},{"value":"/ wrong. Serde JSON provides a better way of serializing strongly-typed data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8289,"byte_end":8367,"line_start":232,"line_end":232,"column_start":1,"column_end":79}},{"value":"/ structures into JSON text.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8368,"byte_end":8398,"line_start":233,"line_end":233,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8399,"byte_end":8402,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ # Creating JSON by serializing data structures","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8403,"byte_end":8453,"line_start":235,"line_end":235,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8454,"byte_end":8457,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ A data structure can be converted to a JSON string by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8458,"byte_end":8515,"line_start":237,"line_end":237,"column_start":1,"column_end":58}},{"value":"/ [`serde_json::to_string`][to_string]. There is also","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8516,"byte_end":8571,"line_start":238,"line_end":238,"column_start":1,"column_end":56}},{"value":"/ [`serde_json::to_vec`][to_vec] which serializes to a `Vec<u8>` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8572,"byte_end":8642,"line_start":239,"line_end":239,"column_start":1,"column_end":71}},{"value":"/ [`serde_json::to_writer`][to_writer] which serializes to any `io::Write`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8643,"byte_end":8719,"line_start":240,"line_end":240,"column_start":1,"column_end":77}},{"value":"/ such as a File or a TCP stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8720,"byte_end":8755,"line_start":241,"line_end":241,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8756,"byte_end":8759,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8760,"byte_end":8767,"line_start":243,"line_end":243,"column_start":1,"column_end":8}},{"value":"/ use serde::{Deserialize, Serialize};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8768,"byte_end":8808,"line_start":244,"line_end":244,"column_start":1,"column_end":41}},{"value":"/ use serde_json::Result;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8809,"byte_end":8836,"line_start":245,"line_end":245,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8837,"byte_end":8840,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8841,"byte_end":8878,"line_start":247,"line_end":247,"column_start":1,"column_end":38}},{"value":"/ struct Address {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8879,"byte_end":8899,"line_start":248,"line_end":248,"column_start":1,"column_end":21}},{"value":"/     street: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8900,"byte_end":8923,"line_start":249,"line_end":249,"column_start":1,"column_end":24}},{"value":"/     city: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8924,"byte_end":8945,"line_start":250,"line_end":250,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8946,"byte_end":8951,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8952,"byte_end":8955,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ fn print_an_address() -> Result<()> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8956,"byte_end":8997,"line_start":253,"line_end":253,"column_start":1,"column_end":42}},{"value":"/     // Some data structure.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":8998,"byte_end":9029,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/     let address = Address {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9030,"byte_end":9061,"line_start":255,"line_end":255,"column_start":1,"column_end":32}},{"value":"/         street: \"10 Downing Street\".to_owned(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9062,"byte_end":9113,"line_start":256,"line_end":256,"column_start":1,"column_end":52}},{"value":"/         city: \"London\".to_owned(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9114,"byte_end":9152,"line_start":257,"line_end":257,"column_start":1,"column_end":39}},{"value":"/     };","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9153,"byte_end":9163,"line_start":258,"line_end":258,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9164,"byte_end":9167,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/     // Serialize it to a JSON string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9168,"byte_end":9209,"line_start":260,"line_end":260,"column_start":1,"column_end":42}},{"value":"/     let j = serde_json::to_string(&address)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9210,"byte_end":9259,"line_start":261,"line_end":261,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9260,"byte_end":9263,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     // Print, write to a file, or send to an HTTP server.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9264,"byte_end":9325,"line_start":263,"line_end":263,"column_start":1,"column_end":62}},{"value":"/     println!(\"{}\", j);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9326,"byte_end":9352,"line_start":264,"line_end":264,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9353,"byte_end":9356,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9357,"byte_end":9371,"line_start":266,"line_end":266,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9372,"byte_end":9377,"line_start":267,"line_end":267,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9378,"byte_end":9383,"line_start":268,"line_end":268,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9384,"byte_end":9401,"line_start":269,"line_end":269,"column_start":1,"column_end":18}},{"value":"/ #     print_an_address().unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9402,"byte_end":9440,"line_start":270,"line_end":270,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9441,"byte_end":9448,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9449,"byte_end":9456,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9457,"byte_end":9460,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Any type that implements Serde's `Serialize` trait can be serialized this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9461,"byte_end":9538,"line_start":274,"line_end":274,"column_start":1,"column_end":78}},{"value":"/ way. This includes built-in Rust standard library types like `Vec<T>` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9539,"byte_end":9616,"line_start":275,"line_end":275,"column_start":1,"column_end":78}},{"value":"/ `HashMap<K, V>`, as well as any structs or enums annotated with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9617,"byte_end":9684,"line_start":276,"line_end":276,"column_start":1,"column_end":68}},{"value":"/ `#[derive(Serialize)]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9685,"byte_end":9712,"line_start":277,"line_end":277,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9713,"byte_end":9716,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ # No-std support","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9717,"byte_end":9737,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9738,"byte_end":9741,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ As long as there is a memory allocator, it is possible to use serde_json","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9742,"byte_end":9818,"line_start":281,"line_end":281,"column_start":1,"column_end":77}},{"value":"/ without the rest of the Rust standard library. This is supported on Rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9819,"byte_end":9895,"line_start":282,"line_end":282,"column_start":1,"column_end":77}},{"value":"/ 1.36+. Disable the default \"std\" feature and enable the \"alloc\" feature:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9896,"byte_end":9972,"line_start":283,"line_end":283,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9973,"byte_end":9976,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9977,"byte_end":9988,"line_start":285,"line_end":285,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":9989,"byte_end":10007,"line_start":286,"line_end":286,"column_start":1,"column_end":19}},{"value":"/ serde_json = { version = \"1.0\", default-features = false, features = [\"alloc\"] }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10008,"byte_end":10092,"line_start":287,"line_end":287,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10093,"byte_end":10100,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10101,"byte_end":10104,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ For JSON support in Serde without a memory allocator, please see the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10105,"byte_end":10177,"line_start":290,"line_end":290,"column_start":1,"column_end":73}},{"value":"/ [`serde-json-core`] crate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10178,"byte_end":10208,"line_start":291,"line_end":291,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10209,"byte_end":10212,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ [value]: https://docs.serde.rs/serde_json/value/enum.Value.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10213,"byte_end":10280,"line_start":293,"line_end":293,"column_start":1,"column_end":68}},{"value":"/ [from_str]: https://docs.serde.rs/serde_json/de/fn.from_str.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10281,"byte_end":10349,"line_start":294,"line_end":294,"column_start":1,"column_end":69}},{"value":"/ [from_slice]: https://docs.serde.rs/serde_json/de/fn.from_slice.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10350,"byte_end":10422,"line_start":295,"line_end":295,"column_start":1,"column_end":73}},{"value":"/ [from_reader]: https://docs.serde.rs/serde_json/de/fn.from_reader.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10423,"byte_end":10497,"line_start":296,"line_end":296,"column_start":1,"column_end":75}},{"value":"/ [to_string]: https://docs.serde.rs/serde_json/ser/fn.to_string.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10498,"byte_end":10569,"line_start":297,"line_end":297,"column_start":1,"column_end":72}},{"value":"/ [to_vec]: https://docs.serde.rs/serde_json/ser/fn.to_vec.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10570,"byte_end":10635,"line_start":298,"line_end":298,"column_start":1,"column_end":66}},{"value":"/ [to_writer]: https://docs.serde.rs/serde_json/ser/fn.to_writer.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10636,"byte_end":10707,"line_start":299,"line_end":299,"column_start":1,"column_end":72}},{"value":"/ [macro]: https://docs.serde.rs/serde_json/macro.json.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10708,"byte_end":10769,"line_start":300,"line_end":300,"column_start":1,"column_end":62}},{"value":"/ [`serde-json-core`]: https://japaric.github.io/serde-json-core/serde_json_core/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10770,"byte_end":10853,"line_start":301,"line_end":301,"column_start":1,"column_end":84}},{"value":"deny(clippy :: all, clippy :: pedantic)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10916,"byte_end":10955,"line_start":304,"line_end":304,"column_start":1,"column_end":40}},{"value":"allow(clippy :: comparison_chain, clippy :: deprecated_cfg_attr, clippy ::\n        doc_markdown, clippy :: excessive_precision, clippy :: float_cmp,\n        clippy :: manual_range_contains, clippy :: match_like_matches_macro,\n        clippy :: match_single_binding, clippy :: needless_doctest_main,\n        clippy :: transmute_ptr_to_ptr, clippy :: unnecessary_wraps, clippy ::\n        unnested_or_patterns,)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":10980,"byte_end":11450,"line_start":306,"line_end":320,"column_start":1,"column_end":3}},{"value":"allow(clippy :: should_implement_trait, clippy :: cast_possible_truncation,\n        clippy :: cast_possible_wrap, clippy :: cast_precision_loss, clippy ::\n        cast_sign_loss, clippy :: enum_glob_use, clippy :: if_not_else, clippy\n        :: integer_division, clippy :: map_err_ignore, clippy ::\n        match_same_arms, clippy :: similar_names, clippy :: unused_self,\n        clippy :: wildcard_imports, clippy :: cast_lossless, clippy ::\n        module_name_repetitions, clippy :: redundant_else, clippy ::\n        shadow_unrelated, clippy :: single_match_else, clippy ::\n        too_many_lines, clippy :: unreadable_literal, clippy ::\n        unseparated_literal_suffix, clippy :: use_self, clippy ::\n        zero_prefixed_literal, clippy :: checked_conversions, clippy ::\n        mem_replace_with_default, clippy :: missing_errors_doc, clippy ::\n        must_use_candidate,)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":11484,"byte_end":12548,"line_start":322,"line_end":356,"column_start":1,"column_end":3}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":12549,"byte_end":12582,"line_start":357,"line_end":357,"column_start":1,"column_end":34}},{"value":"deny(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":12583,"byte_end":12605,"line_start":358,"line_end":358,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":12640,"byte_end":12646,"line_start":359,"line_end":359,"column_start":35,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":186},{"krate":0,"index":229},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":245},{"krate":0,"index":250},{"krate":0,"index":254},{"krate":0,"index":263},{"krate":0,"index":267},{"krate":0,"index":271},{"krate":0,"index":279},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":307},{"krate":0,"index":319},{"krate":0,"index":324},{"krate":0,"index":341},{"krate":0,"index":350},{"krate":0,"index":357},{"krate":0,"index":364},{"krate":0,"index":368},{"krate":0,"index":372},{"krate":0,"index":375}],"decl_id":null,"docs":" Deserialize JSON data to a Rust data structure.\n","sig":null,"attributes":[{"value":"/ Deserialize JSON data to a Rust data structure.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":25854,"byte_end":25905,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26568,"byte_end":26580,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" A structure that deserializes JSON into Rust values.\n","sig":null,"attributes":[{"value":"/ A structure that deserializes JSON into Rust values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26500,"byte_end":26556,"line_start":23,"line_end":23,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":27161,"byte_end":27164,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a JSON deserializer from one of the possible serde_json input\n sources.","sig":null,"attributes":[{"value":"/ Create a JSON deserializer from one of the possible serde_json input","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26857,"byte_end":26929,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/ sources.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26934,"byte_end":26946,"line_start":39,"line_end":39,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26951,"byte_end":26954,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Typically it is more convenient to use one of these methods instead:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26959,"byte_end":27031,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":27036,"byte_end":27039,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/   - Deserializer::from_str","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":27044,"byte_end":27074,"line_start":43,"line_end":43,"column_start":5,"column_end":35}},{"value":"/   - Deserializer::from_bytes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":27079,"byte_end":27111,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/   - Deserializer::from_reader","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":27116,"byte_end":27149,"line_start":45,"line_end":45,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":28096,"byte_end":28106,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Deserializer<read::SliceRead>>::from_slice","value":"pub fn from_slice(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a JSON deserializer from a `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Creates a JSON deserializer from a `&[u8]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":28037,"byte_end":28084,"line_start":75,"line_end":75,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":28303,"byte_end":28311,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"from_str","qualname":"<Deserializer<read::StrRead>>::from_str","value":"pub fn from_str(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a JSON deserializer from a `&str`.\n","sig":null,"attributes":[{"value":"/ Creates a JSON deserializer from a `&str`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":28245,"byte_end":28291,"line_start":82,"line_end":82,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":29957,"byte_end":29960,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"end","qualname":"<Deserializer<R>>::end","value":"pub fn end(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The `Deserializer::end` method should be called after a value has been fully deserialized.\n This allows the `Deserializer` to validate that the input stream is at the end or that it\n only has trailing whitespace.\n","sig":null,"attributes":[{"value":"/ The `Deserializer::end` method should be called after a value has been fully deserialized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":29715,"byte_end":29809,"line_start":128,"line_end":128,"column_start":5,"column_end":99}},{"value":"/ This allows the `Deserializer` to validate that the input stream is at the end or that it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":29814,"byte_end":29907,"line_start":129,"line_end":129,"column_start":5,"column_end":98}},{"value":"/ only has trailing whitespace.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":29912,"byte_end":29945,"line_start":130,"line_end":130,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":30239,"byte_end":30248,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"into_iter","qualname":"<Deserializer<R>>::into_iter","value":"pub fn into_iter<T>(Self) -> StreamDeserializer where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Turn a JSON deserializer into an iterator over values of type T.\n","sig":null,"attributes":[{"value":"/ Turn a JSON deserializer into an iterator over values of type T.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":30159,"byte_end":30227,"line_start":138,"line_end":138,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97680,"byte_end":97698,"line_start":2234,"line_end":2234,"column_start":12,"column_end":30},"name":"StreamDeserializer","qualname":"::de::StreamDeserializer","value":"StreamDeserializer {  }","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"decl_id":null,"docs":" Iterator that deserializes a stream into multiple JSON values.","sig":null,"attributes":[{"value":"/ Iterator that deserializes a stream into multiple JSON values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":96976,"byte_end":97042,"line_start":2213,"line_end":2213,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97043,"byte_end":97046,"line_start":2214,"line_end":2214,"column_start":1,"column_end":4}},{"value":"/ A stream deserializer can be created from any JSON deserializer using the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97047,"byte_end":97124,"line_start":2215,"line_end":2215,"column_start":1,"column_end":78}},{"value":"/ `Deserializer::into_iter` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97125,"byte_end":97162,"line_start":2216,"line_end":2216,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97163,"byte_end":97166,"line_start":2217,"line_end":2217,"column_start":1,"column_end":4}},{"value":"/ The data can consist of any JSON value. Values need to be a self-delineating value e.g.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97167,"byte_end":97258,"line_start":2218,"line_end":2218,"column_start":1,"column_end":92}},{"value":"/ arrays, objects, or strings, or be followed by whitespace or a self-delineating value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97259,"byte_end":97349,"line_start":2219,"line_end":2219,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97350,"byte_end":97353,"line_start":2220,"line_end":2220,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97354,"byte_end":97361,"line_start":2221,"line_end":2221,"column_start":1,"column_end":8}},{"value":"/ use serde_json::{Deserializer, Value};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97362,"byte_end":97404,"line_start":2222,"line_end":2222,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97405,"byte_end":97408,"line_start":2223,"line_end":2223,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97409,"byte_end":97424,"line_start":2224,"line_end":2224,"column_start":1,"column_end":16}},{"value":"/     let data = \"{\\\"k\\\": 3}1\\\"cool\\\"\\\"stuff\\\" 3{}  [0, 1, 2]\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97425,"byte_end":97490,"line_start":2225,"line_end":2225,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97491,"byte_end":97494,"line_start":2226,"line_end":2226,"column_start":1,"column_end":4}},{"value":"/     let stream = Deserializer::from_str(data).into_iter::<Value>();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97495,"byte_end":97566,"line_start":2227,"line_end":2227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97567,"byte_end":97570,"line_start":2228,"line_end":2228,"column_start":1,"column_end":4}},{"value":"/     for value in stream {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97571,"byte_end":97600,"line_start":2229,"line_end":2229,"column_start":1,"column_end":30}},{"value":"/         println!(\"{}\", value.unwrap());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97601,"byte_end":97644,"line_start":2230,"line_end":2230,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97645,"byte_end":97654,"line_start":2231,"line_end":2231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97655,"byte_end":97660,"line_start":2232,"line_end":2232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97661,"byte_end":97668,"line_start":2233,"line_end":2233,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98314,"byte_end":98317,"line_start":2255,"line_end":2255,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamDeserializer>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a JSON stream deserializer from one of the possible serde_json\n input sources.","sig":null,"attributes":[{"value":"/ Create a JSON stream deserializer from one of the possible serde_json","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97952,"byte_end":98025,"line_start":2247,"line_end":2247,"column_start":5,"column_end":78}},{"value":"/ input sources.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98030,"byte_end":98048,"line_start":2248,"line_end":2248,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98053,"byte_end":98056,"line_start":2249,"line_end":2249,"column_start":5,"column_end":8}},{"value":"/ Typically it is more convenient to use one of these methods instead:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98061,"byte_end":98133,"line_start":2250,"line_end":2250,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98138,"byte_end":98141,"line_start":2251,"line_end":2251,"column_start":5,"column_end":8}},{"value":"/   - Deserializer::from_str(...).into_iter()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98146,"byte_end":98193,"line_start":2252,"line_end":2252,"column_start":5,"column_end":52}},{"value":"/   - Deserializer::from_bytes(...).into_iter()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98198,"byte_end":98247,"line_start":2253,"line_end":2253,"column_start":5,"column_end":54}},{"value":"/   - Deserializer::from_reader(...).into_iter()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98252,"byte_end":98302,"line_start":2254,"line_end":2254,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99857,"byte_end":99868,"line_start":2297,"line_end":2297,"column_start":12,"column_end":23},"name":"byte_offset","qualname":"<StreamDeserializer>::byte_offset","value":"pub fn byte_offset(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes so far deserialized into a successful `T`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes so far deserialized into a successful `T`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98584,"byte_end":98658,"line_start":2266,"line_end":2266,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98663,"byte_end":98666,"line_start":2267,"line_end":2267,"column_start":5,"column_end":8}},{"value":"/ If a stream deserializer returns an EOF error, new data can be joined to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98671,"byte_end":98747,"line_start":2268,"line_end":2268,"column_start":5,"column_end":81}},{"value":"/ `old_data[stream.byte_offset()..]` to try again.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98752,"byte_end":98804,"line_start":2269,"line_end":2269,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98809,"byte_end":98812,"line_start":2270,"line_end":2270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98817,"byte_end":98824,"line_start":2271,"line_end":2271,"column_start":5,"column_end":12}},{"value":"/ let data = b\"[0] [1] [\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98829,"byte_end":98857,"line_start":2272,"line_end":2272,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98862,"byte_end":98865,"line_start":2273,"line_end":2273,"column_start":5,"column_end":8}},{"value":"/ let de = serde_json::Deserializer::from_slice(data);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98870,"byte_end":98926,"line_start":2274,"line_end":2274,"column_start":5,"column_end":61}},{"value":"/ let mut stream = de.into_iter::<Vec<i32>>();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98931,"byte_end":98979,"line_start":2275,"line_end":2275,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(0, stream.byte_offset());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":98984,"byte_end":99024,"line_start":2276,"line_end":2276,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99029,"byte_end":99032,"line_start":2277,"line_end":2277,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.next()); // [0]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99037,"byte_end":99080,"line_start":2278,"line_end":2278,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(3, stream.byte_offset());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99085,"byte_end":99125,"line_start":2279,"line_end":2279,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99130,"byte_end":99133,"line_start":2280,"line_end":2280,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.next()); // [1]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99138,"byte_end":99181,"line_start":2281,"line_end":2281,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(7, stream.byte_offset());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99186,"byte_end":99226,"line_start":2282,"line_end":2282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99231,"byte_end":99234,"line_start":2283,"line_end":2283,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.next()); // error","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99239,"byte_end":99284,"line_start":2284,"line_end":2284,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(8, stream.byte_offset());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99289,"byte_end":99329,"line_start":2285,"line_end":2285,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99334,"byte_end":99337,"line_start":2286,"line_end":2286,"column_start":5,"column_end":8}},{"value":"/ // If err.is_eof(), can join the remaining data to new data and continue.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99342,"byte_end":99419,"line_start":2287,"line_end":2287,"column_start":5,"column_end":82}},{"value":"/ let remaining = &data[stream.byte_offset()..];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99424,"byte_end":99474,"line_start":2288,"line_end":2288,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99479,"byte_end":99486,"line_start":2289,"line_end":2289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99491,"byte_end":99494,"line_start":2290,"line_end":2290,"column_start":5,"column_end":8}},{"value":"/ *Note:* In the future this method may be changed to return the number of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99499,"byte_end":99575,"line_start":2291,"line_end":2291,"column_start":5,"column_end":81}},{"value":"/ bytes so far deserialized into a successful T *or* syntactically valid","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99580,"byte_end":99654,"line_start":2292,"line_end":2292,"column_start":5,"column_end":79}},{"value":"/ JSON skipped over due to a type error. See [serde-rs/json#70] for an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99659,"byte_end":99731,"line_start":2293,"line_end":2293,"column_start":5,"column_end":77}},{"value":"/ example illustrating this.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99736,"byte_end":99766,"line_start":2294,"line_end":2294,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99771,"byte_end":99774,"line_start":2295,"line_end":2295,"column_start":5,"column_end":8}},{"value":"/ [serde-rs/json#70]: https://github.com/serde-rs/json/issues/70","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":99779,"byte_end":99845,"line_start":2296,"line_end":2296,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":372},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107498,"byte_end":107508,"line_start":2540,"line_end":2540,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::from_slice","value":"pub fn from_slice<'a, T>(&'a [u8]) -> Result<T> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserialize an instance of type `T` from bytes of JSON text.","sig":null,"attributes":[{"value":"/ Deserialize an instance of type `T` from bytes of JSON text.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106426,"byte_end":106490,"line_start":2505,"line_end":2505,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106491,"byte_end":106494,"line_start":2506,"line_end":2506,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106495,"byte_end":106508,"line_start":2507,"line_end":2507,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106509,"byte_end":106512,"line_start":2508,"line_end":2508,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106513,"byte_end":106520,"line_start":2509,"line_end":2509,"column_start":1,"column_end":8}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106521,"byte_end":106548,"line_start":2510,"line_end":2510,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106549,"byte_end":106552,"line_start":2511,"line_end":2511,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Debug)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106553,"byte_end":106586,"line_start":2512,"line_end":2512,"column_start":1,"column_end":34}},{"value":"/ struct User {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106587,"byte_end":106604,"line_start":2513,"line_end":2513,"column_start":1,"column_end":18}},{"value":"/     fingerprint: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106605,"byte_end":106633,"line_start":2514,"line_end":2514,"column_start":1,"column_end":29}},{"value":"/     location: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106634,"byte_end":106659,"line_start":2515,"line_end":2515,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106660,"byte_end":106665,"line_start":2516,"line_end":2516,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106666,"byte_end":106669,"line_start":2517,"line_end":2517,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106670,"byte_end":106685,"line_start":2518,"line_end":2518,"column_start":1,"column_end":16}},{"value":"/     // The type of `j` is `&[u8]`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106686,"byte_end":106723,"line_start":2519,"line_end":2519,"column_start":1,"column_end":38}},{"value":"/     let j = b\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106724,"byte_end":106742,"line_start":2520,"line_end":2520,"column_start":1,"column_end":19}},{"value":"/         {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106743,"byte_end":106756,"line_start":2521,"line_end":2521,"column_start":1,"column_end":14}},{"value":"/             \\\"fingerprint\\\": \\\"0xF9BA143B95FF6D82\\\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106757,"byte_end":106813,"line_start":2522,"line_end":2522,"column_start":1,"column_end":57}},{"value":"/             \\\"location\\\": \\\"Menlo Park, CA\\\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106814,"byte_end":106862,"line_start":2523,"line_end":2523,"column_start":1,"column_end":49}},{"value":"/         }\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106863,"byte_end":106878,"line_start":2524,"line_end":2524,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106879,"byte_end":106882,"line_start":2525,"line_end":2525,"column_start":1,"column_end":4}},{"value":"/     let u: User = serde_json::from_slice(j).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106883,"byte_end":106940,"line_start":2526,"line_end":2526,"column_start":1,"column_end":58}},{"value":"/     println!(\"{:#?}\", u);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106941,"byte_end":106970,"line_start":2527,"line_end":2527,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106971,"byte_end":106976,"line_start":2528,"line_end":2528,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106977,"byte_end":106984,"line_start":2529,"line_end":2529,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106985,"byte_end":106988,"line_start":2530,"line_end":2530,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":106989,"byte_end":107001,"line_start":2531,"line_end":2531,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107002,"byte_end":107005,"line_start":2532,"line_end":2532,"column_start":1,"column_end":4}},{"value":"/ This conversion can fail if the structure of the input does not match the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107006,"byte_end":107083,"line_start":2533,"line_end":2533,"column_start":1,"column_end":78}},{"value":"/ structure expected by `T`, for example if `T` is a struct type but the input","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107084,"byte_end":107164,"line_start":2534,"line_end":2534,"column_start":1,"column_end":81}},{"value":"/ contains something other than a JSON map. It can also fail if the structure","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107165,"byte_end":107244,"line_start":2535,"line_end":2535,"column_start":1,"column_end":80}},{"value":"/ is correct but `T`'s implementation of `Deserialize` decides that something","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107245,"byte_end":107324,"line_start":2536,"line_end":2536,"column_start":1,"column_end":80}},{"value":"/ is wrong with the data, for example required struct fields are missing from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107325,"byte_end":107404,"line_start":2537,"line_end":2537,"column_start":1,"column_end":80}},{"value":"/ the JSON map or some number is too big to fit in the expected primitive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107405,"byte_end":107480,"line_start":2538,"line_end":2538,"column_start":1,"column_end":76}},{"value":"/ type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107481,"byte_end":107490,"line_start":2539,"line_end":2539,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":375},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108692,"byte_end":108700,"line_start":2582,"line_end":2582,"column_start":8,"column_end":16},"name":"from_str","qualname":"::de::from_str","value":"pub fn from_str<'a, T>(&'a str) -> Result<T> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserialize an instance of type `T` from a string of JSON text.","sig":null,"attributes":[{"value":"/ Deserialize an instance of type `T` from a string of JSON text.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107621,"byte_end":107688,"line_start":2547,"line_end":2547,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107689,"byte_end":107692,"line_start":2548,"line_end":2548,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107693,"byte_end":107706,"line_start":2549,"line_end":2549,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107707,"byte_end":107710,"line_start":2550,"line_end":2550,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107711,"byte_end":107718,"line_start":2551,"line_end":2551,"column_start":1,"column_end":8}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107719,"byte_end":107746,"line_start":2552,"line_end":2552,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107747,"byte_end":107750,"line_start":2553,"line_end":2553,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Debug)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107751,"byte_end":107784,"line_start":2554,"line_end":2554,"column_start":1,"column_end":34}},{"value":"/ struct User {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107785,"byte_end":107802,"line_start":2555,"line_end":2555,"column_start":1,"column_end":18}},{"value":"/     fingerprint: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107803,"byte_end":107831,"line_start":2556,"line_end":2556,"column_start":1,"column_end":29}},{"value":"/     location: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107832,"byte_end":107857,"line_start":2557,"line_end":2557,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107858,"byte_end":107863,"line_start":2558,"line_end":2558,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107864,"byte_end":107867,"line_start":2559,"line_end":2559,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107868,"byte_end":107883,"line_start":2560,"line_end":2560,"column_start":1,"column_end":16}},{"value":"/     // The type of `j` is `&str`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107884,"byte_end":107920,"line_start":2561,"line_end":2561,"column_start":1,"column_end":37}},{"value":"/     let j = \"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107921,"byte_end":107938,"line_start":2562,"line_end":2562,"column_start":1,"column_end":18}},{"value":"/         {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107939,"byte_end":107952,"line_start":2563,"line_end":2563,"column_start":1,"column_end":14}},{"value":"/             \\\"fingerprint\\\": \\\"0xF9BA143B95FF6D82\\\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":107953,"byte_end":108009,"line_start":2564,"line_end":2564,"column_start":1,"column_end":57}},{"value":"/             \\\"location\\\": \\\"Menlo Park, CA\\\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108010,"byte_end":108058,"line_start":2565,"line_end":2565,"column_start":1,"column_end":49}},{"value":"/         }\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108059,"byte_end":108074,"line_start":2566,"line_end":2566,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108075,"byte_end":108078,"line_start":2567,"line_end":2567,"column_start":1,"column_end":4}},{"value":"/     let u: User = serde_json::from_str(j).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108079,"byte_end":108134,"line_start":2568,"line_end":2568,"column_start":1,"column_end":56}},{"value":"/     println!(\"{:#?}\", u);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108135,"byte_end":108164,"line_start":2569,"line_end":2569,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108165,"byte_end":108170,"line_start":2570,"line_end":2570,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108171,"byte_end":108178,"line_start":2571,"line_end":2571,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108179,"byte_end":108182,"line_start":2572,"line_end":2572,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108183,"byte_end":108195,"line_start":2573,"line_end":2573,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108196,"byte_end":108199,"line_start":2574,"line_end":2574,"column_start":1,"column_end":4}},{"value":"/ This conversion can fail if the structure of the input does not match the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108200,"byte_end":108277,"line_start":2575,"line_end":2575,"column_start":1,"column_end":78}},{"value":"/ structure expected by `T`, for example if `T` is a struct type but the input","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108278,"byte_end":108358,"line_start":2576,"line_end":2576,"column_start":1,"column_end":81}},{"value":"/ contains something other than a JSON map. It can also fail if the structure","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108359,"byte_end":108438,"line_start":2577,"line_end":2577,"column_start":1,"column_end":80}},{"value":"/ is correct but `T`'s implementation of `Deserialize` decides that something","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108439,"byte_end":108518,"line_start":2578,"line_end":2578,"column_start":1,"column_end":80}},{"value":"/ is wrong with the data, for example required struct fields are missing from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108519,"byte_end":108598,"line_start":2579,"line_end":2579,"column_start":1,"column_end":80}},{"value":"/ the JSON map or some number is too big to fit in the expected primitive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108599,"byte_end":108674,"line_start":2580,"line_end":2580,"column_start":1,"column_end":76}},{"value":"/ type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":108675,"byte_end":108684,"line_start":2581,"line_end":2581,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":2029},{"krate":0,"index":2048},{"krate":0,"index":2046},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2038},{"krate":0,"index":397},{"krate":0,"index":401},{"krate":0,"index":448},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"decl_id":null,"docs":" When serializing or deserializing JSON goes wrong.\n","sig":null,"attributes":[{"value":"/ When serializing or deserializing JSON goes wrong.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":108810,"byte_end":108864,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109073,"byte_end":109078,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":386}],"decl_id":null,"docs":" This type represents all possible errors that can occur when serializing or\n deserializing JSON data.\n","sig":null,"attributes":[{"value":"/ This type represents all possible errors that can occur when serializing or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":108953,"byte_end":109032,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ deserializing JSON data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109033,"byte_end":109061,"line_start":9,"line_end":9,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":387},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109388,"byte_end":109394,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for a `Result` with the error type `serde_json::Error`.\n","sig":null,"attributes":[{"value":"/ Alias for a `Result` with the error type `serde_json::Error`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109313,"byte_end":109378,"line_start":17,"line_end":17,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109632,"byte_end":109636,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"line","qualname":"<Error>::line","value":"pub fn line(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" One-based line number at which the error was detected.","sig":null,"attributes":[{"value":"/ One-based line number at which the error was detected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109444,"byte_end":109502,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109507,"byte_end":109510,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Characters in the first line of the input (before the first newline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109515,"byte_end":109586,"line_start":23,"line_end":23,"column_start":5,"column_end":76}},{"value":"/ character) are in line 1.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109591,"byte_end":109620,"line_start":24,"line_end":24,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":110064,"byte_end":110070,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"column","qualname":"<Error>::column","value":"pub fn column(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" One-based column number at which the error was detected.","sig":null,"attributes":[{"value":"/ One-based column number at which the error was detected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109688,"byte_end":109748,"line_start":29,"line_end":29,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109753,"byte_end":109756,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The first character in the input and any characters immediately","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109761,"byte_end":109828,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ following a newline character are in column 1.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109833,"byte_end":109883,"line_start":32,"line_end":32,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109888,"byte_end":109891,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that errors may occur in column 0, for example if a read from an IO","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109896,"byte_end":109972,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/ stream fails immediately following a previously read newline character.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109977,"byte_end":110052,"line_start":35,"line_end":35,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":110464,"byte_end":110472,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"classify","qualname":"<Error>::classify","value":"pub fn classify(&Self) -> Category","parent":null,"children":[],"decl_id":null,"docs":" Categorizes the cause of this error.","sig":null,"attributes":[{"value":"/ Categorizes the cause of this error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":110124,"byte_end":110164,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":110169,"byte_end":110172,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ - `Category::Io` - failure to read or write bytes on an IO stream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":110177,"byte_end":110246,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ - `Category::Syntax` - input that is not syntactically valid JSON","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":110251,"byte_end":110320,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ - `Category::Data` - input data that is semantically incorrect","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":110325,"byte_end":110391,"line_start":44,"line_end":44,"column_start":5,"column_end":71}},{"value":"/ - `Category::Eof` - unexpected end of the input data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":110396,"byte_end":110452,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":111710,"byte_end":111715,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"is_io","qualname":"<Error>::is_io","value":"pub fn is_io(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by a failure to read or write\n bytes on an IO stream.\n","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by a failure to read or write","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":111596,"byte_end":111667,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ bytes on an IO stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":111672,"byte_end":111698,"line_start":74,"line_end":74,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":111893,"byte_end":111902,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"is_syntax","qualname":"<Error>::is_syntax","value":"pub fn is_syntax(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by input that was not\n syntactically valid JSON.\n","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by input that was not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":111784,"byte_end":111847,"line_start":79,"line_end":79,"column_start":5,"column_end":68}},{"value":"/ syntactically valid JSON.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":111852,"byte_end":111881,"line_start":80,"line_end":80,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112225,"byte_end":112232,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"is_data","qualname":"<Error>::is_data","value":"pub fn is_data(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by input data that was\n semantically incorrect.","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by input data that was","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":111975,"byte_end":112039,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/ semantically incorrect.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112044,"byte_end":112071,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112076,"byte_end":112079,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ For example, JSON containing a number is semantically incorrect when the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112084,"byte_end":112160,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ type being deserialized into holds a String.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112165,"byte_end":112213,"line_start":89,"line_end":89,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112555,"byte_end":112561,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"is_eof","qualname":"<Error>::is_eof","value":"pub fn is_eof(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by prematurely reaching the end of\n the input data.","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by prematurely reaching the end of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112303,"byte_end":112379,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ the input data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112384,"byte_end":112403,"line_start":95,"line_end":95,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112408,"byte_end":112411,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Callers that process streaming input may be interested in retrying the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112416,"byte_end":112490,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ deserialization once more data is available.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112495,"byte_end":112543,"line_start":98,"line_end":98,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2030},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112840,"byte_end":112842,"line_start":109,"line_end":109,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Category::Io","value":"Category::Io","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":" The error was caused by a failure to read or write bytes on an IO\n stream.\n","sig":null,"attributes":[{"value":"/ The error was caused by a failure to read or write bytes on an IO","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112750,"byte_end":112819,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112824,"byte_end":112835,"line_start":108,"line_end":108,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2032},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112926,"byte_end":112932,"line_start":112,"line_end":112,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::error::Category::Syntax","value":"Category::Syntax","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":" The error was caused by input that was not syntactically valid JSON.\n","sig":null,"attributes":[{"value":"/ The error was caused by input that was not syntactically valid JSON.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112849,"byte_end":112921,"line_start":111,"line_end":111,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2034},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":113157,"byte_end":113161,"line_start":118,"line_end":118,"column_start":5,"column_end":9},"name":"Data","qualname":"::error::Category::Data","value":"Category::Data","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":" The error was caused by input data that was semantically incorrect.","sig":null,"attributes":[{"value":"/ The error was caused by input data that was semantically incorrect.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112939,"byte_end":113010,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":113015,"byte_end":113018,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ For example, JSON containing a number is semantically incorrect when the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":113023,"byte_end":113099,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ type being deserialized into holds a String.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":113104,"byte_end":113152,"line_start":117,"line_end":117,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2036},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":113388,"byte_end":113391,"line_start":124,"line_end":124,"column_start":5,"column_end":8},"name":"Eof","qualname":"::error::Category::Eof","value":"Category::Eof","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":" The error was caused by prematurely reaching the end of the input data.","sig":null,"attributes":[{"value":"/ The error was caused by prematurely reaching the end of the input data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":113168,"byte_end":113243,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":113248,"byte_end":113251,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Callers that process streaming input may be interested in retrying the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":113256,"byte_end":113330,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ deserialization once more data is available.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":113335,"byte_end":113383,"line_start":123,"line_end":123,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2029},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112735,"byte_end":112743,"line_start":106,"line_end":106,"column_start":10,"column_end":18},"name":"Category","qualname":"::error::Category","value":"pub enum Category {\n\n    /// The error was caused by a failure to read or write bytes on an IO\n    /// stream.\n    Io,\n\n    /// The error was caused by input that was not syntactically valid JSON.\n    Syntax,\n\n    /// The error was caused by input data that was semantically incorrect.\n    ///\n    /// For example, JSON containing a number is semantically incorrect when the\n    /// type being deserialized into holds a String.\n    Data,\n\n    /// The error was caused by prematurely reaching the end of the input data.\n    ///\n    /// Callers that process streaming input may be interested in retrying the\n    /// deserialization once more data is available.\n    Eof,\n}","parent":null,"children":[{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2036}],"decl_id":null,"docs":" Categorizes the cause of a `serde_json::Error`.\n","sig":null,"attributes":[{"value":"/ Categorizes the cause of a `serde_json::Error`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":112629,"byte_end":112680,"line_start":104,"line_end":104,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":116900,"byte_end":116902,"line_start":257,"line_end":257,"column_start":12,"column_end":14},"name":"io","qualname":"<Error>::io","value":"pub fn io(io::Error) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":116881,"byte_end":116888,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":472},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":523},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":533},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":554},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":590},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":2049},{"krate":0,"index":2054},{"krate":0,"index":2057},{"krate":0,"index":2060},{"krate":0,"index":600},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":2062},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":610},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":2075},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":2084},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2095},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":2097},{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":2110},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2121}],"decl_id":null,"docs":" A map of String to serde_json::Value.","sig":null,"attributes":[{"value":"/ A map of String to serde_json::Value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":122893,"byte_end":122934,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":122935,"byte_end":122938,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ By default the map is backed by a [`BTreeMap`]. Enable the `preserve_order`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":122939,"byte_end":123018,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ feature of serde_json to use [`IndexMap`] instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123019,"byte_end":123073,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123074,"byte_end":123077,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123078,"byte_end":123158,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`IndexMap`]: https://docs.rs/indexmap/*/indexmap/map/struct.IndexMap.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123159,"byte_end":123237,"line_start":7,"line_end":7,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":478},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123484,"byte_end":123487,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":481}],"decl_id":null,"docs":" Represents a JSON key/value type.\n","sig":null,"attributes":[{"value":"/ Represents a JSON key/value type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123435,"byte_end":123472,"line_start":18,"line_end":18,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123755,"byte_end":123758,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Map<String, Value>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty Map.\n","sig":null,"attributes":[{"value":"/ Makes a new empty Map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123703,"byte_end":123729,"line_start":29,"line_end":29,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123734,"byte_end":123743,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123923,"byte_end":123936,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Map<String, Value>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty Map with the given initial capacity.\n","sig":null,"attributes":[{"value":"/ Makes a new empty Map with the given initial capacity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123839,"byte_end":123897,"line_start":37,"line_end":37,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123902,"byte_end":123911,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124366,"byte_end":124371,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"clear","qualname":"<Map<String, Value>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the map, removing all values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124300,"byte_end":124340,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124345,"byte_end":124354,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124670,"byte_end":124673,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"get","qualname":"<Map<String, Value>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&Value> where String: Borrow<Q>,\nQ: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124421,"byte_end":124483,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124488,"byte_end":124491,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124496,"byte_end":124572,"line_start":60,"line_end":60,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124577,"byte_end":124644,"line_start":61,"line_end":61,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124649,"byte_end":124658,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125082,"byte_end":125094,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Map<String, Value>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where String: Borrow<Q>,\nQ: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124828,"byte_end":124895,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124900,"byte_end":124903,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124908,"byte_end":124984,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":124989,"byte_end":125056,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125061,"byte_end":125070,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125505,"byte_end":125512,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<String, Value>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut Value> where\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125248,"byte_end":125318,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125323,"byte_end":125326,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125331,"byte_end":125407,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125412,"byte_end":125479,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125484,"byte_end":125493,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125940,"byte_end":125946,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"insert","qualname":"<Map<String, Value>>::insert","value":"pub fn insert(&mut Self, String, Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125679,"byte_end":125721,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125726,"byte_end":125729,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125734,"byte_end":125799,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125804,"byte_end":125807,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125812,"byte_end":125887,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/ value is returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125892,"byte_end":125914,"line_start":102,"line_end":102,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":125919,"byte_end":125928,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126334,"byte_end":126340,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map<String, Value>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<Value> where\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126039,"byte_end":126112,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126117,"byte_end":126147,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126152,"byte_end":126155,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126160,"byte_end":126236,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126241,"byte_end":126308,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126313,"byte_end":126322,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126927,"byte_end":126939,"line_start":130,"line_end":130,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<Map<String, Value>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(String, Value)> where\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stored key and value if the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126642,"byte_end":126715,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ key was previously in the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126720,"byte_end":126754,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126759,"byte_end":126762,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126767,"byte_end":126843,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":126848,"byte_end":126915,"line_start":129,"line_end":129,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":128410,"byte_end":128416,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"append","qualname":"<Map<String, Value>>::append","value":"pub fn append(&mut Self, &mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Moves all elements from other into Self, leaving other empty.\n","sig":null,"attributes":[{"value":"/ Moves all elements from other into Self, leaving other empty.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":128319,"byte_end":128384,"line_start":173,"line_end":173,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":128389,"byte_end":128398,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":128811,"byte_end":128816,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"entry","qualname":"<Map<String, Value>>::entry","value":"pub fn entry<S>(&mut Self, S) -> Entry where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place\n manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":128709,"byte_end":128777,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ manipulation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":128782,"byte_end":128799,"line_start":185,"line_end":185,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129389,"byte_end":129392,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"name":"len","qualname":"<Map<String, Value>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129317,"byte_end":129363,"line_start":201,"line_end":201,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129368,"byte_end":129377,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129520,"byte_end":129528,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Map<String, Value>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129445,"byte_end":129494,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129499,"byte_end":129508,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129660,"byte_end":129664,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"iter","qualname":"<Map<String, Value>>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129585,"byte_end":129634,"line_start":213,"line_end":213,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129639,"byte_end":129648,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129835,"byte_end":129843,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Map<String, Value>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets a mutable iterator over the entries of the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129753,"byte_end":129809,"line_start":221,"line_end":221,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129814,"byte_end":129823,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130018,"byte_end":130022,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map<String, Value>>::keys","value":"pub fn keys(&Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129946,"byte_end":129992,"line_start":229,"line_end":229,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":129997,"byte_end":130006,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130185,"byte_end":130191,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"values","qualname":"<Map<String, Value>>::values","value":"pub fn values(&Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the values of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the values of the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130111,"byte_end":130159,"line_start":237,"line_end":237,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130164,"byte_end":130173,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130364,"byte_end":130374,"line_start":247,"line_end":247,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<Map<String, Value>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over mutable values of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over mutable values of the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130286,"byte_end":130338,"line_start":245,"line_end":245,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130343,"byte_end":130352,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135643,"byte_end":135649,"line_start":457,"line_end":457,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[{"value":"/ A vacant Entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135619,"byte_end":135638,"line_start":456,"line_end":456,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135699,"byte_end":135707,"line_start":459,"line_end":459,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[{"value":"/ An occupied Entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135672,"byte_end":135694,"line_start":458,"line_end":458,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":554},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135603,"byte_end":135608,"line_start":455,"line_end":455,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a> {\n\n    /// A vacant Entry.\n    Vacant(VacantEntry),\n\n    /// An occupied Entry.\n    Occupied(OccupiedEntry),\n}","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":559}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n This enum is constructed from the [`entry`] method on [`Map`].","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135369,"byte_end":135449,"line_start":450,"line_end":450,"column_start":1,"column_end":81}},{"value":"/ This enum is constructed from the [`entry`] method on [`Map`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135450,"byte_end":135516,"line_start":451,"line_end":451,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135517,"byte_end":135520,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ [`entry`]: struct.Map.html#method.entry","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135521,"byte_end":135564,"line_start":453,"line_end":453,"column_start":1,"column_end":44}},{"value":"/ [`Map`]: struct.Map.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135565,"byte_end":135593,"line_start":454,"line_end":454,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135831,"byte_end":135842,"line_start":465,"line_end":465,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":564}],"decl_id":null,"docs":" A vacant Entry. It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A vacant Entry. It is part of the [`Entry`] enum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135731,"byte_end":135784,"line_start":462,"line_end":462,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135785,"byte_end":135788,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135789,"byte_end":135819,"line_start":464,"line_end":464,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":565},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135988,"byte_end":136001,"line_start":472,"line_end":472,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":567}],"decl_id":null,"docs":" An occupied Entry. It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ An occupied Entry. It is part of the [`Entry`] enum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135885,"byte_end":135941,"line_start":469,"line_end":469,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135942,"byte_end":135945,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":135946,"byte_end":135976,"line_start":471,"line_end":471,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136738,"byte_end":136741,"line_start":495,"line_end":495,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136521,"byte_end":136565,"line_start":487,"line_end":487,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136570,"byte_end":136573,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136578,"byte_end":136592,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136597,"byte_end":136600,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136605,"byte_end":136612,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136617,"byte_end":136658,"line_start":492,"line_end":492,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(map.entry(\"serde\").key(), &\"serde\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136663,"byte_end":136714,"line_start":493,"line_end":493,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136719,"byte_end":136726,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137288,"byte_end":137297,"line_start":515,"line_end":515,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and\n returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136897,"byte_end":136971,"line_start":502,"line_end":502,"column_start":5,"column_end":79}},{"value":"/ returns a mutable reference to the value in the entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136976,"byte_end":137034,"line_start":503,"line_end":503,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137039,"byte_end":137042,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137047,"byte_end":137061,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137066,"byte_end":137069,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137074,"byte_end":137081,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137086,"byte_end":137113,"line_start":508,"line_end":508,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137118,"byte_end":137123,"line_start":509,"line_end":509,"column_start":5,"column_end":10}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137128,"byte_end":137169,"line_start":510,"line_end":510,"column_start":5,"column_end":46}},{"value":"/ map.entry(\"serde\").or_insert(json!(12));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137174,"byte_end":137218,"line_start":511,"line_end":511,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137223,"byte_end":137226,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"serde\"], 12);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137231,"byte_end":137264,"line_start":513,"line_end":513,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137269,"byte_end":137276,"line_start":514,"line_end":514,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137945,"byte_end":137959,"line_start":536,"line_end":536,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut Value where F: FnOnce() -> Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty, and returns a mutable reference to the value in the\n entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137496,"byte_end":137570,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/ function if empty, and returns a mutable reference to the value in the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137575,"byte_end":137649,"line_start":523,"line_end":523,"column_start":5,"column_end":79}},{"value":"/ entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137654,"byte_end":137664,"line_start":524,"line_end":524,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137669,"byte_end":137672,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137677,"byte_end":137691,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137696,"byte_end":137699,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137704,"byte_end":137711,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137716,"byte_end":137743,"line_start":529,"line_end":529,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137748,"byte_end":137753,"line_start":530,"line_end":530,"column_start":5,"column_end":10}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137758,"byte_end":137799,"line_start":531,"line_end":531,"column_start":5,"column_end":46}},{"value":"/ map.entry(\"serde\").or_insert_with(|| json!(\"hoho\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137804,"byte_end":137860,"line_start":532,"line_end":532,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137865,"byte_end":137868,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"serde\"], \"hoho\".to_owned());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137873,"byte_end":137921,"line_start":534,"line_end":534,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":137926,"byte_end":137933,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138723,"byte_end":138726,"line_start":566,"line_end":566,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the VacantEntry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138232,"byte_end":138305,"line_start":548,"line_end":548,"column_start":5,"column_end":78}},{"value":"/ through the VacantEntry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138310,"byte_end":138338,"line_start":549,"line_end":549,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138343,"byte_end":138346,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138351,"byte_end":138365,"line_start":551,"line_end":551,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138370,"byte_end":138373,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138378,"byte_end":138385,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ use serde_json::map::Entry;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138390,"byte_end":138421,"line_start":554,"line_end":554,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138426,"byte_end":138429,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138434,"byte_end":138475,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138480,"byte_end":138483,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"serde\") {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138488,"byte_end":138518,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/     Entry::Vacant(vacant) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138523,"byte_end":138557,"line_start":559,"line_end":559,"column_start":5,"column_end":39}},{"value":"/         assert_eq!(vacant.key(), &\"serde\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138562,"byte_end":138609,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138614,"byte_end":138623,"line_start":561,"line_end":561,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => unimplemented!(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138628,"byte_end":138675,"line_start":562,"line_end":562,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138680,"byte_end":138685,"line_start":563,"line_end":563,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138690,"byte_end":138697,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138702,"byte_end":138711,"line_start":565,"line_end":565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139311,"byte_end":139317,"line_start":590,"line_end":590,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key, and returns a\n mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key, and returns a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138784,"byte_end":138857,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ mutable reference to it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138862,"byte_end":138890,"line_start":571,"line_end":571,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138895,"byte_end":138898,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138903,"byte_end":138917,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138922,"byte_end":138925,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138930,"byte_end":138937,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138942,"byte_end":138969,"line_start":576,"line_end":576,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138974,"byte_end":138979,"line_start":577,"line_end":577,"column_start":5,"column_end":10}},{"value":"/ use serde_json::map::Entry;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138984,"byte_end":139015,"line_start":578,"line_end":578,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139020,"byte_end":139023,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139028,"byte_end":139069,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139074,"byte_end":139077,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"serde\") {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139082,"byte_end":139112,"line_start":582,"line_end":582,"column_start":5,"column_end":35}},{"value":"/     Entry::Vacant(vacant) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139117,"byte_end":139151,"line_start":583,"line_end":583,"column_start":5,"column_end":39}},{"value":"/         vacant.insert(json!(\"hoho\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139156,"byte_end":139197,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139202,"byte_end":139211,"line_start":585,"line_end":585,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => unimplemented!(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139216,"byte_end":139263,"line_start":586,"line_end":586,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139268,"byte_end":139273,"line_start":587,"line_end":587,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139278,"byte_end":139285,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139290,"byte_end":139299,"line_start":589,"line_end":589,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139960,"byte_end":139963,"line_start":616,"line_end":616,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139433,"byte_end":139478,"line_start":596,"line_end":596,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139483,"byte_end":139486,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139491,"byte_end":139505,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139510,"byte_end":139513,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139518,"byte_end":139525,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139530,"byte_end":139557,"line_start":601,"line_end":601,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139562,"byte_end":139567,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ use serde_json::map::Entry;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139572,"byte_end":139603,"line_start":603,"line_end":603,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139608,"byte_end":139611,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139616,"byte_end":139657,"line_start":605,"line_end":605,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"serde\".to_owned(), json!(12));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139662,"byte_end":139708,"line_start":606,"line_end":606,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139713,"byte_end":139716,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"serde\") {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139721,"byte_end":139751,"line_start":608,"line_end":608,"column_start":5,"column_end":35}},{"value":"/     Entry::Occupied(occupied) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139756,"byte_end":139794,"line_start":609,"line_end":609,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(occupied.key(), &\"serde\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139799,"byte_end":139848,"line_start":610,"line_end":610,"column_start":5,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139853,"byte_end":139862,"line_start":611,"line_end":611,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => unimplemented!(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139867,"byte_end":139912,"line_start":612,"line_end":612,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139917,"byte_end":139922,"line_start":613,"line_end":613,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139927,"byte_end":139934,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139939,"byte_end":139948,"line_start":615,"line_end":615,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140546,"byte_end":140549,"line_start":640,"line_end":640,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140023,"byte_end":140070,"line_start":620,"line_end":620,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140075,"byte_end":140078,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140083,"byte_end":140097,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140102,"byte_end":140105,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140110,"byte_end":140117,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140122,"byte_end":140149,"line_start":625,"line_end":625,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140154,"byte_end":140159,"line_start":626,"line_end":626,"column_start":5,"column_end":10}},{"value":"/ use serde_json::map::Entry;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140164,"byte_end":140195,"line_start":627,"line_end":627,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140200,"byte_end":140203,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140208,"byte_end":140249,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"serde\".to_owned(), json!(12));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140254,"byte_end":140300,"line_start":630,"line_end":630,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140305,"byte_end":140308,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"serde\") {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140313,"byte_end":140343,"line_start":632,"line_end":632,"column_start":5,"column_end":35}},{"value":"/     Entry::Occupied(occupied) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140348,"byte_end":140386,"line_start":633,"line_end":633,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(occupied.get(), 12);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140391,"byte_end":140434,"line_start":634,"line_end":634,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140439,"byte_end":140448,"line_start":635,"line_end":635,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => unimplemented!(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140453,"byte_end":140498,"line_start":636,"line_end":636,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140503,"byte_end":140508,"line_start":637,"line_end":637,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140513,"byte_end":140520,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140525,"byte_end":140534,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141248,"byte_end":141255,"line_start":666,"line_end":666,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140608,"byte_end":140663,"line_start":644,"line_end":644,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140668,"byte_end":140671,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140676,"byte_end":140690,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140695,"byte_end":140698,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140703,"byte_end":140710,"line_start":648,"line_end":648,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140715,"byte_end":140742,"line_start":649,"line_end":649,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140747,"byte_end":140752,"line_start":650,"line_end":650,"column_start":5,"column_end":10}},{"value":"/ use serde_json::map::Entry;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140757,"byte_end":140788,"line_start":651,"line_end":651,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140793,"byte_end":140796,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140801,"byte_end":140842,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"serde\".to_owned(), json!([1, 2, 3]));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140847,"byte_end":140900,"line_start":654,"line_end":654,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140905,"byte_end":140908,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"serde\") {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140913,"byte_end":140943,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/     Entry::Occupied(mut occupied) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140948,"byte_end":140990,"line_start":657,"line_end":657,"column_start":5,"column_end":47}},{"value":"/         occupied.get_mut().as_array_mut().unwrap().push(json!(4));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":140995,"byte_end":141065,"line_start":658,"line_end":658,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141070,"byte_end":141079,"line_start":659,"line_end":659,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => unimplemented!(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141084,"byte_end":141129,"line_start":660,"line_end":660,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141134,"byte_end":141139,"line_start":661,"line_end":661,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141144,"byte_end":141147,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"serde\"].as_array().unwrap().len(), 4);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141152,"byte_end":141210,"line_start":663,"line_end":663,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141215,"byte_end":141222,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141227,"byte_end":141236,"line_start":665,"line_end":665,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141973,"byte_end":141981,"line_start":692,"line_end":692,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to its value.","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to its value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141326,"byte_end":141387,"line_start":670,"line_end":670,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141392,"byte_end":141395,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141400,"byte_end":141414,"line_start":672,"line_end":672,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141419,"byte_end":141422,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141427,"byte_end":141434,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141439,"byte_end":141466,"line_start":675,"line_end":675,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141471,"byte_end":141476,"line_start":676,"line_end":676,"column_start":5,"column_end":10}},{"value":"/ use serde_json::map::Entry;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141481,"byte_end":141512,"line_start":677,"line_end":677,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141517,"byte_end":141520,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141525,"byte_end":141566,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"serde\".to_owned(), json!([1, 2, 3]));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141571,"byte_end":141624,"line_start":680,"line_end":680,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141629,"byte_end":141632,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"serde\") {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141637,"byte_end":141667,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/     Entry::Occupied(mut occupied) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141672,"byte_end":141714,"line_start":683,"line_end":683,"column_start":5,"column_end":47}},{"value":"/         occupied.into_mut().as_array_mut().unwrap().push(json!(4));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141719,"byte_end":141790,"line_start":684,"line_end":684,"column_start":5,"column_end":76}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141795,"byte_end":141804,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => unimplemented!(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141809,"byte_end":141854,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141859,"byte_end":141864,"line_start":687,"line_end":687,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141869,"byte_end":141872,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"serde\"].as_array().unwrap().len(), 4);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141877,"byte_end":141935,"line_start":689,"line_end":689,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141940,"byte_end":141947,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":141952,"byte_end":141961,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142697,"byte_end":142703,"line_start":718,"line_end":718,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, Value) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the `OccupiedEntry`'s key, and returns\n the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the `OccupiedEntry`'s key, and returns","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142051,"byte_end":142126,"line_start":696,"line_end":696,"column_start":5,"column_end":80}},{"value":"/ the entry's old value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142131,"byte_end":142157,"line_start":697,"line_end":697,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142162,"byte_end":142165,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142170,"byte_end":142184,"line_start":699,"line_end":699,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142189,"byte_end":142192,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142197,"byte_end":142204,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142209,"byte_end":142236,"line_start":702,"line_end":702,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142241,"byte_end":142246,"line_start":703,"line_end":703,"column_start":5,"column_end":10}},{"value":"/ use serde_json::map::Entry;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142251,"byte_end":142282,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142287,"byte_end":142290,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142295,"byte_end":142336,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"serde\".to_owned(), json!(12));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142341,"byte_end":142387,"line_start":707,"line_end":707,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142392,"byte_end":142395,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"serde\") {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142400,"byte_end":142430,"line_start":709,"line_end":709,"column_start":5,"column_end":35}},{"value":"/     Entry::Occupied(mut occupied) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142435,"byte_end":142477,"line_start":710,"line_end":710,"column_start":5,"column_end":47}},{"value":"/         assert_eq!(occupied.insert(json!(13)), 12);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142482,"byte_end":142537,"line_start":711,"line_end":711,"column_start":5,"column_end":60}},{"value":"/         assert_eq!(occupied.get(), 13);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142542,"byte_end":142585,"line_start":712,"line_end":712,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142590,"byte_end":142599,"line_start":713,"line_end":713,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => unimplemented!(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142604,"byte_end":142649,"line_start":714,"line_end":714,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142654,"byte_end":142659,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142664,"byte_end":142671,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142676,"byte_end":142685,"line_start":717,"line_end":717,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143330,"byte_end":143336,"line_start":742,"line_end":742,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the entry out of the map, and returns it.","sig":null,"attributes":[{"value":"/ Takes the value of the entry out of the map, and returns it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142787,"byte_end":142851,"line_start":722,"line_end":722,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142856,"byte_end":142859,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142864,"byte_end":142878,"line_start":724,"line_end":724,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142883,"byte_end":142886,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142891,"byte_end":142898,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142903,"byte_end":142930,"line_start":727,"line_end":727,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142935,"byte_end":142940,"line_start":728,"line_end":728,"column_start":5,"column_end":10}},{"value":"/ use serde_json::map::Entry;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142945,"byte_end":142976,"line_start":729,"line_end":729,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142981,"byte_end":142984,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let mut map = serde_json::Map::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":142989,"byte_end":143030,"line_start":731,"line_end":731,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"serde\".to_owned(), json!(12));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143035,"byte_end":143081,"line_start":732,"line_end":732,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143086,"byte_end":143089,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"serde\") {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143094,"byte_end":143124,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/     Entry::Occupied(occupied) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143129,"byte_end":143167,"line_start":735,"line_end":735,"column_start":5,"column_end":43}},{"value":"/         assert_eq!(occupied.remove(), 12);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143172,"byte_end":143218,"line_start":736,"line_end":736,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143223,"byte_end":143232,"line_start":737,"line_end":737,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => unimplemented!(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143237,"byte_end":143282,"line_start":738,"line_end":738,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143287,"byte_end":143292,"line_start":739,"line_end":739,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143297,"byte_end":143304,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143309,"byte_end":143318,"line_start":741,"line_end":741,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143926,"byte_end":143930,"line_start":764,"line_end":764,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":597}],"decl_id":null,"docs":" An iterator over a serde_json::Map's entries.\n","sig":null,"attributes":[{"value":"/ An iterator over a serde_json::Map's entries.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":143865,"byte_end":143914,"line_start":763,"line_end":763,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":144630,"byte_end":144637,"line_start":789,"line_end":789,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":607}],"decl_id":null,"docs":" A mutable iterator over a serde_json::Map's entries.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over a serde_json::Map's entries.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":144562,"byte_end":144618,"line_start":788,"line_end":788,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":614},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":145334,"byte_end":145342,"line_start":814,"line_end":814,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":615}],"decl_id":null,"docs":" An owning iterator over a serde_json::Map's entries.\n","sig":null,"attributes":[{"value":"/ An owning iterator over a serde_json::Map's entries.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":145266,"byte_end":145322,"line_start":813,"line_end":813,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":617},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":145754,"byte_end":145758,"line_start":828,"line_end":828,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":619}],"decl_id":null,"docs":" An iterator over a serde_json::Map's keys.\n","sig":null,"attributes":[{"value":"/ An iterator over a serde_json::Map's keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":145696,"byte_end":145742,"line_start":827,"line_end":827,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":622},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":146171,"byte_end":146177,"line_start":842,"line_end":842,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":624}],"decl_id":null,"docs":" An iterator over a serde_json::Map's values.\n","sig":null,"attributes":[{"value":"/ An iterator over a serde_json::Map's values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":146111,"byte_end":146159,"line_start":841,"line_end":841,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":627},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":146608,"byte_end":146617,"line_start":856,"line_end":856,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":629}],"decl_id":null,"docs":" A mutable iterator over a serde_json::Map's values.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over a serde_json::Map's values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":146541,"byte_end":146596,"line_start":855,"line_end":855,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":645},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147235,"byte_end":147245,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"decl_id":null,"docs":" A structure for serializing Rust values into JSON.\n","sig":null,"attributes":[{"value":"/ A structure for serializing Rust values into JSON.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147169,"byte_end":147223,"line_start":10,"line_end":10,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147421,"byte_end":147424,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new JSON serializer.\n","sig":null,"attributes":[{"value":"/ Creates a new JSON serializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147361,"byte_end":147395,"line_start":20,"line_end":20,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147400,"byte_end":147409,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147666,"byte_end":147672,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Serializer<W, PrettyFormatter>>::pretty","value":"pub fn pretty(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new JSON pretty print serializer.\n","sig":null,"attributes":[{"value":"/ Creates a new JSON pretty print serializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147593,"byte_end":147640,"line_start":31,"line_end":31,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147645,"byte_end":147654,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147964,"byte_end":147978,"line_start":46,"line_end":46,"column_start":12,"column_end":26},"name":"with_formatter","qualname":"<Serializer<W, F>>::with_formatter","value":"pub fn with_formatter(W, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new JSON visitor whose output will be written to the writer\n specified.\n","sig":null,"attributes":[{"value":"/ Creates a new JSON visitor whose output will be written to the writer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147846,"byte_end":147919,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ specified.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147924,"byte_end":147938,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147943,"byte_end":147952,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":148138,"byte_end":148148,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Serializer<W, F>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the `Writer` from the `Serializer`.\n","sig":null,"attributes":[{"value":"/ Unwrap the `Writer` from the `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":148066,"byte_end":148112,"line_start":50,"line_end":50,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":148117,"byte_end":148126,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2126},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":160570,"byte_end":160575,"line_start":510,"line_end":510,"column_start":5,"column_end":10},"name":"Empty","qualname":"::ser::State::Empty","value":"State::Empty","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2128},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":160581,"byte_end":160586,"line_start":511,"line_end":511,"column_start":5,"column_end":10},"name":"First","qualname":"::ser::State::First","value":"State::First","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2130},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":160592,"byte_end":160596,"line_start":512,"line_end":512,"column_start":5,"column_end":9},"name":"Rest","qualname":"::ser::State::Rest","value":"State::Rest","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2125},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":160558,"byte_end":160563,"line_start":509,"line_end":509,"column_start":10,"column_end":15},"name":"State","qualname":"::ser::State","value":"pub enum State { Empty, First, Rest, }","parent":null,"children":[{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2130}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":727},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":160699,"byte_end":160702,"line_start":518,"line_end":518,"column_start":5,"column_end":8},"name":"Map","qualname":"::ser::Compound::Map","value":"Compound::Map { ser, state }","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":723},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":160666,"byte_end":160674,"line_start":517,"line_end":517,"column_start":10,"column_end":18},"name":"Compound","qualname":"::ser::Compound","value":"pub enum Compound<'a, W: 'a, F: 'a> {\n    Map {\n        ser: &'a mut Serializer<W, F>,\n        state: State,\n    },\n}","parent":null,"children":[{"krate":0,"index":727}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":848},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189006,"byte_end":189011,"line_start":1561,"line_end":1561,"column_start":5,"column_end":10},"name":"Quote","qualname":"::ser::CharEscape::Quote","value":"CharEscape::Quote","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":" An escaped quote `\"`\n","sig":null,"attributes":[{"value":"/ An escaped quote `\"`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":188977,"byte_end":189001,"line_start":1560,"line_end":1560,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":850},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189056,"byte_end":189070,"line_start":1563,"line_end":1563,"column_start":5,"column_end":19},"name":"ReverseSolidus","qualname":"::ser::CharEscape::ReverseSolidus","value":"CharEscape::ReverseSolidus","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":" An escaped reverse solidus `\\`\n","sig":null,"attributes":[{"value":"/ An escaped reverse solidus `\\`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189017,"byte_end":189051,"line_start":1562,"line_end":1562,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":852},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189107,"byte_end":189114,"line_start":1565,"line_end":1565,"column_start":5,"column_end":12},"name":"Solidus","qualname":"::ser::CharEscape::Solidus","value":"CharEscape::Solidus","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":" An escaped solidus `/`\n","sig":null,"attributes":[{"value":"/ An escaped solidus `/`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189076,"byte_end":189102,"line_start":1564,"line_end":1564,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":854},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189185,"byte_end":189194,"line_start":1567,"line_end":1567,"column_start":5,"column_end":14},"name":"Backspace","qualname":"::ser::CharEscape::Backspace","value":"CharEscape::Backspace","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":" An escaped backspace character (usually escaped as `\\b`)\n","sig":null,"attributes":[{"value":"/ An escaped backspace character (usually escaped as `\\b`)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189120,"byte_end":189180,"line_start":1566,"line_end":1566,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":856},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189265,"byte_end":189273,"line_start":1569,"line_end":1569,"column_start":5,"column_end":13},"name":"FormFeed","qualname":"::ser::CharEscape::FormFeed","value":"CharEscape::FormFeed","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":" An escaped form feed character (usually escaped as `\\f`)\n","sig":null,"attributes":[{"value":"/ An escaped form feed character (usually escaped as `\\f`)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189200,"byte_end":189260,"line_start":1568,"line_end":1568,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":858},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189344,"byte_end":189352,"line_start":1571,"line_end":1571,"column_start":5,"column_end":13},"name":"LineFeed","qualname":"::ser::CharEscape::LineFeed","value":"CharEscape::LineFeed","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":" An escaped line feed character (usually escaped as `\\n`)\n","sig":null,"attributes":[{"value":"/ An escaped line feed character (usually escaped as `\\n`)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189279,"byte_end":189339,"line_start":1570,"line_end":1570,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":860},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189429,"byte_end":189443,"line_start":1573,"line_end":1573,"column_start":5,"column_end":19},"name":"CarriageReturn","qualname":"::ser::CharEscape::CarriageReturn","value":"CharEscape::CarriageReturn","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":" An escaped carriage return character (usually escaped as `\\r`)\n","sig":null,"attributes":[{"value":"/ An escaped carriage return character (usually escaped as `\\r`)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189358,"byte_end":189424,"line_start":1572,"line_end":1572,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":862},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189508,"byte_end":189511,"line_start":1575,"line_end":1575,"column_start":5,"column_end":8},"name":"Tab","qualname":"::ser::CharEscape::Tab","value":"CharEscape::Tab","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":" An escaped tab character (usually escaped as `\\t`)\n","sig":null,"attributes":[{"value":"/ An escaped tab character (usually escaped as `\\t`)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189449,"byte_end":189503,"line_start":1574,"line_end":1574,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":864},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189638,"byte_end":189650,"line_start":1578,"line_end":1578,"column_start":5,"column_end":17},"name":"AsciiControl","qualname":"::ser::CharEscape::AsciiControl","value":"CharEscape::AsciiControl(u8)","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":" An escaped ASCII plane control character (usually escaped as\n `\\u00XX` where `XX` are two hex characters)\n","sig":null,"attributes":[{"value":"/ An escaped ASCII plane control character (usually escaped as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189517,"byte_end":189581,"line_start":1576,"line_end":1576,"column_start":5,"column_end":69}},{"value":"/ `\\u00XX` where `XX` are two hex characters)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189586,"byte_end":189633,"line_start":1577,"line_end":1577,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":847},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":188960,"byte_end":188970,"line_start":1559,"line_end":1559,"column_start":10,"column_end":20},"name":"CharEscape","qualname":"::ser::CharEscape","value":"pub enum CharEscape {\n\n    /// An escaped quote `\"`\n    Quote,\n\n    /// An escaped reverse solidus `\\`\n    ReverseSolidus,\n\n    /// An escaped solidus `/`\n    Solidus,\n\n    /// An escaped backspace character (usually escaped as `\\b`)\n    Backspace,\n\n    /// An escaped form feed character (usually escaped as `\\f`)\n    FormFeed,\n\n    /// An escaped line feed character (usually escaped as `\\n`)\n    LineFeed,\n\n    /// An escaped carriage return character (usually escaped as `\\r`)\n    CarriageReturn,\n\n    /// An escaped tab character (usually escaped as `\\t`)\n    Tab,\n\n    /// An escaped ASCII plane control character (usually escaped as\n    /// `\\u00XX` where `XX` are two hex characters)\n    AsciiControl(u8),\n}","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864}],"decl_id":null,"docs":" Represents a character escape code in a type-safe manner.\n","sig":null,"attributes":[{"value":"/ Represents a character escape code in a type-safe manner.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":188889,"byte_end":188950,"line_start":1558,"line_end":1558,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":869},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":190363,"byte_end":190372,"line_start":1600,"line_end":1600,"column_start":11,"column_end":20},"name":"Formatter","qualname":"::ser::Formatter","value":"Formatter","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":927}],"decl_id":null,"docs":" This trait abstracts away serializing the JSON control characters, which allows the user to\n optionally pretty print the JSON output.\n","sig":null,"attributes":[{"value":"/ This trait abstracts away serializing the JSON control characters, which allows the user to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":190212,"byte_end":190307,"line_start":1598,"line_end":1598,"column_start":1,"column_end":96}},{"value":"/ optionally pretty print the JSON output.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":190308,"byte_end":190352,"line_start":1599,"line_end":1599,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":190451,"byte_end":190461,"line_start":1603,"line_end":1603,"column_start":8,"column_end":18},"name":"write_null","qualname":"::ser::Formatter::write_null","value":"pub fn write_null<W: ?Sized>(&mut Self, &mut W) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes a `null` value to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes a `null` value to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":190379,"byte_end":190429,"line_start":1601,"line_end":1601,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":190434,"byte_end":190443,"line_start":1602,"line_end":1602,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":190685,"byte_end":190695,"line_start":1612,"line_end":1612,"column_start":8,"column_end":18},"name":"write_bool","qualname":"::ser::Formatter::write_bool","value":"pub fn write_bool<W: ?Sized>(&mut Self, &mut W, bool) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes a `true` or `false` value to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes a `true` or `false` value to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":190602,"byte_end":190663,"line_start":1610,"line_end":1610,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":190668,"byte_end":190677,"line_start":1611,"line_end":1611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":191043,"byte_end":191051,"line_start":1626,"line_end":1626,"column_start":8,"column_end":16},"name":"write_i8","qualname":"::ser::Formatter::write_i8","value":"pub fn write_i8<W: ?Sized>(&mut Self, &mut W, i8) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes an integer value like `-123` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes an integer value like `-123` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":190957,"byte_end":191021,"line_start":1624,"line_end":1624,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":191026,"byte_end":191035,"line_start":1625,"line_end":1625,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":191378,"byte_end":191387,"line_start":1637,"line_end":1637,"column_start":8,"column_end":17},"name":"write_i16","qualname":"::ser::Formatter::write_i16","value":"pub fn write_i16<W: ?Sized>(&mut Self, &mut W, i16) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes an integer value like `-123` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes an integer value like `-123` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":191292,"byte_end":191356,"line_start":1635,"line_end":1635,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":191361,"byte_end":191370,"line_start":1636,"line_end":1636,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":191715,"byte_end":191724,"line_start":1648,"line_end":1648,"column_start":8,"column_end":17},"name":"write_i32","qualname":"::ser::Formatter::write_i32","value":"pub fn write_i32<W: ?Sized>(&mut Self, &mut W, i32) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes an integer value like `-123` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes an integer value like `-123` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":191629,"byte_end":191693,"line_start":1646,"line_end":1646,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":191698,"byte_end":191707,"line_start":1647,"line_end":1647,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":192052,"byte_end":192061,"line_start":1659,"line_end":1659,"column_start":8,"column_end":17},"name":"write_i64","qualname":"::ser::Formatter::write_i64","value":"pub fn write_i64<W: ?Sized>(&mut Self, &mut W, i64) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes an integer value like `-123` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes an integer value like `-123` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":191966,"byte_end":192030,"line_start":1657,"line_end":1657,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":192035,"byte_end":192044,"line_start":1658,"line_end":1658,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":192388,"byte_end":192396,"line_start":1670,"line_end":1670,"column_start":8,"column_end":16},"name":"write_u8","qualname":"::ser::Formatter::write_u8","value":"pub fn write_u8<W: ?Sized>(&mut Self, &mut W, u8) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes an integer value like `123` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes an integer value like `123` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":192303,"byte_end":192366,"line_start":1668,"line_end":1668,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":192371,"byte_end":192380,"line_start":1669,"line_end":1669,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":192722,"byte_end":192731,"line_start":1681,"line_end":1681,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::ser::Formatter::write_u16","value":"pub fn write_u16<W: ?Sized>(&mut Self, &mut W, u16) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes an integer value like `123` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes an integer value like `123` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":192637,"byte_end":192700,"line_start":1679,"line_end":1679,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":192705,"byte_end":192714,"line_start":1680,"line_end":1680,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":193058,"byte_end":193067,"line_start":1692,"line_end":1692,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::ser::Formatter::write_u32","value":"pub fn write_u32<W: ?Sized>(&mut Self, &mut W, u32) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes an integer value like `123` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes an integer value like `123` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":192973,"byte_end":193036,"line_start":1690,"line_end":1690,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":193041,"byte_end":193050,"line_start":1691,"line_end":1691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":193394,"byte_end":193403,"line_start":1703,"line_end":1703,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::ser::Formatter::write_u64","value":"pub fn write_u64<W: ?Sized>(&mut Self, &mut W, u64) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes an integer value like `123` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes an integer value like `123` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":193309,"byte_end":193372,"line_start":1701,"line_end":1701,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":193377,"byte_end":193386,"line_start":1702,"line_end":1702,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":193743,"byte_end":193752,"line_start":1714,"line_end":1714,"column_start":8,"column_end":17},"name":"write_f32","qualname":"::ser::Formatter::write_f32","value":"pub fn write_f32<W: ?Sized>(&mut Self, &mut W, f32) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes a floating point value like `-31.26e+12` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes a floating point value like `-31.26e+12` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":193645,"byte_end":193721,"line_start":1712,"line_end":1712,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":193726,"byte_end":193735,"line_start":1713,"line_end":1713,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194098,"byte_end":194107,"line_start":1725,"line_end":1725,"column_start":8,"column_end":17},"name":"write_f64","qualname":"::ser::Formatter::write_f64","value":"pub fn write_f64<W: ?Sized>(&mut Self, &mut W, f64) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes a floating point value like `-31.26e+12` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes a floating point value like `-31.26e+12` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194000,"byte_end":194076,"line_start":1723,"line_end":1723,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194081,"byte_end":194090,"line_start":1724,"line_end":1724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194440,"byte_end":194456,"line_start":1736,"line_end":1736,"column_start":8,"column_end":24},"name":"write_number_str","qualname":"::ser::Formatter::write_number_str","value":"pub fn write_number_str<W: ?Sized>(&mut Self, &mut W, &str) -> io::Result<()>\nwhere W: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes a number that has already been rendered to a string.\n","sig":null,"attributes":[{"value":"/ Writes a number that has already been rendered to a string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194355,"byte_end":194418,"line_start":1734,"line_end":1734,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194423,"byte_end":194432,"line_start":1735,"line_end":1735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194769,"byte_end":194781,"line_start":1746,"line_end":1746,"column_start":8,"column_end":20},"name":"begin_string","qualname":"::ser::Formatter::begin_string","value":"pub fn begin_string<W: ?Sized>(&mut Self, &mut W) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called before each series of `write_string_fragment` and\n `write_char_escape`.  Writes a `\"` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Called before each series of `write_string_fragment` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194619,"byte_end":194679,"line_start":1743,"line_end":1743,"column_start":5,"column_end":65}},{"value":"/ `write_char_escape`.  Writes a `\"` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194684,"byte_end":194747,"line_start":1744,"line_end":1744,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194752,"byte_end":194761,"line_start":1745,"line_end":1745,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":195069,"byte_end":195079,"line_start":1756,"line_end":1756,"column_start":8,"column_end":18},"name":"end_string","qualname":"::ser::Formatter::end_string","value":"pub fn end_string<W: ?Sized>(&mut Self, &mut W) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called after each series of `write_string_fragment` and\n `write_char_escape`.  Writes a `\"` to the specified writer.\n","sig":null,"attributes":[{"value":"/ Called after each series of `write_string_fragment` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194920,"byte_end":194979,"line_start":1753,"line_end":1753,"column_start":5,"column_end":64}},{"value":"/ `write_char_escape`.  Writes a `\"` to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":194984,"byte_end":195047,"line_start":1754,"line_end":1754,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":195052,"byte_end":195061,"line_start":1755,"line_end":1755,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":195332,"byte_end":195353,"line_start":1766,"line_end":1766,"column_start":8,"column_end":29},"name":"write_string_fragment","qualname":"::ser::Formatter::write_string_fragment","value":"pub fn write_string_fragment<W: ?Sized>(&mut Self, &mut W, &str)\n-> io::Result<()> where W: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes a string fragment that doesn't need any escaping to the\n specified writer.\n","sig":null,"attributes":[{"value":"/ Writes a string fragment that doesn't need any escaping to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":195218,"byte_end":195284,"line_start":1763,"line_end":1763,"column_start":5,"column_end":71}},{"value":"/ specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":195289,"byte_end":195310,"line_start":1764,"line_end":1764,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":195315,"byte_end":195324,"line_start":1765,"line_end":1765,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":195603,"byte_end":195620,"line_start":1775,"line_end":1775,"column_start":8,"column_end":25},"name":"write_char_escape","qualname":"::ser::Formatter::write_char_escape","value":"pub fn write_char_escape<W: ?Sized>(&mut Self, &mut W, CharEscape)\n-> io::Result<()> where W: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes a character escape code to the specified writer.\n","sig":null,"attributes":[{"value":"/ Writes a character escape code to the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":195522,"byte_end":195581,"line_start":1773,"line_end":1773,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":195586,"byte_end":195595,"line_start":1774,"line_end":1774,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":196653,"byte_end":196664,"line_start":1810,"line_end":1810,"column_start":8,"column_end":19},"name":"begin_array","qualname":"::ser::Formatter::begin_array","value":"pub fn begin_array<W: ?Sized>(&mut Self, &mut W) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called before every array.  Writes a `[` to the specified\n writer.\n","sig":null,"attributes":[{"value":"/ Called before every array.  Writes a `[` to the specified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":196554,"byte_end":196615,"line_start":1807,"line_end":1807,"column_start":5,"column_end":66}},{"value":"/ writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":196620,"byte_end":196631,"line_start":1808,"line_end":1808,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":196636,"byte_end":196645,"line_start":1809,"line_end":1809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":196900,"byte_end":196909,"line_start":1820,"line_end":1820,"column_start":8,"column_end":17},"name":"end_array","qualname":"::ser::Formatter::end_array","value":"pub fn end_array<W: ?Sized>(&mut Self, &mut W) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called after every array.  Writes a `]` to the specified\n writer.\n","sig":null,"attributes":[{"value":"/ Called after every array.  Writes a `]` to the specified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":196802,"byte_end":196862,"line_start":1817,"line_end":1817,"column_start":5,"column_end":65}},{"value":"/ writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":196867,"byte_end":196878,"line_start":1818,"line_end":1818,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":196883,"byte_end":196892,"line_start":1819,"line_end":1819,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197162,"byte_end":197179,"line_start":1830,"line_end":1830,"column_start":8,"column_end":25},"name":"begin_array_value","qualname":"::ser::Formatter::begin_array_value","value":"pub fn begin_array_value<W: ?Sized>(&mut Self, &mut W, bool) -> io::Result<()>\nwhere W: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called before every array value.  Writes a `,` if needed to\n the specified writer.\n","sig":null,"attributes":[{"value":"/ Called before every array value.  Writes a `,` if needed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197047,"byte_end":197110,"line_start":1827,"line_end":1827,"column_start":5,"column_end":68}},{"value":"/ the specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197115,"byte_end":197140,"line_start":1828,"line_end":1828,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197145,"byte_end":197154,"line_start":1829,"line_end":1829,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197456,"byte_end":197471,"line_start":1843,"line_end":1843,"column_start":8,"column_end":23},"name":"end_array_value","qualname":"::ser::Formatter::end_array_value","value":"pub fn end_array_value<W: ?Sized>(&mut Self, &mut W) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called after every array value.\n","sig":null,"attributes":[{"value":"/ Called after every array value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197399,"byte_end":197434,"line_start":1841,"line_end":1841,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197439,"byte_end":197448,"line_start":1842,"line_end":1842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197694,"byte_end":197706,"line_start":1853,"line_end":1853,"column_start":8,"column_end":20},"name":"begin_object","qualname":"::ser::Formatter::begin_object","value":"pub fn begin_object<W: ?Sized>(&mut Self, &mut W) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called before every object.  Writes a `{` to the specified\n writer.\n","sig":null,"attributes":[{"value":"/ Called before every object.  Writes a `{` to the specified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197594,"byte_end":197656,"line_start":1850,"line_end":1850,"column_start":5,"column_end":67}},{"value":"/ writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197661,"byte_end":197672,"line_start":1851,"line_end":1851,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197677,"byte_end":197686,"line_start":1852,"line_end":1852,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197943,"byte_end":197953,"line_start":1863,"line_end":1863,"column_start":8,"column_end":18},"name":"end_object","qualname":"::ser::Formatter::end_object","value":"pub fn end_object<W: ?Sized>(&mut Self, &mut W) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called after every object.  Writes a `}` to the specified\n writer.\n","sig":null,"attributes":[{"value":"/ Called after every object.  Writes a `}` to the specified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197844,"byte_end":197905,"line_start":1860,"line_end":1860,"column_start":5,"column_end":66}},{"value":"/ writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197910,"byte_end":197921,"line_start":1861,"line_end":1861,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":197926,"byte_end":197935,"line_start":1862,"line_end":1862,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198148,"byte_end":198164,"line_start":1872,"line_end":1872,"column_start":8,"column_end":24},"name":"begin_object_key","qualname":"::ser::Formatter::begin_object_key","value":"pub fn begin_object_key<W: ?Sized>(&mut Self, &mut W, bool) -> io::Result<()>\nwhere W: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called before every object key.\n","sig":null,"attributes":[{"value":"/ Called before every object key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198091,"byte_end":198126,"line_start":1870,"line_end":1870,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198131,"byte_end":198140,"line_start":1871,"line_end":1871,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198552,"byte_end":198566,"line_start":1887,"line_end":1887,"column_start":8,"column_end":22},"name":"end_object_key","qualname":"::ser::Formatter::end_object_key","value":"pub fn end_object_key<W: ?Sized>(&mut Self, &mut W) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called after every object key.  A `:` should be written to the\n specified writer by either this method or\n `begin_object_value`.\n","sig":null,"attributes":[{"value":"/ Called after every object key.  A `:` should be written to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198384,"byte_end":198450,"line_start":1883,"line_end":1883,"column_start":5,"column_end":71}},{"value":"/ specified writer by either this method or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198455,"byte_end":198500,"line_start":1884,"line_end":1884,"column_start":5,"column_end":50}},{"value":"/ `begin_object_value`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198505,"byte_end":198530,"line_start":1885,"line_end":1885,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198535,"byte_end":198544,"line_start":1886,"line_end":1886,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198856,"byte_end":198874,"line_start":1898,"line_end":1898,"column_start":8,"column_end":26},"name":"begin_object_value","qualname":"::ser::Formatter::begin_object_value","value":"pub fn begin_object_value<W: ?Sized>(&mut Self, &mut W) -> io::Result<()>\nwhere W: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called before every object value.  A `:` should be written to\n the specified writer by either this method or\n `end_object_key`.\n","sig":null,"attributes":[{"value":"/ Called before every object value.  A `:` should be written to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198689,"byte_end":198754,"line_start":1894,"line_end":1894,"column_start":5,"column_end":70}},{"value":"/ the specified writer by either this method or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198759,"byte_end":198808,"line_start":1895,"line_end":1895,"column_start":5,"column_end":54}},{"value":"/ `end_object_key`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198813,"byte_end":198834,"line_start":1896,"line_end":1896,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":198839,"byte_end":198848,"line_start":1897,"line_end":1897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199070,"byte_end":199086,"line_start":1907,"line_end":1907,"column_start":8,"column_end":24},"name":"end_object_value","qualname":"::ser::Formatter::end_object_value","value":"pub fn end_object_value<W: ?Sized>(&mut Self, &mut W) -> io::Result<()> where\nW: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Called after every object value.\n","sig":null,"attributes":[{"value":"/ Called after every object value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199012,"byte_end":199048,"line_start":1905,"line_end":1905,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199053,"byte_end":199062,"line_start":1906,"line_end":1906,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199325,"byte_end":199343,"line_start":1917,"line_end":1917,"column_start":8,"column_end":26},"name":"write_raw_fragment","qualname":"::ser::Formatter::write_raw_fragment","value":"pub fn write_raw_fragment<W: ?Sized>(&mut Self, &mut W, &str)\n-> io::Result<()> where W: io::Write","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Writes a raw JSON fragment that doesn't need any escaping to the\n specified writer.\n","sig":null,"attributes":[{"value":"/ Writes a raw JSON fragment that doesn't need any escaping to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199209,"byte_end":199277,"line_start":1914,"line_end":1914,"column_start":5,"column_end":73}},{"value":"/ specified writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199282,"byte_end":199303,"line_start":1915,"line_end":1915,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199308,"byte_end":199317,"line_start":1916,"line_end":1916,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2140},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199612,"byte_end":199628,"line_start":1927,"line_end":1927,"column_start":12,"column_end":28},"name":"CompactFormatter","qualname":"::ser::CompactFormatter","value":"","parent":null,"children":[],"decl_id":null,"docs":" This structure compacts a JSON value with no extra whitespace.\n","sig":null,"attributes":[{"value":"/ This structure compacts a JSON value with no extra whitespace.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199510,"byte_end":199576,"line_start":1925,"line_end":1925,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2146},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199779,"byte_end":199794,"line_start":1933,"line_end":1933,"column_start":12,"column_end":27},"name":"PrettyFormatter","qualname":"::ser::PrettyFormatter","value":"PrettyFormatter {  }","parent":null,"children":[{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150}],"decl_id":null,"docs":" This structure pretty prints a JSON value to make it human readable.\n","sig":null,"attributes":[{"value":"/ This structure pretty prints a JSON value to make it human readable.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199671,"byte_end":199743,"line_start":1931,"line_end":1931,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":200012,"byte_end":200015,"line_start":1941,"line_end":1941,"column_start":12,"column_end":15},"name":"new","qualname":"<PrettyFormatter>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a pretty printer formatter that defaults to using two spaces for indentation.\n","sig":null,"attributes":[{"value":"/ Construct a pretty printer formatter that defaults to using two spaces for indentation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199909,"byte_end":200000,"line_start":1940,"line_end":1940,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":200182,"byte_end":200193,"line_start":1946,"line_end":1946,"column_start":12,"column_end":23},"name":"with_indent","qualname":"<PrettyFormatter>::with_indent","value":"pub fn with_indent(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a pretty printer formatter that uses the `indent` string for indentation.\n","sig":null,"attributes":[{"value":"/ Construct a pretty printer formatter that uses the `indent` string for indentation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":200083,"byte_end":200170,"line_start":1945,"line_end":1945,"column_start":5,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":980},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":206880,"byte_end":206886,"line_start":2187,"line_end":2187,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::ser::to_vec","value":"pub fn to_vec<T: ?Sized>(&T) -> Result<Vec<u8>> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a JSON byte vector.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a JSON byte vector.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":206646,"byte_end":206707,"line_start":2180,"line_end":2180,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":206708,"byte_end":206711,"line_start":2181,"line_end":2181,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":206712,"byte_end":206724,"line_start":2182,"line_end":2182,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":206725,"byte_end":206728,"line_start":2183,"line_end":2183,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":206729,"byte_end":206805,"line_start":2184,"line_end":2184,"column_start":1,"column_end":77}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":206806,"byte_end":206862,"line_start":2185,"line_end":2185,"column_start":1,"column_end":57}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":206863,"byte_end":206872,"line_start":2186,"line_end":2186,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":982},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207309,"byte_end":207322,"line_start":2203,"line_end":2203,"column_start":8,"column_end":21},"name":"to_vec_pretty","qualname":"::ser::to_vec_pretty","value":"pub fn to_vec_pretty<T: ?Sized>(&T) -> Result<Vec<u8>> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a pretty-printed JSON byte vector.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a pretty-printed JSON byte vector.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207060,"byte_end":207136,"line_start":2196,"line_end":2196,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207137,"byte_end":207140,"line_start":2197,"line_end":2197,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207141,"byte_end":207153,"line_start":2198,"line_end":2198,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207154,"byte_end":207157,"line_start":2199,"line_end":2199,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207158,"byte_end":207234,"line_start":2200,"line_end":2200,"column_start":1,"column_end":77}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207235,"byte_end":207291,"line_start":2201,"line_end":2201,"column_start":1,"column_end":57}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207292,"byte_end":207301,"line_start":2202,"line_end":2202,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":984},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207735,"byte_end":207744,"line_start":2219,"line_end":2219,"column_start":8,"column_end":17},"name":"to_string","qualname":"::ser::to_string","value":"pub fn to_string<T: ?Sized>(&T) -> Result<String> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a String of JSON.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a String of JSON.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207503,"byte_end":207562,"line_start":2212,"line_end":2212,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207563,"byte_end":207566,"line_start":2213,"line_end":2213,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207567,"byte_end":207579,"line_start":2214,"line_end":2214,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207580,"byte_end":207583,"line_start":2215,"line_end":2215,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207584,"byte_end":207660,"line_start":2216,"line_end":2216,"column_start":1,"column_end":77}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207661,"byte_end":207717,"line_start":2217,"line_end":2217,"column_start":1,"column_end":57}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207718,"byte_end":207727,"line_start":2218,"line_end":2218,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":986},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":208227,"byte_end":208243,"line_start":2238,"line_end":2238,"column_start":8,"column_end":24},"name":"to_string_pretty","qualname":"::ser::to_string_pretty","value":"pub fn to_string_pretty<T: ?Sized>(&T) -> Result<String> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a pretty-printed String of JSON.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a pretty-printed String of JSON.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":207980,"byte_end":208054,"line_start":2231,"line_end":2231,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":208055,"byte_end":208058,"line_start":2232,"line_end":2232,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":208059,"byte_end":208071,"line_start":2233,"line_end":2233,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":208072,"byte_end":208075,"line_start":2234,"line_end":2234,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":208076,"byte_end":208152,"line_start":2235,"line_end":2235,"column_start":1,"column_end":77}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":208153,"byte_end":208209,"line_start":2236,"line_end":2236,"column_start":1,"column_end":57}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":208210,"byte_end":208219,"line_start":2237,"line_end":2237,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":990},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::value","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":3098},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":2157},{"krate":0,"index":2182},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1013},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1393},{"krate":0,"index":1437},{"krate":0,"index":1502},{"krate":0,"index":1530},{"krate":0,"index":1696},{"krate":0,"index":1698}],"decl_id":null,"docs":" The Value enum, a loosely typed way of representing any valid JSON value.","sig":null,"attributes":[{"value":"/ The Value enum, a loosely typed way of representing any valid JSON value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208656,"byte_end":208733,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208734,"byte_end":208737,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Constructing JSON","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208738,"byte_end":208761,"line_start":3,"line_end":3,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208762,"byte_end":208765,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Serde JSON provides a [`json!` macro][macro] to build `serde_json::Value`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208766,"byte_end":208843,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ objects with very natural JSON syntax.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208844,"byte_end":208886,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208887,"byte_end":208890,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208891,"byte_end":208898,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208899,"byte_end":208924,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208925,"byte_end":208928,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208929,"byte_end":208944,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     // The type of `john` is `serde_json::Value`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208945,"byte_end":208997,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/     let john = json!({","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":208998,"byte_end":209024,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/         \"name\": \"John Doe\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209025,"byte_end":209056,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/         \"age\": 43,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209057,"byte_end":209079,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/         \"phones\": [","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209080,"byte_end":209103,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/             \"+44 1234567\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209104,"byte_end":209134,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/             \"+44 2345678\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209135,"byte_end":209164,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/         ]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209165,"byte_end":209178,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209179,"byte_end":209190,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209191,"byte_end":209194,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     println!(\"first phone number: {}\", john[\"phones\"][0]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209195,"byte_end":209257,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209258,"byte_end":209261,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     // Convert to a string of JSON and print it out","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209262,"byte_end":209317,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/     println!(\"{}\", john.to_string());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209318,"byte_end":209359,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209360,"byte_end":209365,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209366,"byte_end":209373,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209374,"byte_end":209377,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The `Value::to_string()` function converts a `serde_json::Value` into a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209378,"byte_end":209453,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ `String` of JSON text.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209454,"byte_end":209480,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209481,"byte_end":209484,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ One neat thing about the `json!` macro is that variables and expressions can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209485,"byte_end":209565,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ be interpolated directly into the JSON value as you are building it. Serde","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209566,"byte_end":209644,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ will check at compile time that the value you are interpolating is able to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209645,"byte_end":209723,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ be represented as JSON.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209724,"byte_end":209751,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209752,"byte_end":209755,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209756,"byte_end":209763,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209764,"byte_end":209791,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209792,"byte_end":209797,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # fn random_phone() -> u16 { 0 }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209798,"byte_end":209834,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209835,"byte_end":209840,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ let full_name = \"John Doe\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209841,"byte_end":209872,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ let age_last_year = 42;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209873,"byte_end":209900,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209901,"byte_end":209904,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // The type of `john` is `serde_json::Value`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209905,"byte_end":209953,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ let john = json!({","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209954,"byte_end":209976,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/     \"name\": full_name,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":209977,"byte_end":210003,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/     \"age\": age_last_year + 1,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210004,"byte_end":210037,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/     \"phones\": [","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210038,"byte_end":210057,"line_start":49,"line_end":49,"column_start":1,"column_end":20}},{"value":"/         format!(\"+44 {}\", random_phone())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210058,"byte_end":210103,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/     ]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210104,"byte_end":210113,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210114,"byte_end":210121,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210122,"byte_end":210129,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210130,"byte_end":210133,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A string of JSON data can be parsed into a `serde_json::Value` by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210134,"byte_end":210207,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ [`serde_json::from_str`][from_str] function. There is also","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210208,"byte_end":210270,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/ [`from_slice`][from_slice] for parsing from a byte slice `&[u8]` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210271,"byte_end":210343,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ [`from_reader`][from_reader] for parsing from any `io::Read` like a File or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210344,"byte_end":210423,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ a TCP stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210424,"byte_end":210441,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210442,"byte_end":210445,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210446,"byte_end":210453,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use serde_json::{json, Value, Error};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210454,"byte_end":210495,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210496,"byte_end":210499,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ fn untyped_example() -> Result<(), Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210500,"byte_end":210547,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/     // Some JSON input data as a &str. Maybe this comes from the user.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210548,"byte_end":210622,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/     let data = r#\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210623,"byte_end":210645,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"/         {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210646,"byte_end":210659,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/             \"name\": \"John Doe\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210660,"byte_end":210695,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/             \"age\": 43,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210696,"byte_end":210722,"line_start":69,"line_end":69,"column_start":1,"column_end":27}},{"value":"/             \"phones\": [","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210723,"byte_end":210750,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"/                 \"+44 1234567\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210751,"byte_end":210785,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/                 \"+44 2345678\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210786,"byte_end":210819,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/             ]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210820,"byte_end":210837,"line_start":73,"line_end":73,"column_start":1,"column_end":18}},{"value":"/         }\"#;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210838,"byte_end":210854,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210855,"byte_end":210858,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     // Parse the string of data into serde_json::Value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210859,"byte_end":210918,"line_start":76,"line_end":76,"column_start":1,"column_end":60}},{"value":"/     let v: Value = serde_json::from_str(data)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210919,"byte_end":210970,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210971,"byte_end":210974,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     // Access parts of the data by indexing with square brackets.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":210975,"byte_end":211044,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/     println!(\"Please call {} at the number {}\", v[\"name\"], v[\"phones\"][0]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211045,"byte_end":211124,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211125,"byte_end":211128,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211129,"byte_end":211143,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211144,"byte_end":211149,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211150,"byte_end":211155,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/ # untyped_example().unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211156,"byte_end":211189,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211190,"byte_end":211197,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211198,"byte_end":211201,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [macro]: https://docs.serde.rs/serde_json/macro.json.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211202,"byte_end":211263,"line_start":88,"line_end":88,"column_start":1,"column_end":62}},{"value":"/ [from_str]: https://docs.serde.rs/serde_json/de/fn.from_str.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211264,"byte_end":211332,"line_start":89,"line_end":89,"column_start":1,"column_end":69}},{"value":"/ [from_slice]: https://docs.serde.rs/serde_json/de/fn.from_slice.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211333,"byte_end":211405,"line_start":90,"line_end":90,"column_start":1,"column_end":73}},{"value":"/ [from_reader]: https://docs.serde.rs/serde_json/de/fn.from_reader.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211406,"byte_end":211480,"line_start":91,"line_end":91,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2158},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212103,"byte_end":212107,"line_start":119,"line_end":119,"column_start":5,"column_end":9},"name":"Null","qualname":"::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Represents a JSON null value.","sig":null,"attributes":[{"value":"/ Represents a JSON null value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211962,"byte_end":211995,"line_start":112,"line_end":112,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212000,"byte_end":212003,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212008,"byte_end":212015,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212020,"byte_end":212047,"line_start":115,"line_end":115,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212052,"byte_end":212057,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ let v = json!(null);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212062,"byte_end":212086,"line_start":117,"line_end":117,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212091,"byte_end":212098,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2160},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212252,"byte_end":212256,"line_start":128,"line_end":128,"column_start":5,"column_end":9},"name":"Bool","qualname":"::value::Value::Bool","value":"Value::Bool(bool)","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Represents a JSON boolean.","sig":null,"attributes":[{"value":"/ Represents a JSON boolean.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212114,"byte_end":212144,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212149,"byte_end":212152,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212157,"byte_end":212164,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212169,"byte_end":212196,"line_start":124,"line_end":124,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212201,"byte_end":212206,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ let v = json!(true);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212211,"byte_end":212235,"line_start":126,"line_end":126,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212240,"byte_end":212247,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2163},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212441,"byte_end":212447,"line_start":137,"line_end":137,"column_start":5,"column_end":11},"name":"Number","qualname":"::value::Value::Number","value":"Value::Number(Number)","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Represents a JSON number, whether integer or floating point.","sig":null,"attributes":[{"value":"/ Represents a JSON number, whether integer or floating point.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212269,"byte_end":212333,"line_start":130,"line_end":130,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212338,"byte_end":212341,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212346,"byte_end":212353,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212358,"byte_end":212385,"line_start":133,"line_end":133,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212390,"byte_end":212395,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/ let v = json!(12.5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212400,"byte_end":212424,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212429,"byte_end":212436,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2166},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212605,"byte_end":212611,"line_start":146,"line_end":146,"column_start":5,"column_end":11},"name":"String","qualname":"::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Represents a JSON string.","sig":null,"attributes":[{"value":"/ Represents a JSON string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212462,"byte_end":212491,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212496,"byte_end":212499,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212504,"byte_end":212511,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212516,"byte_end":212543,"line_start":142,"line_end":142,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212548,"byte_end":212553,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ let v = json!(\"a string\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212558,"byte_end":212588,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212593,"byte_end":212600,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2169},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212773,"byte_end":212778,"line_start":155,"line_end":155,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::Value::Array","value":"Value::Array(Vec<Value>)","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Represents a JSON array.","sig":null,"attributes":[{"value":"/ Represents a JSON array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212626,"byte_end":212654,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212659,"byte_end":212662,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212667,"byte_end":212674,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212679,"byte_end":212706,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212711,"byte_end":212716,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ let v = json!([\"an\", \"array\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212721,"byte_end":212756,"line_start":153,"line_end":153,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212761,"byte_end":212768,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2172},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213332,"byte_end":213338,"line_start":170,"line_end":170,"column_start":5,"column_end":11},"name":"Object","qualname":"::value::Value::Object","value":"Value::Object(Map<String, Value>)","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Represents a JSON object.","sig":null,"attributes":[{"value":"/ Represents a JSON object.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212797,"byte_end":212826,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212831,"byte_end":212834,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ By default the map is backed by a BTreeMap. Enable the `preserve_order`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212839,"byte_end":212914,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ feature of serde_json to use IndexMap instead, which preserves","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212919,"byte_end":212985,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/ entries in the order they are inserted into the map. In particular, this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":212990,"byte_end":213066,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ allows JSON data to be deserialized into a Value and serialized to a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213071,"byte_end":213143,"line_start":162,"line_end":162,"column_start":5,"column_end":77}},{"value":"/ string while retaining the order of map keys in the input.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213148,"byte_end":213210,"line_start":163,"line_end":163,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213215,"byte_end":213218,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213223,"byte_end":213230,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213235,"byte_end":213262,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213267,"byte_end":213272,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"an\": \"object\" });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213277,"byte_end":213315,"line_start":168,"line_end":168,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213320,"byte_end":213327,"line_start":169,"line_end":169,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":2157},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211950,"byte_end":211955,"line_start":111,"line_end":111,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"pub enum Value {\n\n    /// Represents a JSON null value.\n    ///\n    /// ```\n    /// # use serde_json::json;\n    /// #\n    /// let v = json!(null);\n    /// ```\n    Null,\n\n    /// Represents a JSON boolean.\n    ///\n    /// ```\n    /// # use serde_json::json;\n    /// #\n    /// let v = json!(true);\n    /// ```\n    Bool(bool),\n\n    /// Represents a JSON number, whether integer or floating point.\n    ///\n    /// ```\n    /// # use serde_json::json;\n    /// #\n    /// let v = json!(12.5);\n    /// ```\n    Number(Number),\n\n    /// Represents a JSON string.\n    ///\n    /// ```\n    /// # use serde_json::json;\n    /// #\n    /// let v = json!(\"a string\");\n    /// ```\n    String(String),\n\n    /// Represents a JSON array.\n    ///\n    /// ```\n    /// # use serde_json::json;\n    /// #\n    /// let v = json!([\"an\", \"array\"]);\n    /// ```\n    Array(Vec<Value>),\n\n    /// Represents a JSON object.\n    ///\n    /// By default the map is backed by a BTreeMap. Enable the `preserve_order`\n    /// feature of serde_json to use IndexMap instead, which preserves\n    /// entries in the order they are inserted into the map. In particular, this\n    /// allows JSON data to be deserialized into a Value and serialized to a\n    /// string while retaining the order of map keys in the input.\n    ///\n    /// ```\n    /// # use serde_json::json;\n    /// #\n    /// let v = json!({ \"an\": \"object\" });\n    /// ```\n    Object(Map<String, Value>),\n}","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2172}],"decl_id":null,"docs":" Represents any valid JSON value.","sig":null,"attributes":[{"value":"/ Represents any valid JSON value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211795,"byte_end":211831,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211832,"byte_end":211835,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ See the `serde_json::value` module documentation for usage examples.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":211836,"byte_end":211908,"line_start":109,"line_end":109,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217559,"byte_end":217562,"line_start":299,"line_end":299,"column_start":12,"column_end":15},"name":"get","qualname":"<Value>::get","value":"pub fn get<I: Index>(&Self, I) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Index into a JSON array or map. A string index can be used to access a\n value in a map, and a usize index can be used to access an element of an\n array.","sig":null,"attributes":[{"value":"/ Index into a JSON array or map. A string index can be used to access a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216143,"byte_end":216217,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ value in a map, and a usize index can be used to access an element of an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216222,"byte_end":216298,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216303,"byte_end":216313,"line_start":263,"line_end":263,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216318,"byte_end":216321,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216326,"byte_end":216397,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216402,"byte_end":216477,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216482,"byte_end":216556,"line_start":267,"line_end":267,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216561,"byte_end":216622,"line_start":268,"line_end":268,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216627,"byte_end":216630,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216635,"byte_end":216642,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216647,"byte_end":216674,"line_start":271,"line_end":271,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216679,"byte_end":216684,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ let object = json!({ \"A\": 65, \"B\": 66, \"C\": 67 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216689,"byte_end":216743,"line_start":273,"line_end":273,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(*object.get(\"A\").unwrap(), json!(65));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216748,"byte_end":216801,"line_start":274,"line_end":274,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216806,"byte_end":216809,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let array = json!([ \"A\", \"B\", \"C\" ]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216814,"byte_end":216855,"line_start":276,"line_end":276,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(*array.get(2).unwrap(), json!(\"C\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216860,"byte_end":216911,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216916,"byte_end":216919,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(array.get(\"A\"), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216924,"byte_end":216961,"line_start":279,"line_end":279,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216966,"byte_end":216973,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216978,"byte_end":216981,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Square brackets can also be used to index into a value in a more concise","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216986,"byte_end":217062,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ way. This returns `Value::Null` in cases where `get` would have returned","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217067,"byte_end":217143,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ `None`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217148,"byte_end":217159,"line_start":284,"line_end":284,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217164,"byte_end":217167,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217172,"byte_end":217179,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217184,"byte_end":217211,"line_start":287,"line_end":287,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217216,"byte_end":217221,"line_start":288,"line_end":288,"column_start":5,"column_end":10}},{"value":"/ let object = json!({","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217226,"byte_end":217250,"line_start":289,"line_end":289,"column_start":5,"column_end":29}},{"value":"/     \"A\": [\"a\", \"á\", \"à\"],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217255,"byte_end":217286,"line_start":290,"line_end":290,"column_start":5,"column_end":34}},{"value":"/     \"B\": [\"b\", \"b́\"],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217291,"byte_end":217317,"line_start":291,"line_end":291,"column_start":5,"column_end":30}},{"value":"/     \"C\": [\"c\", \"ć\", \"ć̣\", \"ḉ\"],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217322,"byte_end":217362,"line_start":292,"line_end":292,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217367,"byte_end":217374,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(object[\"B\"][0], json!(\"b\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217379,"byte_end":217422,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217427,"byte_end":217430,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(object[\"D\"], json!(null));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217435,"byte_end":217476,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(object[0][\"x\"][\"y\"][\"z\"], json!(null));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217481,"byte_end":217535,"line_start":297,"line_end":297,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217540,"byte_end":217547,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218446,"byte_end":218453,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Value>::get_mut","value":"pub fn get_mut<I: Index>(&mut Self, I) -> Option<&mut Value>","parent":null,"children":[],"decl_id":null,"docs":" Mutably index into a JSON array or map. A string index can be used to\n access a value in a map, and a usize index can be used to access an\n element of an array.","sig":null,"attributes":[{"value":"/ Mutably index into a JSON array or map. A string index can be used to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217652,"byte_end":217725,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/ access a value in a map, and a usize index can be used to access an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217730,"byte_end":217801,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ element of an array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217806,"byte_end":217830,"line_start":305,"line_end":305,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217835,"byte_end":217838,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217843,"byte_end":217914,"line_start":307,"line_end":307,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217919,"byte_end":217994,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":217999,"byte_end":218073,"line_start":309,"line_end":309,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218078,"byte_end":218139,"line_start":310,"line_end":310,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218144,"byte_end":218147,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218152,"byte_end":218159,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218164,"byte_end":218191,"line_start":313,"line_end":313,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218196,"byte_end":218201,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ let mut object = json!({ \"A\": 65, \"B\": 66, \"C\": 67 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218206,"byte_end":218264,"line_start":315,"line_end":315,"column_start":5,"column_end":63}},{"value":"/ *object.get_mut(\"A\").unwrap() = json!(69);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218269,"byte_end":218315,"line_start":316,"line_end":316,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218320,"byte_end":218323,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let mut array = json!([ \"A\", \"B\", \"C\" ]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218328,"byte_end":218373,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/ *array.get_mut(2).unwrap() = json!(\"D\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218378,"byte_end":218422,"line_start":319,"line_end":319,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218427,"byte_end":218434,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219124,"byte_end":219133,"line_start":342,"line_end":342,"column_start":12,"column_end":21},"name":"is_object","qualname":"<Value>::is_object","value":"pub fn is_object(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Value` is an Object. Returns false otherwise.","sig":null,"attributes":[{"value":"/ Returns true if the `Value` is an Object. Returns false otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218555,"byte_end":218625,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218630,"byte_end":218633,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ For any Value on which `is_object` returns true, `as_object` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218638,"byte_end":218706,"line_start":327,"line_end":327,"column_start":5,"column_end":73}},{"value":"/ `as_object_mut` are guaranteed to return the map representation of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218711,"byte_end":218785,"line_start":328,"line_end":328,"column_start":5,"column_end":79}},{"value":"/ object.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218790,"byte_end":218801,"line_start":329,"line_end":329,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218806,"byte_end":218809,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218814,"byte_end":218821,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218826,"byte_end":218853,"line_start":332,"line_end":332,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218858,"byte_end":218863,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ let obj = json!({ \"a\": { \"nested\": true }, \"b\": [\"an\", \"array\"] });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218868,"byte_end":218939,"line_start":334,"line_end":334,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218944,"byte_end":218947,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ assert!(obj.is_object());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218952,"byte_end":218981,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/ assert!(obj[\"a\"].is_object());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":218986,"byte_end":219020,"line_start":337,"line_end":337,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219025,"byte_end":219028,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ // array, not an object","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219033,"byte_end":219060,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/ assert!(!obj[\"b\"].is_object());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219065,"byte_end":219100,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219105,"byte_end":219112,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219682,"byte_end":219691,"line_start":360,"line_end":360,"column_start":12,"column_end":21},"name":"as_object","qualname":"<Value>::as_object","value":"pub fn as_object(&Self) -> Option<&Map<String, Value>>","parent":null,"children":[],"decl_id":null,"docs":" If the `Value` is an Object, returns the associated Map. Returns None\n otherwise.","sig":null,"attributes":[{"value":"/ If the `Value` is an Object, returns the associated Map. Returns None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219197,"byte_end":219270,"line_start":346,"line_end":346,"column_start":5,"column_end":78}},{"value":"/ otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219275,"byte_end":219289,"line_start":347,"line_end":347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219294,"byte_end":219297,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219302,"byte_end":219309,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219314,"byte_end":219341,"line_start":350,"line_end":350,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219346,"byte_end":219351,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": { \"nested\": true }, \"b\": [\"an\", \"array\"] });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219356,"byte_end":219425,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219430,"byte_end":219433,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ // The length of `{\"nested\": true}` is 1 entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219438,"byte_end":219489,"line_start":354,"line_end":354,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(v[\"a\"].as_object().unwrap().len(), 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219494,"byte_end":219547,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219552,"byte_end":219555,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ // The array `[\"an\", \"array\"]` is not an object.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219560,"byte_end":219612,"line_start":357,"line_end":357,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(v[\"b\"].as_object(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219617,"byte_end":219658,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219663,"byte_end":219670,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220189,"byte_end":220202,"line_start":378,"line_end":378,"column_start":12,"column_end":25},"name":"as_object_mut","qualname":"<Value>::as_object_mut","value":"pub fn as_object_mut(&mut Self) -> Option<&mut Map<String, Value>>","parent":null,"children":[],"decl_id":null,"docs":" If the `Value` is an Object, returns the associated mutable Map.\n Returns None otherwise.","sig":null,"attributes":[{"value":"/ If the `Value` is an Object, returns the associated mutable Map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219847,"byte_end":219915,"line_start":367,"line_end":367,"column_start":5,"column_end":73}},{"value":"/ Returns None otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219920,"byte_end":219947,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219952,"byte_end":219955,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219960,"byte_end":219967,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":219972,"byte_end":219999,"line_start":371,"line_end":371,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220004,"byte_end":220009,"line_start":372,"line_end":372,"column_start":5,"column_end":10}},{"value":"/ let mut v = json!({ \"a\": { \"nested\": true } });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220014,"byte_end":220065,"line_start":373,"line_end":373,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220070,"byte_end":220073,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ v[\"a\"].as_object_mut().unwrap().clear();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220078,"byte_end":220122,"line_start":375,"line_end":375,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, json!({ \"a\": {} }));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220127,"byte_end":220165,"line_start":376,"line_end":376,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220170,"byte_end":220177,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220899,"byte_end":220907,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Value>::is_array","value":"pub fn is_array(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Value` is an Array. Returns false otherwise.","sig":null,"attributes":[{"value":"/ Returns true if the `Value` is an Array. Returns false otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220370,"byte_end":220439,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220444,"byte_end":220447,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ For any Value on which `is_array` returns true, `as_array` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220452,"byte_end":220518,"line_start":387,"line_end":387,"column_start":5,"column_end":71}},{"value":"/ `as_array_mut` are guaranteed to return the vector representing the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220523,"byte_end":220594,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/ array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220599,"byte_end":220609,"line_start":389,"line_end":389,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220614,"byte_end":220617,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220622,"byte_end":220629,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220634,"byte_end":220661,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220666,"byte_end":220671,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/ let obj = json!({ \"a\": [\"an\", \"array\"], \"b\": { \"an\": \"object\" } });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220676,"byte_end":220747,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220752,"byte_end":220755,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ assert!(obj[\"a\"].is_array());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220760,"byte_end":220793,"line_start":396,"line_end":396,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220798,"byte_end":220801,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ // an object, not an array","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220806,"byte_end":220836,"line_start":398,"line_end":398,"column_start":5,"column_end":35}},{"value":"/ assert!(!obj[\"b\"].is_array());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220841,"byte_end":220875,"line_start":399,"line_end":399,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220880,"byte_end":220887,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221458,"byte_end":221466,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Value>::as_array","value":"pub fn as_array(&Self) -> Option<&Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" If the `Value` is an Array, returns the associated vector. Returns None\n otherwise.","sig":null,"attributes":[{"value":"/ If the `Value` is an Array, returns the associated vector. Returns None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":220970,"byte_end":221045,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221050,"byte_end":221064,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221069,"byte_end":221072,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221077,"byte_end":221084,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221089,"byte_end":221116,"line_start":409,"line_end":409,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221121,"byte_end":221126,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": [\"an\", \"array\"], \"b\": { \"an\": \"object\" } });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221131,"byte_end":221200,"line_start":411,"line_end":411,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221205,"byte_end":221208,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ // The length of `[\"an\", \"array\"]` is 2 elements.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221213,"byte_end":221266,"line_start":413,"line_end":413,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(v[\"a\"].as_array().unwrap().len(), 2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221271,"byte_end":221323,"line_start":414,"line_end":414,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221328,"byte_end":221331,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ // The object `{\"an\": \"object\"}` is not an array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221336,"byte_end":221389,"line_start":416,"line_end":416,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(v[\"b\"].as_array(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221394,"byte_end":221434,"line_start":417,"line_end":417,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221439,"byte_end":221446,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221959,"byte_end":221971,"line_start":437,"line_end":437,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Value>::as_array_mut","value":"pub fn as_array_mut(&mut Self) -> Option<&mut Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" If the `Value` is an Array, returns the associated mutable vector.\n Returns None otherwise.","sig":null,"attributes":[{"value":"/ If the `Value` is an Array, returns the associated mutable vector.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221619,"byte_end":221689,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/ Returns None otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221694,"byte_end":221721,"line_start":427,"line_end":427,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221726,"byte_end":221729,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221734,"byte_end":221741,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221746,"byte_end":221773,"line_start":430,"line_end":430,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221778,"byte_end":221783,"line_start":431,"line_end":431,"column_start":5,"column_end":10}},{"value":"/ let mut v = json!({ \"a\": [\"an\", \"array\"] });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221788,"byte_end":221836,"line_start":432,"line_end":432,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221841,"byte_end":221844,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ v[\"a\"].as_array_mut().unwrap().clear();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221849,"byte_end":221892,"line_start":434,"line_end":434,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(v, json!({ \"a\": [] }));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221897,"byte_end":221935,"line_start":435,"line_end":435,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":221940,"byte_end":221947,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222609,"byte_end":222618,"line_start":459,"line_end":459,"column_start":12,"column_end":21},"name":"is_string","qualname":"<Value>::is_string","value":"pub fn is_string(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Value` is a String. Returns false otherwise.","sig":null,"attributes":[{"value":"/ Returns true if the `Value` is a String. Returns false otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222132,"byte_end":222201,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222206,"byte_end":222209,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ For any Value on which `is_string` returns true, `as_str` is guaranteed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222214,"byte_end":222289,"line_start":446,"line_end":446,"column_start":5,"column_end":80}},{"value":"/ to return the string slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222294,"byte_end":222325,"line_start":447,"line_end":447,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222330,"byte_end":222333,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222338,"byte_end":222345,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222350,"byte_end":222377,"line_start":450,"line_end":450,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222382,"byte_end":222387,"line_start":451,"line_end":451,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": \"some string\", \"b\": false });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222392,"byte_end":222446,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222451,"byte_end":222454,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ assert!(v[\"a\"].is_string());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222459,"byte_end":222491,"line_start":454,"line_end":454,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222496,"byte_end":222499,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ // The boolean `false` is not a string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222504,"byte_end":222547,"line_start":456,"line_end":456,"column_start":5,"column_end":48}},{"value":"/ assert!(!v[\"b\"].is_string());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222552,"byte_end":222585,"line_start":457,"line_end":457,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222590,"byte_end":222597,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223447,"byte_end":223453,"line_start":486,"line_end":486,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If the `Value` is a String, returns the associated str. Returns None\n otherwise.","sig":null,"attributes":[{"value":"/ If the `Value` is a String, returns the associated str. Returns None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222679,"byte_end":222751,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222756,"byte_end":222770,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222775,"byte_end":222778,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222783,"byte_end":222790,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222795,"byte_end":222822,"line_start":467,"line_end":467,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222827,"byte_end":222832,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": \"some string\", \"b\": false });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222837,"byte_end":222891,"line_start":469,"line_end":469,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222896,"byte_end":222899,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v[\"a\"].as_str(), Some(\"some string\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222904,"byte_end":222957,"line_start":471,"line_end":471,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222962,"byte_end":222965,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ // The boolean `false` is not a string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":222970,"byte_end":223013,"line_start":473,"line_end":473,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(v[\"b\"].as_str(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223018,"byte_end":223056,"line_start":474,"line_end":474,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223061,"byte_end":223064,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ // JSON values are printed in JSON representation, so strings are in quotes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223069,"byte_end":223149,"line_start":476,"line_end":476,"column_start":5,"column_end":85}},{"value":"/ //","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223154,"byte_end":223160,"line_start":477,"line_end":477,"column_start":5,"column_end":11}},{"value":"/ //    The value is: \"some string\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223165,"byte_end":223202,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/ println!(\"The value is: {}\", v[\"a\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223207,"byte_end":223248,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223253,"byte_end":223256,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ // Rust strings are printed without quotes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223261,"byte_end":223308,"line_start":481,"line_end":481,"column_start":5,"column_end":52}},{"value":"/ //","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223313,"byte_end":223319,"line_start":482,"line_end":482,"column_start":5,"column_end":11}},{"value":"/ //    The value is: some string","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223324,"byte_end":223359,"line_start":483,"line_end":483,"column_start":5,"column_end":40}},{"value":"/ println!(\"The value is: {}\", v[\"a\"].as_str().unwrap());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223364,"byte_end":223423,"line_start":484,"line_end":484,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223428,"byte_end":223435,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223936,"byte_end":223945,"line_start":505,"line_end":505,"column_start":12,"column_end":21},"name":"is_number","qualname":"<Value>::is_number","value":"pub fn is_number(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Value` is a Number. Returns false otherwise.","sig":null,"attributes":[{"value":"/ Returns true if the `Value` is a Number. Returns false otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223590,"byte_end":223659,"line_start":493,"line_end":493,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223664,"byte_end":223667,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223672,"byte_end":223679,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223684,"byte_end":223711,"line_start":496,"line_end":496,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223716,"byte_end":223721,"line_start":497,"line_end":497,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": 1, \"b\": \"2\" });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223726,"byte_end":223766,"line_start":498,"line_end":498,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223771,"byte_end":223774,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ assert!(v[\"a\"].is_number());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223779,"byte_end":223811,"line_start":500,"line_end":500,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223816,"byte_end":223819,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ // The string `\"2\"` is a string, not a number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223824,"byte_end":223874,"line_start":502,"line_end":502,"column_start":5,"column_end":55}},{"value":"/ assert!(!v[\"b\"].is_number());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223879,"byte_end":223912,"line_start":503,"line_end":503,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":223917,"byte_end":223924,"line_start":504,"line_end":504,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224701,"byte_end":224707,"line_start":532,"line_end":532,"column_start":12,"column_end":18},"name":"is_i64","qualname":"<Value>::is_i64","value":"pub fn is_i64(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Value` is an integer between `i64::MIN` and\n `i64::MAX`.","sig":null,"attributes":[{"value":"/ Returns true if the `Value` is an integer between `i64::MIN` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224068,"byte_end":224136,"line_start":512,"line_end":512,"column_start":5,"column_end":73}},{"value":"/ `i64::MAX`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224141,"byte_end":224156,"line_start":513,"line_end":513,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224161,"byte_end":224164,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ For any Value on which `is_i64` returns true, `as_i64` is guaranteed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224169,"byte_end":224244,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ return the integer value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224249,"byte_end":224278,"line_start":516,"line_end":516,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224283,"byte_end":224286,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224291,"byte_end":224298,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224303,"byte_end":224330,"line_start":519,"line_end":519,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224335,"byte_end":224340,"line_start":520,"line_end":520,"column_start":5,"column_end":10}},{"value":"/ let big = i64::max_value() as u64 + 10;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224345,"byte_end":224388,"line_start":521,"line_end":521,"column_start":5,"column_end":48}},{"value":"/ let v = json!({ \"a\": 64, \"b\": big, \"c\": 256.0 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224393,"byte_end":224446,"line_start":522,"line_end":522,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224451,"byte_end":224454,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ assert!(v[\"a\"].is_i64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224459,"byte_end":224488,"line_start":524,"line_end":524,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224493,"byte_end":224496,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // Greater than i64::MAX.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224501,"byte_end":224530,"line_start":526,"line_end":526,"column_start":5,"column_end":34}},{"value":"/ assert!(!v[\"b\"].is_i64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224535,"byte_end":224565,"line_start":527,"line_end":527,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224570,"byte_end":224573,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ // Numbers with a decimal point are not considered integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224578,"byte_end":224642,"line_start":529,"line_end":529,"column_start":5,"column_end":69}},{"value":"/ assert!(!v[\"c\"].is_i64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224647,"byte_end":224677,"line_start":530,"line_end":530,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224682,"byte_end":224689,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225406,"byte_end":225412,"line_start":557,"line_end":557,"column_start":12,"column_end":18},"name":"is_u64","qualname":"<Value>::is_u64","value":"pub fn is_u64(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Value` is an integer between zero and `u64::MAX`.","sig":null,"attributes":[{"value":"/ Returns true if the `Value` is an integer between zero and `u64::MAX`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224840,"byte_end":224914,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224919,"byte_end":224922,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ For any Value on which `is_u64` returns true, `as_u64` is guaranteed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":224927,"byte_end":225002,"line_start":541,"line_end":541,"column_start":5,"column_end":80}},{"value":"/ return the integer value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225007,"byte_end":225036,"line_start":542,"line_end":542,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225041,"byte_end":225044,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225049,"byte_end":225056,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225061,"byte_end":225088,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225093,"byte_end":225098,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": 64, \"b\": -64, \"c\": 256.0 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225103,"byte_end":225156,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225161,"byte_end":225164,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ assert!(v[\"a\"].is_u64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225169,"byte_end":225198,"line_start":549,"line_end":549,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225203,"byte_end":225206,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ // Negative integer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225211,"byte_end":225235,"line_start":551,"line_end":551,"column_start":5,"column_end":29}},{"value":"/ assert!(!v[\"b\"].is_u64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225240,"byte_end":225270,"line_start":552,"line_end":552,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225275,"byte_end":225278,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ // Numbers with a decimal point are not considered integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225283,"byte_end":225347,"line_start":554,"line_end":554,"column_start":5,"column_end":69}},{"value":"/ assert!(!v[\"c\"].is_u64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225352,"byte_end":225382,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225387,"byte_end":225394,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226193,"byte_end":226199,"line_start":583,"line_end":583,"column_start":12,"column_end":18},"name":"is_f64","qualname":"<Value>::is_f64","value":"pub fn is_f64(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Value` is a number that can be represented by f64.","sig":null,"attributes":[{"value":"/ Returns true if the `Value` is a number that can be represented by f64.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225545,"byte_end":225620,"line_start":564,"line_end":564,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225625,"byte_end":225628,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ For any Value on which `is_f64` returns true, `as_f64` is guaranteed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225633,"byte_end":225708,"line_start":566,"line_end":566,"column_start":5,"column_end":80}},{"value":"/ return the floating point value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225713,"byte_end":225749,"line_start":567,"line_end":567,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225754,"byte_end":225757,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Currently this function returns true if and only if both `is_i64` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225762,"byte_end":225835,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ `is_u64` return false but this is not a guarantee in the future.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225840,"byte_end":225908,"line_start":570,"line_end":570,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225913,"byte_end":225916,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225921,"byte_end":225928,"line_start":572,"line_end":572,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225933,"byte_end":225960,"line_start":573,"line_end":573,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225965,"byte_end":225970,"line_start":574,"line_end":574,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": 256.0, \"b\": 64, \"c\": -64 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":225975,"byte_end":226028,"line_start":575,"line_end":575,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226033,"byte_end":226036,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ assert!(v[\"a\"].is_f64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226041,"byte_end":226070,"line_start":577,"line_end":577,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226075,"byte_end":226078,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ // Integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226083,"byte_end":226099,"line_start":579,"line_end":579,"column_start":5,"column_end":21}},{"value":"/ assert!(!v[\"b\"].is_f64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226104,"byte_end":226134,"line_start":580,"line_end":580,"column_start":5,"column_end":35}},{"value":"/ assert!(!v[\"c\"].is_f64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226139,"byte_end":226169,"line_start":581,"line_end":581,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226174,"byte_end":226181,"line_start":582,"line_end":582,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226763,"byte_end":226769,"line_start":603,"line_end":603,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<Value>::as_i64","value":"pub fn as_i64(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" If the `Value` is an integer, represent it as i64 if possible. Returns\n None otherwise.","sig":null,"attributes":[{"value":"/ If the `Value` is an integer, represent it as i64 if possible. Returns","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226332,"byte_end":226406,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ None otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226411,"byte_end":226430,"line_start":591,"line_end":591,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226435,"byte_end":226438,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226443,"byte_end":226450,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226455,"byte_end":226482,"line_start":594,"line_end":594,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226487,"byte_end":226492,"line_start":595,"line_end":595,"column_start":5,"column_end":10}},{"value":"/ let big = i64::max_value() as u64 + 10;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226497,"byte_end":226540,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/ let v = json!({ \"a\": 64, \"b\": big, \"c\": 256.0 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226545,"byte_end":226598,"line_start":597,"line_end":597,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226603,"byte_end":226606,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v[\"a\"].as_i64(), Some(64));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226611,"byte_end":226653,"line_start":599,"line_end":599,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(v[\"b\"].as_i64(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226658,"byte_end":226696,"line_start":600,"line_end":600,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(v[\"c\"].as_i64(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226701,"byte_end":226739,"line_start":601,"line_end":601,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226744,"byte_end":226751,"line_start":602,"line_end":602,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227291,"byte_end":227297,"line_start":622,"line_end":622,"column_start":12,"column_end":18},"name":"as_u64","qualname":"<Value>::as_u64","value":"pub fn as_u64(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" If the `Value` is an integer, represent it as u64 if possible. Returns\n None otherwise.","sig":null,"attributes":[{"value":"/ If the `Value` is an integer, represent it as u64 if possible. Returns","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226908,"byte_end":226982,"line_start":610,"line_end":610,"column_start":5,"column_end":79}},{"value":"/ None otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":226987,"byte_end":227006,"line_start":611,"line_end":611,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227011,"byte_end":227014,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227019,"byte_end":227026,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227031,"byte_end":227058,"line_start":614,"line_end":614,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227063,"byte_end":227068,"line_start":615,"line_end":615,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": 64, \"b\": -64, \"c\": 256.0 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227073,"byte_end":227126,"line_start":616,"line_end":616,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227131,"byte_end":227134,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v[\"a\"].as_u64(), Some(64));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227139,"byte_end":227181,"line_start":618,"line_end":618,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(v[\"b\"].as_u64(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227186,"byte_end":227224,"line_start":619,"line_end":619,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(v[\"c\"].as_u64(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227229,"byte_end":227267,"line_start":620,"line_end":620,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227272,"byte_end":227279,"line_start":621,"line_end":621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227833,"byte_end":227839,"line_start":641,"line_end":641,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<Value>::as_f64","value":"pub fn as_f64(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" If the `Value` is a number, represent it as f64 if possible. Returns\n None otherwise.","sig":null,"attributes":[{"value":"/ If the `Value` is a number, represent it as f64 if possible. Returns","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227436,"byte_end":227508,"line_start":629,"line_end":629,"column_start":5,"column_end":77}},{"value":"/ None otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227513,"byte_end":227532,"line_start":630,"line_end":630,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227537,"byte_end":227540,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227545,"byte_end":227552,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227557,"byte_end":227584,"line_start":633,"line_end":633,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227589,"byte_end":227594,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": 256.0, \"b\": 64, \"c\": -64 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227599,"byte_end":227652,"line_start":635,"line_end":635,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227657,"byte_end":227660,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v[\"a\"].as_f64(), Some(256.0));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227665,"byte_end":227710,"line_start":637,"line_end":637,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(v[\"b\"].as_f64(), Some(64.0));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227715,"byte_end":227759,"line_start":638,"line_end":638,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v[\"c\"].as_f64(), Some(-64.0));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227764,"byte_end":227809,"line_start":639,"line_end":639,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227814,"byte_end":227821,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228467,"byte_end":228477,"line_start":663,"line_end":663,"column_start":12,"column_end":22},"name":"is_boolean","qualname":"<Value>::is_boolean","value":"pub fn is_boolean(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Value` is a Boolean. Returns false otherwise.","sig":null,"attributes":[{"value":"/ Returns true if the `Value` is a Boolean. Returns false otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":227978,"byte_end":228048,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228053,"byte_end":228056,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ For any Value on which `is_boolean` returns true, `as_bool` is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228061,"byte_end":228127,"line_start":650,"line_end":650,"column_start":5,"column_end":71}},{"value":"/ guaranteed to return the boolean value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228132,"byte_end":228175,"line_start":651,"line_end":651,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228180,"byte_end":228183,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228188,"byte_end":228195,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228200,"byte_end":228227,"line_start":654,"line_end":654,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228232,"byte_end":228237,"line_start":655,"line_end":655,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": false, \"b\": \"false\" });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228242,"byte_end":228290,"line_start":656,"line_end":656,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228295,"byte_end":228298,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ assert!(v[\"a\"].is_boolean());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228303,"byte_end":228336,"line_start":658,"line_end":658,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228341,"byte_end":228344,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ // The string `\"false\"` is a string, not a boolean.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228349,"byte_end":228404,"line_start":660,"line_end":660,"column_start":5,"column_end":60}},{"value":"/ assert!(!v[\"b\"].is_boolean());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228409,"byte_end":228443,"line_start":661,"line_end":661,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228448,"byte_end":228455,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228942,"byte_end":228949,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Value>::as_bool","value":"pub fn as_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" If the `Value` is a Boolean, returns the associated bool. Returns None\n otherwise.","sig":null,"attributes":[{"value":"/ If the `Value` is a Boolean, returns the associated bool. Returns None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228539,"byte_end":228613,"line_start":667,"line_end":667,"column_start":5,"column_end":79}},{"value":"/ otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228618,"byte_end":228632,"line_start":668,"line_end":668,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228637,"byte_end":228640,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228645,"byte_end":228652,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228657,"byte_end":228684,"line_start":671,"line_end":671,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228689,"byte_end":228694,"line_start":672,"line_end":672,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": false, \"b\": \"false\" });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228699,"byte_end":228747,"line_start":673,"line_end":673,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228752,"byte_end":228755,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v[\"a\"].as_bool(), Some(false));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228760,"byte_end":228806,"line_start":675,"line_end":675,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228811,"byte_end":228814,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ // The string `\"false\"` is a string, not a boolean.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228819,"byte_end":228874,"line_start":677,"line_end":677,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(v[\"b\"].as_bool(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228879,"byte_end":228918,"line_start":678,"line_end":678,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":228923,"byte_end":228930,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229531,"byte_end":229538,"line_start":702,"line_end":702,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Value>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Value` is a Null. Returns false otherwise.","sig":null,"attributes":[{"value":"/ Returns true if the `Value` is a Null. Returns false otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229080,"byte_end":229147,"line_start":687,"line_end":687,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229152,"byte_end":229155,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ For any Value on which `is_null` returns true, `as_null` is guaranteed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229160,"byte_end":229234,"line_start":689,"line_end":689,"column_start":5,"column_end":79}},{"value":"/ to return `Some(())`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229239,"byte_end":229264,"line_start":690,"line_end":690,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229269,"byte_end":229272,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229277,"byte_end":229284,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229289,"byte_end":229316,"line_start":693,"line_end":693,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229321,"byte_end":229326,"line_start":694,"line_end":694,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": null, \"b\": false });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229331,"byte_end":229376,"line_start":695,"line_end":695,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229381,"byte_end":229384,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ assert!(v[\"a\"].is_null());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229389,"byte_end":229419,"line_start":697,"line_end":697,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229424,"byte_end":229427,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ // The boolean `false` is not null.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229432,"byte_end":229471,"line_start":699,"line_end":699,"column_start":5,"column_end":44}},{"value":"/ assert!(!v[\"b\"].is_null());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229476,"byte_end":229507,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229512,"byte_end":229519,"line_start":701,"line_end":701,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229953,"byte_end":229960,"line_start":718,"line_end":718,"column_start":12,"column_end":19},"name":"as_null","qualname":"<Value>::as_null","value":"pub fn as_null(&Self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" If the `Value` is a Null, returns (). Returns None otherwise.","sig":null,"attributes":[{"value":"/ If the `Value` is a Null, returns (). Returns None otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229600,"byte_end":229665,"line_start":706,"line_end":706,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229670,"byte_end":229673,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229678,"byte_end":229685,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229690,"byte_end":229717,"line_start":709,"line_end":709,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229722,"byte_end":229727,"line_start":710,"line_end":710,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": null, \"b\": false });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229732,"byte_end":229777,"line_start":711,"line_end":711,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229782,"byte_end":229785,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v[\"a\"].as_null(), Some(()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229790,"byte_end":229833,"line_start":713,"line_end":713,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229838,"byte_end":229841,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ // The boolean `false` is not null.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229846,"byte_end":229885,"line_start":715,"line_end":715,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(v[\"b\"].as_null(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229890,"byte_end":229929,"line_start":716,"line_end":716,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":229934,"byte_end":229941,"line_start":717,"line_end":717,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230969,"byte_end":230976,"line_start":751,"line_end":751,"column_start":12,"column_end":19},"name":"pointer","qualname":"<Value>::pointer","value":"pub fn pointer(&Self, &str) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Looks up a value by a JSON Pointer.","sig":null,"attributes":[{"value":"/ Looks up a value by a JSON Pointer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230087,"byte_end":230126,"line_start":725,"line_end":725,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230131,"byte_end":230134,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ JSON Pointer defines a string syntax for identifying a specific value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230139,"byte_end":230212,"line_start":727,"line_end":727,"column_start":5,"column_end":78}},{"value":"/ within a JavaScript Object Notation (JSON) document.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230217,"byte_end":230273,"line_start":728,"line_end":728,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230278,"byte_end":230281,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ A Pointer is a Unicode string with the reference tokens separated by `/`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230286,"byte_end":230363,"line_start":730,"line_end":730,"column_start":5,"column_end":82}},{"value":"/ Inside tokens `/` is replaced by `~1` and `~` is replaced by `~0`. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230368,"byte_end":230442,"line_start":731,"line_end":731,"column_start":5,"column_end":79}},{"value":"/ addressed value is returned and if there is no such value `None` is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230447,"byte_end":230518,"line_start":732,"line_end":732,"column_start":5,"column_end":76}},{"value":"/ returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230523,"byte_end":230536,"line_start":733,"line_end":733,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230541,"byte_end":230544,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ For more information read [RFC6901](https://tools.ietf.org/html/rfc6901).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230549,"byte_end":230626,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230631,"byte_end":230634,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230639,"byte_end":230653,"line_start":737,"line_end":737,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230658,"byte_end":230661,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230666,"byte_end":230673,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230678,"byte_end":230705,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230710,"byte_end":230715,"line_start":741,"line_end":741,"column_start":5,"column_end":10}},{"value":"/ let data = json!({","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230720,"byte_end":230742,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/     \"x\": {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230747,"byte_end":230761,"line_start":743,"line_end":743,"column_start":5,"column_end":19}},{"value":"/         \"y\": [\"z\", \"zz\"]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230766,"byte_end":230794,"line_start":744,"line_end":744,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230799,"byte_end":230808,"line_start":745,"line_end":745,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230813,"byte_end":230820,"line_start":746,"line_end":746,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230825,"byte_end":230828,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(data.pointer(\"/x/y/1\").unwrap(), &json!(\"zz\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230833,"byte_end":230895,"line_start":748,"line_end":748,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(data.pointer(\"/a/b/c\"), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230900,"byte_end":230945,"line_start":749,"line_end":749,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":230950,"byte_end":230957,"line_start":750,"line_end":750,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":233365,"byte_end":233376,"line_start":816,"line_end":816,"column_start":12,"column_end":23},"name":"pointer_mut","qualname":"<Value>::pointer_mut","value":"pub fn pointer_mut(&mut Self, &str) -> Option<&mut Value>","parent":null,"children":[],"decl_id":null,"docs":" Looks up a value by a JSON Pointer and returns a mutable reference to\n that value.","sig":null,"attributes":[{"value":"/ Looks up a value by a JSON Pointer and returns a mutable reference to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":231783,"byte_end":231856,"line_start":779,"line_end":779,"column_start":5,"column_end":78}},{"value":"/ that value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":231861,"byte_end":231876,"line_start":780,"line_end":780,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":231881,"byte_end":231884,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ JSON Pointer defines a string syntax for identifying a specific value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":231889,"byte_end":231962,"line_start":782,"line_end":782,"column_start":5,"column_end":78}},{"value":"/ within a JavaScript Object Notation (JSON) document.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":231967,"byte_end":232023,"line_start":783,"line_end":783,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232028,"byte_end":232031,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ A Pointer is a Unicode string with the reference tokens separated by `/`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232036,"byte_end":232113,"line_start":785,"line_end":785,"column_start":5,"column_end":82}},{"value":"/ Inside tokens `/` is replaced by `~1` and `~` is replaced by `~0`. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232118,"byte_end":232192,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/ addressed value is returned and if there is no such value `None` is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232197,"byte_end":232268,"line_start":787,"line_end":787,"column_start":5,"column_end":76}},{"value":"/ returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232273,"byte_end":232286,"line_start":788,"line_end":788,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232291,"byte_end":232294,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ For more information read [RFC6901](https://tools.ietf.org/html/rfc6901).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232299,"byte_end":232376,"line_start":790,"line_end":790,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232381,"byte_end":232384,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Example of Use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232389,"byte_end":232409,"line_start":792,"line_end":792,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232414,"byte_end":232417,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232422,"byte_end":232429,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ use serde_json::Value;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232434,"byte_end":232460,"line_start":795,"line_end":795,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232465,"byte_end":232468,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232473,"byte_end":232488,"line_start":797,"line_end":797,"column_start":5,"column_end":20}},{"value":"/     let s = r#\"{\"x\": 1.0, \"y\": 2.0}\"#;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232493,"byte_end":232535,"line_start":798,"line_end":798,"column_start":5,"column_end":47}},{"value":"/     let mut value: Value = serde_json::from_str(s).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232540,"byte_end":232604,"line_start":799,"line_end":799,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232609,"byte_end":232612,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/     // Check value using read-only pointer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232617,"byte_end":232663,"line_start":801,"line_end":801,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(value.pointer(\"/x\"), Some(&1.0.into()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232668,"byte_end":232727,"line_start":802,"line_end":802,"column_start":5,"column_end":64}},{"value":"/     // Change value with direct assignment","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232732,"byte_end":232778,"line_start":803,"line_end":803,"column_start":5,"column_end":51}},{"value":"/     *value.pointer_mut(\"/x\").unwrap() = 1.5.into();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232783,"byte_end":232838,"line_start":804,"line_end":804,"column_start":5,"column_end":60}},{"value":"/     // Check that new value was written","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232843,"byte_end":232886,"line_start":805,"line_end":805,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(value.pointer(\"/x\"), Some(&1.5.into()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232891,"byte_end":232950,"line_start":806,"line_end":806,"column_start":5,"column_end":64}},{"value":"/     // Or change the value only if it exists","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":232955,"byte_end":233003,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/     value.pointer_mut(\"/x\").map(|v| *v = 1.5.into());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":233008,"byte_end":233065,"line_start":808,"line_end":808,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":233070,"byte_end":233073,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/     // \"Steal\" ownership of a value. Can replace with any valid Value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":233078,"byte_end":233152,"line_start":810,"line_end":810,"column_start":5,"column_end":79}},{"value":"/     let old_x = value.pointer_mut(\"/x\").map(Value::take).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":233157,"byte_end":233227,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/     assert_eq!(old_x, 1.5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":233232,"byte_end":233263,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/     assert_eq!(value.pointer(\"/x\").unwrap(), &Value::Null);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":233268,"byte_end":233331,"line_start":813,"line_end":813,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":233336,"byte_end":233341,"line_start":814,"line_end":814,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":233346,"byte_end":233353,"line_start":815,"line_end":815,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":234792,"byte_end":234796,"line_start":858,"line_end":858,"column_start":12,"column_end":16},"name":"take","qualname":"<Value>::take","value":"pub fn take(&mut Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the `Value`, leaving a `Null` in its place.","sig":null,"attributes":[{"value":"/ Takes the value out of the `Value`, leaving a `Null` in its place.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":234503,"byte_end":234573,"line_start":849,"line_end":849,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":234578,"byte_end":234581,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":234586,"byte_end":234593,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":234598,"byte_end":234625,"line_start":852,"line_end":852,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":234630,"byte_end":234635,"line_start":853,"line_end":853,"column_start":5,"column_end":10}},{"value":"/ let mut v = json!({ \"x\": \"y\" });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":234640,"byte_end":234676,"line_start":854,"line_end":854,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(v[\"x\"].take(), json!(\"y\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":234681,"byte_end":234723,"line_start":855,"line_end":855,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(v, json!({ \"x\": null }));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":234728,"byte_end":234768,"line_start":856,"line_end":856,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":234773,"byte_end":234780,"line_start":857,"line_end":857,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1441},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286155,"byte_end":286160,"line_start":34,"line_end":34,"column_start":11,"column_end":16},"name":"Index","qualname":"::value::index::Index","value":"Index: private::Sealed","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446}],"decl_id":null,"docs":" A type that can be used to index into a `serde_json::Value`.","sig":null,"attributes":[{"value":"/ A type that can be used to index into a `serde_json::Value`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285165,"byte_end":285229,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285230,"byte_end":285233,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The [`get`] and [`get_mut`] methods of `Value` accept any type that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285234,"byte_end":285305,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ implements `Index`, as does the [square-bracket indexing operator]. This","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285306,"byte_end":285382,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ trait is implemented for strings which are used as the index into a JSON","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285383,"byte_end":285459,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ map, and for `usize` which is used as the index into a JSON array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285460,"byte_end":285530,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285531,"byte_end":285534,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`get`]: ../enum.Value.html#method.get","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285535,"byte_end":285577,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/ [`get_mut`]: ../enum.Value.html#method.get_mut","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285578,"byte_end":285628,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [square-bracket indexing operator]: ../enum.Value.html#impl-Index%3CI%3E","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285629,"byte_end":285705,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285706,"byte_end":285709,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285710,"byte_end":285781,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ `serde_json`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285782,"byte_end":285799,"line_start":17,"line_end":17,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285800,"byte_end":285803,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285804,"byte_end":285818,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285819,"byte_end":285822,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285823,"byte_end":285830,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285831,"byte_end":285858,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285859,"byte_end":285864,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ let data = json!({ \"inner\": [1, 2, 3] });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285865,"byte_end":285910,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285911,"byte_end":285914,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // Data is a JSON map so it can be indexed with a string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285915,"byte_end":285976,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ let inner = &data[\"inner\"];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":285977,"byte_end":286008,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286009,"byte_end":286012,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Inner is a JSON array so it can be indexed with an integer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286013,"byte_end":286079,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ let first = &inner[0];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286080,"byte_end":286106,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286107,"byte_end":286110,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(first, 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286111,"byte_end":286136,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286137,"byte_end":286144,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286276,"byte_end":286286,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"index_into","qualname":"::value::index::Index::index_into","value":"pub fn index_into<'v>(&Self, &'v Value) -> Option<&'v Value>","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Return None if the key is not already in the array or object.\n","sig":null,"attributes":[{"value":"/ Return None if the key is not already in the array or object.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286184,"byte_end":286249,"line_start":35,"line_end":35,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286431,"byte_end":286445,"line_start":41,"line_end":41,"column_start":8,"column_end":22},"name":"index_into_mut","qualname":"::value::index::Index::index_into_mut","value":"pub fn index_into_mut<'v>(&Self, &'v mut Value) -> Option<&'v mut Value>","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Return None if the key is not already in the array or object.\n","sig":null,"attributes":[{"value":"/ Return None if the key is not already in the array or object.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286339,"byte_end":286404,"line_start":39,"line_end":39,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286786,"byte_end":286801,"line_start":48,"line_end":48,"column_start":8,"column_end":23},"name":"index_or_insert","qualname":"::value::index::Index::index_or_insert","value":"pub fn index_or_insert<'v>(&Self, &'v mut Value) -> &'v mut Value","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Panic if array index out of bounds. If key is not already in the object,\n insert it with a value of null. Panic if Value is a type that cannot be\n indexed into, except if Value is null then it can be treated as an empty\n object.\n","sig":null,"attributes":[{"value":"/ Panic if array index out of bounds. If key is not already in the object,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286506,"byte_end":286582,"line_start":43,"line_end":43,"column_start":5,"column_end":81}},{"value":"/ insert it with a value of null. Panic if Value is a type that cannot be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286587,"byte_end":286662,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ indexed into, except if Value is null then it can be treated as an empty","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286667,"byte_end":286743,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ object.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286748,"byte_end":286759,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":1480},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":289365,"byte_end":289371,"line_start":133,"line_end":133,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::value::index::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1548},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297781,"byte_end":297791,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::value::ser::Serializer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Serializer whose output is a `Value`.","sig":null,"attributes":[{"value":"/ Serializer whose output is a `Value`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297185,"byte_end":297226,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297227,"byte_end":297230,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is the serializer that backs [`serde_json::to_value`][crate::to_value].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297231,"byte_end":297311,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ Unlike the main serde_json serializer which goes from some serializable","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297312,"byte_end":297387,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ value of type `T` to JSON text, this one goes from `T` to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297388,"byte_end":297449,"line_start":40,"line_end":40,"column_start":1,"column_end":62}},{"value":"/ `serde_json::Value`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297450,"byte_end":297474,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297475,"byte_end":297478,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The `to_value` function is implementable as:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297479,"byte_end":297527,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297528,"byte_end":297531,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297532,"byte_end":297539,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use serde::Serialize;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297540,"byte_end":297565,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/ use serde_json::{Error, Value};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297566,"byte_end":297601,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297602,"byte_end":297605,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ pub fn to_value<T>(input: T) -> Result<Value, Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297606,"byte_end":297662,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297663,"byte_end":297672,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/     T: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297673,"byte_end":297694,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297695,"byte_end":297700,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/     input.serialize(serde_json::value::Serializer)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297701,"byte_end":297755,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297756,"byte_end":297761,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297762,"byte_end":297769,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1594},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":303574,"byte_end":303586,"line_start":280,"line_end":280,"column_start":12,"column_end":24},"name":"SerializeVec","qualname":"::value::ser::SerializeVec","value":"SerializeVec {  }","parent":null,"children":[{"krate":0,"index":1595}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1596},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":303624,"byte_end":303645,"line_start":284,"line_end":284,"column_start":12,"column_end":33},"name":"SerializeTupleVariant","qualname":"::value::ser::SerializeTupleVariant","value":"SerializeTupleVariant {  }","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1598}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1600},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":303718,"byte_end":303721,"line_start":290,"line_end":290,"column_start":5,"column_end":8},"name":"Map","qualname":"::value::ser::SerializeMap::Map","value":"SerializeMap::Map { map, next_key }","parent":{"krate":0,"index":1599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1599},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":303699,"byte_end":303711,"line_start":289,"line_end":289,"column_start":10,"column_end":22},"name":"SerializeMap","qualname":"::value::ser::SerializeMap","value":"pub enum SerializeMap {\n    Map {\n        map: Map<String, Value>,\n        next_key: Option<String>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1600}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1603},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":303974,"byte_end":303996,"line_start":300,"line_end":300,"column_start":12,"column_end":34},"name":"SerializeStructVariant","qualname":"::value::ser::SerializeStructVariant","value":"SerializeStructVariant {  }","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1696},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237114,"byte_end":237122,"line_start":960,"line_end":960,"column_start":8,"column_end":16},"name":"to_value","qualname":"::value::to_value","value":"pub fn to_value<T>(T) -> Result<Value, Error> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Convert a `T` into `serde_json::Value` which is an enum that can represent\n any valid JSON data.","sig":null,"attributes":[{"value":"/ Convert a `T` into `serde_json::Value` which is an enum that can represent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235632,"byte_end":235710,"line_start":904,"line_end":904,"column_start":1,"column_end":79}},{"value":"/ any valid JSON data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235711,"byte_end":235735,"line_start":905,"line_end":905,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235736,"byte_end":235739,"line_start":906,"line_end":906,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235740,"byte_end":235753,"line_start":907,"line_end":907,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235754,"byte_end":235757,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235758,"byte_end":235765,"line_start":909,"line_end":909,"column_start":1,"column_end":8}},{"value":"/ use serde::Serialize;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235766,"byte_end":235791,"line_start":910,"line_end":910,"column_start":1,"column_end":26}},{"value":"/ use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235792,"byte_end":235817,"line_start":911,"line_end":911,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235818,"byte_end":235821,"line_start":912,"line_end":912,"column_start":1,"column_end":4}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235822,"byte_end":235848,"line_start":913,"line_end":913,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235849,"byte_end":235852,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235853,"byte_end":235877,"line_start":915,"line_end":915,"column_start":1,"column_end":25}},{"value":"/ struct User {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235878,"byte_end":235895,"line_start":916,"line_end":916,"column_start":1,"column_end":18}},{"value":"/     fingerprint: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235896,"byte_end":235924,"line_start":917,"line_end":917,"column_start":1,"column_end":29}},{"value":"/     location: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235925,"byte_end":235950,"line_start":918,"line_end":918,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235951,"byte_end":235956,"line_start":919,"line_end":919,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235957,"byte_end":235960,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ fn compare_json_values() -> Result<(), Box<Error>> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235961,"byte_end":236017,"line_start":921,"line_end":921,"column_start":1,"column_end":57}},{"value":"/     let u = User {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236018,"byte_end":236040,"line_start":922,"line_end":922,"column_start":1,"column_end":23}},{"value":"/         fingerprint: \"0xF9BA143B95FF6D82\".to_owned(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236041,"byte_end":236098,"line_start":923,"line_end":923,"column_start":1,"column_end":58}},{"value":"/         location: \"Menlo Park, CA\".to_owned(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236099,"byte_end":236149,"line_start":924,"line_end":924,"column_start":1,"column_end":51}},{"value":"/     };","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236150,"byte_end":236160,"line_start":925,"line_end":925,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236161,"byte_end":236164,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/     // The type of `expected` is `serde_json::Value`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236165,"byte_end":236221,"line_start":927,"line_end":927,"column_start":1,"column_end":57}},{"value":"/     let expected = json!({","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236222,"byte_end":236252,"line_start":928,"line_end":928,"column_start":1,"column_end":31}},{"value":"/         \"fingerprint\": \"0xF9BA143B95FF6D82\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236253,"byte_end":236301,"line_start":929,"line_end":929,"column_start":1,"column_end":49}},{"value":"/         \"location\": \"Menlo Park, CA\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236302,"byte_end":236343,"line_start":930,"line_end":930,"column_start":1,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236344,"byte_end":236355,"line_start":931,"line_end":931,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236356,"byte_end":236359,"line_start":932,"line_end":932,"column_start":1,"column_end":4}},{"value":"/     let v = serde_json::to_value(u).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236360,"byte_end":236409,"line_start":933,"line_end":933,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(v, expected);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236410,"byte_end":236442,"line_start":934,"line_end":934,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236443,"byte_end":236446,"line_start":935,"line_end":935,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236447,"byte_end":236461,"line_start":936,"line_end":936,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236462,"byte_end":236467,"line_start":937,"line_end":937,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236468,"byte_end":236473,"line_start":938,"line_end":938,"column_start":1,"column_end":6}},{"value":"/ # compare_json_values().unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236474,"byte_end":236511,"line_start":939,"line_end":939,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236512,"byte_end":236519,"line_start":940,"line_end":940,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236520,"byte_end":236523,"line_start":941,"line_end":941,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236524,"byte_end":236536,"line_start":942,"line_end":942,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236537,"byte_end":236540,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ This conversion can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236541,"byte_end":236619,"line_start":944,"line_end":944,"column_start":1,"column_end":79}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236620,"byte_end":236676,"line_start":945,"line_end":945,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236677,"byte_end":236680,"line_start":946,"line_end":946,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236681,"byte_end":236688,"line_start":947,"line_end":947,"column_start":1,"column_end":8}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236689,"byte_end":236724,"line_start":948,"line_end":948,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236725,"byte_end":236728,"line_start":949,"line_end":949,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236729,"byte_end":236744,"line_start":950,"line_end":950,"column_start":1,"column_end":16}},{"value":"/     // The keys in this map are vectors, not strings.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236745,"byte_end":236802,"line_start":951,"line_end":951,"column_start":1,"column_end":58}},{"value":"/     let mut map = BTreeMap::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236803,"byte_end":236841,"line_start":952,"line_end":952,"column_start":1,"column_end":39}},{"value":"/     map.insert(vec![32, 64], \"x86\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236842,"byte_end":236882,"line_start":953,"line_end":953,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236883,"byte_end":236886,"line_start":954,"line_end":954,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", serde_json::to_value(map).unwrap_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236887,"byte_end":236950,"line_start":955,"line_end":955,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236951,"byte_end":236956,"line_start":956,"line_end":956,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":236957,"byte_end":236964,"line_start":957,"line_end":957,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1698},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":238301,"byte_end":238311,"line_start":1002,"line_end":1002,"column_start":8,"column_end":18},"name":"from_value","qualname":"::value::from_value","value":"pub fn from_value<T>(Value) -> Result<T, Error> where T: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Interpret a `serde_json::Value` as an instance of type `T`.","sig":null,"attributes":[{"value":"/ Interpret a `serde_json::Value` as an instance of type `T`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237221,"byte_end":237284,"line_start":967,"line_end":967,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237285,"byte_end":237288,"line_start":968,"line_end":968,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237289,"byte_end":237302,"line_start":969,"line_end":969,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237303,"byte_end":237306,"line_start":970,"line_end":970,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237307,"byte_end":237314,"line_start":971,"line_end":971,"column_start":1,"column_end":8}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237315,"byte_end":237342,"line_start":972,"line_end":972,"column_start":1,"column_end":28}},{"value":"/ use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237343,"byte_end":237368,"line_start":973,"line_end":973,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237369,"byte_end":237372,"line_start":974,"line_end":974,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Debug)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237373,"byte_end":237406,"line_start":975,"line_end":975,"column_start":1,"column_end":34}},{"value":"/ struct User {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237407,"byte_end":237424,"line_start":976,"line_end":976,"column_start":1,"column_end":18}},{"value":"/     fingerprint: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237425,"byte_end":237453,"line_start":977,"line_end":977,"column_start":1,"column_end":29}},{"value":"/     location: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237454,"byte_end":237479,"line_start":978,"line_end":978,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237480,"byte_end":237485,"line_start":979,"line_end":979,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237486,"byte_end":237489,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237490,"byte_end":237505,"line_start":981,"line_end":981,"column_start":1,"column_end":16}},{"value":"/     // The type of `j` is `serde_json::Value`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237506,"byte_end":237555,"line_start":982,"line_end":982,"column_start":1,"column_end":50}},{"value":"/     let j = json!({","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237556,"byte_end":237579,"line_start":983,"line_end":983,"column_start":1,"column_end":24}},{"value":"/         \"fingerprint\": \"0xF9BA143B95FF6D82\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237580,"byte_end":237628,"line_start":984,"line_end":984,"column_start":1,"column_end":49}},{"value":"/         \"location\": \"Menlo Park, CA\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237629,"byte_end":237669,"line_start":985,"line_end":985,"column_start":1,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237670,"byte_end":237681,"line_start":986,"line_end":986,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237682,"byte_end":237685,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/     let u: User = serde_json::from_value(j).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237686,"byte_end":237743,"line_start":988,"line_end":988,"column_start":1,"column_end":58}},{"value":"/     println!(\"{:#?}\", u);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237744,"byte_end":237773,"line_start":989,"line_end":989,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237774,"byte_end":237779,"line_start":990,"line_end":990,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237780,"byte_end":237787,"line_start":991,"line_end":991,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237788,"byte_end":237791,"line_start":992,"line_end":992,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237792,"byte_end":237804,"line_start":993,"line_end":993,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237805,"byte_end":237808,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ This conversion can fail if the structure of the Value does not match the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237809,"byte_end":237886,"line_start":995,"line_end":995,"column_start":1,"column_end":78}},{"value":"/ structure expected by `T`, for example if `T` is a struct type but the Value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237887,"byte_end":237967,"line_start":996,"line_end":996,"column_start":1,"column_end":81}},{"value":"/ contains something other than a JSON map. It can also fail if the structure","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":237968,"byte_end":238047,"line_start":997,"line_end":997,"column_start":1,"column_end":80}},{"value":"/ is correct but `T`'s implementation of `Deserialize` decides that something","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":238048,"byte_end":238127,"line_start":998,"line_end":998,"column_start":1,"column_end":80}},{"value":"/ is wrong with the data, for example required struct fields are missing from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":238128,"byte_end":238207,"line_start":999,"line_end":999,"column_start":1,"column_end":80}},{"value":"/ the JSON map or some number is too big to fit in the expected primitive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":238208,"byte_end":238283,"line_start":1000,"line_end":1000,"column_start":1,"column_end":76}},{"value":"/ type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":238284,"byte_end":238293,"line_start":1001,"line_end":1001,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1713},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":323853,"byte_end":323858,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Error","qualname":"::io::imp::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1721},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":324157,"byte_end":324162,"line_start":28,"line_end":28,"column_start":11,"column_end":16},"name":"Write","qualname":"::io::imp::Write","value":"Write","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":324172,"byte_end":324177,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"write","qualname":"::io::imp::Write::write","value":"pub fn write(&mut Self, &[u8]) -> Result<usize>","parent":{"krate":0,"index":1721},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":324227,"byte_end":324236,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::imp::Write::write_all","value":"pub fn write_all(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":1721},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":324551,"byte_end":324556,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::imp::Write::flush","value":"pub fn flush(&mut Self) -> Result<()>","parent":{"krate":0,"index":1721},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2734},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":325894,"byte_end":325900,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"Number","qualname":"::number::Number","value":"Number {  }","parent":null,"children":[{"krate":0,"index":2735}],"decl_id":null,"docs":" Represents a JSON number, whether integer or floating point.\n","sig":null,"attributes":[{"value":"/ Represents a JSON number, whether integer or floating point.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":325786,"byte_end":325850,"line_start":18,"line_end":18,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326968,"byte_end":326974,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"is_i64","qualname":"<Number>::is_i64","value":"pub fn is_i64(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Number` is an integer between `i64::MIN` and\n `i64::MAX`.","sig":null,"attributes":[{"value":"/ Returns true if the `Number` is an integer between `i64::MIN` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326319,"byte_end":326388,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ `i64::MAX`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326393,"byte_end":326408,"line_start":43,"line_end":43,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326413,"byte_end":326416,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ For any Number on which `is_i64` returns true, `as_i64` is guaranteed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326421,"byte_end":326497,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ return the integer value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326502,"byte_end":326531,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326536,"byte_end":326539,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326544,"byte_end":326551,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326556,"byte_end":326583,"line_start":49,"line_end":49,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326588,"byte_end":326593,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ let big = i64::max_value() as u64 + 10;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326598,"byte_end":326641,"line_start":51,"line_end":51,"column_start":5,"column_end":48}},{"value":"/ let v = json!({ \"a\": 64, \"b\": big, \"c\": 256.0 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326646,"byte_end":326699,"line_start":52,"line_end":52,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326704,"byte_end":326707,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ assert!(v[\"a\"].is_i64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326712,"byte_end":326741,"line_start":54,"line_end":54,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326746,"byte_end":326749,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ // Greater than i64::MAX.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326754,"byte_end":326783,"line_start":56,"line_end":56,"column_start":5,"column_end":34}},{"value":"/ assert!(!v[\"b\"].is_i64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326788,"byte_end":326818,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326823,"byte_end":326826,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ // Numbers with a decimal point are not considered integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326831,"byte_end":326895,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/ assert!(!v[\"c\"].is_i64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326900,"byte_end":326930,"line_start":60,"line_end":60,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326935,"byte_end":326942,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326947,"byte_end":326956,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327877,"byte_end":327883,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"is_u64","qualname":"<Number>::is_u64","value":"pub fn is_u64(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Number` is an integer between zero and `u64::MAX`.","sig":null,"attributes":[{"value":"/ Returns true if the `Number` is an integer between zero and `u64::MAX`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327295,"byte_end":327370,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327375,"byte_end":327378,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ For any Number on which `is_u64` returns true, `as_u64` is guaranteed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327383,"byte_end":327459,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ return the integer value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327464,"byte_end":327493,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327498,"byte_end":327501,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327506,"byte_end":327513,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327518,"byte_end":327545,"line_start":80,"line_end":80,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327550,"byte_end":327555,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": 64, \"b\": -64, \"c\": 256.0 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327560,"byte_end":327613,"line_start":82,"line_end":82,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327618,"byte_end":327621,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ assert!(v[\"a\"].is_u64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327626,"byte_end":327655,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327660,"byte_end":327663,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ // Negative integer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327668,"byte_end":327692,"line_start":86,"line_end":86,"column_start":5,"column_end":29}},{"value":"/ assert!(!v[\"b\"].is_u64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327697,"byte_end":327727,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327732,"byte_end":327735,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ // Numbers with a decimal point are not considered integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327740,"byte_end":327804,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/ assert!(!v[\"c\"].is_u64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327809,"byte_end":327839,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327844,"byte_end":327851,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":327856,"byte_end":327865,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328808,"byte_end":328814,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"is_f64","qualname":"<Number>::is_f64","value":"pub fn is_f64(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Number` can be represented by f64.","sig":null,"attributes":[{"value":"/ Returns true if the `Number` can be represented by f64.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328161,"byte_end":328220,"line_start":103,"line_end":103,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328225,"byte_end":328228,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ For any Number on which `is_f64` returns true, `as_f64` is guaranteed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328233,"byte_end":328309,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/ return the floating point value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328314,"byte_end":328350,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328355,"byte_end":328358,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Currently this function returns true if and only if both `is_i64` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328363,"byte_end":328436,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ `is_u64` return false but this is not a guarantee in the future.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328441,"byte_end":328509,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328514,"byte_end":328517,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328522,"byte_end":328529,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328534,"byte_end":328561,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328566,"byte_end":328571,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": 256.0, \"b\": 64, \"c\": -64 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328576,"byte_end":328629,"line_start":114,"line_end":114,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328634,"byte_end":328637,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ assert!(v[\"a\"].is_f64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328642,"byte_end":328671,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328676,"byte_end":328679,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ // Integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328684,"byte_end":328700,"line_start":118,"line_end":118,"column_start":5,"column_end":21}},{"value":"/ assert!(!v[\"b\"].is_f64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328705,"byte_end":328735,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/ assert!(!v[\"c\"].is_f64());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328740,"byte_end":328770,"line_start":120,"line_end":120,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328775,"byte_end":328782,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":328787,"byte_end":328796,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329756,"byte_end":329762,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<Number>::as_i64","value":"pub fn as_i64(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" If the `Number` is an integer, represent it as i64 if possible. Returns\n None otherwise.","sig":null,"attributes":[{"value":"/ If the `Number` is an integer, represent it as i64 if possible. Returns","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329310,"byte_end":329385,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ None otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329390,"byte_end":329409,"line_start":141,"line_end":141,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329414,"byte_end":329417,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329422,"byte_end":329429,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329434,"byte_end":329461,"line_start":144,"line_end":144,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329466,"byte_end":329471,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ let big = i64::max_value() as u64 + 10;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329476,"byte_end":329519,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ let v = json!({ \"a\": 64, \"b\": big, \"c\": 256.0 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329524,"byte_end":329577,"line_start":147,"line_end":147,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329582,"byte_end":329585,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v[\"a\"].as_i64(), Some(64));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329590,"byte_end":329632,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(v[\"b\"].as_i64(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329637,"byte_end":329675,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(v[\"c\"].as_i64(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329680,"byte_end":329718,"line_start":151,"line_end":151,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329723,"byte_end":329730,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":329735,"byte_end":329744,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330625,"byte_end":330631,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"as_u64","qualname":"<Number>::as_u64","value":"pub fn as_u64(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" If the `Number` is an integer, represent it as u64 if possible. Returns\n None otherwise.","sig":null,"attributes":[{"value":"/ If the `Number` is an integer, represent it as u64 if possible. Returns","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330227,"byte_end":330302,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ None otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330307,"byte_end":330326,"line_start":172,"line_end":172,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330331,"byte_end":330334,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330339,"byte_end":330346,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330351,"byte_end":330378,"line_start":175,"line_end":175,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330383,"byte_end":330388,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": 64, \"b\": -64, \"c\": 256.0 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330393,"byte_end":330446,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330451,"byte_end":330454,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v[\"a\"].as_u64(), Some(64));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330459,"byte_end":330501,"line_start":179,"line_end":179,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(v[\"b\"].as_u64(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330506,"byte_end":330544,"line_start":180,"line_end":180,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(v[\"c\"].as_u64(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330549,"byte_end":330587,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330592,"byte_end":330599,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330604,"byte_end":330613,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331298,"byte_end":331304,"line_start":206,"line_end":206,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<Number>::as_f64","value":"pub fn as_f64(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Represents the number as f64 if possible. Returns None otherwise.","sig":null,"attributes":[{"value":"/ Represents the number as f64 if possible. Returns None otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330914,"byte_end":330983,"line_start":194,"line_end":194,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330988,"byte_end":330991,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":330996,"byte_end":331003,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331008,"byte_end":331035,"line_start":197,"line_end":197,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331040,"byte_end":331045,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ let v = json!({ \"a\": 256.0, \"b\": 64, \"c\": -64 });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331050,"byte_end":331103,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331108,"byte_end":331111,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v[\"a\"].as_f64(), Some(256.0));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331116,"byte_end":331161,"line_start":201,"line_end":201,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(v[\"b\"].as_f64(), Some(64.0));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331166,"byte_end":331210,"line_start":202,"line_end":202,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v[\"c\"].as_f64(), Some(-64.0));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331215,"byte_end":331260,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331265,"byte_end":331272,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331277,"byte_end":331286,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":332013,"byte_end":332021,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"from_f64","qualname":"<Number>::from_f64","value":"pub fn from_f64(f64) -> Option<Number>","parent":null,"children":[],"decl_id":null,"docs":" Converts a finite `f64` to a `Number`. Infinite or NaN values are not JSON\n numbers.","sig":null,"attributes":[{"value":"/ Converts a finite `f64` to a `Number`. Infinite or NaN values are not JSON","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331667,"byte_end":331745,"line_start":217,"line_end":217,"column_start":5,"column_end":83}},{"value":"/ numbers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331750,"byte_end":331762,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331767,"byte_end":331770,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331775,"byte_end":331782,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ # use std::f64;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331787,"byte_end":331806,"line_start":221,"line_end":221,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331811,"byte_end":331816,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ # use serde_json::Number;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331821,"byte_end":331850,"line_start":223,"line_end":223,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331855,"byte_end":331860,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ assert!(Number::from_f64(256.0).is_some());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331865,"byte_end":331912,"line_start":225,"line_end":225,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331917,"byte_end":331920,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ assert!(Number::from_f64(f64::NAN).is_none());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331925,"byte_end":331975,"line_start":227,"line_end":227,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331980,"byte_end":331987,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":331992,"byte_end":332001,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1804},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347773,"byte_end":347777,"line_start":23,"line_end":23,"column_start":11,"column_end":15},"name":"Read","qualname":"::read::Read","value":"Read<'de>: private::Sealed","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819}],"decl_id":null,"docs":" Trait used by the deserializer for iterating over input. This is manually\n \"specialized\" for iterating over &[u8]. Once feature(specialization) is\n stable we can use actual specialization.","sig":null,"attributes":[{"value":"/ Trait used by the deserializer for iterating over input. This is manually","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347470,"byte_end":347547,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ \"specialized\" for iterating over &[u8]. Once feature(specialization) is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347548,"byte_end":347623,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ stable we can use actual specialization.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347624,"byte_end":347668,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347669,"byte_end":347672,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347673,"byte_end":347744,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ `serde_json`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347745,"byte_end":347762,"line_start":22,"line_end":22,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347828,"byte_end":347832,"line_start":25,"line_end":25,"column_start":8,"column_end":12},"name":"next","qualname":"::read::Read::next","value":"pub fn next(&mut Self) -> Result<Option<u8>>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347893,"byte_end":347897,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"peek","qualname":"::read::Read::peek","value":"pub fn peek(&mut Self) -> Result<Option<u8>>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348028,"byte_end":348035,"line_start":31,"line_end":31,"column_start":8,"column_end":15},"name":"discard","qualname":"::read::Read::discard","value":"pub fn discard(&mut Self)","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Only valid after a call to peek(). Discards the peeked byte.\n","sig":null,"attributes":[{"value":"/ Only valid after a call to peek(). Discards the peeked byte.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347937,"byte_end":348001,"line_start":29,"line_end":29,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348427,"byte_end":348435,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"position","qualname":"::read::Read::position","value":"pub fn position(&Self) -> Position","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Position of the most recent call to next().","sig":null,"attributes":[{"value":"/ Position of the most recent call to next().","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348053,"byte_end":348100,"line_start":33,"line_end":33,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348105,"byte_end":348108,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The most recent call was probably next() and not peek(), but this method","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348113,"byte_end":348189,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ should try to return a sensible result if the most recent call was","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348194,"byte_end":348264,"line_start":36,"line_end":36,"column_start":5,"column_end":75}},{"value":"/ actually peek() because we don't always know.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348269,"byte_end":348318,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348323,"byte_end":348326,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Only called in case of an error, so performance is not important.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348331,"byte_end":348400,"line_start":39,"line_end":39,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348835,"byte_end":348848,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"peek_position","qualname":"::read::Read::peek_position","value":"pub fn peek_position(&Self) -> Position","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Position of the most recent call to peek().","sig":null,"attributes":[{"value":"/ Position of the most recent call to peek().","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348461,"byte_end":348508,"line_start":43,"line_end":43,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348513,"byte_end":348516,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The most recent call was probably peek() and not next(), but this method","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348521,"byte_end":348597,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ should try to return a sensible result if the most recent call was","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348602,"byte_end":348672,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ actually next() because we don't always know.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348677,"byte_end":348726,"line_start":47,"line_end":47,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348731,"byte_end":348734,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Only called in case of an error, so performance is not important.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348739,"byte_end":348808,"line_start":49,"line_end":49,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349012,"byte_end":349023,"line_start":56,"line_end":56,"column_start":8,"column_end":19},"name":"byte_offset","qualname":"::read::Read::byte_offset","value":"pub fn byte_offset(&Self) -> usize","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Offset from the beginning of the input to the next byte that would be\n returned by next() or peek().\n","sig":null,"attributes":[{"value":"/ Offset from the beginning of the input to the next byte that would be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348874,"byte_end":348947,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ returned by next() or peek().","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":348952,"byte_end":348985,"line_start":54,"line_end":54,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349281,"byte_end":349290,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::read::Read::parse_str","value":"pub fn parse_str<'s>(&'s mut Self, &'s mut Vec<u8>) -> Result<Reference>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Assumes the previous byte was a quotation mark. Parses a JSON-escaped\n string until the next quotation mark using the given scratch space if\n necessary. The scratch space is initially empty.\n","sig":null,"attributes":[{"value":"/ Assumes the previous byte was a quotation mark. Parses a JSON-escaped","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349046,"byte_end":349119,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ string until the next quotation mark using the given scratch space if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349124,"byte_end":349197,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ necessary. The scratch space is initially empty.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349202,"byte_end":349254,"line_start":60,"line_end":60,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349759,"byte_end":349772,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"parse_str_raw","qualname":"::read::Read::parse_str_raw","value":"pub fn parse_str_raw<'s>(&'s mut Self, &'s mut Vec<u8>) -> Result<Reference>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Assumes the previous byte was a quotation mark. Parses a JSON-escaped\n string until the next quotation mark using the given scratch space if\n necessary. The scratch space is initially empty.","sig":null,"attributes":[{"value":"/ Assumes the previous byte was a quotation mark. Parses a JSON-escaped","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349376,"byte_end":349449,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ string until the next quotation mark using the given scratch space if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349454,"byte_end":349527,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ necessary. The scratch space is initially empty.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349532,"byte_end":349584,"line_start":66,"line_end":66,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349589,"byte_end":349592,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function returns the raw bytes in the string with escape sequences","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349597,"byte_end":349672,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ expanded but without performing unicode validation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349677,"byte_end":349732,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":350050,"byte_end":350060,"line_start":79,"line_end":79,"column_start":8,"column_end":18},"name":"ignore_str","qualname":"::read::Read::ignore_str","value":"pub fn ignore_str(&mut Self) -> Result<()>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Assumes the previous byte was a quotation mark. Parses a JSON-escaped\n string until the next quotation mark but discards the data.\n","sig":null,"attributes":[{"value":"/ Assumes the previous byte was a quotation mark. Parses a JSON-escaped","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349882,"byte_end":349955,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ string until the next quotation mark but discards the data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":349960,"byte_end":350023,"line_start":77,"line_end":77,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":350235,"byte_end":350252,"line_start":84,"line_end":84,"column_start":8,"column_end":25},"name":"decode_hex_escape","qualname":"::read::Read::decode_hex_escape","value":"pub fn decode_hex_escape(&mut Self) -> Result<u16>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Assumes the previous byte was a hex escape sequnce ('\\u') in a string.\n Parses next hexadecimal sequence.\n","sig":null,"attributes":[{"value":"/ Assumes the previous byte was a hex escape sequnce ('\\u') in a string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":350092,"byte_end":350166,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ Parses next hexadecimal sequence.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":350171,"byte_end":350208,"line_start":82,"line_end":82,"column_start":5,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":1818},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351011,"byte_end":351040,"line_start":106,"line_end":106,"column_start":11,"column_end":40},"name":"should_early_return_if_failed","qualname":"::read::Read::should_early_return_if_failed","value":"bool","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Whether StreamDeserializer::next needs to check the failed flag. True\n for IoRead, false for StrRead and SliceRead which can track failure by\n truncating their input slice to avoid the extra check on every next\n call.\n","sig":null,"attributes":[{"value":"/ Whether StreamDeserializer::next needs to check the failed flag. True","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":350739,"byte_end":350812,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ for IoRead, false for StrRead and SliceRead which can track failure by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":350817,"byte_end":350891,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ truncating their input slice to avoid the extra check on every next","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":350896,"byte_end":350967,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ call.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":350972,"byte_end":350981,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351200,"byte_end":351210,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"set_failed","qualname":"::read::Read::set_failed","value":"pub fn set_failed(&mut Self, &mut bool)","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Mark a persistent failure of StreamDeserializer, either by setting the\n flag or by truncating the input data.\n","sig":null,"attributes":[{"value":"/ Mark a persistent failure of StreamDeserializer, either by setting the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351053,"byte_end":351127,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ flag or by truncating the input data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351132,"byte_end":351173,"line_start":109,"line_end":109,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1820},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351256,"byte_end":351264,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"Position","qualname":"::read::Position","value":"Position { line, column }","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1821},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351275,"byte_end":351279,"line_start":115,"line_end":115,"column_start":9,"column_end":13},"name":"line","qualname":"::read::Position::line","value":"usize","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1822},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351296,"byte_end":351302,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"name":"column","qualname":"::read::Position::column","value":"usize","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1827},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351381,"byte_end":351389,"line_start":123,"line_end":123,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::read::Reference::Borrowed","value":"Reference::Borrowed(&'b T)","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1830},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351402,"byte_end":351408,"line_start":124,"line_end":124,"column_start":5,"column_end":11},"name":"Copied","qualname":"::read::Reference::Copied","value":"Reference::Copied(&'c T)","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1823},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351323,"byte_end":351332,"line_start":119,"line_end":119,"column_start":10,"column_end":19},"name":"Reference","qualname":"::read::Reference","value":"pub enum Reference<'b, 'c, T: ?Sized> where T: 'static {\n    Borrowed(&'b T),\n    Copied(&'c T),\n}","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1830}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1839},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":352202,"byte_end":352211,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"SliceRead","qualname":"::read::SliceRead","value":"SliceRead {  }","parent":null,"children":[{"krate":0,"index":1841},{"krate":0,"index":1842}],"decl_id":null,"docs":" JSON input source that reads from a slice of bytes.\n","sig":null,"attributes":[{"value":"/ JSON input source that reads from a slice of bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351987,"byte_end":352042,"line_start":154,"line_end":154,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1843},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":352549,"byte_end":352556,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"StrRead","qualname":"::read::StrRead","value":"StrRead {  }","parent":null,"children":[{"krate":0,"index":1845}],"decl_id":null,"docs":" JSON input source that reads from a UTF-8 string.\n","sig":null,"attributes":[{"value":"/ JSON input source that reads from a UTF-8 string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":352408,"byte_end":352461,"line_start":166,"line_end":166,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1847},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":352727,"byte_end":352733,"line_start":177,"line_end":177,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::read::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":358551,"byte_end":358554,"line_start":399,"line_end":399,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceRead>::new","value":"pub fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a JSON input source to read from a slice of bytes.\n","sig":null,"attributes":[{"value":"/ Create a JSON input source to read from a slice of bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":358478,"byte_end":358539,"line_start":398,"line_end":398,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":365093,"byte_end":365096,"line_start":609,"line_end":609,"column_start":12,"column_end":15},"name":"new","qualname":"<StrRead>::new","value":"pub fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a JSON input source to read from a UTF-8 string.\n","sig":null,"attributes":[{"value":"/ Create a JSON input source to read from a UTF-8 string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":365022,"byte_end":365081,"line_start":608,"line_end":608,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":1920},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":369066,"byte_end":369071,"line_start":770,"line_end":770,"column_start":11,"column_end":16},"name":"Fused","qualname":"::read::Fused","value":"Fused: private::Sealed","parent":null,"children":[],"decl_id":null,"docs":" Marker for whether StreamDeserializer can implement FusedIterator.\n","sig":null,"attributes":[{"value":"/ Marker for whether StreamDeserializer can implement FusedIterator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":368985,"byte_end":369055,"line_start":769,"line_end":769,"column_start":1,"column_end":71}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26805,"byte_end":26817,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":27997,"byte_end":28009,"line_start":74,"line_end":74,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":28207,"byte_end":28219,"line_start":81,"line_end":81,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":28672,"byte_end":28684,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":29693,"byte_end":29705,"line_start":127,"line_end":127,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":1954},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":65410,"byte_end":65416,"line_start":1198,"line_end":1198,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":87910,"byte_end":87919,"line_start":1889,"line_end":1889,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":88082,"byte_end":88091,"line_start":1895,"line_end":1895,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":89295,"byte_end":89304,"line_start":1936,"line_end":1936,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":89467,"byte_end":89476,"line_start":1942,"line_end":1942,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":90967,"byte_end":90980,"line_start":1992,"line_end":1992,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":91135,"byte_end":91148,"line_start":1998,"line_end":1998,"column_start":58,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":91521,"byte_end":91534,"line_start":2012,"line_end":2012,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":92326,"byte_end":92343,"line_start":2045,"line_end":2045,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":92502,"byte_end":92519,"line_start":2051,"line_end":2051,"column_start":58,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":92856,"byte_end":92873,"line_start":2064,"line_end":2064,"column_start":61,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":94588,"byte_end":94594,"line_start":2126,"line_end":2126,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97857,"byte_end":97875,"line_start":2242,"line_end":2242,"column_start":17,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":100514,"byte_end":100532,"line_start":2317,"line_end":2317,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":102367,"byte_end":102385,"line_start":2371,"line_end":2371,"column_start":35,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109432,"byte_end":109437,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":116551,"byte_end":116556,"line_start":244,"line_end":244,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":117366,"byte_end":117375,"line_start":280,"line_end":280,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":119425,"byte_end":119430,"line_start":313,"line_end":313,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":119663,"byte_end":119668,"line_start":323,"line_end":323,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":119792,"byte_end":119801,"line_start":329,"line_end":329,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":120278,"byte_end":120283,"line_start":345,"line_end":345,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":120557,"byte_end":120562,"line_start":357,"line_end":357,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":121021,"byte_end":121026,"line_start":373,"line_end":373,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123678,"byte_end":123681,"line_start":28,"line_end":28,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130498,"byte_end":130501,"line_start":254,"line_end":254,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130641,"byte_end":130644,"line_start":263,"line_end":263,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130793,"byte_end":130796,"line_start":272,"line_end":272,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130922,"byte_end":130925,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":131391,"byte_end":131394,"line_start":297,"line_end":297,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":131915,"byte_end":131918,"line_start":320,"line_end":320,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":132142,"byte_end":132145,"line_start":330,"line_end":330,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":132375,"byte_end":132378,"line_start":338,"line_end":338,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":132786,"byte_end":132789,"line_start":353,"line_end":353,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":133000,"byte_end":133007,"line_start":361,"line_end":361,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":133958,"byte_end":133961,"line_start":396,"line_end":396,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":134195,"byte_end":134198,"line_start":407,"line_end":407,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136505,"byte_end":136510,"line_start":486,"line_end":486,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138210,"byte_end":138221,"line_start":547,"line_end":547,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139409,"byte_end":139422,"line_start":595,"line_end":595,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":145047,"byte_end":145050,"line_start":802,"line_end":802,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147317,"byte_end":147327,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147528,"byte_end":147538,"line_start":27,"line_end":27,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147781,"byte_end":147791,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":159217,"byte_end":159224,"line_start":464,"line_end":464,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":160985,"byte_end":160993,"line_start":528,"line_end":528,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":162618,"byte_end":162626,"line_start":583,"line_end":583,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":163052,"byte_end":163060,"line_start":605,"line_end":605,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":163485,"byte_end":163493,"line_start":627,"line_end":627,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":164608,"byte_end":164616,"line_start":666,"line_end":666,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":167070,"byte_end":167078,"line_start":748,"line_end":748,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":168537,"byte_end":168545,"line_start":796,"line_end":796,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":170371,"byte_end":170387,"line_start":859,"line_end":859,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":2138},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":2139},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189664,"byte_end":189674,"line_start":1581,"line_end":1581,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199650,"byte_end":199666,"line_start":1929,"line_end":1929,"column_start":20,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199883,"byte_end":199898,"line_start":1939,"line_end":1939,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":200369,"byte_end":200384,"line_start":1955,"line_end":1955,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":200481,"byte_end":200496,"line_start":1961,"line_end":1961,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213378,"byte_end":213383,"line_start":173,"line_end":173,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":214264,"byte_end":214279,"line_start":198,"line_end":198,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":214819,"byte_end":214824,"line_start":215,"line_end":215,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216131,"byte_end":216136,"line_start":260,"line_end":260,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235512,"byte_end":235517,"line_start":892,"line_end":892,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":238892,"byte_end":238897,"line_start":16,"line_end":16,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":239098,"byte_end":239110,"line_start":24,"line_end":24,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":242753,"byte_end":242758,"line_start":133,"line_end":133,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":244610,"byte_end":244615,"line_start":202,"line_end":202,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":2184},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":251614,"byte_end":251630,"line_start":460,"line_end":460,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":252064,"byte_end":252069,"line_start":474,"line_end":474,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":252271,"byte_end":252290,"line_start":486,"line_end":486,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":254195,"byte_end":254210,"line_start":556,"line_end":556,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":254370,"byte_end":254385,"line_start":564,"line_end":564,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2220},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":2264},{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":255288,"byte_end":255303,"line_start":596,"line_end":596,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":255912,"byte_end":255927,"line_start":622,"line_end":622,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":256110,"byte_end":256125,"line_start":631,"line_end":631,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":257140,"byte_end":257155,"line_start":668,"line_end":668,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":2268},{"krate":0,"index":2270},{"krate":0,"index":2272},{"krate":0,"index":2274},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2280},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2296},{"krate":0,"index":2298},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":2312},{"krate":0,"index":2314},{"krate":0,"index":2316},{"krate":0,"index":2318},{"krate":0,"index":2320},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":266355,"byte_end":266374,"line_start":999,"line_end":999,"column_start":31,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":266879,"byte_end":266901,"line_start":1017,"line_end":1017,"column_start":34,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":268843,"byte_end":268861,"line_start":1087,"line_end":1087,"column_start":11,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":269009,"byte_end":269027,"line_start":1093,"line_end":1093,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":2352},{"krate":0,"index":2354},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":2368},{"krate":0,"index":2370},{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2376},{"krate":0,"index":2378},{"krate":0,"index":2380},{"krate":0,"index":2382},{"krate":0,"index":2384},{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2402},{"krate":0,"index":2404},{"krate":0,"index":2406},{"krate":0,"index":2408},{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":269935,"byte_end":269953,"line_start":1125,"line_end":1125,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":270590,"byte_end":270608,"line_start":1151,"line_end":1151,"column_start":11,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":270804,"byte_end":270822,"line_start":1160,"line_end":1160,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":271848,"byte_end":271866,"line_start":1197,"line_end":1197,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2416},{"krate":0,"index":2418},{"krate":0,"index":2420},{"krate":0,"index":2422},{"krate":0,"index":2424},{"krate":0,"index":2426},{"krate":0,"index":2428},{"krate":0,"index":2430},{"krate":0,"index":2432},{"krate":0,"index":2434},{"krate":0,"index":2436},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2446},{"krate":0,"index":2448},{"krate":0,"index":2450},{"krate":0,"index":2452},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":272968,"byte_end":272986,"line_start":1235,"line_end":1235,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2498},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2514},{"krate":0,"index":2516},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":274994,"byte_end":275007,"line_start":1310,"line_end":1310,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":275248,"byte_end":275261,"line_start":1321,"line_end":1321,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":276264,"byte_end":276269,"line_start":1356,"line_end":1356,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":276929,"byte_end":276955,"line_start":1382,"line_end":1382,"column_start":11,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":277096,"byte_end":277122,"line_start":1388,"line_end":1388,"column_start":37,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2540},{"krate":0,"index":2542},{"krate":0,"index":2544},{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2552},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":278038,"byte_end":278064,"line_start":1421,"line_end":1421,"column_start":35,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":278400,"byte_end":278408,"line_start":1436,"line_end":1436,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":279949,"byte_end":279954,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":280259,"byte_end":280264,"line_start":50,"line_end":50,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":280604,"byte_end":280609,"line_start":66,"line_end":66,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":280886,"byte_end":280891,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":281200,"byte_end":281205,"line_start":98,"line_end":98,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":281519,"byte_end":281524,"line_start":114,"line_end":114,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":282087,"byte_end":282092,"line_start":139,"line_end":139,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":282406,"byte_end":282411,"line_start":155,"line_end":155,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":282806,"byte_end":282811,"line_start":172,"line_end":172,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":283184,"byte_end":283189,"line_start":188,"line_end":188,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":283563,"byte_end":283568,"line_start":204,"line_end":204,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":284358,"byte_end":284363,"line_start":234,"line_end":234,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":284856,"byte_end":284861,"line_start":254,"line_end":254,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":288541,"byte_end":288547,"line_start":104,"line_end":104,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":289458,"byte_end":289464,"line_start":136,"line_end":136,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":289615,"byte_end":289619,"line_start":143,"line_end":143,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":291372,"byte_end":291377,"line_start":175,"line_end":175,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":292606,"byte_end":292611,"line_start":215,"line_end":215,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/partial_eq.rs","byte_start":294418,"byte_end":294423,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/partial_eq.rs","byte_start":294535,"byte_end":294540,"line_start":30,"line_end":30,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/partial_eq.rs","byte_start":294880,"byte_end":294885,"line_start":48,"line_end":48,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/partial_eq.rs","byte_start":295003,"byte_end":295009,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":296329,"byte_end":296334,"line_start":11,"line_end":11,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297821,"byte_end":297831,"line_start":58,"line_end":58,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":304083,"byte_end":304095,"line_start":305,"line_end":305,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":304440,"byte_end":304452,"line_start":322,"line_end":322,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":304815,"byte_end":304827,"line_start":338,"line_end":338,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":305189,"byte_end":305210,"line_start":354,"line_end":354,"column_start":44,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":305647,"byte_end":305659,"line_start":375,"line_end":375,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":307588,"byte_end":307604,"line_start":437,"line_end":437,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":312014,"byte_end":312026,"line_start":613,"line_end":613,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":313628,"byte_end":313650,"line_start":659,"line_end":659,"column_start":45,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":323878,"byte_end":323883,"line_start":14,"line_end":14,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":323995,"byte_end":324000,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":324933,"byte_end":324936,"line_start":60,"line_end":60,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326237,"byte_end":326238,"line_start":36,"line_end":36,"column_start":13,"column_end":14},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326306,"byte_end":326312,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":332712,"byte_end":332718,"line_start":257,"line_end":257,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":333223,"byte_end":333229,"line_start":273,"line_end":273,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":333960,"byte_end":333966,"line_start":300,"line_end":300,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":334718,"byte_end":334724,"line_start":328,"line_end":328,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":334920,"byte_end":334933,"line_start":336,"line_end":336,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1777},{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":340235,"byte_end":340241,"line_start":518,"line_end":518,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":343567,"byte_end":343573,"line_start":622,"line_end":622,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":346594,"byte_end":346600,"line_start":732,"line_end":732,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351446,"byte_end":351455,"line_start":127,"line_end":127,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":358458,"byte_end":358467,"line_start":397,"line_end":397,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":361305,"byte_end":361314,"line_start":478,"line_end":478,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":361345,"byte_end":361354,"line_start":480,"line_end":480,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":365004,"byte_end":365011,"line_start":607,"line_end":607,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":365300,"byte_end":365307,"line_start":618,"line_end":618,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":365338,"byte_end":365345,"line_start":620,"line_end":620,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":369111,"byte_end":369120,"line_start":771,"line_end":771,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":369147,"byte_end":369154,"line_start":772,"line_end":772,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":15456,"byte_end":15458,"line_start":452,"line_end":452,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":87}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":15468,"byte_end":15473,"line_start":453,"line_end":453,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":378}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":15483,"byte_end":15486,"line_start":454,"line_end":454,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":472}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/lib.rs","byte_start":15571,"byte_end":15576,"line_start":459,"line_end":459,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":990}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":26805,"byte_end":26817,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":27997,"byte_end":28009,"line_start":74,"line_end":74,"column_start":10,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":28207,"byte_end":28219,"line_start":81,"line_end":81,"column_start":10,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":28672,"byte_end":28684,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":29693,"byte_end":29705,"line_start":127,"line_end":127,"column_start":25,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":65410,"byte_end":65416,"line_start":1198,"line_end":1198,"column_start":18,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2734},"to":{"krate":1,"index":8501}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":87910,"byte_end":87919,"line_start":1889,"line_end":1889,"column_start":17,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":88082,"byte_end":88091,"line_start":1895,"line_end":1895,"column_start":57,"column_end":66},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":229},"to":{"krate":5,"index":1138}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":89295,"byte_end":89304,"line_start":1936,"line_end":1936,"column_start":17,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":89467,"byte_end":89476,"line_start":1942,"line_end":1942,"column_start":57,"column_end":66},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":245},"to":{"krate":5,"index":1156}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":90967,"byte_end":90980,"line_start":1992,"line_end":1992,"column_start":17,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":91135,"byte_end":91148,"line_start":1998,"line_end":1998,"column_start":58,"column_end":71},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":263},"to":{"krate":5,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":91521,"byte_end":91534,"line_start":2012,"line_end":2012,"column_start":61,"column_end":74},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":263},"to":{"krate":5,"index":1202}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":92326,"byte_end":92343,"line_start":2045,"line_end":2045,"column_start":17,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":92502,"byte_end":92519,"line_start":2051,"line_end":2051,"column_start":58,"column_end":75},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":291},"to":{"krate":5,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":92856,"byte_end":92873,"line_start":2064,"line_end":2064,"column_start":61,"column_end":78},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":291},"to":{"krate":5,"index":1202}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":94588,"byte_end":94594,"line_start":2126,"line_end":2126,"column_start":44,"column_end":50},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":319},"to":{"krate":5,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":97857,"byte_end":97875,"line_start":2242,"line_end":2242,"column_start":17,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":100514,"byte_end":100532,"line_start":2317,"line_end":2317,"column_start":30,"column_end":48},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":341},"to":{"krate":1,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/de.rs","byte_start":102367,"byte_end":102385,"line_start":2371,"line_end":2371,"column_start":35,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":341},"to":{"krate":1,"index":5546}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":109432,"byte_end":109437,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":116551,"byte_end":116556,"line_start":244,"line_end":244,"column_start":6,"column_end":11},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":117366,"byte_end":117375,"line_start":280,"line_end":280,"column_start":18,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":401},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":119425,"byte_end":119430,"line_start":313,"line_end":313,"column_start":30,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":385},"to":{"krate":5,"index":2781}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":119663,"byte_end":119668,"line_start":323,"line_end":323,"column_start":18,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":385},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":119792,"byte_end":119801,"line_start":329,"line_end":329,"column_start":18,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":397},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":120278,"byte_end":120283,"line_start":345,"line_end":345,"column_start":16,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":385},"to":{"krate":1,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":120557,"byte_end":120562,"line_start":357,"line_end":357,"column_start":20,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":385},"to":{"krate":5,"index":7544}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/error.rs","byte_start":121021,"byte_end":121026,"line_start":373,"line_end":373,"column_start":21,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":385},"to":{"krate":5,"index":8094}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":123678,"byte_end":123681,"line_start":28,"line_end":28,"column_start":6,"column_end":9},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130498,"byte_end":130501,"line_start":254,"line_end":254,"column_start":18,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":478},"to":{"krate":1,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130641,"byte_end":130644,"line_start":263,"line_end":263,"column_start":16,"column_end":19},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":478},"to":{"krate":1,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130793,"byte_end":130796,"line_start":272,"line_end":272,"column_start":20,"column_end":23},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":478},"to":{"krate":1,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":130922,"byte_end":130925,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":478},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":131391,"byte_end":131394,"line_start":297,"line_end":297,"column_start":35,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":478},"to":{"krate":1,"index":2314}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":131915,"byte_end":131918,"line_start":320,"line_end":320,"column_start":38,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":478},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":132142,"byte_end":132145,"line_start":330,"line_end":330,"column_start":16,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":478},"to":{"krate":1,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":132375,"byte_end":132378,"line_start":338,"line_end":338,"column_start":32,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":478},"to":{"krate":5,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":132786,"byte_end":132789,"line_start":353,"line_end":353,"column_start":36,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":478},"to":{"krate":5,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":133000,"byte_end":133007,"line_start":361,"line_end":361,"column_start":40,"column_end":47},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":537},"to":{"krate":5,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":133958,"byte_end":133961,"line_start":396,"line_end":396,"column_start":40,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":478},"to":{"krate":1,"index":5185}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":134195,"byte_end":134198,"line_start":407,"line_end":407,"column_start":34,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":478},"to":{"krate":1,"index":5198}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":136505,"byte_end":136510,"line_start":486,"line_end":486,"column_start":10,"column_end":15},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":138210,"byte_end":138221,"line_start":547,"line_end":547,"column_start":10,"column_end":21},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":139409,"byte_end":139422,"line_start":595,"line_end":595,"column_start":10,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/map.rs","byte_start":145047,"byte_end":145050,"line_start":802,"line_end":802,"column_start":23,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":478},"to":{"krate":1,"index":5189}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147317,"byte_end":147327,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147528,"byte_end":147538,"line_start":27,"line_end":27,"column_start":13,"column_end":23},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":147781,"byte_end":147791,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":159217,"byte_end":159224,"line_start":464,"line_end":464,"column_start":36,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":6521}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":160985,"byte_end":160993,"line_start":528,"line_end":528,"column_start":38,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":723},"to":{"krate":5,"index":1438}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":162618,"byte_end":162626,"line_start":583,"line_end":583,"column_start":40,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":723},"to":{"krate":5,"index":1444}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":163052,"byte_end":163060,"line_start":605,"line_end":605,"column_start":46,"column_end":54},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":723},"to":{"krate":5,"index":1450}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":163485,"byte_end":163493,"line_start":627,"line_end":627,"column_start":47,"column_end":55},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":723},"to":{"krate":5,"index":1456}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":164608,"byte_end":164616,"line_start":666,"line_end":666,"column_start":38,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":723},"to":{"krate":5,"index":1462}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":167070,"byte_end":167078,"line_start":748,"line_end":748,"column_start":41,"column_end":49},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":723},"to":{"krate":5,"index":1473}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":168537,"byte_end":168545,"line_start":796,"line_end":796,"column_start":48,"column_end":56},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":723},"to":{"krate":5,"index":1480}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":170371,"byte_end":170387,"line_start":859,"line_end":859,"column_start":36,"column_end":52},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":795},"to":{"krate":5,"index":1387}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":189664,"byte_end":189674,"line_start":1581,"line_end":1581,"column_start":6,"column_end":16},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199650,"byte_end":199666,"line_start":1929,"line_end":1929,"column_start":20,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2140},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":199883,"byte_end":199898,"line_start":1939,"line_end":1939,"column_start":10,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":200369,"byte_end":200384,"line_start":1955,"line_end":1955,"column_start":22,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2146},"to":{"krate":1,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/ser.rs","byte_start":200481,"byte_end":200496,"line_start":1961,"line_end":1961,"column_start":24,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2146},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":213378,"byte_end":213383,"line_start":173,"line_end":173,"column_start":16,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":214264,"byte_end":214279,"line_start":198,"line_end":198,"column_start":28,"column_end":43},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1002},"to":{"krate":0,"index":1721}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":214819,"byte_end":214824,"line_start":215,"line_end":215,"column_start":23,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":216131,"byte_end":216136,"line_start":260,"line_end":260,"column_start":6,"column_end":11},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/mod.rs","byte_start":235512,"byte_end":235517,"line_start":892,"line_end":892,"column_start":18,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":238892,"byte_end":238897,"line_start":16,"line_end":16,"column_start":32,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2157},"to":{"krate":5,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":239098,"byte_end":239110,"line_start":24,"line_end":24,"column_start":36,"column_end":48},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1077},"to":{"krate":5,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":242753,"byte_end":242758,"line_start":133,"line_end":133,"column_start":18,"column_end":23},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":8501}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":244610,"byte_end":244615,"line_start":202,"line_end":202,"column_start":40,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2157},"to":{"krate":5,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":251614,"byte_end":251630,"line_start":460,"line_end":460,"column_start":31,"column_end":47},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1156},"to":{"krate":5,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":252064,"byte_end":252069,"line_start":474,"line_end":474,"column_start":44,"column_end":49},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2157},"to":{"krate":5,"index":1214}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":252271,"byte_end":252290,"line_start":486,"line_end":486,"column_start":34,"column_end":53},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1170},"to":{"krate":5,"index":1202}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":254195,"byte_end":254210,"line_start":556,"line_end":556,"column_start":6,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":254370,"byte_end":254385,"line_start":564,"line_end":564,"column_start":40,"column_end":55},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1182},"to":{"krate":5,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":255288,"byte_end":255303,"line_start":596,"line_end":596,"column_start":30,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1182},"to":{"krate":5,"index":1138}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":255912,"byte_end":255927,"line_start":622,"line_end":622,"column_start":6,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":256110,"byte_end":256125,"line_start":631,"line_end":631,"column_start":30,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1197},"to":{"krate":5,"index":1156}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":257140,"byte_end":257155,"line_start":668,"line_end":668,"column_start":40,"column_end":55},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1197},"to":{"krate":5,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":266355,"byte_end":266374,"line_start":999,"line_end":999,"column_start":31,"column_end":50},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1263},"to":{"krate":5,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":266879,"byte_end":266901,"line_start":1017,"line_end":1017,"column_start":34,"column_end":56},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1274},"to":{"krate":5,"index":1202}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":268843,"byte_end":268861,"line_start":1087,"line_end":1087,"column_start":11,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":269009,"byte_end":269027,"line_start":1093,"line_end":1093,"column_start":40,"column_end":58},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1287},"to":{"krate":5,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":269935,"byte_end":269953,"line_start":1125,"line_end":1125,"column_start":30,"column_end":48},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1287},"to":{"krate":5,"index":1138}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":270590,"byte_end":270608,"line_start":1151,"line_end":1151,"column_start":11,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":270804,"byte_end":270822,"line_start":1160,"line_end":1160,"column_start":30,"column_end":48},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1304},"to":{"krate":5,"index":1156}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":271848,"byte_end":271866,"line_start":1197,"line_end":1197,"column_start":40,"column_end":58},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1304},"to":{"krate":5,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":272968,"byte_end":272986,"line_start":1235,"line_end":1235,"column_start":40,"column_end":58},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1324},"to":{"krate":5,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":274994,"byte_end":275007,"line_start":1310,"line_end":1310,"column_start":36,"column_end":49},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1339},"to":{"krate":5,"index":1009}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":275248,"byte_end":275261,"line_start":1321,"line_end":1321,"column_start":28,"column_end":41},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1339},"to":{"krate":5,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":276264,"byte_end":276269,"line_start":1356,"line_end":1356,"column_start":6,"column_end":11},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":276929,"byte_end":276955,"line_start":1382,"line_end":1382,"column_start":11,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":277096,"byte_end":277122,"line_start":1388,"line_end":1388,"column_start":37,"column_end":63},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1362},"to":{"krate":5,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":278038,"byte_end":278064,"line_start":1421,"line_end":1421,"column_start":35,"column_end":61},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1362},"to":{"krate":5,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/de.rs","byte_start":278400,"byte_end":278408,"line_start":1436,"line_end":1436,"column_start":38,"column_end":46},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1381},"to":{"krate":5,"index":1202}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":279949,"byte_end":279954,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":280259,"byte_end":280264,"line_start":50,"line_end":50,"column_start":20,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":280604,"byte_end":280609,"line_start":66,"line_end":66,"column_start":21,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":280886,"byte_end":280891,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":281200,"byte_end":281205,"line_start":98,"line_end":98,"column_start":28,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":281519,"byte_end":281524,"line_start":114,"line_end":114,"column_start":33,"column_end":38},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":282087,"byte_end":282092,"line_start":139,"line_end":139,"column_start":23,"column_end":28},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":282406,"byte_end":282411,"line_start":155,"line_end":155,"column_start":35,"column_end":40},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":282806,"byte_end":282811,"line_start":172,"line_end":172,"column_start":39,"column_end":44},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":283184,"byte_end":283189,"line_start":188,"line_end":188,"column_start":52,"column_end":57},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":283563,"byte_end":283568,"line_start":204,"line_end":204,"column_start":42,"column_end":47},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":5185}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":284358,"byte_end":284363,"line_start":234,"line_end":234,"column_start":64,"column_end":69},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":5185}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/from.rs","byte_start":284856,"byte_end":284861,"line_start":254,"line_end":254,"column_start":19,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":286171,"byte_end":286177,"line_start":34,"line_end":34,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1480},"to":{"krate":0,"index":1441}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":288541,"byte_end":288547,"line_start":104,"line_end":104,"column_start":16,"column_end":22},"kind":{"Impl":{"id":112}},"from":{"krate":4,"index":5316},"to":{"krate":0,"index":1441}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":289458,"byte_end":289464,"line_start":136,"line_end":136,"column_start":28,"column_end":34},"kind":{"Impl":{"id":115}},"from":{"krate":4,"index":5316},"to":{"krate":0,"index":1480}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":289615,"byte_end":289619,"line_start":143,"line_end":143,"column_start":27,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1487},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":291372,"byte_end":291377,"line_start":175,"line_end":175,"column_start":27,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":2314}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/index.rs","byte_start":292606,"byte_end":292611,"line_start":215,"line_end":215,"column_start":30,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/partial_eq.rs","byte_start":294418,"byte_end":294423,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/partial_eq.rs","byte_start":294535,"byte_end":294540,"line_start":30,"line_end":30,"column_start":33,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/partial_eq.rs","byte_start":294880,"byte_end":294885,"line_start":48,"line_end":48,"column_start":28,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2157},"to":{"krate":1,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/partial_eq.rs","byte_start":295003,"byte_end":295009,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":123}},"from":{"krate":4,"index":5316},"to":{"krate":1,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":296329,"byte_end":296334,"line_start":11,"line_end":11,"column_start":20,"column_end":25},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2157},"to":{"krate":5,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":297821,"byte_end":297831,"line_start":58,"line_end":58,"column_start":28,"column_end":38},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1548},"to":{"krate":5,"index":1387}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":304083,"byte_end":304095,"line_start":305,"line_end":305,"column_start":35,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1594},"to":{"krate":5,"index":1438}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":304440,"byte_end":304452,"line_start":322,"line_end":322,"column_start":37,"column_end":49},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1594},"to":{"krate":5,"index":1444}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":304815,"byte_end":304827,"line_start":338,"line_end":338,"column_start":43,"column_end":55},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1594},"to":{"krate":5,"index":1450}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":305189,"byte_end":305210,"line_start":354,"line_end":354,"column_start":44,"column_end":65},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1596},"to":{"krate":5,"index":1456}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":305647,"byte_end":305659,"line_start":375,"line_end":375,"column_start":35,"column_end":47},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1599},"to":{"krate":5,"index":1462}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":307588,"byte_end":307604,"line_start":437,"line_end":437,"column_start":28,"column_end":44},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1638},"to":{"krate":5,"index":1387}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":312014,"byte_end":312026,"line_start":613,"line_end":613,"column_start":38,"column_end":50},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1599},"to":{"krate":5,"index":1473}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/value/ser.rs","byte_start":313628,"byte_end":313650,"line_start":659,"line_end":659,"column_start":45,"column_end":67},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1603},"to":{"krate":5,"index":1480}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":323878,"byte_end":323883,"line_start":14,"line_end":14,"column_start":18,"column_end":23},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1713},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":323995,"byte_end":324000,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/io/core.rs","byte_start":324933,"byte_end":324936,"line_start":60,"line_end":60,"column_start":16,"column_end":19},"kind":{"Impl":{"id":149}},"from":{"krate":4,"index":4556},"to":{"krate":0,"index":1721}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326237,"byte_end":326238,"line_start":36,"line_end":36,"column_start":13,"column_end":14},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2745},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":326306,"byte_end":326312,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":332712,"byte_end":332718,"line_start":257,"line_end":257,"column_start":23,"column_end":29},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2734},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":333223,"byte_end":333229,"line_start":273,"line_end":273,"column_start":16,"column_end":22},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2734},"to":{"krate":1,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":333960,"byte_end":333966,"line_start":300,"line_end":300,"column_start":20,"column_end":26},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2734},"to":{"krate":5,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":334718,"byte_end":334724,"line_start":328,"line_end":328,"column_start":32,"column_end":38},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2734},"to":{"krate":5,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":334920,"byte_end":334933,"line_start":336,"line_end":336,"column_start":36,"column_end":49},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1769},"to":{"krate":5,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":340235,"byte_end":340241,"line_start":518,"line_end":518,"column_start":33,"column_end":39},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2734},"to":{"krate":5,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":343567,"byte_end":343573,"line_start":622,"line_end":622,"column_start":29,"column_end":35},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2734},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/number.rs","byte_start":346594,"byte_end":346600,"line_start":732,"line_end":732,"column_start":6,"column_end":12},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":347793,"byte_end":347799,"line_start":23,"line_end":23,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":1847},"to":{"krate":0,"index":1804}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":351446,"byte_end":351455,"line_start":127,"line_end":127,"column_start":27,"column_end":36},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1823},"to":{"krate":1,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":358458,"byte_end":358467,"line_start":397,"line_end":397,"column_start":10,"column_end":19},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":361305,"byte_end":361314,"line_start":478,"line_end":478,"column_start":30,"column_end":39},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1839},"to":{"krate":0,"index":1847}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":361345,"byte_end":361354,"line_start":480,"line_end":480,"column_start":23,"column_end":32},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1839},"to":{"krate":0,"index":1804}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":365004,"byte_end":365011,"line_start":607,"line_end":607,"column_start":10,"column_end":17},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":365300,"byte_end":365307,"line_start":618,"line_end":618,"column_start":30,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1847}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":365338,"byte_end":365345,"line_start":620,"line_end":620,"column_start":23,"column_end":30},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1804}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":369082,"byte_end":369088,"line_start":770,"line_end":770,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1847},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":369111,"byte_end":369120,"line_start":771,"line_end":771,"column_start":20,"column_end":29},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1839},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde_json-1.0.61/src/read.rs","byte_start":369147,"byte_end":369154,"line_start":772,"line_end":772,"column_start":20,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1920}}]}