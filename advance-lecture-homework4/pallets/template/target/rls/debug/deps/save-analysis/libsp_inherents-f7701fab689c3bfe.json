{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_inherents","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"derive_more\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"std\"","-C","metadata=f7701fab689c3bfe","-C","extra-filename=-f7701fab689c3bfe","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps","--extern","derive_more=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libderive_more-8dff86660ecb1a07.so","--extern","codec=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libparity_scale_codec-c2a3c300da64cba4.rmeta","--extern","parking_lot=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libparking_lot-630a5497b3c4f85c.rmeta","--extern","sp_core=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsp_core-717447d3c8b452e7.rmeta","--extern","sp_std=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsp_std-e8e779e008c5c2c6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsp_inherents-f7701fab689c3bfe.rmeta"},"prelude":{"crate_id":{"name":"sp_inherents","disambiguator":[10785847656675007332,11321297868410126711]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":18,"id":{"name":"parity_scale_codec","disambiguator":[16439007312830197035,13769093477079864056]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[15916895702609288415,13390909414312069258]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":20,"id":{"name":"arrayvec","disambiguator":[9711399210076819589,6533224003713073282]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[7351640255773626293,2315590138104183949]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":22,"id":{"name":"serde","disambiguator":[18094986483354249175,15403000118412511765]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":23,"id":{"name":"serde_derive","disambiguator":[2422799003874411447,4301428410593763920]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":24,"id":{"name":"sp_std","disambiguator":[7356154292131214206,15539128417196248828]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":25,"id":{"name":"parking_lot","disambiguator":[4673953683555930918,2566291569203134280]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":26,"id":{"name":"lock_api","disambiguator":[12216129644845520116,17168985521050561292]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":27,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":28,"id":{"name":"parking_lot_core","disambiguator":[9723357634030298779,6709165033563235635]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":29,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":30,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":31,"id":{"name":"libc","disambiguator":[6571333170903906260,2103687221578517612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","num":32,"id":{"name":"derive_more","disambiguator":[2698756104843969994,14444477136067550206]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":686,"byte_end":16938,"line_start":18,"line_end":593,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":686,"byte_end":16938,"line_start":18,"line_end":593,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":161},{"krate":0,"index":5},{"krate":0,"index":163},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":79},{"krate":0,"index":99},{"krate":0,"index":89},{"krate":0,"index":84},{"krate":0,"index":82},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":101},{"krate":0,"index":120},{"krate":0,"index":118},{"krate":0,"index":108},{"krate":0,"index":103},{"krate":0,"index":23},{"krate":0,"index":122},{"krate":0,"index":133},{"krate":0,"index":128},{"krate":0,"index":126},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":44},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":141},{"krate":0,"index":46},{"krate":0,"index":58},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72}],"decl_id":null,"docs":" Provides types and traits for creating and checking inherents.","sig":null,"attributes":[{"value":"/ Provides types and traits for creating and checking inherents.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":686,"byte_end":752,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":753,"byte_end":756,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Each inherent is added to a produced block. Each runtime decides on which inherents it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":757,"byte_end":847,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ wants to attach to its blocks. All data that is required for the runtime to create the inherents","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":848,"byte_end":948,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ is stored in the `InherentData`. This `InherentData` is constructed by the node and given to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":949,"byte_end":1045,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ the runtime.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1046,"byte_end":1062,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1063,"byte_end":1066,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Types that provide data for inherents, should implement `InherentDataProvider` and need to be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1067,"byte_end":1164,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/ registered at `InherentDataProviders`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1165,"byte_end":1207,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1208,"byte_end":1211,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the runtime, modules need to implement `ProvideInherent` when they can create and/or check","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1212,"byte_end":1309,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ inherents. By implementing `ProvideInherent`, a module is not enforced to create an inherent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1310,"byte_end":1407,"line_start":29,"line_end":29,"column_start":1,"column_end":98}},{"value":"/ A module can also just check given inherents. For using a module as inherent provider, it needs","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1408,"byte_end":1507,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/ to be registered by the `construct_runtime!` macro. The macro documentation gives more","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1508,"byte_end":1598,"line_start":31,"line_end":31,"column_start":1,"column_end":91}},{"value":"/ information on how that is done.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1599,"byte_end":1635,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"warn(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1680,"byte_end":1702,"line_start":35,"line_end":35,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":79},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2068,"byte_end":2073,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that can occur within the inherent data system.\n","sig":null,"attributes":[{"value":"/ An error that can occur within the inherent data system.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1917,"byte_end":1977,"line_start":47,"line_end":47,"column_start":1,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":1978,"byte_end":2001,"line_start":48,"line_end":48,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2291,"byte_end":2302,"line_start":62,"line_end":62,"column_start":9,"column_end":20},"name":"into_string","qualname":"<Error>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert this error into a `String`.\n","sig":null,"attributes":[{"value":"/ Convert this error into a `String`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2243,"byte_end":2282,"line_start":61,"line_end":61,"column_start":2,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2668,"byte_end":2686,"line_start":80,"line_end":80,"column_start":10,"column_end":28},"name":"InherentIdentifier","qualname":"::InherentIdentifier","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an inherent.\n","sig":null,"attributes":[{"value":"/ An identifier for an inherent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2624,"byte_end":2658,"line_start":79,"line_end":79,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":101},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2793,"byte_end":2805,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"InherentData","qualname":"::InherentData","value":"InherentData {  }","parent":null,"children":[{"krate":0,"index":102}],"decl_id":null,"docs":" Inherent data to include in a block.\n","sig":null,"attributes":[{"value":"/ Inherent data to include in a block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2699,"byte_end":2739,"line_start":82,"line_end":82,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2986,"byte_end":2989,"line_start":91,"line_end":91,"column_start":9,"column_end":12},"name":"new","qualname":"<InherentData>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2951,"byte_end":2977,"line_start":90,"line_end":90,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3364,"byte_end":3372,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"name":"put_data","qualname":"<InherentData>::put_data","value":"pub fn put_data<I: codec::Encode>(&mut Self, InherentIdentifier, &I)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Put data for an inherent into the internal storage.","sig":null,"attributes":[{"value":"/ Put data for an inherent into the internal storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3025,"byte_end":3080,"line_start":95,"line_end":95,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3082,"byte_end":3085,"line_start":96,"line_end":96,"column_start":2,"column_end":5}},{"value":"/ # Return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3087,"byte_end":3099,"line_start":97,"line_end":97,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3101,"byte_end":3104,"line_start":98,"line_end":98,"column_start":2,"column_end":5}},{"value":"/ Returns `Ok(())` if the data could be inserted and no data for an inherent with the same","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3106,"byte_end":3198,"line_start":99,"line_end":99,"column_start":2,"column_end":94}},{"value":"/ identifier existed, otherwise an error is returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3200,"byte_end":3255,"line_start":100,"line_end":100,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3257,"byte_end":3260,"line_start":101,"line_end":101,"column_start":2,"column_end":5}},{"value":"/ Inherent identifiers need to be unique, otherwise decoding of these values will not work!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3262,"byte_end":3355,"line_start":102,"line_end":102,"column_start":2,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3812,"byte_end":3824,"line_start":122,"line_end":122,"column_start":9,"column_end":21},"name":"replace_data","qualname":"<InherentData>::replace_data","value":"pub fn replace_data<I: codec::Encode>(&mut Self, InherentIdentifier, &I)","parent":null,"children":[],"decl_id":null,"docs":" Replace the data for an inherent.","sig":null,"attributes":[{"value":"/ Replace the data for an inherent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3707,"byte_end":3744,"line_start":119,"line_end":119,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3746,"byte_end":3749,"line_start":120,"line_end":120,"column_start":2,"column_end":5}},{"value":"/ If it does not exist, the data is just inserted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3751,"byte_end":3803,"line_start":121,"line_end":121,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4243,"byte_end":4251,"line_start":137,"line_end":137,"column_start":9,"column_end":17},"name":"get_data","qualname":"<InherentData>::get_data","value":"pub fn get_data<I: codec::Decode>(&Self, &InherentIdentifier)\n-> Result<Option<I>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the data for the requested inherent.","sig":null,"attributes":[{"value":"/ Returns the data for the requested inherent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":3968,"byte_end":4016,"line_start":130,"line_end":130,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4018,"byte_end":4021,"line_start":131,"line_end":131,"column_start":2,"column_end":5}},{"value":"/ # Return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4023,"byte_end":4035,"line_start":132,"line_end":132,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4037,"byte_end":4040,"line_start":133,"line_end":133,"column_start":2,"column_end":5}},{"value":"/ - `Ok(Some(I))` if the data could be found and deserialized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4042,"byte_end":4106,"line_start":134,"line_end":134,"column_start":2,"column_end":66}},{"value":"/ - `Ok(None)` if the data could not be found.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4108,"byte_end":4156,"line_start":135,"line_end":135,"column_start":2,"column_end":50}},{"value":"/ - `Err(_)` if the data could be found, but deserialization did not work.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4158,"byte_end":4234,"line_start":136,"line_end":136,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4627,"byte_end":4630,"line_start":153,"line_end":153,"column_start":9,"column_end":12},"name":"len","qualname":"<InherentData>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of inherents in this instance\n","sig":null,"attributes":[{"value":"/ Get the number of inherents in this instance","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4570,"byte_end":4618,"line_start":152,"line_end":152,"column_start":2,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4980,"byte_end":5000,"line_start":165,"line_end":165,"column_start":12,"column_end":32},"name":"CheckInherentsResult","qualname":"::CheckInherentsResult","value":"CheckInherentsResult {  }","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" The result of checking inherents.","sig":null,"attributes":[{"value":"/ The result of checking inherents.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4673,"byte_end":4710,"line_start":158,"line_end":158,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4711,"byte_end":4714,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ It either returns okay for all checks, stores all occurred errors or just one fatal error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4715,"byte_end":4809,"line_start":160,"line_end":160,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4810,"byte_end":4813,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When a fatal error occurs, all other errors are removed and the implementation needs to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4814,"byte_end":4905,"line_start":162,"line_end":162,"column_start":1,"column_end":92}},{"value":"/ abort checking inherents.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":4906,"byte_end":4935,"line_start":163,"line_end":163,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5396,"byte_end":5399,"line_start":186,"line_end":186,"column_start":9,"column_end":12},"name":"new","qualname":"<CheckInherentsResult>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5361,"byte_end":5387,"line_start":185,"line_end":185,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5690,"byte_end":5699,"line_start":198,"line_end":198,"column_start":9,"column_end":18},"name":"put_error","qualname":"<CheckInherentsResult>::put_error","value":"pub fn put_error<E: codec::Encode +\n                 IsFatalError>(&mut Self, InherentIdentifier, &E)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Put an error into the result.","sig":null,"attributes":[{"value":"/ Put an error into the result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5435,"byte_end":5468,"line_start":190,"line_end":190,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5470,"byte_end":5473,"line_start":191,"line_end":191,"column_start":2,"column_end":5}},{"value":"/ This makes this result resolve to `ok() == false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5475,"byte_end":5529,"line_start":192,"line_end":192,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5531,"byte_end":5534,"line_start":193,"line_end":193,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5536,"byte_end":5552,"line_start":194,"line_end":194,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5554,"byte_end":5557,"line_start":195,"line_end":195,"column_start":2,"column_end":5}},{"value":"/ - identifier - The identifier of the inherent that generated the error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5559,"byte_end":5634,"line_start":196,"line_end":196,"column_start":2,"column_end":77}},{"value":"/ - error - The error that will be encoded.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5636,"byte_end":5681,"line_start":197,"line_end":197,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6442,"byte_end":6451,"line_start":227,"line_end":227,"column_start":9,"column_end":18},"name":"get_error","qualname":"<CheckInherentsResult>::get_error","value":"pub fn get_error<E: codec::Decode>(&Self, &InherentIdentifier)\n-> Result<Option<E>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get an error out of the result.","sig":null,"attributes":[{"value":"/ Get an error out of the result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6177,"byte_end":6212,"line_start":220,"line_end":220,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6214,"byte_end":6217,"line_start":221,"line_end":221,"column_start":2,"column_end":5}},{"value":"/ # Return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6219,"byte_end":6231,"line_start":222,"line_end":222,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6233,"byte_end":6236,"line_start":223,"line_end":223,"column_start":2,"column_end":5}},{"value":"/ - `Ok(Some(I))` if the error could be found and deserialized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6238,"byte_end":6303,"line_start":224,"line_end":224,"column_start":2,"column_end":67}},{"value":"/ - `Ok(None)` if the error could not be found.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6305,"byte_end":6354,"line_start":225,"line_end":225,"column_start":2,"column_end":51}},{"value":"/ - `Err(_)` if the error could be found, but deserialization did not work.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6356,"byte_end":6433,"line_start":226,"line_end":226,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6652,"byte_end":6663,"line_start":235,"line_end":235,"column_start":9,"column_end":20},"name":"into_errors","qualname":"<CheckInherentsResult>::into_errors","value":"pub fn into_errors(Self) -> IntoIter<InherentIdentifier, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into an iterator over all contained errors.\n","sig":null,"attributes":[{"value":"/ Convert into an iterator over all contained errors.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6588,"byte_end":6643,"line_start":234,"line_end":234,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6780,"byte_end":6782,"line_start":240,"line_end":240,"column_start":9,"column_end":11},"name":"ok","qualname":"<CheckInherentsResult>::ok","value":"pub fn ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this result ok?\n","sig":null,"attributes":[{"value":"/ Is this result ok?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6749,"byte_end":6771,"line_start":239,"line_end":239,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6852,"byte_end":6863,"line_start":245,"line_end":245,"column_start":9,"column_end":20},"name":"fatal_error","qualname":"<CheckInherentsResult>::fatal_error","value":"pub fn fatal_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a fatal error?\n","sig":null,"attributes":[{"value":"/ Is this a fatal error?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6817,"byte_end":6843,"line_start":244,"line_end":244,"column_start":2,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7223,"byte_end":7244,"line_start":262,"line_end":262,"column_start":12,"column_end":33},"name":"InherentDataProviders","qualname":"::InherentDataProviders","value":"InherentDataProviders {  }","parent":null,"children":[{"krate":0,"index":140}],"decl_id":null,"docs":" All `InherentData` providers.\n","sig":null,"attributes":[{"value":"/ All `InherentData` providers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7128,"byte_end":7161,"line_start":259,"line_end":259,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7162,"byte_end":7185,"line_start":260,"line_end":260,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7413,"byte_end":7416,"line_start":269,"line_end":269,"column_start":9,"column_end":12},"name":"new","qualname":"<InherentDataProviders>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7378,"byte_end":7404,"line_start":268,"line_end":268,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7724,"byte_end":7741,"line_start":281,"line_end":281,"column_start":9,"column_end":26},"name":"register_provider","qualname":"<InherentDataProviders>::register_provider","value":"pub fn register_provider<P: ProvideInherentData + Send + Sync +\n                         'static>(&Self, P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Register an `InherentData` provider.","sig":null,"attributes":[{"value":"/ Register an `InherentData` provider.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7452,"byte_end":7492,"line_start":273,"line_end":273,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7494,"byte_end":7497,"line_start":274,"line_end":274,"column_start":2,"column_end":5}},{"value":"/ The registration order is preserved and this order will also be used when creating the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7499,"byte_end":7589,"line_start":275,"line_end":275,"column_start":2,"column_end":92}},{"value":"/ inherent data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7591,"byte_end":7609,"line_start":276,"line_end":276,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7611,"byte_end":7614,"line_start":277,"line_end":277,"column_start":2,"column_end":5}},{"value":"/ # Result","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7616,"byte_end":7628,"line_start":278,"line_end":278,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7630,"byte_end":7633,"line_start":279,"line_end":279,"column_start":2,"column_end":5}},{"value":"/ Will return an error, if a provider with the same identifier already exists.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7635,"byte_end":7715,"line_start":280,"line_end":280,"column_start":2,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":8223,"byte_end":8235,"line_start":300,"line_end":300,"column_start":9,"column_end":21},"name":"has_provider","qualname":"<InherentDataProviders>::has_provider","value":"pub fn has_provider(&Self, &InherentIdentifier) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a provider for the given identifier exists.\n","sig":null,"attributes":[{"value":"/ Returns if a provider for the given identifier exists.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":8156,"byte_end":8214,"line_start":299,"line_end":299,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":8403,"byte_end":8423,"line_start":305,"line_end":305,"column_start":9,"column_end":29},"name":"create_inherent_data","qualname":"<InherentDataProviders>::create_inherent_data","value":"pub fn create_inherent_data(&Self) -> Result<InherentData, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create inherent data.\n","sig":null,"attributes":[{"value":"/ Create inherent data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":8369,"byte_end":8394,"line_start":304,"line_end":304,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":8848,"byte_end":8863,"line_start":317,"line_end":317,"column_start":9,"column_end":24},"name":"error_to_string","qualname":"<InherentDataProviders>::error_to_string","value":"pub fn error_to_string(&Self, &InherentIdentifier, &[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts a given encoded error into a `String`.","sig":null,"attributes":[{"value":"/ Converts a given encoded error into a `String`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":8693,"byte_end":8744,"line_start":314,"line_end":314,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":8746,"byte_end":8749,"line_start":315,"line_end":315,"column_start":2,"column_end":5}},{"value":"/ Useful if the implementation encounters an error for an identifier it does not know.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":8751,"byte_end":8839,"line_start":316,"line_end":316,"column_start":2,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9455,"byte_end":9474,"line_start":341,"line_end":341,"column_start":11,"column_end":30},"name":"ProvideInherentData","qualname":"::ProvideInherentData","value":"ProvideInherentData","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Something that provides inherent data.\n","sig":null,"attributes":[{"value":"/ Something that provides inherent data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9378,"byte_end":9420,"line_start":339,"line_end":339,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9421,"byte_end":9444,"line_start":340,"line_end":340,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9586,"byte_end":9597,"line_start":344,"line_end":344,"column_start":5,"column_end":16},"name":"on_register","qualname":"::ProvideInherentData::on_register","value":"pub fn on_register(&Self, &InherentDataProviders) -> Result<(), Error>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Is called when this inherent data provider is registered at the given\n `InherentDataProviders`.\n","sig":null,"attributes":[{"value":"/ Is called when this inherent data provider is registered at the given","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9478,"byte_end":9551,"line_start":342,"line_end":342,"column_start":2,"column_end":75}},{"value":"/ `InherentDataProviders`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9553,"byte_end":9581,"line_start":343,"line_end":343,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9740,"byte_end":9759,"line_start":349,"line_end":349,"column_start":5,"column_end":24},"name":"inherent_identifier","qualname":"::ProvideInherentData::inherent_identifier","value":"pub fn inherent_identifier(&Self) -> &'static InherentIdentifier","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The identifier of the inherent for that data will be provided.\n","sig":null,"attributes":[{"value":"/ The identifier of the inherent for that data will be provided.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9669,"byte_end":9735,"line_start":348,"line_end":348,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9942,"byte_end":9963,"line_start":354,"line_end":354,"column_start":5,"column_end":26},"name":"provide_inherent_data","qualname":"::ProvideInherentData::provide_inherent_data","value":"pub fn provide_inherent_data(&Self, &mut InherentData) -> Result<(), Error>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Provide inherent data that should be included in a block.","sig":null,"attributes":[{"value":"/ Provide inherent data that should be included in a block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9801,"byte_end":9862,"line_start":351,"line_end":351,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9864,"byte_end":9867,"line_start":352,"line_end":352,"column_start":2,"column_end":5}},{"value":"/ The data should be stored in the given `InherentData` structure.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":9869,"byte_end":9937,"line_start":353,"line_end":353,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10160,"byte_end":10175,"line_start":359,"line_end":359,"column_start":5,"column_end":20},"name":"error_to_string","qualname":"::ProvideInherentData::error_to_string","value":"pub fn error_to_string(&Self, &[u8]) -> Option<String>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Convert the given encoded error to a string.","sig":null,"attributes":[{"value":"/ Convert the given encoded error to a string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10029,"byte_end":10077,"line_start":356,"line_end":356,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10079,"byte_end":10082,"line_start":357,"line_end":357,"column_start":2,"column_end":5}},{"value":"/ If the given error could not be decoded, `None` should be returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10084,"byte_end":10155,"line_start":358,"line_end":358,"column_start":2,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11047,"byte_end":11059,"line_start":379,"line_end":379,"column_start":11,"column_end":23},"name":"IsFatalError","qualname":"::IsFatalError","value":"IsFatalError","parent":null,"children":[{"krate":0,"index":65}],"decl_id":null,"docs":" Did we encounter a fatal error while checking an inherent?","sig":null,"attributes":[{"value":"/ Did we encounter a fatal error while checking an inherent?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10513,"byte_end":10575,"line_start":371,"line_end":371,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10576,"byte_end":10579,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ A fatal error is everything that fails while checking an inherent error, e.g. the inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10580,"byte_end":10674,"line_start":373,"line_end":373,"column_start":1,"column_end":95}},{"value":"/ was not found, could not be decoded etc.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10675,"byte_end":10719,"line_start":374,"line_end":374,"column_start":1,"column_end":45}},{"value":"/ Then there are cases where you not want the inherent check to fail, but report that there is an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10720,"byte_end":10819,"line_start":375,"line_end":375,"column_start":1,"column_end":100}},{"value":"/ action required. For example a timestamp of a block is in the future, the timestamp is still","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10820,"byte_end":10916,"line_start":376,"line_end":376,"column_start":1,"column_end":97}},{"value":"/ correct, but it is required to verify the block at a later time again and then the inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":10917,"byte_end":11012,"line_start":377,"line_end":377,"column_start":1,"column_end":96}},{"value":"/ check will succeed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11013,"byte_end":11036,"line_start":378,"line_end":378,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11094,"byte_end":11108,"line_start":381,"line_end":381,"column_start":5,"column_end":19},"name":"is_fatal_error","qualname":"::IsFatalError::is_fatal_error","value":"pub fn is_fatal_error(&Self) -> bool","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Is this a fatal error?\n","sig":null,"attributes":[{"value":"/ Is this a fatal error?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11063,"byte_end":11089,"line_start":380,"line_end":380,"column_start":2,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":145},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11234,"byte_end":11248,"line_start":386,"line_end":386,"column_start":12,"column_end":26},"name":"MakeFatalError","qualname":"::MakeFatalError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary to make any given error resolve to `is_fatal_error() == true`.\n","sig":null,"attributes":[{"value":"/ Auxiliary to make any given error resolve to `is_fatal_error() == true`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11128,"byte_end":11204,"line_start":384,"line_end":384,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":72},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11566,"byte_end":11581,"line_start":401,"line_end":401,"column_start":11,"column_end":26},"name":"ProvideInherent","qualname":"::ProvideInherent","value":"ProvideInherent","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" A module that provides an inherent and may also verifies it.\n","sig":null,"attributes":[{"value":"/ A module that provides an inherent and may also verifies it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11491,"byte_end":11555,"line_start":400,"line_end":400,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":73},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11624,"byte_end":11628,"line_start":403,"line_end":403,"column_start":7,"column_end":11},"name":"Call","qualname":"::ProvideInherent::Call","value":"type Call;","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" The call type of the module.\n","sig":null,"attributes":[{"value":"/ The call type of the module.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11585,"byte_end":11617,"line_start":402,"line_end":402,"column_start":2,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11681,"byte_end":11686,"line_start":405,"line_end":405,"column_start":7,"column_end":12},"name":"Error","qualname":"::ProvideInherent::Error","value":"type Error: codec::Encode + IsFatalError;","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" The error returned by `check_inherent`.\n","sig":null,"attributes":[{"value":"/ The error returned by `check_inherent`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11631,"byte_end":11674,"line_start":404,"line_end":404,"column_start":2,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11777,"byte_end":11796,"line_start":407,"line_end":407,"column_start":8,"column_end":27},"name":"INHERENT_IDENTIFIER","qualname":"::ProvideInherent::INHERENT_IDENTIFIER","value":"self::InherentIdentifier","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" The inherent identifier used by this inherent.\n","sig":null,"attributes":[{"value":"/ The inherent identifier used by this inherent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11719,"byte_end":11769,"line_start":406,"line_end":406,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11886,"byte_end":11901,"line_start":410,"line_end":410,"column_start":5,"column_end":20},"name":"create_inherent","qualname":"::ProvideInherent::create_inherent","value":"pub fn create_inherent(&InherentData) -> Option<Self::Call>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Create an inherent out of the given `InherentData`.\n","sig":null,"attributes":[{"value":"/ Create an inherent out of the given `InherentData`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11826,"byte_end":11881,"line_start":409,"line_end":409,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":12160,"byte_end":12180,"line_start":415,"line_end":415,"column_start":5,"column_end":25},"name":"is_inherent_required","qualname":"::ProvideInherent::is_inherent_required","value":"pub fn is_inherent_required(&InherentData)\n-> Result<Option<Self::Error>, Self::Error>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" If `Some`, indicates that an inherent is required. Check will return the inner error if no\n inherent is found. If `Err`, indicates that the check failed and further operations should\n be aborted.\n","sig":null,"attributes":[{"value":"/ If `Some`, indicates that an inherent is required. Check will return the inner error if no","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11948,"byte_end":12042,"line_start":412,"line_end":412,"column_start":2,"column_end":96}},{"value":"/ inherent is found. If `Err`, indicates that the check failed and further operations should","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":12044,"byte_end":12138,"line_start":413,"line_end":413,"column_start":2,"column_end":96}},{"value":"/ be aborted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":12140,"byte_end":12155,"line_start":414,"line_end":414,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":12366,"byte_end":12380,"line_start":419,"line_end":419,"column_start":5,"column_end":19},"name":"check_inherent","qualname":"::ProvideInherent::check_inherent","value":"pub fn check_inherent(&Self::Call, &InherentData) -> Result<(), Self::Error>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Check the given inherent if it is valid.\n Checking the inherent is optional and can be omitted.\n","sig":null,"attributes":[{"value":"/ Check the given inherent if it is valid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":12258,"byte_end":12302,"line_start":417,"line_end":417,"column_start":2,"column_end":46}},{"value":"/ Checking the inherent is optional and can be omitted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":12304,"byte_end":12361,"line_start":418,"line_end":418,"column_start":2,"column_end":59}}]}],"impls":[{"id":4,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2142,"byte_end":2147,"line_start":53,"line_end":53,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2234,"byte_end":2239,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2935,"byte_end":2947,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5196,"byte_end":5216,"line_start":174,"line_end":174,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5337,"byte_end":5357,"line_start":184,"line_end":184,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6949,"byte_end":6969,"line_start":251,"line_end":251,"column_start":20,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7353,"byte_end":7374,"line_start":267,"line_end":267,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11307,"byte_end":11321,"line_start":388,"line_end":388,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11422,"byte_end":11436,"line_start":394,"line_end":394,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2142,"byte_end":2147,"line_start":53,"line_end":53,"column_start":35,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":79},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2234,"byte_end":2239,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":2935,"byte_end":2947,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5196,"byte_end":5216,"line_start":174,"line_end":174,"column_start":18,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":5337,"byte_end":5357,"line_start":184,"line_end":184,"column_start":6,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":6949,"byte_end":6969,"line_start":251,"line_end":251,"column_start":20,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":7353,"byte_end":7374,"line_start":267,"line_end":267,"column_start":6,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11307,"byte_end":11321,"line_start":388,"line_end":388,"column_start":36,"column_end":50},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":145},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-inherents-2.0.1/src/lib.rs","byte_start":11422,"byte_end":11436,"line_start":394,"line_end":394,"column_start":41,"column_end":55},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":145},"to":{"krate":0,"index":64}}]}