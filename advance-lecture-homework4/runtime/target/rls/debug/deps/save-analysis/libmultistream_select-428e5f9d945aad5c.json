{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","multistream_select","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=428e5f9d945aad5c","-C","extra-filename=-428e5f9d945aad5c","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--extern","bytes=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libbytes-94736955f1f3c1e5.rmeta","--extern","futures=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libfutures-d778134cf68f607e.rmeta","--extern","log=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/liblog-d3884e8e45296dbc.rmeta","--extern","pin_project=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libpin_project-03445ec3fc631bdf.rmeta","--extern","smallvec=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libsmallvec-ec7d1f646ba11906.rmeta","--extern","unsigned_varint=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libunsigned_varint-fb9adf870b0df7f3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libmultistream_select-428e5f9d945aad5c.rmeta"},"prelude":{"crate_id":{"name":"multistream_select","disambiguator":[4581995740609541529,7674023772695448945]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":18,"id":{"name":"futures","disambiguator":[2667762410459537304,12668079678896007955]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":19,"id":{"name":"futures_core","disambiguator":[6091960194481922876,16111170612509824982]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":20,"id":{"name":"futures_util","disambiguator":[14692675012436110279,4755382690576314481]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":21,"id":{"name":"pin_utils","disambiguator":[14006933666536538846,10325894616585527374]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":22,"id":{"name":"proc_macro_hack","disambiguator":[16105205298844134494,461428951662562663]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":23,"id":{"name":"futures_task","disambiguator":[5915565091226735904,10965922465830280011]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":24,"id":{"name":"once_cell","disambiguator":[8114906871986815057,215681476928989787]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":25,"id":{"name":"parking_lot","disambiguator":[10061552480279027668,1018443910502703418]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":26,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":27,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":28,"id":{"name":"lock_api","disambiguator":[1370039747192521928,13370481355962836312]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":29,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":30,"id":{"name":"parking_lot_core","disambiguator":[6910326554005380636,13334944336695677100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","num":31,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":32,"id":{"name":"libc","disambiguator":[6571333170903906260,2103687221578517612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":33,"id":{"name":"futures_sink","disambiguator":[8740317669186772490,9491136511499774314]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":34,"id":{"name":"pin_project_lite","disambiguator":[11050117765846224188,12097442257352640106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":35,"id":{"name":"futures_channel","disambiguator":[14121995652586820567,18396968508109721308]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":36,"id":{"name":"slab","disambiguator":[7754159738850082191,972067075306833933]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":37,"id":{"name":"futures_io","disambiguator":[5832703695225160921,17043717576790152055]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":38,"id":{"name":"futures_macro","disambiguator":[7362818316734880593,477739355724548135]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":39,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":40,"id":{"name":"futures_executor","disambiguator":[4755410773836412554,15037727782313357647]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":41,"id":{"name":"num_cpus","disambiguator":[17237370829952825392,8933627738761765040]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","num":42,"id":{"name":"bytes","disambiguator":[11926726182971503316,16956388010612504231]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","num":43,"id":{"name":"pin_project","disambiguator":[4516522718064618682,13605147468581664646]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","num":44,"id":{"name":"pin_project_internal","disambiguator":[9916441545922032267,6684648573608469002]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","num":45,"id":{"name":"unsigned_varint","disambiguator":[15050758532175817785,15773287988082815838]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":46,"id":{"name":"log","disambiguator":[17254312244691266404,17120298729262202934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","num":47,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1124,"byte_end":4934,"line_start":21,"line_end":107,"column_start":1,"column_end":78}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":611},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4684,"byte_end":4694,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"Negotiated","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4696,"byte_end":4714,"line_start":104,"line_end":104,"column_start":40,"column_end":58},"alias_span":null,"name":"NegotiatedComplete","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":708},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4716,"byte_end":4732,"line_start":104,"line_end":104,"column_start":60,"column_end":76},"alias_span":null,"name":"NegotiationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":852},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4760,"byte_end":4773,"line_start":105,"line_end":105,"column_start":26,"column_end":39},"alias_span":null,"name":"ProtocolError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4775,"byte_end":4782,"line_start":105,"line_end":105,"column_start":41,"column_end":48},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4815,"byte_end":4834,"line_start":106,"line_end":106,"column_start":31,"column_end":50},"alias_span":null,"name":"dialer_select_proto","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4836,"byte_end":4854,"line_start":106,"line_end":106,"column_start":52,"column_end":70},"alias_span":null,"name":"DialerSelectFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4889,"byte_end":4910,"line_start":107,"line_end":107,"column_start":33,"column_end":54},"alias_span":null,"name":"listener_select_proto","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":557},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4912,"byte_end":4932,"line_start":107,"line_end":107,"column_start":56,"column_end":76},"alias_span":null,"name":"ListenerSelectFuture","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1124,"byte_end":4934,"line_start":21,"line_end":107,"column_start":1,"column_end":78},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":80},{"krate":0,"index":134},{"krate":0,"index":184},{"krate":0,"index":237},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"decl_id":null,"docs":" # Multistream-select Protocol Negotiation","sig":null,"attributes":[{"value":"/ # Multistream-select Protocol Negotiation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1124,"byte_end":1169,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1170,"byte_end":1173,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This crate implements the `multistream-select` protocol, which is the protocol","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1174,"byte_end":1256,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/ used by libp2p to negotiate which application-layer protocol to use with the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1257,"byte_end":1337,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ remote on a connection or substream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1338,"byte_end":1378,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1379,"byte_end":1382,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ > **Note**: This crate is used primarily by core components of *libp2p* and it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1383,"byte_end":1465,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ > is usually not used directly on its own.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1466,"byte_end":1512,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Roles","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1517,"byte_end":1529,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1530,"byte_end":1533,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Two peers using the multistream-select negotiation protocol on an I/O stream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1534,"byte_end":1614,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ are distinguished by their role as a _dialer_ (or _initiator_) or as a _listener_","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1615,"byte_end":1700,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ (or _responder_). Thereby the dialer plays the active part, driving the protocol,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1701,"byte_end":1786,"line_start":34,"line_end":34,"column_start":1,"column_end":86}},{"value":"/ whereas the listener reacts to the messages received.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1787,"byte_end":1844,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1845,"byte_end":1848,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The dialer has two options: it can either pick a protocol from the complete list","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1849,"byte_end":1933,"line_start":37,"line_end":37,"column_start":1,"column_end":85}},{"value":"/ of protocols that the listener supports, or it can directly suggest a protocol.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":1934,"byte_end":2017,"line_start":38,"line_end":38,"column_start":1,"column_end":84}},{"value":"/ Either way, a selected protocol is sent to the listener who can either accept (by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2018,"byte_end":2103,"line_start":39,"line_end":39,"column_start":1,"column_end":86}},{"value":"/ echoing the same protocol) or reject (by responding with a message stating","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2104,"byte_end":2182,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ \"not available\"). If a suggested protocol is not available, the dialer may","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2183,"byte_end":2261,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ suggest another protocol. This process continues until a protocol is agreed upon,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2262,"byte_end":2347,"line_start":42,"line_end":42,"column_start":1,"column_end":86}},{"value":"/ yielding a [`Negotiated`](self::Negotiated) stream, or the dialer has run out of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2348,"byte_end":2432,"line_start":43,"line_end":43,"column_start":1,"column_end":85}},{"value":"/ alternatives.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2433,"byte_end":2450,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2451,"byte_end":2454,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ See [`dialer_select_proto`](self::dialer_select_proto) and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2455,"byte_end":2517,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/ [`listener_select_proto`](self::listener_select_proto).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2518,"byte_end":2577,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2578,"byte_end":2581,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## [`Negotiated`](self::Negotiated)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2582,"byte_end":2621,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2622,"byte_end":2625,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When a dialer or listener participating in a negotiation settles","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2626,"byte_end":2694,"line_start":51,"line_end":51,"column_start":1,"column_end":69}},{"value":"/ on a protocol to use, the [`DialerSelectFuture`] respectively","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2695,"byte_end":2760,"line_start":52,"line_end":52,"column_start":1,"column_end":66}},{"value":"/ [`ListenerSelectFuture`] yields a [`Negotiated`](self::Negotiated)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2761,"byte_end":2831,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/ I/O stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2832,"byte_end":2847,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2848,"byte_end":2851,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Notably, when a `DialerSelectFuture` resolves to a `Negotiated`, it may not yet","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2852,"byte_end":2935,"line_start":56,"line_end":56,"column_start":1,"column_end":84}},{"value":"/ have written the last negotiation message to the underlying I/O stream and may","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":2936,"byte_end":3018,"line_start":57,"line_end":57,"column_start":1,"column_end":83}},{"value":"/ still be expecting confirmation for that protocol, despite having settled on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3019,"byte_end":3099,"line_start":58,"line_end":58,"column_start":1,"column_end":81}},{"value":"/ a protocol to use.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3100,"byte_end":3122,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3123,"byte_end":3126,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Similarly, when a `ListenerSelectFuture` resolves to a `Negotiated`, it may not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3127,"byte_end":3210,"line_start":61,"line_end":61,"column_start":1,"column_end":84}},{"value":"/ yet have sent the last negotiation message despite having settled on a protocol","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3211,"byte_end":3294,"line_start":62,"line_end":62,"column_start":1,"column_end":84}},{"value":"/ proposed by the dialer that it supports.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3295,"byte_end":3339,"line_start":63,"line_end":63,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3340,"byte_end":3343,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This behaviour allows both the dialer and the listener to send data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3344,"byte_end":3415,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ relating to the negotiated protocol together with the last negotiation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3416,"byte_end":3490,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ message(s), which, in the case of the dialer only supporting a single","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3491,"byte_end":3564,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ protocol, results in 0-RTT negotiation. Note, however, that a dialer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3565,"byte_end":3637,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/ that performs multiple 0-RTT negotiations in sequence for different","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3638,"byte_end":3709,"line_start":69,"line_end":69,"column_start":1,"column_end":72}},{"value":"/ protocols layered on top of each other may trigger undesirable behaviour","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3710,"byte_end":3786,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ for a listener not supporting one of the intermediate protocols.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3787,"byte_end":3855,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"/ See [`dialer_select_proto`](self::dialer_select_proto).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3856,"byte_end":3915,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3916,"byte_end":3919,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3920,"byte_end":3935,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3936,"byte_end":3939,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ For a dialer:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3940,"byte_end":3957,"line_start":76,"line_end":76,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3958,"byte_end":3961,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3962,"byte_end":3975,"line_start":78,"line_end":78,"column_start":1,"column_end":14}},{"value":"/ # fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3976,"byte_end":3993,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":3994,"byte_end":4028,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ use multistream_select::{dialer_select_proto, Version};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4029,"byte_end":4088,"line_start":81,"line_end":81,"column_start":1,"column_end":60}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4089,"byte_end":4117,"line_start":82,"line_end":82,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4118,"byte_end":4121,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ async_std::task::block_on(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4122,"byte_end":4164,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/     let socket = TcpStream::connect(\"127.0.0.1:10333\").await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4165,"byte_end":4239,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4240,"byte_end":4243,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     let protos = vec![b\"/echo/1.0.0\", b\"/echo/2.5.0\"];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4244,"byte_end":4302,"line_start":87,"line_end":87,"column_start":1,"column_end":59}},{"value":"/     let (protocol, _io) = dialer_select_proto(socket, protos, Version::V1).await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4303,"byte_end":4397,"line_start":88,"line_end":88,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4398,"byte_end":4401,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"Negotiated protocol: {:?}\", protocol);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4402,"byte_end":4458,"line_start":90,"line_end":90,"column_start":1,"column_end":57}},{"value":"/     // You can now use `_io` to communicate with the remote.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4459,"byte_end":4523,"line_start":91,"line_end":91,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4524,"byte_end":4531,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4532,"byte_end":4539,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4540,"byte_end":4547,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/lib.rs","byte_start":4548,"byte_end":4551,"line_start":95,"line_end":95,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":7559,"byte_end":7578,"line_start":48,"line_end":48,"column_start":8,"column_end":27},"name":"dialer_select_proto","qualname":"::dialer_select::dialer_select_proto","value":"pub fn dialer_select_proto<R, I>(R, I, Version)\n-> DialerSelectFuture<R, I::IntoIter> where R: AsyncRead + AsyncWrite,\nI: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that negotiates a protocol on the given I/O stream\n for a peer acting as the _dialer_ (or _initiator_).","sig":null,"attributes":[{"value":"/ Returns a `Future` that negotiates a protocol on the given I/O stream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6376,"byte_end":6449,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ for a peer acting as the _dialer_ (or _initiator_).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6450,"byte_end":6505,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6506,"byte_end":6509,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function is given an I/O stream and a list of protocols and returns a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6510,"byte_end":6588,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ computation that performs the protocol negotiation with the remote. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6589,"byte_end":6664,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ returned `Future` resolves with the name of the negotiated protocol and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6665,"byte_end":6740,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ a [`Negotiated`] I/O stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6741,"byte_end":6773,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6774,"byte_end":6777,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The chosen message flow for protocol negotiation depends on the numbers of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6778,"byte_end":6856,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ supported protocols given. That is, this function delegates to serial or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6857,"byte_end":6933,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ parallel variant based on the number of protocols given. The number of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":6934,"byte_end":7008,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ protocols is determined through the `size_hint` of the given iterator and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":7009,"byte_end":7086,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ thus an inaccurate size estimate may result in a suboptimal choice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":7087,"byte_end":7158,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":7159,"byte_end":7162,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Within the scope of this library, a dialer always commits to a specific","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":7163,"byte_end":7238,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ multistream-select protocol [`Version`], whereas a listener always supports","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":7239,"byte_end":7318,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ all versions supported by this library. Frictionless multistream-select","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":7319,"byte_end":7394,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ protocol upgrades may thus proceed by deployments with updated listeners,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":7395,"byte_end":7472,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ eventually followed by deployments of dialers choosing the newer protocol.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":7473,"byte_end":7551,"line_start":47,"line_end":47,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":27},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":8712,"byte_end":8730,"line_start":76,"line_end":76,"column_start":10,"column_end":28},"name":"DialerSelectFuture","qualname":"::dialer_select::DialerSelectFuture","value":"Either<DialerSelectSeq<R, I>, DialerSelectPar<R, I>>","parent":null,"children":[],"decl_id":null,"docs":" Future, returned by `dialer_select_proto`, which selects a protocol and dialer\n either trying protocols in-order, or by requesting all protocols supported\n by the remote upfront, from which the first protocol found in the dialer's\n list of protocols is selected.\n","sig":null,"attributes":[{"value":"/ Future, returned by `dialer_select_proto`, which selects a protocol and dialer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":8427,"byte_end":8509,"line_start":72,"line_end":72,"column_start":1,"column_end":83}},{"value":"/ either trying protocols in-order, or by requesting all protocols supported","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":8510,"byte_end":8588,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ by the remote upfront, from which the first protocol found in the dialer's","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":8589,"byte_end":8667,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ list of protocols is selected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":8668,"byte_end":8702,"line_start":75,"line_end":75,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":10612,"byte_end":10627,"line_start":136,"line_end":136,"column_start":12,"column_end":27},"name":"DialerSelectSeq","qualname":"::dialer_select::DialerSelectSeq","value":"DialerSelectSeq {  }","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":" A `Future` returned by [`dialer_select_proto_serial`] which negotiates\n a protocol iteratively by considering one protocol after the other.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":10573,"byte_end":10600,"line_start":135,"line_end":135,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":10612,"byte_end":10627,"line_start":136,"line_end":136,"column_start":12,"column_end":27},"name":"__DialerSelectSeq","qualname":"::dialer_select::_::__DialerSelectSeq","value":"__DialerSelectSeq {  }","parent":null,"children":[{"krate":0,"index":369}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":10573,"byte_end":10600,"line_start":135,"line_end":135,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":16620,"byte_end":16635,"line_start":273,"line_end":273,"column_start":12,"column_end":27},"name":"DialerSelectPar","qualname":"::dialer_select::DialerSelectPar","value":"DialerSelectPar {  }","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393}],"decl_id":null,"docs":" A `Future` returned by [`dialer_select_proto_parallel`] which negotiates\n a protocol selectively by considering all supported protocols of the remote\n \"in parallel\".\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":16581,"byte_end":16608,"line_start":272,"line_end":272,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":419},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":16620,"byte_end":16635,"line_start":273,"line_end":273,"column_start":12,"column_end":27},"name":"__DialerSelectPar","qualname":"::dialer_select::_::__DialerSelectPar","value":"__DialerSelectPar {  }","parent":null,"children":[{"krate":0,"index":423}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":16581,"byte_end":16608,"line_start":272,"line_end":272,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":43598,"byte_end":43619,"line_start":38,"line_end":38,"column_start":8,"column_end":29},"name":"listener_select_proto","qualname":"::listener_select::listener_select_proto","value":"pub fn listener_select_proto<R, I>(R, I) -> ListenerSelectFuture<R, I::Item>\nwhere R: AsyncRead + AsyncWrite, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that negotiates a protocol on the given I/O stream\n for a peer acting as the _listener_ (or _responder_).","sig":null,"attributes":[{"value":"/ Returns a `Future` that negotiates a protocol on the given I/O stream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":43191,"byte_end":43264,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ for a peer acting as the _listener_ (or _responder_).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":43265,"byte_end":43322,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":43323,"byte_end":43326,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This function is given an I/O stream and a list of protocols and returns a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":43327,"byte_end":43405,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ computation that performs the protocol negotiation with the remote. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":43406,"byte_end":43481,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ returned `Future` resolves with the name of the negotiated protocol and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":43482,"byte_end":43557,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ a [`Negotiated`] I/O stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":43558,"byte_end":43590,"line_start":37,"line_end":37,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":557},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":44488,"byte_end":44508,"line_start":67,"line_end":67,"column_start":12,"column_end":32},"name":"ListenerSelectFuture","qualname":"::listener_select::ListenerSelectFuture","value":"ListenerSelectFuture {  }","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":562}],"decl_id":null,"docs":" The `Future` returned by [`listener_select_proto`] that performs a\n multistream-select protocol negotiation on an underlying I/O stream.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":44449,"byte_end":44476,"line_start":66,"line_end":66,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":588},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":44488,"byte_end":44508,"line_start":67,"line_end":67,"column_start":12,"column_end":32},"name":"__ListenerSelectFuture","qualname":"::listener_select::_::__ListenerSelectFuture","value":"__ListenerSelectFuture {  }","parent":null,"children":[{"krate":0,"index":592}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":44449,"byte_end":44476,"line_start":66,"line_end":66,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":54774,"byte_end":54784,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"Negotiated","qualname":"::negotiated::Negotiated","value":"Negotiated {  }","parent":null,"children":[{"krate":0,"index":613}],"decl_id":null,"docs":" An I/O stream that has settled on an (application-layer) protocol to use.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":54731,"byte_end":54745,"line_start":38,"line_end":38,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":631},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":54774,"byte_end":54784,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"__Negotiated","qualname":"::negotiated::_::__Negotiated","value":"__Negotiated {  }","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":54731,"byte_end":54745,"line_start":38,"line_end":38,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":54931,"byte_end":54949,"line_start":47,"line_end":47,"column_start":12,"column_end":30},"name":"NegotiatedComplete","qualname":"::negotiated::NegotiatedComplete","value":"NegotiatedComplete {  }","parent":null,"children":[{"krate":0,"index":655}],"decl_id":null,"docs":" A `Future` that waits on the completion of protocol negotiation.\n","sig":null,"attributes":[{"value":"/ A `Future` that waits on the completion of protocol negotiation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":54834,"byte_end":54902,"line_start":45,"line_end":45,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":59074,"byte_end":59082,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"complete","qualname":"<Negotiated<TInner>>::complete","value":"pub fn complete(Self) -> NegotiatedComplete<TInner>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`NegotiatedComplete`] future that waits for protocol\n negotiation to complete.\n","sig":null,"attributes":[{"value":"/ Returns a [`NegotiatedComplete`] future that waits for protocol","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":58962,"byte_end":59029,"line_start":151,"line_end":151,"column_start":5,"column_end":72}},{"value":"/ negotiation to complete.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":59034,"byte_end":59062,"line_start":152,"line_end":152,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":709},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64303,"byte_end":64316,"line_start":291,"line_end":291,"column_start":5,"column_end":18},"name":"ProtocolError","qualname":"::negotiated::NegotiationError::ProtocolError","value":"NegotiationError::ProtocolError(ProtocolError)","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" A protocol error occurred during the negotiation.\n","sig":null,"attributes":[{"value":"/ A protocol error occurred during the negotiation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64245,"byte_end":64298,"line_start":290,"line_end":290,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":712},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64416,"byte_end":64422,"line_start":294,"line_end":294,"column_start":5,"column_end":11},"name":"Failed","qualname":"::negotiated::NegotiationError::Failed","value":"NegotiationError::Failed","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" Protocol negotiation failed because no protocol could be agreed upon.\n","sig":null,"attributes":[{"value":"/ Protocol negotiation failed because no protocol could be agreed upon.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64338,"byte_end":64411,"line_start":293,"line_end":293,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":708},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64222,"byte_end":64238,"line_start":289,"line_end":289,"column_start":10,"column_end":26},"name":"NegotiationError","qualname":"::negotiated::NegotiationError","value":"pub enum NegotiationError {\n\n    /// A protocol error occurred during the negotiation.\n    ProtocolError(ProtocolError),\n\n    /// Protocol negotiation failed because no protocol could be agreed upon.\n    Failed,\n}","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":712}],"decl_id":null,"docs":" Error that can happen when negotiating a protocol with the remote.\n","sig":null,"attributes":[{"value":"/ Error that can happen when negotiating a protocol with the remote.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64125,"byte_end":64195,"line_start":287,"line_end":287,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":717},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68766,"byte_end":68768,"line_start":66,"line_end":66,"column_start":5,"column_end":7},"name":"V1","qualname":"::protocol::Version::V1","value":"Version::V1","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Version 1 of the multistream-select protocol. See [1] and [2].","sig":null,"attributes":[{"value":"/ Version 1 of the multistream-select protocol. See [1] and [2].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68523,"byte_end":68589,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68594,"byte_end":68597,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/libp2p/specs/blob/master/connections/README.md#protocol-negotiation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68602,"byte_end":68697,"line_start":64,"line_end":64,"column_start":5,"column_end":100}},{"value":"/ [2]: https://github.com/multiformats/multistream-select","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68702,"byte_end":68761,"line_start":65,"line_end":65,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":719},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71357,"byte_end":71363,"line_start":109,"line_end":109,"column_start":5,"column_end":11},"name":"V1Lazy","qualname":"::protocol::Version::V1Lazy","value":"Version::V1Lazy","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" A lazy variant of version 1 that is identical on the wire but delays\n sending of protocol negotiation data as much as possible.","sig":null,"attributes":[{"value":"/ A lazy variant of version 1 that is identical on the wire but delays","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68774,"byte_end":68846,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ sending of protocol negotiation data as much as possible.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68851,"byte_end":68912,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68917,"byte_end":68920,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Delaying the sending of protocol negotiation data can result in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68925,"byte_end":68992,"line_start":70,"line_end":70,"column_start":5,"column_end":72}},{"value":"/ significantly fewer network roundtrips used for the negotiation,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68997,"byte_end":69065,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ up to 0-RTT negotiation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69070,"byte_end":69098,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69103,"byte_end":69106,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ 0-RTT negotiation is achieved if the dialer supports only a single","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69111,"byte_end":69181,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ application protocol. In that case the dialer immedidately settles","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69186,"byte_end":69256,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ on that protocol, buffering the negotiation messages to be sent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69261,"byte_end":69328,"line_start":76,"line_end":76,"column_start":5,"column_end":72}},{"value":"/ with the first round of application protocol data (or an attempt","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69333,"byte_end":69401,"line_start":77,"line_end":77,"column_start":5,"column_end":73}},{"value":"/ is made to read from the `Negotiated` I/O stream).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69406,"byte_end":69460,"line_start":78,"line_end":78,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69465,"byte_end":69468,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ A listener receiving a `V1Lazy` header will similarly delay sending","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69473,"byte_end":69544,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ of the protocol confirmation.  Though typically the listener will need","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69549,"byte_end":69623,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ to read the request data before sending its response, thus triggering","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69628,"byte_end":69701,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ sending of the protocol confirmation, which, in absence of additional","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69706,"byte_end":69779,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ buffering on lower layers will result in at least two response frames","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69784,"byte_end":69857,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ to be sent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69862,"byte_end":69877,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69882,"byte_end":69885,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ `V1Lazy` is specific to `rust-libp2p`: While the wire protocol","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69890,"byte_end":69956,"line_start":87,"line_end":87,"column_start":5,"column_end":71}},{"value":"/ is identical to `V1`, delayed sending of protocol negotiation frames","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":69961,"byte_end":70033,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ is only safe under the following assumptions:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70038,"byte_end":70087,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70092,"byte_end":70095,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/   1. The dialer is assumed to always send the first multistream-select","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70100,"byte_end":70174,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/      protocol message immediately after the multistream header, without","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70179,"byte_end":70254,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/      first waiting for confirmation of that header. Since the listener","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70259,"byte_end":70333,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/      delays sending the protocol confirmation, a deadlock situation may","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70338,"byte_end":70413,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/      otherwise occurs that is only resolved by a timeout. This assumption","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70418,"byte_end":70495,"line_start":95,"line_end":95,"column_start":5,"column_end":82}},{"value":"/      is trivially satisfied if both peers support and use `V1Lazy`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70500,"byte_end":70571,"line_start":96,"line_end":96,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70576,"byte_end":70579,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/   2. When nesting multiple protocol negotiations, the listener is either","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70584,"byte_end":70660,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/      known to support all of the dialer's optimistically chosen protocols","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70665,"byte_end":70742,"line_start":99,"line_end":99,"column_start":5,"column_end":82}},{"value":"/      or there is no intermediate protocol without a payload and none of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70747,"byte_end":70822,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/      the protocol payloads has the potential for being mistaken for a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70827,"byte_end":70900,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/      multistream-select protocol message. This avoids rare edge-cases whereby","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70905,"byte_end":70986,"line_start":102,"line_end":102,"column_start":5,"column_end":86}},{"value":"/      the listener may not recognize upgrade boundaries and erroneously","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":70991,"byte_end":71065,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/      process a request despite not supporting one of the intermediate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71070,"byte_end":71143,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/      protocols that the dialer committed to. See [1] and [2].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71148,"byte_end":71213,"line_start":105,"line_end":105,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71218,"byte_end":71221,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/multiformats/go-multistream/issues/20","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71226,"byte_end":71291,"line_start":107,"line_end":107,"column_start":5,"column_end":70}},{"value":"/ [2]: https://github.com/libp2p/rust-libp2p/pull/1212","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71296,"byte_end":71352,"line_start":108,"line_end":108,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":716},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68509,"byte_end":68516,"line_start":61,"line_end":61,"column_start":10,"column_end":17},"name":"Version","qualname":"::protocol::Version","value":"pub enum Version {\n\n    /// Version 1 of the multistream-select protocol. See [1] and [2].\n    ///\n    /// [1]: https://github.com/libp2p/specs/blob/master/connections/README.md#protocol-negotiation\n    /// [2]: https://github.com/multiformats/multistream-select\n    V1,\n\n    /// A lazy variant of version 1 that is identical on the wire but delays\n    /// sending of protocol negotiation data as much as possible.\n    ///\n    /// Delaying the sending of protocol negotiation data can result in\n    /// significantly fewer network roundtrips used for the negotiation,\n    /// up to 0-RTT negotiation.\n    ///\n    /// 0-RTT negotiation is achieved if the dialer supports only a single\n    /// application protocol. In that case the dialer immedidately settles\n    /// on that protocol, buffering the negotiation messages to be sent\n    /// with the first round of application protocol data (or an attempt\n    /// is made to read from the `Negotiated` I/O stream).\n    ///\n    /// A listener receiving a `V1Lazy` header will similarly delay sending\n    /// of the protocol confirmation.  Though typically the listener will need\n    /// to read the request data before sending its response, thus triggering\n    /// sending of the protocol confirmation, which, in absence of additional\n    /// buffering on lower layers will result in at least two response frames\n    /// to be sent.\n    ///\n    /// `V1Lazy` is specific to `rust-libp2p`: While the wire protocol\n    /// is identical to `V1`, delayed sending of protocol negotiation frames\n    /// is only safe under the following assumptions:\n    ///\n    ///   1. The dialer is assumed to always send the first multistream-select\n    ///      protocol message immediately after the multistream header, without\n    ///      first waiting for confirmation of that header. Since the listener\n    ///      delays sending the protocol confirmation, a deadlock situation may\n    ///      otherwise occurs that is only resolved by a timeout. This assumption\n    ///      is trivially satisfied if both peers support and use `V1Lazy`.\n    ///\n    ///   2. When nesting multiple protocol negotiations, the listener is either\n    ///      known to support all of the dialer's optimistically chosen protocols\n    ///      or there is no intermediate protocol without a payload and none of\n    ///      the protocol payloads has the potential for being mistaken for a\n    ///      multistream-select protocol message. This avoids rare edge-cases whereby\n    ///      the listener may not recognize upgrade boundaries and erroneously\n    ///      process a request despite not supporting one of the intermediate\n    ///      protocols that the dialer committed to. See [1] and [2].\n    ///\n    /// [1]: https://github.com/multiformats/go-multistream/issues/20\n    /// [2]: https://github.com/libp2p/rust-libp2p/pull/1212\n    V1Lazy,\n}","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":719}],"decl_id":null,"docs":" Supported multistream-select protocol versions.\n","sig":null,"attributes":[{"value":"/ Supported multistream-select protocol versions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":68403,"byte_end":68454,"line_start":59,"line_end":59,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":853},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":81948,"byte_end":81955,"line_start":427,"line_end":427,"column_start":5,"column_end":12},"name":"IoError","qualname":"::protocol::ProtocolError::IoError","value":"ProtocolError::IoError(io::Error)","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":81929,"byte_end":81943,"line_start":426,"line_end":426,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":856},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82026,"byte_end":82040,"line_start":430,"line_end":430,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::protocol::ProtocolError::InvalidMessage","value":"ProtocolError::InvalidMessage","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":" Received an invalid message from the remote.\n","sig":null,"attributes":[{"value":"/ Received an invalid message from the remote.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":81973,"byte_end":82021,"line_start":429,"line_end":429,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":858},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82085,"byte_end":82100,"line_start":433,"line_end":433,"column_start":5,"column_end":20},"name":"InvalidProtocol","qualname":"::protocol::ProtocolError::InvalidProtocol","value":"ProtocolError::InvalidProtocol","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":" A protocol (name) is invalid.\n","sig":null,"attributes":[{"value":"/ A protocol (name) is invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82047,"byte_end":82080,"line_start":432,"line_end":432,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":860},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82168,"byte_end":82184,"line_start":436,"line_end":436,"column_start":5,"column_end":21},"name":"TooManyProtocols","qualname":"::protocol::ProtocolError::TooManyProtocols","value":"ProtocolError::TooManyProtocols","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":" Too many protocols have been returned by the remote.\n","sig":null,"attributes":[{"value":"/ Too many protocols have been returned by the remote.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82107,"byte_end":82163,"line_start":435,"line_end":435,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":852},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":81909,"byte_end":81922,"line_start":425,"line_end":425,"column_start":10,"column_end":23},"name":"ProtocolError","qualname":"::protocol::ProtocolError","value":"pub enum ProtocolError {\n\n    /// I/O error.\n    IoError(io::Error),\n\n    /// Received an invalid message from the remote.\n    InvalidMessage,\n\n    /// A protocol (name) is invalid.\n    InvalidProtocol,\n\n    /// Too many protocols have been returned by the remote.\n    TooManyProtocols,\n}","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860}],"decl_id":null,"docs":" A protocol error.\n","sig":null,"attributes":[{"value":"/ A protocol error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":81861,"byte_end":81882,"line_start":423,"line_end":423,"column_start":1,"column_end":22}}]}],"impls":[{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":11183,"byte_end":11198,"line_start":160,"line_end":160,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":17119,"byte_end":17134,"line_start":297,"line_end":297,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":24763,"byte_end":24772,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":24926,"byte_end":24941,"line_start":67,"line_end":67,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":27480,"byte_end":27495,"line_start":133,"line_end":133,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":30843,"byte_end":30858,"line_start":205,"line_end":205,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":33835,"byte_end":33856,"line_start":289,"line_end":289,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":34601,"byte_end":34622,"line_start":307,"line_end":307,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":34860,"byte_end":34881,"line_start":318,"line_end":318,"column_start":24,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":45172,"byte_end":45192,"line_start":98,"line_end":98,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":55026,"byte_end":55044,"line_start":51,"line_end":51,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":55891,"byte_end":55901,"line_start":75,"line_end":75,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":60004,"byte_end":60014,"line_start":184,"line_end":184,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":62180,"byte_end":62190,"line_start":242,"line_end":242,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64456,"byte_end":64472,"line_start":297,"line_end":297,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64608,"byte_end":64624,"line_start":303,"line_end":303,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64762,"byte_end":64767,"line_start":309,"line_end":309,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64990,"byte_end":65006,"line_start":318,"line_end":318,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":65214,"byte_end":65230,"line_start":327,"line_end":327,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71450,"byte_end":71457,"line_start":114,"line_end":114,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71666,"byte_end":71674,"line_start":124,"line_end":124,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71766,"byte_end":71774,"line_start":130,"line_end":130,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":72078,"byte_end":72086,"line_start":141,"line_end":141,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":72268,"byte_end":72276,"line_start":149,"line_end":149,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":73209,"byte_end":73216,"line_start":175,"line_end":175,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":76662,"byte_end":76671,"line_start":272,"line_end":272,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":78014,"byte_end":78023,"line_start":306,"line_end":306,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":78848,"byte_end":78857,"line_start":331,"line_end":331,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":79612,"byte_end":79625,"line_start":356,"line_end":356,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":80390,"byte_end":80403,"line_start":373,"line_end":373,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":80655,"byte_end":80668,"line_start":384,"line_end":384,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82214,"byte_end":82227,"line_start":439,"line_end":439,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82347,"byte_end":82360,"line_start":445,"line_end":445,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82569,"byte_end":82582,"line_start":454,"line_end":454,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82745,"byte_end":82758,"line_start":460,"line_end":460,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82962,"byte_end":82975,"line_start":469,"line_end":469,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":11183,"byte_end":11198,"line_start":160,"line_end":160,"column_start":23,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/dialer_select.rs","byte_start":17119,"byte_end":17134,"line_start":297,"line_end":297,"column_start":23,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":24763,"byte_end":24772,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":24926,"byte_end":24941,"line_start":67,"line_end":67,"column_start":9,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":27480,"byte_end":27495,"line_start":133,"line_end":133,"column_start":20,"column_end":35},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":442},"to":{"krate":19,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":30843,"byte_end":30858,"line_start":205,"line_end":205,"column_start":25,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":442},"to":{"krate":33,"index":9}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":33835,"byte_end":33856,"line_start":289,"line_end":289,"column_start":9,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":34601,"byte_end":34622,"line_start":307,"line_end":307,"column_start":20,"column_end":41},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":515},"to":{"krate":19,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/length_delimited.rs","byte_start":34860,"byte_end":34881,"line_start":318,"line_end":318,"column_start":24,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":515},"to":{"krate":37,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/listener_select.rs","byte_start":45172,"byte_end":45192,"line_start":98,"line_end":98,"column_start":23,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":557},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":55026,"byte_end":55044,"line_start":51,"line_end":51,"column_start":25,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":653},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":55891,"byte_end":55901,"line_start":75,"line_end":75,"column_start":14,"column_end":24},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":60004,"byte_end":60014,"line_start":184,"line_end":184,"column_start":28,"column_end":38},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":611},"to":{"krate":37,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":62180,"byte_end":62190,"line_start":242,"line_end":242,"column_start":29,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":611},"to":{"krate":37,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64456,"byte_end":64472,"line_start":297,"line_end":297,"column_start":30,"column_end":46},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":708},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64608,"byte_end":64624,"line_start":303,"line_end":303,"column_start":26,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":708},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64762,"byte_end":64767,"line_start":309,"line_end":309,"column_start":37,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":1,"index":2659},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":64990,"byte_end":65006,"line_start":318,"line_end":318,"column_start":16,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":708},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/negotiated.rs","byte_start":65214,"byte_end":65230,"line_start":327,"line_end":327,"column_start":23,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":708},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71450,"byte_end":71457,"line_start":114,"line_end":114,"column_start":18,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71666,"byte_end":71674,"line_start":124,"line_end":124,"column_start":22,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":71766,"byte_end":71774,"line_start":130,"line_end":130,"column_start":25,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":72078,"byte_end":72086,"line_start":141,"line_end":141,"column_start":25,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":72268,"byte_end":72276,"line_start":149,"line_end":149,"column_start":23,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":73209,"byte_end":73216,"line_start":175,"line_end":175,"column_start":6,"column_end":13},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":76662,"byte_end":76671,"line_start":272,"line_end":272,"column_start":9,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":78014,"byte_end":78023,"line_start":306,"line_end":306,"column_start":27,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":771},"to":{"krate":33,"index":9}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":78848,"byte_end":78857,"line_start":331,"line_end":331,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":771},"to":{"krate":19,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":79612,"byte_end":79625,"line_start":356,"line_end":356,"column_start":9,"column_end":22},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":80390,"byte_end":80403,"line_start":373,"line_end":373,"column_start":20,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":810},"to":{"krate":19,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":80655,"byte_end":80668,"line_start":384,"line_end":384,"column_start":29,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":810},"to":{"krate":37,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82214,"byte_end":82227,"line_start":439,"line_end":439,"column_start":26,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":852},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82347,"byte_end":82360,"line_start":445,"line_end":445,"column_start":26,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":852},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82569,"byte_end":82582,"line_start":454,"line_end":454,"column_start":35,"column_end":48},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":852},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82745,"byte_end":82758,"line_start":460,"line_end":460,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":852},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multistream-select-0.8.5/src/protocol.rs","byte_start":82962,"byte_end":82975,"line_start":469,"line_end":469,"column_start":23,"column_end":36},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":852},"to":{"krate":2,"index":6568}}]}