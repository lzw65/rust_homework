{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ahash","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"compile-time-rng\"","--cfg","feature=\"const-random\"","-C","metadata=0f354979a511cc26","-C","extra-filename=-0f354979a511cc26","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--extern","const_random=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libconst_random-b2dd5188f8f84a24.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libahash-0f354979a511cc26.rmeta"},"prelude":{"crate_id":{"name":"ahash","disambiguator":[12323770834726417551,6670390028457024723]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","num":4,"id":{"name":"const_random","disambiguator":[12511315733217778400,6248012439816563428]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","num":5,"id":{"name":"proc_macro_hack","disambiguator":[16105205298844134494,461428951662562663]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","num":6,"id":{"name":"const_random_macro","disambiguator":[1134245021619013425,8580215384957438496]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":0,"byte_end":7460,"line_start":1,"line_end":223,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":860},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":1564,"byte_end":1571,"line_start":43,"line_end":43,"column_start":31,"column_end":38},"alias_span":null,"name":"AHasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":0,"byte_end":7460,"line_start":1,"line_end":223,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":47},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":87}],"decl_id":null,"docs":" # aHash","sig":null,"attributes":[{"value":"/ # aHash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":16,"byte_end":122,"line_start":3,"line_end":3,"column_start":1,"column_end":107}},{"value":"/ This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":123,"byte_end":222,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":223,"byte_end":330,"line_start":5,"line_end":5,"column_start":1,"column_end":108}},{"value":"/ This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":331,"byte_end":439,"line_start":6,"line_end":6,"column_start":1,"column_end":109}},{"value":"/ induce a collision.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":440,"byte_end":463,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":464,"byte_end":467,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # How aHash works","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":468,"byte_end":489,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":490,"byte_end":493,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ aHash uses the hardware AES instruction on x86 processors to provide a keyed hash function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":494,"byte_end":589,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ It uses two rounds of AES per hash. So it should not be considered cryptographically secure.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":590,"byte_end":686,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"deny(clippy :: correctness, clippy :: complexity, clippy :: perf)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":687,"byte_end":750,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"allow(clippy :: pedantic, clippy :: cast_lossless, clippy ::\n        unreadable_literal)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":751,"byte_end":829,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"no_std","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":881,"byte_end":887,"line_start":16,"line_end":16,"column_start":51,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":860},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13217,"byte_end":13224,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"AHasher","qualname":"::fallback_hash::AHasher","value":"AHasher {  }","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862}],"decl_id":null,"docs":" A `Hasher` for hashing an arbitrary stream of bytes.","sig":null,"attributes":[{"value":"/ A `Hasher` for hashing an arbitrary stream of bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":12723,"byte_end":12779,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":12780,"byte_end":12783,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Instances of [`AHasher`] represent state that is updated while hashing data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":12784,"byte_end":12864,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":12865,"byte_end":12868,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Each method updates the internal state based on the new data provided. Once","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":12869,"byte_end":12948,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ all of the data has been provided, the resulting hash can be obtained by calling","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":12949,"byte_end":13033,"line_start":14,"line_end":14,"column_start":1,"column_end":85}},{"value":"/ `finish()`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13034,"byte_end":13048,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13049,"byte_end":13052,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [Clone] is also provided in case you wish to calculate hashes for two different items that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13053,"byte_end":13147,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ start with the same data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13148,"byte_end":13177,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13178,"byte_end":13181,"line_start":19,"line_end":19,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13357,"byte_end":13370,"line_start":29,"line_end":29,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<AHasher>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> AHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hasher keyed to the provided key.\n","sig":null,"attributes":[{"value":"/ Creates a new hasher keyed to the provided key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13280,"byte_end":13331,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13336,"byte_end":13345,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":3991,"byte_end":4003,"line_start":115,"line_end":115,"column_start":12,"column_end":24},"name":"ABuildHasher","qualname":"::ABuildHasher","value":"ABuildHasher {  }","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"decl_id":null,"docs":" Provides a [Hasher] factory. This is typically used (e.g. by [`HashMap`]) to create\n [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","sig":null,"attributes":[{"value":"/ Provides a [Hasher] factory. This is typically used (e.g. by [`HashMap`]) to create","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":3649,"byte_end":3736,"line_start":107,"line_end":107,"column_start":1,"column_end":88}},{"value":"/ [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":3737,"byte_end":3815,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":3816,"byte_end":3819,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ [build_hasher]: ahash::","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":3820,"byte_end":3847,"line_start":110,"line_end":110,"column_start":1,"column_end":28}},{"value":"/ [Hasher]: std::hash::Hasher","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":3848,"byte_end":3879,"line_start":111,"line_end":111,"column_start":1,"column_end":32}},{"value":"/ [BuildHasher]: std::hash::BuildHasher","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":3880,"byte_end":3921,"line_start":112,"line_end":112,"column_start":1,"column_end":42}},{"value":"/ [HashMap]: std::collections::HashMap","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":3922,"byte_end":3962,"line_start":113,"line_end":113,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":4080,"byte_end":4083,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<ABuildHasher>::new","value":"pub fn new() -> ABuildHasher","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":4059,"byte_end":4068,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]}],"impls":[{"id":12,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13266,"byte_end":13273,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":19386,"byte_end":19393,"line_start":126,"line_end":126,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":2709,"byte_end":2716,"line_start":78,"line_end":78,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":4040,"byte_end":4052,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":4762,"byte_end":4774,"line_start":137,"line_end":137,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":4868,"byte_end":4880,"line_start":144,"line_end":144,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":13266,"byte_end":13273,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/fallback_hash.rs","byte_start":19386,"byte_end":19393,"line_start":126,"line_end":126,"column_start":17,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":860},"to":{"krate":1,"index":6759}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":2709,"byte_end":2716,"line_start":78,"line_end":78,"column_start":18,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":860},"to":{"krate":1,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":4040,"byte_end":4052,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":4762,"byte_end":4774,"line_start":137,"line_end":137,"column_start":18,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":870},"to":{"krate":1,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.2.19/src/lib.rs","byte_start":4868,"byte_end":4880,"line_start":144,"line_end":144,"column_start":22,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":870},"to":{"krate":1,"index":6790}}]}