{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_process","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9444a40c2921bbf3","-C","extra-filename=-9444a40c2921bbf3","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--extern","async_io=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libasync_io-55d1fc5d7c7ce792.rmeta","--extern","cfg_if=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libcfg_if-99a8e150265eb097.rmeta","--extern","event_listener=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libevent_listener-c4d2e533b814973a.rmeta","--extern","futures_lite=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libfutures_lite-4ff7fc043f950697.rmeta","--extern","once_cell=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libonce_cell-ddf8120c60d41ace.rmeta","--extern","signal_hook=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libsignal_hook-03312e9072973702.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libasync_process-9444a40c2921bbf3.rmeta"},"prelude":{"crate_id":{"name":"async_process","disambiguator":[10980086272662971037,2826203564880721132]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":18,"id":{"name":"async_io","disambiguator":[15217185869467787680,17945062292530268098]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":19,"id":{"name":"futures_lite","disambiguator":[2941846766315098300,9370564556904000169]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[11050117765846224188,12097442257352640106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":21,"id":{"name":"parking","disambiguator":[1999498884191094626,9252083634413959091]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":22,"id":{"name":"waker_fn","disambiguator":[6477177352258648891,1408471870261056396]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":23,"id":{"name":"futures_core","disambiguator":[6091960194481922876,16111170612509824982]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":24,"id":{"name":"futures_io","disambiguator":[5832703695225160921,17043717576790152055]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":25,"id":{"name":"fastrand","disambiguator":[2557478997660195169,13453224216195452879]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":26,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":27,"id":{"name":"once_cell","disambiguator":[8114906871986815057,215681476928989787]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":28,"id":{"name":"parking_lot","disambiguator":[10061552480279027668,1018443910502703418]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":29,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":30,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":31,"id":{"name":"lock_api","disambiguator":[1370039747192521928,13370481355962836312]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":32,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":33,"id":{"name":"parking_lot_core","disambiguator":[6910326554005380636,13334944336695677100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":34,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":35,"id":{"name":"libc","disambiguator":[6571333170903906260,2103687221578517612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":36,"id":{"name":"concurrent_queue","disambiguator":[18213822786008996053,10867190005056278931]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":37,"id":{"name":"cache_padded","disambiguator":[18353092046062123632,1298457636792068056]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":38,"id":{"name":"polling","disambiguator":[1682147684354064500,12950341847355975983]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":39,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":40,"id":{"name":"log","disambiguator":[17254312244691266404,17120298729262202934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":41,"id":{"name":"vec_arena","disambiguator":[14419761904539993776,12862170585453807711]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":42,"id":{"name":"nb_connect","disambiguator":[8517493651729196043,8189959879834134100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":43,"id":{"name":"event_listener","disambiguator":[1329321184522063609,6930102895973449987]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":44,"id":{"name":"signal_hook","disambiguator":[2515232465840280565,4769161616505312633]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","num":45,"id":{"name":"signal_hook_registry","disambiguator":[15937606200030807710,3403566883897947767]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":0,"byte_end":25828,"line_start":1,"line_end":841,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":7938},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1977,"byte_end":1987,"line_start":70,"line_end":70,"column_start":24,"column_end":34},"alias_span":null,"name":"ExitStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7925},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1989,"byte_end":1995,"line_start":70,"line_end":70,"column_start":36,"column_end":42},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":4448},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1997,"byte_end":2002,"line_start":70,"line_end":70,"column_start":44,"column_end":49},"alias_span":null,"name":"Stdio","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":0,"byte_end":25828,"line_start":1,"line_end":841,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":80},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":84},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":86},{"krate":0,"index":143},{"krate":0,"index":150},{"krate":0,"index":88}],"decl_id":null,"docs":" Async interface for working with processes.","sig":null,"attributes":[{"value":"/ Async interface for working with processes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":0,"byte_end":47,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":48,"byte_end":51,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is an async version of [`std::process`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":52,"byte_end":107,"line_start":3,"line_end":3,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":108,"byte_end":111,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":112,"byte_end":132,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":133,"byte_end":136,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A background thread named \"async-process\" is lazily created on first use, which waits for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":137,"byte_end":230,"line_start":7,"line_end":7,"column_start":1,"column_end":94}},{"value":"/ spawned child processes to exit and then calls the `wait()` syscall to clean up the \"zombie\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":231,"byte_end":327,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ processes. This is unlike the `process` API in the standard library, where dropping a running","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":328,"byte_end":425,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ `Child` leaks its resources.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":426,"byte_end":458,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":459,"byte_end":462,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate uses [`async-io`] for async I/O on Unix-like systems and [`blocking`] for async I/O","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":463,"byte_end":561,"line_start":12,"line_end":12,"column_start":1,"column_end":99}},{"value":"/ on Windows.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":562,"byte_end":577,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":578,"byte_end":581,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`async-io`]: https://docs.rs/async-io","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":582,"byte_end":624,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ [`blocking`]: https://docs.rs/blocking","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":625,"byte_end":667,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":668,"byte_end":671,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":672,"byte_end":686,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":687,"byte_end":690,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Spawn a process and collect its output:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":691,"byte_end":734,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":735,"byte_end":738,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":739,"byte_end":752,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":753,"byte_end":797,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":798,"byte_end":829,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":830,"byte_end":833,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let out = Command::new(\"echo\").arg(\"hello\").arg(\"world\").output().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":834,"byte_end":911,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(out.stdout, b\"hello world\\n\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":912,"byte_end":957,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":958,"byte_end":991,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":992,"byte_end":999,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1000,"byte_end":1003,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Read the output line-by-line as it gets produced:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1004,"byte_end":1057,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1058,"byte_end":1061,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1062,"byte_end":1075,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1076,"byte_end":1120,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1121,"byte_end":1161,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ use futures_lite::{io::BufReader, prelude::*};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1162,"byte_end":1212,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1213,"byte_end":1216,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut child = Command::new(\"find\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1217,"byte_end":1257,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/     .arg(\".\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1258,"byte_end":1275,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/     .stdout(Stdio::piped())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1276,"byte_end":1307,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/     .spawn()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1308,"byte_end":1326,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1327,"byte_end":1330,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut lines = BufReader::new(child.stdout.take().unwrap()).lines();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1331,"byte_end":1404,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1405,"byte_end":1408,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ while let Some(line) = lines.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1409,"byte_end":1456,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/     println!(\"{}\", line?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1457,"byte_end":1487,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1488,"byte_end":1493,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1494,"byte_end":1527,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1528,"byte_end":1535,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":1537,"byte_end":1608,"line_start":51,"line_end":51,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::unix","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":38}],"decl_id":null,"docs":" Unix-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2006,"byte_end":2018,"line_start":72,"line_end":72,"column_start":1,"column_end":13}},{"value":"/ Unix-specific extensions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":25830,"byte_end":25859,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26029,"byte_end":26039,"line_start":10,"line_end":10,"column_start":11,"column_end":21},"name":"CommandExt","qualname":"::unix::CommandExt","value":"CommandExt","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" Unix-specific extensions to the [`Command`] builder.\n","sig":null,"attributes":[{"value":"/ Unix-specific extensions to the [`Command`] builder.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":25962,"byte_end":26018,"line_start":9,"line_end":9,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26223,"byte_end":26226,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"uid","qualname":"::unix::CommandExt::uid","value":"pub fn uid(&mut Self, u32) -> &mut Command","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Sets the child process's user ID. This translates to a\n `setuid` call in the child process. Failure in the `setuid`\n call will cause the spawn to fail.\n","sig":null,"attributes":[{"value":"/ Sets the child process's user ID. This translates to a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26046,"byte_end":26104,"line_start":11,"line_end":11,"column_start":5,"column_end":63}},{"value":"/ `setuid` call in the child process. Failure in the `setuid`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26109,"byte_end":26172,"line_start":12,"line_end":12,"column_start":5,"column_end":68}},{"value":"/ call will cause the spawn to fail.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26177,"byte_end":26215,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26398,"byte_end":26401,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"gid","qualname":"::unix::CommandExt::gid","value":"pub fn gid(&mut Self, u32) -> &mut Command","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Similar to `uid`, but sets the group ID of the child process. This has\n the same semantics as the `uid` field.\n","sig":null,"attributes":[{"value":"/ Similar to `uid`, but sets the group ID of the child process. This has","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26269,"byte_end":26343,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ the same semantics as the `uid` field.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26348,"byte_end":26390,"line_start":17,"line_end":17,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27998,"byte_end":28006,"line_start":49,"line_end":49,"column_start":15,"column_end":23},"name":"pre_exec","qualname":"::unix::CommandExt::pre_exec","value":"pub unsafe fn pre_exec<F>(&mut Self, F) -> &mut Command where F: FnMut() ->\nio::Result<()> + Send + Sync + 'static","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Schedules a closure to be run just before the `exec` function is\n invoked.","sig":null,"attributes":[{"value":"/ Schedules a closure to be run just before the `exec` function is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26444,"byte_end":26512,"line_start":20,"line_end":20,"column_start":5,"column_end":73}},{"value":"/ invoked.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26517,"byte_end":26529,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26534,"byte_end":26537,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ The closure is allowed to return an I/O error whose OS error code will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26542,"byte_end":26616,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/ be communicated back to the parent and returned as an error from when","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26621,"byte_end":26694,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ the spawn was requested.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26699,"byte_end":26727,"line_start":25,"line_end":25,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26732,"byte_end":26735,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Multiple closures can be registered and they will be called in order of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26740,"byte_end":26815,"line_start":27,"line_end":27,"column_start":5,"column_end":80}},{"value":"/ their registration. If a closure returns `Err` then no further closures","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26820,"byte_end":26895,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ will be called and the spawn operation will immediately return with a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26900,"byte_end":26973,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ failure.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26978,"byte_end":26990,"line_start":30,"line_end":30,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":26995,"byte_end":26998,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Notes and Safety","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27003,"byte_end":27025,"line_start":32,"line_end":32,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27030,"byte_end":27033,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This closure will be run in the context of the child process after a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27038,"byte_end":27110,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ `fork`. This primarily means that any modifications made to memory on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27115,"byte_end":27188,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ behalf of this closure will **not** be visible to the parent process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27193,"byte_end":27266,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ This is often a very constrained environment where normal operations","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27271,"byte_end":27343,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ like `malloc` or acquiring a mutex are not guaranteed to work (due to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27348,"byte_end":27421,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ other threads perhaps still running when the `fork` was run).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27426,"byte_end":27491,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27496,"byte_end":27499,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This also means that all resources such as file descriptors and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27504,"byte_end":27571,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ memory-mapped regions got duplicated. It is your responsibility to make","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27576,"byte_end":27651,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ sure that the closure does not violate library invariants by making","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27656,"byte_end":27727,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/ invalid use of these duplicates.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27732,"byte_end":27768,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27773,"byte_end":27776,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ When this closure is run, aspects such as the stdio file descriptors and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27781,"byte_end":27857,"line_start":46,"line_end":46,"column_start":5,"column_end":81}},{"value":"/ working directory have successfully been changed, so output to these","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27862,"byte_end":27934,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/ locations may not appear where intended.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":27939,"byte_end":27983,"line_start":48,"line_end":48,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29660,"byte_end":29664,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"exec","qualname":"::unix::CommandExt::exec","value":"pub fn exec(&mut Self) -> io::Error","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Performs all the required setup by this `Command`, followed by calling\n the `execvp` syscall.","sig":null,"attributes":[{"value":"/ Performs all the required setup by this `Command`, followed by calling","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28120,"byte_end":28194,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ the `execvp` syscall.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28199,"byte_end":28224,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28229,"byte_end":28232,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ On success this function will not return, and otherwise it will return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28237,"byte_end":28311,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ an error indicating why the exec (or another part of the setup of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28316,"byte_end":28389,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ `Command`) failed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28394,"byte_end":28416,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28421,"byte_end":28424,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `exec` not returning has the same implications as calling","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28429,"byte_end":28490,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/ [`std::process::exit`] – no destructors on the current stack or any other","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28495,"byte_end":28574,"line_start":61,"line_end":61,"column_start":5,"column_end":82}},{"value":"/ thread’s stack will be run. Therefore, it is recommended to only call","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28579,"byte_end":28654,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ `exec` at a point where it is fine to not run any destructors. Note,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28659,"byte_end":28731,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ that the `execvp` syscall independently guarantees that all memory is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28736,"byte_end":28809,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ freed and all file descriptors with the `CLOEXEC` option (set by default","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28814,"byte_end":28890,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/ on all file descriptors opened by the standard library) are closed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28895,"byte_end":28966,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28971,"byte_end":28974,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function, unlike `spawn`, will **not** `fork` the process to create","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":28979,"byte_end":29055,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ a new child. Like spawn, however, the default behavior for the stdio","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29060,"byte_end":29132,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ descriptors will be to inherited from the current process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29137,"byte_end":29199,"line_start":70,"line_end":70,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29204,"byte_end":29207,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29212,"byte_end":29223,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29228,"byte_end":29231,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The process may be in a \"broken state\" if this function returns in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29236,"byte_end":29306,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ error. For example the working directory, environment variables, signal","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29311,"byte_end":29386,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ handling settings, various user/group information, or aspects of stdio","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29391,"byte_end":29465,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ file descriptors may have changed. If a \"transactional spawn\" is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29470,"byte_end":29538,"line_start":77,"line_end":77,"column_start":5,"column_end":73}},{"value":"/ required to gracefully handle errors it is recommended to use the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29543,"byte_end":29612,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ cross-platform `spawn` instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29617,"byte_end":29652,"line_start":79,"line_end":79,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29850,"byte_end":29854,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"arg0","qualname":"::unix::CommandExt::arg0","value":"pub fn arg0<S>(&mut Self, S) -> &mut Command where S: AsRef<OsStr>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Set executable argument","sig":null,"attributes":[{"value":"/ Set executable argument","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29695,"byte_end":29722,"line_start":82,"line_end":82,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29727,"byte_end":29730,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Set the first process argument, `argv[0]`, to something other than the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29735,"byte_end":29809,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ default executable path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29814,"byte_end":29842,"line_start":85,"line_end":85,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":3001,"byte_end":3006,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"Child","qualname":"::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" A spawned child process.","sig":null,"attributes":[{"value":"/ A spawned child process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2446,"byte_end":2474,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2475,"byte_end":2478,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ The process can be in running or exited state. Use [`status()`][`Child::status()`] or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2479,"byte_end":2568,"line_start":94,"line_end":94,"column_start":1,"column_end":90}},{"value":"/ [`output()`][`Child::output()`] to wait for it to exit.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2569,"byte_end":2628,"line_start":95,"line_end":95,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2629,"byte_end":2632,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ If the [`Child`] is dropped, the process keeps running in the background.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2633,"byte_end":2710,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2711,"byte_end":2714,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2715,"byte_end":2729,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2730,"byte_end":2733,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Spawn a process and wait for it to complete:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2734,"byte_end":2782,"line_start":101,"line_end":101,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2783,"byte_end":2786,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2787,"byte_end":2800,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2801,"byte_end":2845,"line_start":104,"line_end":104,"column_start":1,"column_end":45}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2846,"byte_end":2877,"line_start":105,"line_end":105,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2878,"byte_end":2881,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Command::new(\"cp\").arg(\"a.txt\").arg(\"b.txt\").status().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2882,"byte_end":2947,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2948,"byte_end":2981,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2982,"byte_end":2989,"line_start":109,"line_end":109,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":53},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":3112,"byte_end":3117,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"name":"stdin","qualname":"::Child::stdin","value":"std::option::Option<ChildStdin>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has been captured.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":3013,"byte_end":3103,"line_start":111,"line_end":111,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":54},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":3247,"byte_end":3253,"line_start":115,"line_end":115,"column_start":9,"column_end":15},"name":"stdout","qualname":"::Child::stdout","value":"std::option::Option<ChildStdout>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it has been captured.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":3144,"byte_end":3238,"line_start":114,"line_end":114,"column_start":5,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":55},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":3383,"byte_end":3389,"line_start":118,"line_end":118,"column_start":9,"column_end":15},"name":"stderr","qualname":"::Child::stderr","value":"std::option::Option<ChildStderr>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it has been captured.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":3281,"byte_end":3374,"line_start":117,"line_end":117,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9313,"byte_end":9315,"line_start":277,"line_end":277,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"pub fn id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child.","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":8938,"byte_end":9012,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9017,"byte_end":9020,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9025,"byte_end":9039,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9044,"byte_end":9047,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9052,"byte_end":9065,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9070,"byte_end":9114,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9119,"byte_end":9150,"line_start":271,"line_end":271,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9155,"byte_end":9158,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let mut child = Command::new(\"ls\").spawn()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9163,"byte_end":9211,"line_start":273,"line_end":273,"column_start":5,"column_end":53}},{"value":"/ println!(\"id: {}\", child.id());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9216,"byte_end":9251,"line_start":274,"line_end":274,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9256,"byte_end":9289,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9294,"byte_end":9301,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10007,"byte_end":10011,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"name":"kill","qualname":"<Child>::kill","value":"pub fn kill(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Forces the child process to exit.","sig":null,"attributes":[{"value":"/ Forces the child process to exit.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9393,"byte_end":9430,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9435,"byte_end":9438,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If the child has already exited, an [`InvalidInput`] error is returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9443,"byte_end":9518,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9523,"byte_end":9526,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on Unix platforms.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9531,"byte_end":9593,"line_start":285,"line_end":285,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9598,"byte_end":9601,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ [`InvalidInput`]: `std::io::ErrorKind::InvalidInput`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9606,"byte_end":9662,"line_start":287,"line_end":287,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9667,"byte_end":9670,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9675,"byte_end":9689,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9694,"byte_end":9697,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9702,"byte_end":9715,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9720,"byte_end":9764,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9769,"byte_end":9800,"line_start":293,"line_end":293,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9805,"byte_end":9808,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let mut child = Command::new(\"yes\").spawn()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9813,"byte_end":9862,"line_start":295,"line_end":295,"column_start":5,"column_end":54}},{"value":"/ child.kill()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9867,"byte_end":9885,"line_start":296,"line_end":296,"column_start":5,"column_end":23}},{"value":"/ println!(\"exit status: {}\", child.status().await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9890,"byte_end":9945,"line_start":297,"line_end":297,"column_start":5,"column_end":60}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9950,"byte_end":9983,"line_start":298,"line_end":298,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":9988,"byte_end":9995,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10687,"byte_end":10697,"line_start":322,"line_end":322,"column_start":12,"column_end":22},"name":"try_status","qualname":"<Child>::try_status","value":"pub fn try_status(&mut Self) -> io::Result<Option<ExitStatus>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the exit status if the process has exited.","sig":null,"attributes":[{"value":"/ Returns the exit status if the process has exited.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10106,"byte_end":10160,"line_start":304,"line_end":304,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10165,"byte_end":10168,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Unlike [`status()`][`Child::status()`], this method will not drop the stdin handle.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10173,"byte_end":10260,"line_start":306,"line_end":306,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10265,"byte_end":10268,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10273,"byte_end":10287,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10292,"byte_end":10295,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10300,"byte_end":10313,"line_start":310,"line_end":310,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10318,"byte_end":10362,"line_start":311,"line_end":311,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10367,"byte_end":10398,"line_start":312,"line_end":312,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10403,"byte_end":10406,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ let mut child = Command::new(\"ls\").spawn()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10411,"byte_end":10459,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10464,"byte_end":10467,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ match child.try_status()? {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10472,"byte_end":10503,"line_start":316,"line_end":316,"column_start":5,"column_end":36}},{"value":"/     None => println!(\"still running\"),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10508,"byte_end":10550,"line_start":317,"line_end":317,"column_start":5,"column_end":47}},{"value":"/     Some(status) => println!(\"exited with: {}\", status),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10555,"byte_end":10615,"line_start":318,"line_end":318,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10620,"byte_end":10625,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10630,"byte_end":10663,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10668,"byte_end":10675,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11495,"byte_end":11501,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"status","qualname":"<Child>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Drops the stdin handle and waits for the process to exit.","sig":null,"attributes":[{"value":"/ Drops the stdin handle and waits for the process to exit.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10812,"byte_end":10873,"line_start":326,"line_end":326,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10878,"byte_end":10881,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Closing the stdin of the process helps avoid deadlocks. It ensures that the process does","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10886,"byte_end":10978,"line_start":328,"line_end":328,"column_start":5,"column_end":97}},{"value":"/ not block waiting for input from the parent process while the parent waits for the child to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":10983,"byte_end":11078,"line_start":329,"line_end":329,"column_start":5,"column_end":100}},{"value":"/ exit.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11083,"byte_end":11092,"line_start":330,"line_end":330,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11097,"byte_end":11100,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11105,"byte_end":11119,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11124,"byte_end":11127,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11132,"byte_end":11145,"line_start":334,"line_end":334,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11150,"byte_end":11194,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11199,"byte_end":11239,"line_start":336,"line_end":336,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11244,"byte_end":11247,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let mut child = Command::new(\"cp\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11252,"byte_end":11290,"line_start":338,"line_end":338,"column_start":5,"column_end":43}},{"value":"/     .arg(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11295,"byte_end":11316,"line_start":339,"line_end":339,"column_start":5,"column_end":26}},{"value":"/     .arg(\"b.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11321,"byte_end":11342,"line_start":340,"line_end":340,"column_start":5,"column_end":26}},{"value":"/     .spawn()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11347,"byte_end":11365,"line_start":341,"line_end":341,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11370,"byte_end":11373,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ println!(\"exit status: {}\", child.status().await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11378,"byte_end":11433,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11438,"byte_end":11471,"line_start":344,"line_end":344,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":11476,"byte_end":11483,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12907,"byte_end":12913,"line_start":387,"line_end":387,"column_start":12,"column_end":18},"name":"output","qualname":"<Child>::output","value":"pub fn output(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Drops the stdin handle and collects the output of the process.","sig":null,"attributes":[{"value":"/ Drops the stdin handle and collects the output of the process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12059,"byte_end":12125,"line_start":364,"line_end":364,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12130,"byte_end":12133,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Closing the stdin of the process helps avoid deadlocks. It ensures that the process does","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12138,"byte_end":12230,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/ not block waiting for input from the parent process while the parent waits for the child to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12235,"byte_end":12330,"line_start":367,"line_end":367,"column_start":5,"column_end":100}},{"value":"/ exit.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12335,"byte_end":12344,"line_start":368,"line_end":368,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12349,"byte_end":12352,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ In order to capture the output of the process, [`Command::stdout()`] and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12357,"byte_end":12433,"line_start":370,"line_end":370,"column_start":5,"column_end":81}},{"value":"/ [`Command::stderr()`] must be configured with [`Stdio::piped()`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12438,"byte_end":12507,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12512,"byte_end":12515,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12520,"byte_end":12534,"line_start":373,"line_end":373,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12539,"byte_end":12542,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12547,"byte_end":12560,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12565,"byte_end":12609,"line_start":376,"line_end":376,"column_start":5,"column_end":49}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12614,"byte_end":12654,"line_start":377,"line_end":377,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12659,"byte_end":12662,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ let child = Command::new(\"ls\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12667,"byte_end":12701,"line_start":379,"line_end":379,"column_start":5,"column_end":39}},{"value":"/     .stdout(Stdio::piped())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12706,"byte_end":12737,"line_start":380,"line_end":380,"column_start":5,"column_end":36}},{"value":"/     .stderr(Stdio::piped())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12742,"byte_end":12773,"line_start":381,"line_end":381,"column_start":5,"column_end":36}},{"value":"/     .spawn()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12778,"byte_end":12796,"line_start":382,"line_end":382,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12801,"byte_end":12804,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ let out = child.output().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12809,"byte_end":12845,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12850,"byte_end":12883,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":12888,"byte_end":12895,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":128},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":14586,"byte_end":14596,"line_start":446,"line_end":446,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::ChildStdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a child process's standard input (stdin).","sig":null,"attributes":[{"value":"/ A handle to a child process's standard input (stdin).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":14327,"byte_end":14384,"line_start":441,"line_end":441,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":14385,"byte_end":14388,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ When a [`ChildStdin`] is dropped, the underlying handle gets clossed. If the child process was","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":14389,"byte_end":14487,"line_start":443,"line_end":443,"column_start":1,"column_end":99}},{"value":"/ previously blocked on input, it becomes unblocked after dropping.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":14488,"byte_end":14557,"line_start":444,"line_end":444,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":15395,"byte_end":15406,"line_start":473,"line_end":473,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::ChildStdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a child process's standard output (stdout).","sig":null,"attributes":[{"value":"/ A handle to a child process's standard output (stdout).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":15229,"byte_end":15288,"line_start":469,"line_end":469,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":15289,"byte_end":15292,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ When a [`ChildStdout`] is dropped, the underlying handle gets closed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":15293,"byte_end":15366,"line_start":471,"line_end":471,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":15920,"byte_end":15931,"line_start":492,"line_end":492,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::ChildStderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a child process's standard error (stderr).","sig":null,"attributes":[{"value":"/ A handle to a child process's standard error (stderr).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":15755,"byte_end":15813,"line_start":488,"line_end":488,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":15814,"byte_end":15817,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ When a [`ChildStderr`] is dropped, the underlying handle gets closed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":15818,"byte_end":15891,"line_start":490,"line_end":490,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16719,"byte_end":16726,"line_start":523,"line_end":523,"column_start":12,"column_end":19},"name":"Command","qualname":"::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" A builder for spawning processes.","sig":null,"attributes":[{"value":"/ A builder for spawning processes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16280,"byte_end":16317,"line_start":507,"line_end":507,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16318,"byte_end":16321,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16322,"byte_end":16336,"line_start":509,"line_end":509,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16337,"byte_end":16340,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16341,"byte_end":16354,"line_start":511,"line_end":511,"column_start":1,"column_end":14}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16355,"byte_end":16399,"line_start":512,"line_end":512,"column_start":1,"column_end":45}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16400,"byte_end":16431,"line_start":513,"line_end":513,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16432,"byte_end":16435,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ let output = if cfg!(target_os = \"windows\") {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16436,"byte_end":16485,"line_start":515,"line_end":515,"column_start":1,"column_end":50}},{"value":"/     Command::new(\"cmd\").args(&[\"/C\", \"echo hello\"]).output().await?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16486,"byte_end":16557,"line_start":516,"line_end":516,"column_start":1,"column_end":72}},{"value":"/ } else {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16558,"byte_end":16570,"line_start":517,"line_end":517,"column_start":1,"column_end":13}},{"value":"/     Command::new(\"sh\").arg(\"-c\").arg(\"echo hello\").output().await?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16571,"byte_end":16641,"line_start":518,"line_end":518,"column_start":1,"column_end":71}},{"value":"/ };","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16642,"byte_end":16648,"line_start":519,"line_end":519,"column_start":1,"column_end":7}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16649,"byte_end":16682,"line_start":520,"line_end":520,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16683,"byte_end":16690,"line_start":521,"line_end":521,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17266,"byte_end":17269,"line_start":545,"line_end":545,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<S: AsRef<OsStr>>(S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`Command`] for launching `program`.","sig":null,"attributes":[{"value":"/ Constructs a new [`Command`] for launching `program`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16913,"byte_end":16970,"line_start":533,"line_end":533,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16975,"byte_end":16978,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ The initial configuration (the working directory and environment variables) is inherited","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16983,"byte_end":17075,"line_start":535,"line_end":535,"column_start":5,"column_end":97}},{"value":"/ from the current process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17080,"byte_end":17109,"line_start":536,"line_end":536,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17114,"byte_end":17117,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17122,"byte_end":17136,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17141,"byte_end":17144,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17149,"byte_end":17156,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17161,"byte_end":17192,"line_start":541,"line_end":541,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17197,"byte_end":17200,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17205,"byte_end":17242,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17247,"byte_end":17254,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17810,"byte_end":17813,"line_start":567,"line_end":567,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"pub fn arg<S: AsRef<OsStr>>(&mut Self, S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds a single argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds a single argument to pass to the program.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17549,"byte_end":17599,"line_start":556,"line_end":556,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17604,"byte_end":17607,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17612,"byte_end":17626,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17631,"byte_end":17634,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17639,"byte_end":17646,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17651,"byte_end":17682,"line_start":561,"line_end":561,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17687,"byte_end":17690,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"echo\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17695,"byte_end":17734,"line_start":563,"line_end":563,"column_start":5,"column_end":44}},{"value":"/ cmd.arg(\"hello\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17739,"byte_end":17760,"line_start":564,"line_end":564,"column_start":5,"column_end":26}},{"value":"/ cmd.arg(\"world\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17765,"byte_end":17786,"line_start":565,"line_end":565,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17791,"byte_end":17798,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18170,"byte_end":18174,"line_start":582,"line_end":582,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"pub fn args<I, S>(&mut Self, I) -> &mut Command where I: IntoIterator<Item =\nS>, S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17921,"byte_end":17972,"line_start":572,"line_end":572,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17977,"byte_end":17980,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":17985,"byte_end":17999,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18004,"byte_end":18007,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18012,"byte_end":18019,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18024,"byte_end":18055,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18060,"byte_end":18063,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"echo\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18068,"byte_end":18107,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ cmd.args(&[\"hello\", \"world\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18112,"byte_end":18146,"line_start":580,"line_end":580,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18151,"byte_end":18158,"line_start":581,"line_end":581,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18756,"byte_end":18759,"line_start":604,"line_end":604,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"pub fn env<K, V>(&mut Self, K, V) -> &mut Command where K: AsRef<OsStr>,\nV: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Configures an environment variable for the new process.","sig":null,"attributes":[{"value":"/ Configures an environment variable for the new process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18348,"byte_end":18407,"line_start":591,"line_end":591,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18412,"byte_end":18415,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18420,"byte_end":18515,"line_start":593,"line_end":593,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18520,"byte_end":18566,"line_start":594,"line_end":594,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18571,"byte_end":18574,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18579,"byte_end":18593,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18598,"byte_end":18601,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18606,"byte_end":18613,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18618,"byte_end":18649,"line_start":599,"line_end":599,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18654,"byte_end":18657,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18662,"byte_end":18699,"line_start":601,"line_end":601,"column_start":5,"column_end":42}},{"value":"/ cmd.env(\"PATH\", \"/bin\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18704,"byte_end":18732,"line_start":602,"line_end":602,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18737,"byte_end":18744,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19385,"byte_end":19389,"line_start":626,"line_end":626,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"pub fn envs<I, K, V>(&mut Self, I) -> &mut Command where I: IntoIterator<Item\n= (K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Configures multiple environment variables for the new process.","sig":null,"attributes":[{"value":"/ Configures multiple environment variables for the new process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":18933,"byte_end":18999,"line_start":613,"line_end":613,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19004,"byte_end":19007,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19012,"byte_end":19107,"line_start":615,"line_end":615,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19112,"byte_end":19158,"line_start":616,"line_end":616,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19163,"byte_end":19166,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19171,"byte_end":19185,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19190,"byte_end":19193,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19198,"byte_end":19205,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19210,"byte_end":19241,"line_start":621,"line_end":621,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19246,"byte_end":19249,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19254,"byte_end":19291,"line_start":623,"line_end":623,"column_start":5,"column_end":42}},{"value":"/ cmd.envs(vec![(\"PATH\", \"/bin\"), (\"TERM\", \"xterm-256color\")]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19296,"byte_end":19361,"line_start":624,"line_end":624,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19366,"byte_end":19373,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19829,"byte_end":19839,"line_start":646,"line_end":646,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"pub fn env_remove<K: AsRef<OsStr>>(&mut Self, K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19596,"byte_end":19640,"line_start":636,"line_end":636,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19645,"byte_end":19648,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19653,"byte_end":19667,"line_start":638,"line_end":638,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19672,"byte_end":19675,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19680,"byte_end":19687,"line_start":640,"line_end":640,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19692,"byte_end":19723,"line_start":641,"line_end":641,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19728,"byte_end":19731,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19736,"byte_end":19773,"line_start":643,"line_end":643,"column_start":5,"column_end":42}},{"value":"/ cmd.env_remove(\"PATH\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19778,"byte_end":19805,"line_start":644,"line_end":644,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19810,"byte_end":19817,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20182,"byte_end":20191,"line_start":661,"line_end":661,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"pub fn env_clear(&mut Self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes all environment variable mappings.","sig":null,"attributes":[{"value":"/ Removes all environment variable mappings.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":19954,"byte_end":20000,"line_start":651,"line_end":651,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20005,"byte_end":20008,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20013,"byte_end":20027,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20032,"byte_end":20035,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20040,"byte_end":20047,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20052,"byte_end":20083,"line_start":656,"line_end":656,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20088,"byte_end":20091,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20096,"byte_end":20133,"line_start":658,"line_end":658,"column_start":5,"column_end":42}},{"value":"/ cmd.env_clear();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20138,"byte_end":20158,"line_start":659,"line_end":659,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20163,"byte_end":20170,"line_start":660,"line_end":660,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20521,"byte_end":20532,"line_start":676,"line_end":676,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"pub fn current_dir<P: AsRef<Path>>(&mut Self, P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures the working directory for the new process.","sig":null,"attributes":[{"value":"/ Configures the working directory for the new process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20277,"byte_end":20334,"line_start":666,"line_end":666,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20339,"byte_end":20342,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20347,"byte_end":20361,"line_start":668,"line_end":668,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20366,"byte_end":20369,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20374,"byte_end":20381,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20386,"byte_end":20417,"line_start":671,"line_end":671,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20422,"byte_end":20425,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20430,"byte_end":20467,"line_start":673,"line_end":673,"column_start":5,"column_end":42}},{"value":"/ cmd.current_dir(\"/\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20472,"byte_end":20497,"line_start":674,"line_end":674,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20502,"byte_end":20509,"line_start":675,"line_end":675,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20910,"byte_end":20915,"line_start":691,"line_end":691,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"pub fn stdin<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures the standard input (stdin) for the new process.","sig":null,"attributes":[{"value":"/ Configures the standard input (stdin) for the new process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20647,"byte_end":20709,"line_start":681,"line_end":681,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20714,"byte_end":20717,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20722,"byte_end":20736,"line_start":683,"line_end":683,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20741,"byte_end":20744,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20749,"byte_end":20756,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20761,"byte_end":20801,"line_start":686,"line_end":686,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20806,"byte_end":20809,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20814,"byte_end":20852,"line_start":688,"line_end":688,"column_start":5,"column_end":43}},{"value":"/ cmd.stdin(Stdio::null());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20857,"byte_end":20886,"line_start":689,"line_end":689,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":20891,"byte_end":20898,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21298,"byte_end":21304,"line_start":706,"line_end":706,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"pub fn stdout<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures the standard output (stdout) for the new process.","sig":null,"attributes":[{"value":"/ Configures the standard output (stdout) for the new process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21032,"byte_end":21096,"line_start":696,"line_end":696,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21101,"byte_end":21104,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21109,"byte_end":21123,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21128,"byte_end":21131,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21136,"byte_end":21143,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21148,"byte_end":21188,"line_start":701,"line_end":701,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21193,"byte_end":21196,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21201,"byte_end":21238,"line_start":703,"line_end":703,"column_start":5,"column_end":42}},{"value":"/ cmd.stdout(Stdio::piped());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21243,"byte_end":21274,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21279,"byte_end":21286,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21687,"byte_end":21693,"line_start":721,"line_end":721,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"pub fn stderr<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures the standard error (stderr) for the new process.","sig":null,"attributes":[{"value":"/ Configures the standard error (stderr) for the new process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21422,"byte_end":21485,"line_start":711,"line_end":711,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21490,"byte_end":21493,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21498,"byte_end":21512,"line_start":713,"line_end":713,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21517,"byte_end":21520,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21525,"byte_end":21532,"line_start":715,"line_end":715,"column_start":5,"column_end":12}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21537,"byte_end":21577,"line_start":716,"line_end":716,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21582,"byte_end":21585,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21590,"byte_end":21627,"line_start":718,"line_end":718,"column_start":5,"column_end":42}},{"value":"/ cmd.stderr(Stdio::piped());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21632,"byte_end":21663,"line_start":719,"line_end":719,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21668,"byte_end":21675,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22627,"byte_end":22639,"line_start":746,"line_end":746,"column_start":12,"column_end":24},"name":"reap_on_drop","qualname":"<Command>::reap_on_drop","value":"pub fn reap_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures whether to reap the zombie process when [`Child`] is dropped.","sig":null,"attributes":[{"value":"/ Configures whether to reap the zombie process when [`Child`] is dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21811,"byte_end":21887,"line_start":726,"line_end":726,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21892,"byte_end":21895,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ When the process finishes, it becomes a \"zombie\" and some resources associated with it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21900,"byte_end":21990,"line_start":728,"line_end":728,"column_start":5,"column_end":95}},{"value":"/ remain until [`Child::try_status()`], [`Child::status()`], or [`Child::output()`] collects","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":21995,"byte_end":22089,"line_start":729,"line_end":729,"column_start":5,"column_end":99}},{"value":"/ its exit code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22094,"byte_end":22112,"line_start":730,"line_end":730,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22117,"byte_end":22120,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ If its exit code is never collected, the resources may leak forever. This crate has a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22125,"byte_end":22214,"line_start":732,"line_end":732,"column_start":5,"column_end":94}},{"value":"/ background thread named \"async-process\" that collects such \"zombie\" processes and then","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22219,"byte_end":22309,"line_start":733,"line_end":733,"column_start":5,"column_end":95}},{"value":"/ \"reaps\" them, thus preventing the resource leaks.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22314,"byte_end":22367,"line_start":734,"line_end":734,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22372,"byte_end":22375,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ The default value of this option is `true`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22380,"byte_end":22427,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22432,"byte_end":22435,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22440,"byte_end":22454,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22459,"byte_end":22462,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22467,"byte_end":22474,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22479,"byte_end":22519,"line_start":741,"line_end":741,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22524,"byte_end":22527,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22532,"byte_end":22570,"line_start":743,"line_end":743,"column_start":5,"column_end":43}},{"value":"/ cmd.reap_on_drop(false);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22575,"byte_end":22603,"line_start":744,"line_end":744,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22608,"byte_end":22615,"line_start":745,"line_end":745,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23084,"byte_end":23096,"line_start":763,"line_end":763,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"pub fn kill_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures whether to kill the process when [`Child`] is dropped.","sig":null,"attributes":[{"value":"/ Configures whether to kill the process when [`Child`] is dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22755,"byte_end":22824,"line_start":751,"line_end":751,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22829,"byte_end":22832,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ The default value of this option is `false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22837,"byte_end":22885,"line_start":753,"line_end":753,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22890,"byte_end":22893,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22898,"byte_end":22912,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22917,"byte_end":22920,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22925,"byte_end":22932,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22937,"byte_end":22977,"line_start":758,"line_end":758,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22982,"byte_end":22985,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":22990,"byte_end":23028,"line_start":760,"line_end":760,"column_start":5,"column_end":43}},{"value":"/ cmd.kill_on_drop(true);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23033,"byte_end":23060,"line_start":761,"line_end":761,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23065,"byte_end":23072,"line_start":762,"line_end":762,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23727,"byte_end":23732,"line_start":783,"line_end":783,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"pub fn spawn(&mut Self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command and returns the [`Child`] handle to it.","sig":null,"attributes":[{"value":"/ Executes the command and returns the [`Child`] handle to it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23212,"byte_end":23276,"line_start":768,"line_end":768,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23281,"byte_end":23284,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ If not configured, stdin, stdout and stderr will be set to [`Stdio::inherit()`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23289,"byte_end":23373,"line_start":770,"line_end":770,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23378,"byte_end":23381,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ After spawning the process, stdin, stdout, and stderr become unconfigured again.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23386,"byte_end":23470,"line_start":772,"line_end":772,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23475,"byte_end":23478,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23483,"byte_end":23497,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23502,"byte_end":23505,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23510,"byte_end":23523,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23528,"byte_end":23572,"line_start":777,"line_end":777,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23577,"byte_end":23608,"line_start":778,"line_end":778,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23613,"byte_end":23616,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ let child = Command::new(\"ls\").spawn()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23621,"byte_end":23665,"line_start":780,"line_end":780,"column_start":5,"column_end":49}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23670,"byte_end":23703,"line_start":781,"line_end":781,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":23708,"byte_end":23715,"line_start":782,"line_end":782,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24703,"byte_end":24709,"line_start":811,"line_end":811,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command, waits for it to exit, and returns the exit status.","sig":null,"attributes":[{"value":"/ Executes the command, waits for it to exit, and returns the exit status.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24090,"byte_end":24166,"line_start":792,"line_end":792,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24171,"byte_end":24174,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ If not configured, stdin, stdout and stderr will be set to [`Stdio::inherit()`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24179,"byte_end":24263,"line_start":794,"line_end":794,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24268,"byte_end":24271,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ After spawning the process, stdin, stdout, and stderr become unconfigured again.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24276,"byte_end":24360,"line_start":796,"line_end":796,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24365,"byte_end":24368,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24373,"byte_end":24387,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24392,"byte_end":24395,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24400,"byte_end":24413,"line_start":800,"line_end":800,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24418,"byte_end":24462,"line_start":801,"line_end":801,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24467,"byte_end":24498,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24503,"byte_end":24506,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let status = Command::new(\"cp\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24511,"byte_end":24546,"line_start":804,"line_end":804,"column_start":5,"column_end":40}},{"value":"/     .arg(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24551,"byte_end":24572,"line_start":805,"line_end":805,"column_start":5,"column_end":26}},{"value":"/     .arg(\"b.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24577,"byte_end":24598,"line_start":806,"line_end":806,"column_start":5,"column_end":26}},{"value":"/     .status()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24603,"byte_end":24620,"line_start":807,"line_end":807,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24625,"byte_end":24641,"line_start":808,"line_end":808,"column_start":5,"column_end":21}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24646,"byte_end":24679,"line_start":809,"line_end":809,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24684,"byte_end":24691,"line_start":810,"line_end":810,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25399,"byte_end":25405,"line_start":832,"line_end":832,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"pub fn output(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command and collects its output.","sig":null,"attributes":[{"value":"/ Executes the command and collects its output.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24856,"byte_end":24905,"line_start":816,"line_end":816,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24910,"byte_end":24913,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ If not configured, stdin will be set to [`Stdio::null()`], and stdout and stderr will be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":24918,"byte_end":25010,"line_start":818,"line_end":818,"column_start":5,"column_end":97}},{"value":"/ set to [`Stdio::piped()`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25015,"byte_end":25045,"line_start":819,"line_end":819,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25050,"byte_end":25053,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ After spawning the process, stdin, stdout, and stderr become unconfigured again.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25058,"byte_end":25142,"line_start":821,"line_end":821,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25147,"byte_end":25150,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25155,"byte_end":25169,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25174,"byte_end":25177,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25182,"byte_end":25195,"line_start":825,"line_end":825,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25200,"byte_end":25244,"line_start":826,"line_end":826,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25249,"byte_end":25280,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25285,"byte_end":25288,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let child = Command::new(\"ls\").spawn()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25293,"byte_end":25337,"line_start":829,"line_end":829,"column_start":5,"column_end":49}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25342,"byte_end":25375,"line_start":830,"line_end":830,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":25380,"byte_end":25387,"line_start":831,"line_end":831,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29951,"byte_end":29958,"line_start":91,"line_end":91,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2331,"byte_end":2341,"line_start":86,"line_end":86,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":3566,"byte_end":3571,"line_start":127,"line_end":127,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":8296,"byte_end":8306,"line_start":242,"line_end":242,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":13933,"byte_end":13938,"line_start":423,"line_end":423,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":14066,"byte_end":14071,"line_start":431,"line_end":431,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":14731,"byte_end":14741,"line_start":451,"line_end":451,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":15542,"byte_end":15553,"line_start":478,"line_end":478,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16067,"byte_end":16078,"line_start":497,"line_end":497,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16899,"byte_end":16906,"line_start":532,"line_end":532,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2027,"byte_end":2031,"line_start":73,"line_end":73,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":25}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/unix.rs","byte_start":29951,"byte_end":29958,"line_start":91,"line_end":91,"column_start":21,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":143},"to":{"krate":0,"index":30}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":2331,"byte_end":2341,"line_start":86,"line_end":86,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":3566,"byte_end":3571,"line_start":127,"line_end":127,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":8296,"byte_end":8306,"line_start":242,"line_end":242,"column_start":23,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":13933,"byte_end":13938,"line_start":423,"line_end":423,"column_start":15,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":52},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":14066,"byte_end":14071,"line_start":431,"line_end":431,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":52},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":14731,"byte_end":14741,"line_start":451,"line_end":451,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":128},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":15542,"byte_end":15553,"line_start":478,"line_end":478,"column_start":24,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":133},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16067,"byte_end":16078,"line_start":497,"line_end":497,"column_start":24,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":138},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.1/src/lib.rs","byte_start":16899,"byte_end":16906,"line_start":532,"line_end":532,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}}]}