{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","prost_build","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=5d2ab97d699e5367","-C","extra-filename=-5d2ab97d699e5367","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--extern","bytes=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libbytes-0d8dfbae79e026a0.rmeta","--extern","heck=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libheck-21e6dad99cca7dab.rmeta","--extern","itertools=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libitertools-6188ab9fb49380c4.rmeta","--extern","log=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/liblog-1f194a4c9756f98f.rmeta","--extern","multimap=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libmultimap-fb5a4b3b6e7a7259.rmeta","--extern","petgraph=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libpetgraph-1d73c06bbd0eb65e.rmeta","--extern","prost=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libprost-3538a4894a5aa16d.rmeta","--extern","prost_types=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libprost_types-9496225936551308.rmeta","--extern","tempfile=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libtempfile-cf7fc97ef452a5de.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libprost_build-5d2ab97d699e5367.rmeta"},"prelude":{"crate_id":{"name":"prost_build","disambiguator":[3367099039622471012,15582566295970831594]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","num":18,"id":{"name":"prost_types","disambiguator":[734884213759224736,14196218915158877362]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":19,"id":{"name":"prost","disambiguator":[14068212791092373381,8558441766272278390]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","num":20,"id":{"name":"prost_derive","disambiguator":[1314004770385514942,1413412371849766261]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","num":21,"id":{"name":"bytes","disambiguator":[2440988930844344484,10232047158754696752]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/code_generator.rs","num":22,"id":{"name":"itertools","disambiguator":[7422150485909436384,1478435296382463615]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/code_generator.rs","num":23,"id":{"name":"either","disambiguator":[8008414615816079343,9709751707515117868]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/code_generator.rs","num":24,"id":{"name":"log","disambiguator":[17656527568527509774,2025014967732049514]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/code_generator.rs","num":25,"id":{"name":"cfg_if","disambiguator":[6744701999438140601,15404422640856133991]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/code_generator.rs","num":26,"id":{"name":"multimap","disambiguator":[15687657316752887552,15606678347228916549]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ident.rs","num":27,"id":{"name":"heck","disambiguator":[13129303624468812773,14416796479716946501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ident.rs","num":28,"id":{"name":"unicode_segmentation","disambiguator":[11746649770075350554,13942579322319380422]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/message_graph.rs","num":29,"id":{"name":"petgraph","disambiguator":[14479665288236528287,797899385000178605]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/message_graph.rs","num":30,"id":{"name":"fixedbitset","disambiguator":[15634959949624086963,15492902672015807059]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/message_graph.rs","num":31,"id":{"name":"indexmap","disambiguator":[7923567187150424012,16782624027188028210]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/message_graph.rs","num":32,"id":{"name":"hashbrown","disambiguator":[14388580065565446927,16190819971170994232]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/message_graph.rs","num":33,"id":{"name":"ahash","disambiguator":[2157755858850542964,15060390077891230221]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":34,"id":{"name":"tempfile","disambiguator":[15816490041618276470,16586008648234893834]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":35,"id":{"name":"cfg_if","disambiguator":[17087874633599868123,7986786400203201351]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":36,"id":{"name":"remove_dir_all","disambiguator":[12003761448114603247,18162900338921468245]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":37,"id":{"name":"rand","disambiguator":[5452646336068923167,15011923956034456682]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":38,"id":{"name":"rand_core","disambiguator":[16116736751664917756,6858626071968147723]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":39,"id":{"name":"getrandom","disambiguator":[12062697496344068577,14173819355840542327]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":40,"id":{"name":"libc","disambiguator":[18396891392045078001,3044368777826841640]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":41,"id":{"name":"rand_chacha","disambiguator":[7744449144218828645,11014698311745109056]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","num":42,"id":{"name":"ppv_lite86","disambiguator":[14920341718112917653,17847608698739112606]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":0,"byte_end":28465,"line_start":1,"line_end":784,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3624,"byte_end":3632,"line_start":125,"line_end":125,"column_start":22,"column_end":30},"alias_span":null,"name":"Comments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":235},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3634,"byte_end":3640,"line_start":125,"line_end":125,"column_start":32,"column_end":38},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3642,"byte_end":3649,"line_start":125,"line_end":125,"column_start":40,"column_end":47},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":0,"byte_end":28465,"line_start":1,"line_end":784,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":11},{"krate":0,"index":104},{"krate":0,"index":120},{"krate":0,"index":127},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":356},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":374},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":184},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":" `prost-build` compiles `.proto` files into Rust.","sig":null,"attributes":[{"value":"/ `prost-build` compiles `.proto` files into Rust.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":62,"byte_end":114,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":115,"byte_end":118,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `prost-build` is designed to be used for build-time code generation as part of a Cargo","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":119,"byte_end":209,"line_start":5,"line_end":5,"column_start":1,"column_end":91}},{"value":"/ build-script.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":210,"byte_end":227,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":228,"byte_end":231,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":232,"byte_end":246,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":247,"byte_end":250,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Let's create a small crate, `snazzy`, that defines a collection of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":251,"byte_end":321,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/ snazzy new items in a protobuf file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":322,"byte_end":362,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":363,"byte_end":366,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":367,"byte_end":378,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ $ cargo new snazzy && cd snazzy","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":379,"byte_end":414,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":415,"byte_end":422,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":423,"byte_end":426,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ First, add `prost-build`, `prost` and its public dependencies to `Cargo.toml`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":427,"byte_end":508,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ (see [crates.io](https://crates.io/crates/prost) for the current versions):","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":509,"byte_end":588,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":589,"byte_end":592,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":593,"byte_end":604,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":605,"byte_end":623,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ bytes = <bytes-version>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":624,"byte_end":651,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/ prost = <prost-version>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":652,"byte_end":679,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":680,"byte_end":683,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [build-dependencies]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":684,"byte_end":708,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/ prost-build = { version = <prost-version> }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":709,"byte_end":756,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":757,"byte_end":764,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":765,"byte_end":768,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Next, add `src/items.proto` to the project:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":769,"byte_end":816,"line_start":29,"line_end":29,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":817,"byte_end":820,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```proto","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":821,"byte_end":833,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":834,"byte_end":856,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":857,"byte_end":860,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ package snazzy.items;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":861,"byte_end":886,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":887,"byte_end":890,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // A snazzy new shirt!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":891,"byte_end":917,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ message Shirt {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":918,"byte_end":937,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/ enum Size {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":938,"byte_end":953,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     SMALL = 0;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":954,"byte_end":972,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/     MEDIUM = 1;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":973,"byte_end":992,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/     LARGE = 2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":993,"byte_end":1011,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1012,"byte_end":1017,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1018,"byte_end":1021,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ string color = 1;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1022,"byte_end":1043,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ Size size = 2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1044,"byte_end":1062,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1063,"byte_end":1068,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1069,"byte_end":1076,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1077,"byte_end":1080,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ To generate Rust code from `items.proto`, we use `prost-build` in the crate's","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1081,"byte_end":1162,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/ `build.rs` build-script:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1163,"byte_end":1191,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1192,"byte_end":1195,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1196,"byte_end":1214,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1215,"byte_end":1230,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     prost_build::compile_protos(&[\"src/items.proto\"],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1231,"byte_end":1288,"line_start":54,"line_end":54,"column_start":1,"column_end":58}},{"value":"/                                 &[\"src/\"]).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1289,"byte_end":1345,"line_start":55,"line_end":55,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1346,"byte_end":1351,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1352,"byte_end":1359,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1360,"byte_end":1363,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ And finally, in `lib.rs`, include the generated code:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1364,"byte_end":1421,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1422,"byte_end":1425,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1426,"byte_end":1444,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/ // Include the `items` module, which is generated from items.proto.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1445,"byte_end":1516,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ pub mod items {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1517,"byte_end":1536,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/     include!(concat!(env!(\"OUT_DIR\"), \"/snazzy.items.rs\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1537,"byte_end":1600,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1601,"byte_end":1606,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1607,"byte_end":1610,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ pub fn create_large_shirt(color: String) -> items::Shirt {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1611,"byte_end":1673,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/     let mut shirt = items::Shirt::default();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1674,"byte_end":1722,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/     shirt.color = color;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1723,"byte_end":1751,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/     shirt.set_size(items::shirt::Size::Large);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1752,"byte_end":1802,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/     shirt","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1803,"byte_end":1816,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1817,"byte_end":1822,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1823,"byte_end":1830,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1831,"byte_end":1834,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ That's it! Run `cargo doc` to see documentation for the generated code. The full","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1835,"byte_end":1919,"line_start":75,"line_end":75,"column_start":1,"column_end":85}},{"value":"/ example project can be found on [GitHub](https://github.com/danburkert/snazzy).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":1920,"byte_end":2003,"line_start":76,"line_end":76,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2004,"byte_end":2007,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ## Sourcing `protoc`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2008,"byte_end":2032,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2033,"byte_end":2036,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ `prost-build` depends on the Protocol Buffers compiler, `protoc`, to parse `.proto` files into","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2037,"byte_end":2135,"line_start":80,"line_end":80,"column_start":1,"column_end":99}},{"value":"/ a representation that can be transformed into Rust. If set, `prost-build` uses the `PROTOC` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2136,"byte_end":2235,"line_start":81,"line_end":81,"column_start":1,"column_end":100}},{"value":"/ `PROTOC_INCLUDE` environment variables for locating `protoc` and the Protobuf includes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2236,"byte_end":2326,"line_start":82,"line_end":82,"column_start":1,"column_end":91}},{"value":"/ directory. For example, on a macOS system where Protobuf is installed with Homebrew, set the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2327,"byte_end":2423,"line_start":83,"line_end":83,"column_start":1,"column_end":97}},{"value":"/ environment to:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2424,"byte_end":2443,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2444,"byte_end":2447,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2448,"byte_end":2459,"line_start":86,"line_end":86,"column_start":1,"column_end":12}},{"value":"/ PROTOC=/usr/local/bin/protoc","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2460,"byte_end":2492,"line_start":87,"line_end":87,"column_start":1,"column_end":33}},{"value":"/ PROTOC_INCLUDE=/usr/local/include","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2493,"byte_end":2530,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2531,"byte_end":2538,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2539,"byte_end":2542,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ and in a typical Linux installation:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2543,"byte_end":2583,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2584,"byte_end":2587,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2588,"byte_end":2599,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ PROTOC=/usr/bin/protoc","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2600,"byte_end":2626,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/ PROTOC_INCLUDE=/usr/include","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2627,"byte_end":2658,"line_start":95,"line_end":95,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2659,"byte_end":2666,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2667,"byte_end":2670,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ If `PROTOC` is not found in the environment, then a pre-compiled `protoc` binary bundled in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2671,"byte_end":2766,"line_start":98,"line_end":98,"column_start":1,"column_end":96}},{"value":"/ the prost-build crate is used. Pre-compiled `protoc` binaries exist for Linux, macOS, and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2767,"byte_end":2860,"line_start":99,"line_end":99,"column_start":1,"column_end":94}},{"value":"/ Windows systems. If no pre-compiled `protoc` is available for the host platform, then the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2861,"byte_end":2954,"line_start":100,"line_end":100,"column_start":1,"column_end":94}},{"value":"/ `protoc` or `protoc.exe` binary on the `PATH` is used. If `protoc` is not available in any of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":2955,"byte_end":3052,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ these fallback locations, then the build fails.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3053,"byte_end":3104,"line_start":102,"line_end":102,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3105,"byte_end":3108,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ If `PROTOC_INCLUDE` is not found in the environment, then the Protobuf include directory bundled","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3109,"byte_end":3209,"line_start":104,"line_end":104,"column_start":1,"column_end":101}},{"value":"/ in the prost-build crate is be used.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3210,"byte_end":3250,"line_start":105,"line_end":105,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":28591,"byte_end":28599,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"Comments","qualname":"::ast::Comments","value":"Comments { leading_detached, leading, trailing }","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"decl_id":null,"docs":" Comments on a Protobuf item.\n","sig":null,"attributes":[{"value":"/ Comments on a Protobuf item.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":28530,"byte_end":28562,"line_start":4,"line_end":4,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":221},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":28655,"byte_end":28671,"line_start":8,"line_end":8,"column_start":9,"column_end":25},"name":"leading_detached","qualname":"::ast::Comments::leading_detached","value":"std::vec::Vec<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Leading detached blocks of comments.\n","sig":null,"attributes":[{"value":"/ Leading detached blocks of comments.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":28606,"byte_end":28646,"line_start":7,"line_end":7,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":222},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":28726,"byte_end":28733,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"leading","qualname":"::ast::Comments::leading","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Leading comments.\n","sig":null,"attributes":[{"value":"/ Leading comments.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":28696,"byte_end":28717,"line_start":10,"line_end":10,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":223},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":28784,"byte_end":28792,"line_start":14,"line_end":14,"column_start":9,"column_end":17},"name":"trailing","qualname":"::ast::Comments::trailing","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Trailing comments.\n","sig":null,"attributes":[{"value":"/ Trailing comments.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":28753,"byte_end":28775,"line_start":13,"line_end":13,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":29783,"byte_end":29801,"line_start":49,"line_end":49,"column_start":12,"column_end":30},"name":"append_with_indent","qualname":"<Comments>::append_with_indent","value":"pub fn append_with_indent(&Self, u8, &mut String)","parent":null,"children":[],"decl_id":null,"docs":" Appends the comments to a buffer with indentation.","sig":null,"attributes":[{"value":"/ Appends the comments to a buffer with indentation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":29631,"byte_end":29685,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":29690,"byte_end":29693,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Each level of indentation corresponds to four space (' ') characters.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":29698,"byte_end":29771,"line_start":48,"line_end":48,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31152,"byte_end":31159,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"Service","qualname":"::ast::Service","value":"Service { name, proto_name, package, comments, methods, options }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" A service descriptor.\n","sig":null,"attributes":[{"value":"/ A service descriptor.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31098,"byte_end":31123,"line_start":93,"line_end":93,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31210,"byte_end":31214,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Service::name","value":"std::string::String","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The service name in Rust style.\n","sig":null,"attributes":[{"value":"/ The service name in Rust style.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31166,"byte_end":31201,"line_start":96,"line_end":96,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":228},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31291,"byte_end":31301,"line_start":99,"line_end":99,"column_start":9,"column_end":19},"name":"proto_name","qualname":"::ast::Service::proto_name","value":"std::string::String","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The service name as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The service name as it appears in the .proto file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31228,"byte_end":31282,"line_start":98,"line_end":98,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":229},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31378,"byte_end":31385,"line_start":101,"line_end":101,"column_start":9,"column_end":16},"name":"package","qualname":"::ast::Service::package","value":"std::string::String","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The package name as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The package name as it appears in the .proto file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31315,"byte_end":31369,"line_start":100,"line_end":100,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":230},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31433,"byte_end":31441,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"name":"comments","qualname":"::ast::Service::comments","value":"ast::Comments","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The service comments.\n","sig":null,"attributes":[{"value":"/ The service comments.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31399,"byte_end":31424,"line_start":102,"line_end":102,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":231},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31490,"byte_end":31497,"line_start":105,"line_end":105,"column_start":9,"column_end":16},"name":"methods","qualname":"::ast::Service::methods","value":"std::vec::Vec<ast::Method>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The service methods.\n","sig":null,"attributes":[{"value":"/ The service methods.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31457,"byte_end":31481,"line_start":104,"line_end":104,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":232},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31549,"byte_end":31556,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"name":"options","qualname":"::ast::Service::options","value":"prost_types::ServiceOptions","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The service options.\n","sig":null,"attributes":[{"value":"/ The service options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31516,"byte_end":31540,"line_start":106,"line_end":106,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":235},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31651,"byte_end":31657,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"Method","qualname":"::ast::Method","value":"Method { name, proto_name, comments, input_type, output_type, input_proto_type, output_proto_type, options, client_streaming, server_streaming }","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" A service method descriptor.\n","sig":null,"attributes":[{"value":"/ A service method descriptor.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31590,"byte_end":31622,"line_start":110,"line_end":110,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":236},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31714,"byte_end":31718,"line_start":114,"line_end":114,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Method::name","value":"std::string::String","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" The name of the method in Rust style.\n","sig":null,"attributes":[{"value":"/ The name of the method in Rust style.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31664,"byte_end":31705,"line_start":113,"line_end":113,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":237},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31801,"byte_end":31811,"line_start":116,"line_end":116,"column_start":9,"column_end":19},"name":"proto_name","qualname":"::ast::Method::proto_name","value":"std::string::String","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" The name of the method as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The name of the method as it appears in the .proto file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31732,"byte_end":31792,"line_start":115,"line_end":115,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":238},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31858,"byte_end":31866,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"comments","qualname":"::ast::Method::comments","value":"ast::Comments","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" The method comments.\n","sig":null,"attributes":[{"value":"/ The method comments.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31825,"byte_end":31849,"line_start":117,"line_end":117,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":239},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31915,"byte_end":31925,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"name":"input_type","qualname":"::ast::Method::input_type","value":"std::string::String","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" The input Rust type.\n","sig":null,"attributes":[{"value":"/ The input Rust type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31882,"byte_end":31906,"line_start":119,"line_end":119,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":240},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31973,"byte_end":31984,"line_start":122,"line_end":122,"column_start":9,"column_end":20},"name":"output_type","qualname":"::ast::Method::output_type","value":"std::string::String","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" The output Rust type.\n","sig":null,"attributes":[{"value":"/ The output Rust type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31939,"byte_end":31964,"line_start":121,"line_end":121,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":241},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":32035,"byte_end":32051,"line_start":124,"line_end":124,"column_start":9,"column_end":25},"name":"input_proto_type","qualname":"::ast::Method::input_proto_type","value":"std::string::String","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" The input Protobuf type.\n","sig":null,"attributes":[{"value":"/ The input Protobuf type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":31998,"byte_end":32026,"line_start":123,"line_end":123,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":242},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":32103,"byte_end":32120,"line_start":126,"line_end":126,"column_start":9,"column_end":26},"name":"output_proto_type","qualname":"::ast::Method::output_proto_type","value":"std::string::String","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" The output Protobuf type.\n","sig":null,"attributes":[{"value":"/ The output Protobuf type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":32065,"byte_end":32094,"line_start":125,"line_end":125,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":243},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":32166,"byte_end":32173,"line_start":128,"line_end":128,"column_start":9,"column_end":16},"name":"options","qualname":"::ast::Method::options","value":"prost_types::MethodOptions","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" The method options.\n","sig":null,"attributes":[{"value":"/ The method options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":32134,"byte_end":32157,"line_start":127,"line_end":127,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":244},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":32274,"byte_end":32290,"line_start":130,"line_end":130,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"::ast::Method::client_streaming","value":"bool","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Identifies if client streams multiple client messages.\n","sig":null,"attributes":[{"value":"/ Identifies if client streams multiple client messages.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":32207,"byte_end":32265,"line_start":129,"line_end":129,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":245},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":32369,"byte_end":32385,"line_start":132,"line_end":132,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"::ast::Method::server_streaming","value":"bool","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Identifies if server streams multiple server messages.\n","sig":null,"attributes":[{"value":"/ Identifies if server streams multiple server messages.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":32302,"byte_end":32360,"line_start":131,"line_end":131,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":171},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4617,"byte_end":4633,"line_start":147,"line_end":147,"column_start":11,"column_end":27},"name":"ServiceGenerator","qualname":"::ServiceGenerator","value":"ServiceGenerator","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" A service generator takes a service descriptor and generates Rust code.","sig":null,"attributes":[{"value":"/ A service generator takes a service descriptor and generates Rust code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3829,"byte_end":3904,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3905,"byte_end":3908,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ `ServiceGenerator` can be used to generate application-specific interfaces","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3909,"byte_end":3987,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ or implementations for Protobuf service definitions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":3988,"byte_end":4044,"line_start":136,"line_end":136,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4045,"byte_end":4048,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Service generators are registered with a code generator using the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4049,"byte_end":4118,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ `Config::service_generator` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4119,"byte_end":4158,"line_start":139,"line_end":139,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4159,"byte_end":4162,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ A viable scenario is that an RPC framework provides a service generator. It generates a trait","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4163,"byte_end":4260,"line_start":141,"line_end":141,"column_start":1,"column_end":98}},{"value":"/ describing methods of the service and some glue code to call the methods of the trait, defining","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4261,"byte_end":4360,"line_start":142,"line_end":142,"column_start":1,"column_end":100}},{"value":"/ details like how errors are handled or if it is asynchronous. Then the user provides an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4361,"byte_end":4452,"line_start":143,"line_end":143,"column_start":1,"column_end":92}},{"value":"/ implementation of the generated trait in the application code and plugs it into the framework.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4453,"byte_end":4551,"line_start":144,"line_end":144,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4552,"byte_end":4555,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Such framework isn't part of Prost at present.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4556,"byte_end":4606,"line_start":146,"line_end":146,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4748,"byte_end":4756,"line_start":150,"line_end":150,"column_start":8,"column_end":16},"name":"generate","qualname":"::ServiceGenerator::generate","value":"pub fn generate(&mut Self, Service, &mut String)","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" Generates a Rust interface or implementation for a service, writing the\n result to `buf`.\n","sig":null,"attributes":[{"value":"/ Generates a Rust interface or implementation for a service, writing the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4640,"byte_end":4715,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ result to `buf`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4720,"byte_end":4740,"line_start":149,"line_end":149,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5421,"byte_end":5429,"line_start":165,"line_end":165,"column_start":8,"column_end":16},"name":"finalize","qualname":"::ServiceGenerator::finalize","value":"pub fn finalize(&mut Self, &mut String)","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" Finalizes the generation process.","sig":null,"attributes":[{"value":"/ Finalizes the generation process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4810,"byte_end":4847,"line_start":152,"line_end":152,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4852,"byte_end":4855,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ In case there's something that needs to be output at the end of the generation process, it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4860,"byte_end":4954,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ goes here. Similar to [`generate`](#method.generate), the output should be appended to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":4959,"byte_end":5049,"line_start":155,"line_end":155,"column_start":5,"column_end":95}},{"value":"/ `buf`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5054,"byte_end":5064,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5069,"byte_end":5072,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ An example can be a module or other thing that needs to appear just once, not for each","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5077,"byte_end":5167,"line_start":158,"line_end":158,"column_start":5,"column_end":95}},{"value":"/ service generated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5172,"byte_end":5194,"line_start":159,"line_end":159,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5199,"byte_end":5202,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This still can be called multiple times in a lifetime of the service generator, because it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5207,"byte_end":5301,"line_start":161,"line_end":161,"column_start":5,"column_end":99}},{"value":"/ is called once per `.proto` file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5306,"byte_end":5343,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5348,"byte_end":5351,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The default implementation is empty and does nothing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5356,"byte_end":5413,"line_start":164,"line_end":164,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5932,"byte_end":5948,"line_start":175,"line_end":175,"column_start":8,"column_end":24},"name":"finalize_package","qualname":"::ServiceGenerator::finalize_package","value":"pub fn finalize_package(&mut Self, &str, &mut String)","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" Finalizes the generation process for an entire protobuf package.","sig":null,"attributes":[{"value":"/ Finalizes the generation process for an entire protobuf package.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5468,"byte_end":5536,"line_start":167,"line_end":167,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5541,"byte_end":5544,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This differs from [`finalize`](#method.finalize) by where (and how often) it is called","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5549,"byte_end":5639,"line_start":169,"line_end":169,"column_start":5,"column_end":95}},{"value":"/ during the service generator life cycle. This method is called once per protobuf package,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5644,"byte_end":5737,"line_start":170,"line_end":170,"column_start":5,"column_end":98}},{"value":"/ making it ideal for grouping services within a single package spread across multiple","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5742,"byte_end":5830,"line_start":171,"line_end":171,"column_start":5,"column_end":93}},{"value":"/ `.proto` files.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5835,"byte_end":5854,"line_start":172,"line_end":172,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5859,"byte_end":5862,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The default implementation is empty and does nothing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":5867,"byte_end":5924,"line_start":174,"line_end":174,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6159,"byte_end":6165,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":" Configuration options for Protobuf code generation.","sig":null,"attributes":[{"value":"/ Configuration options for Protobuf code generation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6001,"byte_end":6056,"line_start":178,"line_end":178,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6057,"byte_end":6060,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ This configuration builder can be used to set non-default code generation options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6061,"byte_end":6147,"line_start":180,"line_end":180,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6567,"byte_end":6570,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"pub fn new() -> Config","parent":null,"children":[],"decl_id":null,"docs":" Creates a new code generator configuration with default options.\n","sig":null,"attributes":[{"value":"/ Creates a new code generator configuration with default options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6487,"byte_end":6555,"line_start":193,"line_end":193,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8837,"byte_end":8846,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"btree_map","qualname":"<Config>::btree_map","value":"pub fn btree_map<I, S>(&mut Self, I) -> &mut Self where I: IntoIterator<Item =\nS>, S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Configure the code generator to generate Rust [`BTreeMap`][1] fields for Protobuf\n [`map`][2] type fields.","sig":null,"attributes":[{"value":"/ Configure the code generator to generate Rust [`BTreeMap`][1] fields for Protobuf","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6622,"byte_end":6707,"line_start":198,"line_end":198,"column_start":5,"column_end":90}},{"value":"/ [`map`][2] type fields.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6712,"byte_end":6739,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6744,"byte_end":6747,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6752,"byte_end":6767,"line_start":201,"line_end":201,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6772,"byte_end":6775,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ **`paths`** - paths to specific fields, messages, or packages which should use a Rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6780,"byte_end":6869,"line_start":203,"line_end":203,"column_start":5,"column_end":94}},{"value":"/ `BTreeMap` for Protobuf `map` fields. Paths are specified in terms of the Protobuf type","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6874,"byte_end":6965,"line_start":204,"line_end":204,"column_start":5,"column_end":96}},{"value":"/ name (not the generated Rust type name). Paths with a leading `.` are treated as fully","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6970,"byte_end":7060,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ qualified names. Paths without a leading `.` are treated as relative, and are suffix","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7065,"byte_end":7153,"line_start":206,"line_end":206,"column_start":5,"column_end":93}},{"value":"/ matched on the fully qualified field name. If a Protobuf map field matches any of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7158,"byte_end":7247,"line_start":207,"line_end":207,"column_start":5,"column_end":94}},{"value":"/ paths, a Rust `BTreeMap` field is generated instead of the default [`HashMap`][3].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7252,"byte_end":7338,"line_start":208,"line_end":208,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7343,"byte_end":7346,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The matching is done on the Protobuf names, before converting to Rust-friendly casing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7351,"byte_end":7440,"line_start":210,"line_end":210,"column_start":5,"column_end":94}},{"value":"/ standards.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7445,"byte_end":7459,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7464,"byte_end":7467,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7472,"byte_end":7486,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7491,"byte_end":7494,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7499,"byte_end":7510,"line_start":215,"line_end":215,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7515,"byte_end":7565,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ // Match a specific field in a message type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7570,"byte_end":7618,"line_start":217,"line_end":217,"column_start":5,"column_end":53}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType.my_map_field\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7623,"byte_end":7690,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7695,"byte_end":7698,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a message type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7703,"byte_end":7749,"line_start":220,"line_end":220,"column_start":5,"column_end":51}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7754,"byte_end":7808,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7813,"byte_end":7816,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a package.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7821,"byte_end":7862,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/ config.btree_map(&[\".my_messages\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7867,"byte_end":7907,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7912,"byte_end":7915,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7920,"byte_end":7948,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/ config.btree_map(&[\".\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7953,"byte_end":7982,"line_start":227,"line_end":227,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7987,"byte_end":7990,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a nested message.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":7995,"byte_end":8043,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType.MyNestedMessageType\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8048,"byte_end":8122,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8127,"byte_end":8130,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field'.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8135,"byte_end":8180,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ config.btree_map(&[\"my_map_field\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8185,"byte_end":8225,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8230,"byte_end":8233,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field' in messages named 'MyMessageType', regardless of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8238,"byte_end":8331,"line_start":235,"line_end":235,"column_start":5,"column_end":98}},{"value":"/ // package or nesting.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8336,"byte_end":8362,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/ config.btree_map(&[\"MyMessageType.my_map_field\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8367,"byte_end":8421,"line_start":237,"line_end":237,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8426,"byte_end":8429,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field', and all fields in the 'foo.bar' package.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8434,"byte_end":8520,"line_start":239,"line_end":239,"column_start":5,"column_end":91}},{"value":"/ config.btree_map(&[\"my_map_field\", \".foo.bar\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8525,"byte_end":8577,"line_start":240,"line_end":240,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8582,"byte_end":8589,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8594,"byte_end":8597,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [1]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8602,"byte_end":8673,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/ [2]: https://developers.google.com/protocol-buffers/docs/proto3#maps","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8678,"byte_end":8750,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ [3]: https://doc.rust-lang.org/std/collections/struct.HashMap.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":8755,"byte_end":8825,"line_start":245,"line_end":245,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10148,"byte_end":10163,"line_start":278,"line_end":278,"column_start":12,"column_end":27},"name":"field_attribute","qualname":"<Config>::field_attribute","value":"pub fn field_attribute<P, A>(&mut Self, P, A) -> &mut Self where\nP: AsRef<str>, A: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched fields.","sig":null,"attributes":[{"value":"/ Add additional attribute to matched fields.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9071,"byte_end":9118,"line_start":255,"line_end":255,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9123,"byte_end":9126,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9131,"byte_end":9146,"line_start":257,"line_end":257,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9151,"byte_end":9154,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ **`path`** - a patch matching any number of fields. These fields get the attribute.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9159,"byte_end":9246,"line_start":259,"line_end":259,"column_start":5,"column_end":92}},{"value":"/ For details about matching fields see [`btree_map`](#method.btree_map).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9251,"byte_end":9326,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9331,"byte_end":9334,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ **`attribute`** - an arbitrary string that'll be placed before each matched field. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9339,"byte_end":9429,"line_start":262,"line_end":262,"column_start":5,"column_end":95}},{"value":"/ expected usage are additional attributes, usually in concert with whole-type","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9434,"byte_end":9514,"line_start":263,"line_end":263,"column_start":5,"column_end":85}},{"value":"/ attributes set with [`type_attribute`](method.type_attribute), but it is not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9519,"byte_end":9599,"line_start":264,"line_end":264,"column_start":5,"column_end":85}},{"value":"/ checked and anything can be put there.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9604,"byte_end":9646,"line_start":265,"line_end":265,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9651,"byte_end":9654,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Note that the calls to this method are cumulative ‒ if multiple paths from multiple calls","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9659,"byte_end":9754,"line_start":267,"line_end":267,"column_start":5,"column_end":98}},{"value":"/ match the same field, the field gets all the corresponding attributes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9759,"byte_end":9833,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9838,"byte_end":9841,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9846,"byte_end":9860,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9865,"byte_end":9868,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9873,"byte_end":9884,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9889,"byte_end":9939,"line_start":273,"line_end":273,"column_start":5,"column_end":55}},{"value":"/ // Prost renames fields named `in` to `in_`. But if serialized through serde,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":9944,"byte_end":10025,"line_start":274,"line_end":274,"column_start":5,"column_end":86}},{"value":"/ // they should as `in`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10030,"byte_end":10057,"line_start":275,"line_end":275,"column_start":5,"column_end":32}},{"value":"/ config.field_attribute(\"in\", \"#[serde(rename = \\\"in\\\")]\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10062,"byte_end":10124,"line_start":276,"line_end":276,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10129,"byte_end":10136,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":12378,"byte_end":12392,"line_start":327,"line_end":327,"column_start":12,"column_end":26},"name":"type_attribute","qualname":"<Config>::type_attribute","value":"pub fn type_attribute<P, A>(&mut Self, P, A) -> &mut Self where P: AsRef<str>,\nA: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched messages, enums and one-ofs.","sig":null,"attributes":[{"value":"/ Add additional attribute to matched messages, enums and one-ofs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10413,"byte_end":10481,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10486,"byte_end":10489,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10494,"byte_end":10509,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10514,"byte_end":10517,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ **`paths`** - a path matching any number of types. It works the same way as in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10522,"byte_end":10604,"line_start":292,"line_end":292,"column_start":5,"column_end":87}},{"value":"/ [`btree_map`](#method.btree_map), just with the field name omitted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10609,"byte_end":10680,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10685,"byte_end":10688,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ **`attribute`** - an arbitrary string to be placed before each matched type. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10693,"byte_end":10777,"line_start":295,"line_end":295,"column_start":5,"column_end":89}},{"value":"/ expected usage are additional attributes, but anything is allowed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10782,"byte_end":10852,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10857,"byte_end":10860,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ The calls to this method are cumulative. They don't overwrite previous calls and if a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10865,"byte_end":10954,"line_start":298,"line_end":298,"column_start":5,"column_end":94}},{"value":"/ type is matched by multiple calls of the method, all relevant attributes are added to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":10959,"byte_end":11048,"line_start":299,"line_end":299,"column_start":5,"column_end":94}},{"value":"/ it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11053,"byte_end":11060,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11065,"byte_end":11068,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ For things like serde it might be needed to combine with [field","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11073,"byte_end":11140,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/ attributes](#method.field_attribute).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11145,"byte_end":11186,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11191,"byte_end":11194,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11199,"byte_end":11213,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11218,"byte_end":11221,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11226,"byte_end":11237,"line_start":307,"line_end":307,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11242,"byte_end":11292,"line_start":308,"line_end":308,"column_start":5,"column_end":55}},{"value":"/ // Nothing around uses floats, so we can derive real `Eq` in addition to `PartialEq`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11297,"byte_end":11386,"line_start":309,"line_end":309,"column_start":5,"column_end":94}},{"value":"/ config.type_attribute(\".\", \"#[derive(Eq)]\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11391,"byte_end":11439,"line_start":310,"line_end":310,"column_start":5,"column_end":53}},{"value":"/ // Some messages want to be serializable with serde as well.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11444,"byte_end":11508,"line_start":311,"line_end":311,"column_start":5,"column_end":69}},{"value":"/ config.type_attribute(\"my_messages.MyMessageType\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11513,"byte_end":11567,"line_start":312,"line_end":312,"column_start":5,"column_end":59}},{"value":"/                       \"#[derive(Serialize)] #[serde(rename-all = \\\"snake_case\\\")]\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11572,"byte_end":11660,"line_start":313,"line_end":313,"column_start":5,"column_end":93}},{"value":"/ config.type_attribute(\"my_messages.MyMessageType.MyNestedMessageType\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11665,"byte_end":11739,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/                       \"#[derive(Serialize)] #[serde(rename-all = \\\"snake_case\\\")]\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11744,"byte_end":11832,"line_start":315,"line_end":315,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11837,"byte_end":11844,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11849,"byte_end":11852,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Oneof fields","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11857,"byte_end":11875,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11880,"byte_end":11883,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The `oneof` fields don't have a type name of their own inside Protobuf. Therefore, the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11888,"byte_end":11978,"line_start":320,"line_end":320,"column_start":5,"column_end":95}},{"value":"/ field name can be used both with `type_attribute` and `field_attribute` ‒ the first is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":11983,"byte_end":12075,"line_start":321,"line_end":321,"column_start":5,"column_end":95}},{"value":"/ placed before the `enum` type definition, the other before the field inside corresponding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":12080,"byte_end":12173,"line_start":322,"line_end":322,"column_start":5,"column_end":98}},{"value":"/ message `struct`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":12178,"byte_end":12199,"line_start":323,"line_end":323,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":12204,"byte_end":12207,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ In other words, to place an attribute on the `enum` implementing the `oneof`, the match","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":12212,"byte_end":12303,"line_start":325,"line_end":325,"column_start":5,"column_end":96}},{"value":"/ would look like `my_messages.MyMessageType.oneofname`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":12308,"byte_end":12366,"line_start":326,"line_end":326,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":12725,"byte_end":12742,"line_start":338,"line_end":338,"column_start":12,"column_end":29},"name":"service_generator","qualname":"<Config>::service_generator","value":"pub fn service_generator(&mut Self, Box<ServiceGenerator>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to use the provided service generator.\n","sig":null,"attributes":[{"value":"/ Configures the code generator to use the provided service generator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":12641,"byte_end":12713,"line_start":337,"line_end":337,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13096,"byte_end":13120,"line_start":345,"line_end":345,"column_start":12,"column_end":36},"name":"compile_well_known_types","qualname":"<Config>::compile_well_known_types","value":"pub fn compile_well_known_types(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to not use the `prost_types` crate for Protobuf well-known\n types, and instead generate Protobuf well-known types from their `.proto` definitions.\n","sig":null,"attributes":[{"value":"/ Configures the code generator to not use the `prost_types` crate for Protobuf well-known","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":12897,"byte_end":12989,"line_start":343,"line_end":343,"column_start":5,"column_end":97}},{"value":"/ types, and instead generate Protobuf well-known types from their `.proto` definitions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":12994,"byte_end":13084,"line_start":344,"line_end":344,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16945,"byte_end":16956,"line_start":452,"line_end":452,"column_start":12,"column_end":23},"name":"extern_path","qualname":"<Config>::extern_path","value":"pub fn extern_path<P1, P2>(&mut Self, P1, P2) -> &mut Self where\nP1: Into<String>, P2: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Declare an externally provided Protobuf package or type.","sig":null,"attributes":[{"value":"/ Declare an externally provided Protobuf package or type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13205,"byte_end":13265,"line_start":350,"line_end":350,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13270,"byte_end":13273,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ `extern_path` allows `prost` types in external crates to be referenced in generated code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13278,"byte_end":13371,"line_start":352,"line_end":352,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13376,"byte_end":13379,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ When `prost` compiles a `.proto` which includes an import of another `.proto`, it will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13384,"byte_end":13474,"line_start":354,"line_end":354,"column_start":5,"column_end":95}},{"value":"/ automatically recursively compile the imported file as well. `extern_path` can be used","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13479,"byte_end":13569,"line_start":355,"line_end":355,"column_start":5,"column_end":95}},{"value":"/ to instead substitute types from an external crate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13574,"byte_end":13629,"line_start":356,"line_end":356,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13634,"byte_end":13637,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13642,"byte_end":13655,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13660,"byte_end":13663,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ As an example, consider a crate, `uuid`, with a `prost`-generated `Uuid` type:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13668,"byte_end":13750,"line_start":360,"line_end":360,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13755,"byte_end":13758,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```proto","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13763,"byte_end":13775,"line_start":362,"line_end":362,"column_start":5,"column_end":17}},{"value":"/ // uuid.proto","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13780,"byte_end":13797,"line_start":363,"line_end":363,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13802,"byte_end":13805,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13810,"byte_end":13832,"line_start":365,"line_end":365,"column_start":5,"column_end":27}},{"value":"/ package uuid;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13837,"byte_end":13854,"line_start":366,"line_end":366,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13859,"byte_end":13862,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ message Uuid {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13867,"byte_end":13885,"line_start":368,"line_end":368,"column_start":5,"column_end":23}},{"value":"/     string uuid_str = 1;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13890,"byte_end":13918,"line_start":369,"line_end":369,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13923,"byte_end":13928,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13933,"byte_end":13940,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13945,"byte_end":13948,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The `uuid` crate implements some traits for `Uuid`, and publicly exports it:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":13953,"byte_end":14033,"line_start":373,"line_end":373,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14038,"byte_end":14041,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14046,"byte_end":14064,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/ // lib.rs in the uuid crate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14069,"byte_end":14100,"line_start":376,"line_end":376,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14105,"byte_end":14108,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ include!(concat!(env!(\"OUT_DIR\"), \"/uuid.rs\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14113,"byte_end":14164,"line_start":378,"line_end":378,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14169,"byte_end":14172,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ pub trait DoSomething {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14177,"byte_end":14204,"line_start":380,"line_end":380,"column_start":5,"column_end":32}},{"value":"/     fn do_it(&self);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14209,"byte_end":14233,"line_start":381,"line_end":381,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14238,"byte_end":14243,"line_start":382,"line_end":382,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14248,"byte_end":14251,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ impl DoSomething for Uuid {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14256,"byte_end":14287,"line_start":384,"line_end":384,"column_start":5,"column_end":36}},{"value":"/     fn do_it(&self) {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14292,"byte_end":14317,"line_start":385,"line_end":385,"column_start":5,"column_end":30}},{"value":"/         println!(\"Done\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14322,"byte_end":14351,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14356,"byte_end":14365,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14370,"byte_end":14375,"line_start":388,"line_end":388,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14380,"byte_end":14387,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14392,"byte_end":14395,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ A separate crate, `my_application`, uses `prost` to generate message types which reference","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14400,"byte_end":14494,"line_start":391,"line_end":391,"column_start":5,"column_end":99}},{"value":"/ `Uuid`:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14499,"byte_end":14510,"line_start":392,"line_end":392,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14515,"byte_end":14518,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```proto","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14523,"byte_end":14535,"line_start":394,"line_end":394,"column_start":5,"column_end":17}},{"value":"/ // my_application.proto","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14540,"byte_end":14567,"line_start":395,"line_end":395,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14572,"byte_end":14575,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14580,"byte_end":14602,"line_start":397,"line_end":397,"column_start":5,"column_end":27}},{"value":"/ package my_application;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14607,"byte_end":14634,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14639,"byte_end":14642,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ import \"uuid.proto\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14647,"byte_end":14671,"line_start":400,"line_end":400,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14676,"byte_end":14679,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ message MyMessage {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14684,"byte_end":14707,"line_start":402,"line_end":402,"column_start":5,"column_end":28}},{"value":"/     uuid.Uuid message_id = 1;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14712,"byte_end":14745,"line_start":403,"line_end":403,"column_start":5,"column_end":38}},{"value":"/     string some_payload = 2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14750,"byte_end":14782,"line_start":404,"line_end":404,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14787,"byte_end":14792,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14797,"byte_end":14804,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14809,"byte_end":14812,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Additionally, `my_application` depends on the trait impls provided by the `uuid` crate:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14817,"byte_end":14908,"line_start":408,"line_end":408,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14913,"byte_end":14916,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14921,"byte_end":14939,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ // `main.rs` of `my_application`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14944,"byte_end":14980,"line_start":411,"line_end":411,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14985,"byte_end":14988,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ use uuid::{DoSomething, Uuid};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":14993,"byte_end":15027,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15032,"byte_end":15035,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ include!(concat!(env!(\"OUT_DIR\"), \"/my_application.rs\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15040,"byte_end":15101,"line_start":415,"line_end":415,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15106,"byte_end":15109,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ pub fn process_message(msg: MyMessage) {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15114,"byte_end":15158,"line_start":417,"line_end":417,"column_start":5,"column_end":49}},{"value":"/     if let Some(uuid) = msg.message_id {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15163,"byte_end":15207,"line_start":418,"line_end":418,"column_start":5,"column_end":49}},{"value":"/         uuid.do_it();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15212,"byte_end":15237,"line_start":419,"line_end":419,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15242,"byte_end":15251,"line_start":420,"line_end":420,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15256,"byte_end":15261,"line_start":421,"line_end":421,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15266,"byte_end":15273,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15278,"byte_end":15281,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Without configuring `uuid` as an external path in `my_application`'s `build.rs`, `prost`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15286,"byte_end":15378,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ would compile a completely separate version of the `Uuid` type, and `process_message` would","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15383,"byte_end":15478,"line_start":425,"line_end":425,"column_start":5,"column_end":100}},{"value":"/ fail to compile. However, if `my_application` configures `uuid` as an extern path with a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15483,"byte_end":15575,"line_start":426,"line_end":426,"column_start":5,"column_end":97}},{"value":"/ call to `.extern_path(\".uuid\", \"::uuid\")`, `prost` will use the external type instead of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15580,"byte_end":15672,"line_start":427,"line_end":427,"column_start":5,"column_end":97}},{"value":"/ compiling a new version of `Uuid`. Note that the configuration could also be specified as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15677,"byte_end":15770,"line_start":428,"line_end":428,"column_start":5,"column_end":98}},{"value":"/ `.extern_path(\".uuid.Uuid\", \"::uuid::Uuid\")` if only the `Uuid` type were externally","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15775,"byte_end":15863,"line_start":429,"line_end":429,"column_start":5,"column_end":93}},{"value":"/ provided, and not the whole `uuid` package.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15868,"byte_end":15915,"line_start":430,"line_end":430,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15920,"byte_end":15923,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15928,"byte_end":15939,"line_start":432,"line_end":432,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15944,"byte_end":15947,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ `extern_path` takes a fully-qualified Protobuf path, and the corresponding Rust path that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":15952,"byte_end":16045,"line_start":434,"line_end":434,"column_start":5,"column_end":98}},{"value":"/ it will be substituted with in generated code. The Protobuf path can refer to a package or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16050,"byte_end":16144,"line_start":435,"line_end":435,"column_start":5,"column_end":99}},{"value":"/ a type, and the Rust path should correspondingly refer to a Rust module or type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16149,"byte_end":16233,"line_start":436,"line_end":436,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16238,"byte_end":16241,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16246,"byte_end":16257,"line_start":438,"line_end":438,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16262,"byte_end":16312,"line_start":439,"line_end":439,"column_start":5,"column_end":55}},{"value":"/ // Declare the `uuid` Protobuf package and all nested packages and types as externally","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16317,"byte_end":16407,"line_start":440,"line_end":440,"column_start":5,"column_end":95}},{"value":"/ // provided by the `uuid` crate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16412,"byte_end":16448,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ config.extern_path(\".uuid\", \"::uuid\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16453,"byte_end":16495,"line_start":442,"line_end":442,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16500,"byte_end":16503,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ // Declare the `foo.bar.baz` Protobuf package and all nested packages and types as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16508,"byte_end":16594,"line_start":444,"line_end":444,"column_start":5,"column_end":91}},{"value":"/ // externally provided by the `foo_bar_baz` crate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16599,"byte_end":16653,"line_start":445,"line_end":445,"column_start":5,"column_end":59}},{"value":"/ config.extern_path(\".foo.bar.baz\", \"::foo_bar_baz\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16658,"byte_end":16714,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16719,"byte_end":16722,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ // Declare the `uuid.Uuid` Protobuf type (and all nested types) as externally provided","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16727,"byte_end":16817,"line_start":448,"line_end":448,"column_start":5,"column_end":95}},{"value":"/ // by the `uuid` crate's `Uuid` type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16822,"byte_end":16863,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ config.extern_path(\".uuid.Uuid\", \"::uuid::Uuid\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16868,"byte_end":16921,"line_start":450,"line_end":450,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":16926,"byte_end":16933,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17607,"byte_end":17625,"line_start":468,"line_end":468,"column_start":12,"column_end":30},"name":"retain_enum_prefix","qualname":"<Config>::retain_enum_prefix","value":"pub fn retain_enum_prefix(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to not strip the enum name from variant names.","sig":null,"attributes":[{"value":"/ Configures the code generator to not strip the enum name from variant names.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17196,"byte_end":17276,"line_start":462,"line_end":462,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17281,"byte_end":17284,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Protobuf enum definitions commonly include the enum name as a prefix of every variant name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17289,"byte_end":17384,"line_start":464,"line_end":464,"column_start":5,"column_end":100}},{"value":"/ This style is non-idiomatic in Rust, so by default `prost` strips the enum name prefix from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17389,"byte_end":17484,"line_start":465,"line_end":465,"column_start":5,"column_end":100}},{"value":"/ variants which include it. Configuring this option prevents `prost` from stripping the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17489,"byte_end":17579,"line_start":466,"line_end":466,"column_start":5,"column_end":95}},{"value":"/ prefix.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17584,"byte_end":17595,"line_start":467,"line_end":467,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18000,"byte_end":18007,"line_start":477,"line_end":477,"column_start":12,"column_end":19},"name":"out_dir","qualname":"<Config>::out_dir","value":"pub fn out_dir<P>(&mut Self, P) -> &mut Self where P: Into<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Configures the output directory where generated Rust files will be written.","sig":null,"attributes":[{"value":"/ Configures the output directory where generated Rust files will be written.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17716,"byte_end":17795,"line_start":473,"line_end":473,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17800,"byte_end":17803,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ If unset, defaults to the `OUT_DIR` environment variable. `OUT_DIR` is set by Cargo when","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17808,"byte_end":17900,"line_start":475,"line_end":475,"column_start":5,"column_end":97}},{"value":"/ executing build scripts, so `out_dir` typically does not need to be configured.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":17905,"byte_end":17988,"line_start":476,"line_end":476,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18897,"byte_end":18911,"line_start":502,"line_end":502,"column_start":12,"column_end":26},"name":"compile_protos","qualname":"<Config>::compile_protos","value":"pub fn compile_protos<P>(&mut Self, &[P], &[P]) -> Result<()> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Compile `.proto` files into Rust files during a Cargo build with additional code generator\n configuration options.","sig":null,"attributes":[{"value":"/ Compile `.proto` files into Rust files during a Cargo build with additional code generator","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18152,"byte_end":18246,"line_start":485,"line_end":485,"column_start":5,"column_end":99}},{"value":"/ configuration options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18251,"byte_end":18277,"line_start":486,"line_end":486,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18282,"byte_end":18285,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This method is like the `prost_build::compile_protos` function, with the added ability to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18290,"byte_end":18383,"line_start":488,"line_end":488,"column_start":5,"column_end":98}},{"value":"/ specify non-default code generation options. See that function for more information about","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18388,"byte_end":18481,"line_start":489,"line_end":489,"column_start":5,"column_end":98}},{"value":"/ the arguments and generated outputs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18486,"byte_end":18526,"line_start":490,"line_end":490,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18531,"byte_end":18534,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # Example `build.rs`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18539,"byte_end":18563,"line_start":492,"line_end":492,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18568,"byte_end":18571,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18576,"byte_end":18594,"line_start":494,"line_end":494,"column_start":5,"column_end":23}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18599,"byte_end":18614,"line_start":495,"line_end":495,"column_start":5,"column_end":20}},{"value":"/     let mut prost_build = prost_build::Config::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18619,"byte_end":18676,"line_start":496,"line_end":496,"column_start":5,"column_end":62}},{"value":"/     prost_build.btree_map(&[\".\"]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18681,"byte_end":18719,"line_start":497,"line_end":497,"column_start":5,"column_end":43}},{"value":"/     prost_build.compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18724,"byte_end":18804,"line_start":498,"line_end":498,"column_start":5,"column_end":85}},{"value":"/                                &[\"src\"]).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18809,"byte_end":18863,"line_start":499,"line_end":499,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18868,"byte_end":18873,"line_start":500,"line_end":500,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":18878,"byte_end":18885,"line_start":501,"line_end":501,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":216},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24947,"byte_end":24961,"line_start":671,"line_end":671,"column_start":8,"column_end":22},"name":"compile_protos","qualname":"::compile_protos","value":"pub fn compile_protos<P>(&[P], &[P]) -> Result<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Compile `.proto` files into Rust files during a Cargo build.","sig":null,"attributes":[{"value":"/ Compile `.proto` files into Rust files during a Cargo build.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23260,"byte_end":23324,"line_start":630,"line_end":630,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23325,"byte_end":23328,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ The generated `.rs` files are written to the Cargo `OUT_DIR` directory, suitable for use with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23329,"byte_end":23426,"line_start":632,"line_end":632,"column_start":1,"column_end":98}},{"value":"/ the [include!][1] macro. See the [Cargo `build.rs` code generation][2] example for more info.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23427,"byte_end":23524,"line_start":633,"line_end":633,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23525,"byte_end":23528,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ This function should be called in a project's `build.rs`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23529,"byte_end":23590,"line_start":635,"line_end":635,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23591,"byte_end":23594,"line_start":636,"line_end":636,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23595,"byte_end":23610,"line_start":637,"line_end":637,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23611,"byte_end":23614,"line_start":638,"line_end":638,"column_start":1,"column_end":4}},{"value":"/ **`protos`** - Paths to `.proto` files to compile. Any transitively [imported][3] `.proto`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23615,"byte_end":23709,"line_start":639,"line_end":639,"column_start":1,"column_end":95}},{"value":"/ files are automatically be included.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23710,"byte_end":23750,"line_start":640,"line_end":640,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23751,"byte_end":23754,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ **`includes`** - Paths to directories in which to search for imports. Directories are searched","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23755,"byte_end":23853,"line_start":642,"line_end":642,"column_start":1,"column_end":99}},{"value":"/ in order. The `.proto` files passed in **`protos`** must be found in one of the provided","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23854,"byte_end":23946,"line_start":643,"line_end":643,"column_start":1,"column_end":93}},{"value":"/ include directories.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23947,"byte_end":23971,"line_start":644,"line_end":644,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23972,"byte_end":23975,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23976,"byte_end":23988,"line_start":646,"line_end":646,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23989,"byte_end":23992,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ This function can fail for a number of reasons:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":23993,"byte_end":24044,"line_start":648,"line_end":648,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24045,"byte_end":24048,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/   - Failure to locate or download `protoc`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24049,"byte_end":24096,"line_start":650,"line_end":650,"column_start":1,"column_end":48}},{"value":"/   - Failure to parse the `.proto`s.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24097,"byte_end":24136,"line_start":651,"line_end":651,"column_start":1,"column_end":40}},{"value":"/   - Failure to locate an imported `.proto`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24137,"byte_end":24184,"line_start":652,"line_end":652,"column_start":1,"column_end":48}},{"value":"/   - Failure to compile a `.proto` without a [package specifier][4].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24185,"byte_end":24256,"line_start":653,"line_end":653,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24257,"byte_end":24260,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ It's expected that this function call be `unwrap`ed in a `build.rs`; there is typically no","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24261,"byte_end":24355,"line_start":655,"line_end":655,"column_start":1,"column_end":95}},{"value":"/ reason to gracefully recover from errors during a build.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24356,"byte_end":24416,"line_start":656,"line_end":656,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24417,"byte_end":24420,"line_start":657,"line_end":657,"column_start":1,"column_end":4}},{"value":"/ # Example `build.rs`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24421,"byte_end":24445,"line_start":658,"line_end":658,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24446,"byte_end":24449,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24450,"byte_end":24468,"line_start":660,"line_end":660,"column_start":1,"column_end":19}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24469,"byte_end":24484,"line_start":661,"line_end":661,"column_start":1,"column_end":16}},{"value":"/     prost_build::compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24485,"byte_end":24566,"line_start":662,"line_end":662,"column_start":1,"column_end":82}},{"value":"/                                 &[\"src\"]).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24567,"byte_end":24622,"line_start":663,"line_end":663,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24623,"byte_end":24628,"line_start":664,"line_end":664,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24629,"byte_end":24636,"line_start":665,"line_end":665,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24637,"byte_end":24640,"line_start":666,"line_end":666,"column_start":1,"column_end":4}},{"value":"/ [1]: https://doc.rust-lang.org/std/macro.include.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24641,"byte_end":24698,"line_start":667,"line_end":667,"column_start":1,"column_end":58}},{"value":"/ [2]: http://doc.crates.io/build-script.html#case-study-code-generation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24699,"byte_end":24773,"line_start":668,"line_end":668,"column_start":1,"column_end":75}},{"value":"/ [3]: https://developers.google.com/protocol-buffers/docs/proto3#importing-definitions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24774,"byte_end":24863,"line_start":669,"line_end":669,"column_start":1,"column_end":90}},{"value":"/ [4]: https://developers.google.com/protocol-buffers/docs/proto#packages","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":24864,"byte_end":24939,"line_start":670,"line_end":670,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":218},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":25143,"byte_end":25149,"line_start":679,"line_end":679,"column_start":8,"column_end":14},"name":"protoc","qualname":"::protoc","value":"pub fn protoc() -> &'static Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the `protoc` binary.\n","sig":null,"attributes":[{"value":"/ Returns the path to the `protoc` binary.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":25091,"byte_end":25135,"line_start":678,"line_end":678,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":219},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":25267,"byte_end":25281,"line_start":684,"line_end":684,"column_start":8,"column_end":22},"name":"protoc_include","qualname":"::protoc_include","value":"pub fn protoc_include() -> &'static Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the Protobuf include directory.\n","sig":null,"attributes":[{"value":"/ Returns the path to the Protobuf include directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":25204,"byte_end":25259,"line_start":683,"line_end":683,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":28815,"byte_end":28823,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/code_generator.rs","byte_start":33410,"byte_end":33423,"line_start":40,"line_end":40,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/extern_paths.rs","byte_start":65130,"byte_end":65141,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/message_graph.rs","byte_start":80680,"byte_end":80692,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6474,"byte_end":6480,"line_start":192,"line_end":192,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":209},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":22898,"byte_end":22904,"line_start":615,"line_end":615,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/ast.rs","byte_start":28815,"byte_end":28823,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/code_generator.rs","byte_start":33410,"byte_end":33423,"line_start":40,"line_end":40,"column_start":10,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/extern_paths.rs","byte_start":65130,"byte_end":65141,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/message_graph.rs","byte_start":80680,"byte_end":80692,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":6474,"byte_end":6480,"line_start":192,"line_end":192,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.6.1/src/lib.rs","byte_start":22898,"byte_end":22904,"line_start":615,"line_end":615,"column_start":27,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":2026}}]}