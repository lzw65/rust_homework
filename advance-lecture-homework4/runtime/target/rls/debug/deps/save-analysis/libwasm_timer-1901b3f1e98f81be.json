{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wasm_timer","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=1901b3f1e98f81be","-C","extra-filename=-1901b3f1e98f81be","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--extern","futures=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libfutures-d778134cf68f607e.rmeta","--extern","parking_lot=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libparking_lot-42871d6d03d0c9d3.rmeta","--extern","pin_utils=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libpin_utils-7c8a191063a5eaa6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libwasm_timer-1901b3f1e98f81be.rmeta"},"prelude":{"crate_id":{"name":"wasm_timer","disambiguator":[5622162487196588135,18245341586426515704]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":18,"id":{"name":"futures","disambiguator":[2667762410459537304,12668079678896007955]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":19,"id":{"name":"futures_core","disambiguator":[6091960194481922876,16111170612509824982]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":20,"id":{"name":"futures_util","disambiguator":[14692675012436110279,4755382690576314481]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/global/desktop.rs","num":21,"id":{"name":"pin_utils","disambiguator":[14006933666536538846,10325894616585527374]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":22,"id":{"name":"proc_macro_hack","disambiguator":[16105205298844134494,461428951662562663]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":23,"id":{"name":"futures_task","disambiguator":[5915565091226735904,10965922465830280011]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":24,"id":{"name":"once_cell","disambiguator":[8114906871986815057,215681476928989787]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":25,"id":{"name":"parking_lot","disambiguator":[10061552480279027668,1018443910502703418]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":26,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":27,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":28,"id":{"name":"lock_api","disambiguator":[1370039747192521928,13370481355962836312]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":29,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":30,"id":{"name":"parking_lot_core","disambiguator":[6910326554005380636,13334944336695677100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":31,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":32,"id":{"name":"libc","disambiguator":[6571333170903906260,2103687221578517612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":33,"id":{"name":"futures_sink","disambiguator":[8740317669186772490,9491136511499774314]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":34,"id":{"name":"pin_project_lite","disambiguator":[11050117765846224188,12097442257352640106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":35,"id":{"name":"futures_channel","disambiguator":[14121995652586820567,18396968508109721308]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":36,"id":{"name":"slab","disambiguator":[7754159738850082191,972067075306833933]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":37,"id":{"name":"futures_io","disambiguator":[5832703695225160921,17043717576790152055]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":38,"id":{"name":"futures_macro","disambiguator":[7362818316734880593,477739355724548135]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":39,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":40,"id":{"name":"futures_executor","disambiguator":[4755410773836412554,15037727782313357647]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","num":41,"id":{"name":"num_cpus","disambiguator":[17237370829952825392,8933627738761765040]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","byte_start":1109,"byte_end":1402,"line_start":21,"line_end":30,"column_start":1,"column_end":10}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","byte_start":1124,"byte_end":1125,"line_start":21,"line_end":21,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"Timer, Delay, TimerHandle","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":8176},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","byte_start":1212,"byte_end":1219,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":8200},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","byte_start":1221,"byte_end":1231,"line_start":24,"line_end":24,"column_start":30,"column_end":40},"alias_span":null,"name":"SystemTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":5486},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","byte_start":1233,"byte_end":1243,"line_start":24,"line_end":24,"column_start":42,"column_end":52},"alias_span":null,"name":"UNIX_EPOCH","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","byte_start":1109,"byte_end":1402,"line_start":21,"line_end":30,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":135},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::timer::ext","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":162},{"krate":0,"index":164}],"decl_id":null,"docs":" Extension traits for the standard `Stream` and `Future` traits.\n","sig":null,"attributes":[{"value":"/ Extension traits for the standard `Stream` and `Future` traits.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":45657,"byte_end":45724,"line_start":1,"line_end":1,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46022,"byte_end":46034,"line_start":15,"line_end":15,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::timer::ext::TryFutureExt","value":"TryFutureExt: TryFuture + Sized","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" An extension trait for futures which provides convenient accessors for\n timing out execution and such.\n","sig":null,"attributes":[{"value":"/ An extension trait for futures which provides convenient accessors for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":45902,"byte_end":45976,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ timing out execution and such.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":45977,"byte_end":46011,"line_start":14,"line_end":14,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47349,"byte_end":47356,"line_start":50,"line_end":50,"column_start":8,"column_end":15},"name":"timeout","qualname":"::timer::ext::TryFutureExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where\nSelf::Error: From<io::Error>","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Creates a new future which will take at most `dur` time to resolve from\n the point at which this method is called.","sig":null,"attributes":[{"value":"/ Creates a new future which will take at most `dur` time to resolve from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46060,"byte_end":46135,"line_start":16,"line_end":16,"column_start":5,"column_end":80}},{"value":"/ the point at which this method is called.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46140,"byte_end":46185,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46190,"byte_end":46193,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This combinator creates a new future which wraps the receiving future","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46198,"byte_end":46271,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ in a timeout. The future returned will resolve in at most `dur` time","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46276,"byte_end":46348,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ specified (relative to when this function is called).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46353,"byte_end":46410,"line_start":21,"line_end":21,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46415,"byte_end":46418,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If the future completes before `dur` elapses then the future will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46423,"byte_end":46492,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ resolve with that item. Otherwise the future will resolve to an error","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46497,"byte_end":46570,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ once `dur` has elapsed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46575,"byte_end":46602,"line_start":25,"line_end":25,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46607,"byte_end":46610,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46615,"byte_end":46629,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46634,"byte_end":46637,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46642,"byte_end":46655,"line_start":29,"line_end":29,"column_start":5,"column_end":18}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46660,"byte_end":46688,"line_start":30,"line_end":30,"column_start":5,"column_end":33}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46693,"byte_end":46721,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"/ use wasm_timer::TryFutureExt;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46726,"byte_end":46759,"line_start":32,"line_end":32,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46764,"byte_end":46767,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # fn long_future() -> impl TryFuture<Ok = (), Error = std::io::Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46772,"byte_end":46847,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ #     futures::future::ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46852,"byte_end":46885,"line_start":35,"line_end":35,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46890,"byte_end":46897,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46902,"byte_end":46907,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46912,"byte_end":46927,"line_start":38,"line_end":38,"column_start":5,"column_end":20}},{"value":"/     let future = long_future();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46932,"byte_end":46967,"line_start":39,"line_end":39,"column_start":5,"column_end":40}},{"value":"/     let timed_out = future.timeout(Duration::from_secs(1));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46972,"byte_end":47035,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47040,"byte_end":47043,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/     async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47048,"byte_end":47089,"line_start":42,"line_end":42,"column_start":5,"column_end":46}},{"value":"/         match timed_out.await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47094,"byte_end":47129,"line_start":43,"line_end":43,"column_start":5,"column_end":40}},{"value":"/             Ok(item) => println!(\"got {:?} within enough time!\", item),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47134,"byte_end":47209,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/             Err(_) => println!(\"took too long to produce the item\"),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47214,"byte_end":47286,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47291,"byte_end":47304,"line_start":46,"line_end":46,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47309,"byte_end":47319,"line_start":47,"line_end":47,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47324,"byte_end":47329,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47334,"byte_end":47341,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47913,"byte_end":47923,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::timer::ext::TryFutureExt::timeout_at","value":"pub fn timeout_at(Self, Instant) -> Timeout<Self> where\nSelf::Error: From<io::Error>","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Creates a new future which will resolve no later than `at` specified.","sig":null,"attributes":[{"value":"/ Creates a new future which will resolve no later than `at` specified.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47552,"byte_end":47625,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47630,"byte_end":47633,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This method is otherwise equivalent to the `timeout` method except that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47638,"byte_end":47713,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ it tweaks the moment at when the timeout elapsed to being specified with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47718,"byte_end":47794,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ an absolute value rather than a relative one. For more documentation see","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47799,"byte_end":47875,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ the `timeout` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":47880,"byte_end":47905,"line_start":65,"line_end":65,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":284},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":48243,"byte_end":48250,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"Timeout","qualname":"::timer::ext::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" Future returned by the `FutureExt::timeout` method.\n","sig":null,"attributes":[{"value":"/ Future returned by the `FutureExt::timeout` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":48159,"byte_end":48214,"line_start":79,"line_end":79,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":158},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49194,"byte_end":49206,"line_start":123,"line_end":123,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::timer::ext::TryStreamExt","value":"TryStreamExt: TryStream + Sized","parent":null,"children":[{"krate":0,"index":159}],"decl_id":null,"docs":" An extension trait for streams which provides convenient accessors for\n timing out execution and such.\n","sig":null,"attributes":[{"value":"/ An extension trait for streams which provides convenient accessors for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49074,"byte_end":49148,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ timing out execution and such.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49149,"byte_end":49183,"line_start":122,"line_end":122,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49862,"byte_end":49869,"line_start":135,"line_end":135,"column_start":8,"column_end":15},"name":"timeout","qualname":"::timer::ext::TryStreamExt::timeout","value":"pub fn timeout(Self, Duration) -> TimeoutStream<Self> where\nSelf::Error: From<io::Error>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Creates a new stream which will take at most `dur` time to yield each\n item of the stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which will take at most `dur` time to yield each","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49232,"byte_end":49305,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ item of the stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49310,"byte_end":49333,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49338,"byte_end":49341,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This combinator creates a new stream which wraps the receiving stream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49346,"byte_end":49419,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ in a timeout-per-item. The stream returned will resolve in at most","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49424,"byte_end":49494,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ `dur` time for each item yielded from the stream. The first item's timer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49499,"byte_end":49575,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ starts when this method is called.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49580,"byte_end":49618,"line_start":130,"line_end":130,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49623,"byte_end":49626,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ If a stream's item completes before `dur` elapses then the timer will be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49631,"byte_end":49707,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ reset for the next item. If the timeout elapses, however, then an error","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49712,"byte_end":49787,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/ will be yielded on the stream and the timer will be reset.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49792,"byte_end":49854,"line_start":134,"line_end":134,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":50218,"byte_end":50231,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"TimeoutStream","qualname":"::timer::ext::TimeoutStream","value":"TimeoutStream {  }","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":" Stream returned by the `StreamExt::timeout` method.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `StreamExt::timeout` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":50134,"byte_end":50189,"line_start":149,"line_end":149,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":171},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15723,"byte_end":15728,"line_start":276,"line_end":276,"column_start":12,"column_end":17},"name":"Timer","qualname":"::timer::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"decl_id":null,"docs":" A \"timer heap\" used to power separately owned instances of `Delay` and\n `Interval`.","sig":null,"attributes":[{"value":"/ A \"timer heap\" used to power separately owned instances of `Delay` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14537,"byte_end":14611,"line_start":255,"line_end":255,"column_start":1,"column_end":75}},{"value":"/ `Interval`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14612,"byte_end":14627,"line_start":256,"line_end":256,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14628,"byte_end":14631,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ This timer is implemented as a priority queued-based heap. Each `Timer`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14632,"byte_end":14707,"line_start":258,"line_end":258,"column_start":1,"column_end":76}},{"value":"/ contains a few primary methods which which to drive it:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14708,"byte_end":14767,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14768,"byte_end":14771,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * `next_wake` indicates how long the ambient system needs to sleep until it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14772,"byte_end":14851,"line_start":261,"line_end":261,"column_start":1,"column_end":80}},{"value":"/   invokes further processing on a `Timer`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14852,"byte_end":14897,"line_start":262,"line_end":262,"column_start":1,"column_end":46}},{"value":"/ * `advance_to` is what actually fires timers on the `Timer`, and should be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14898,"byte_end":14976,"line_start":263,"line_end":263,"column_start":1,"column_end":79}},{"value":"/   called essentially every iteration of the event loop, or when the time","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14977,"byte_end":15053,"line_start":264,"line_end":264,"column_start":1,"column_end":77}},{"value":"/   specified by `next_wake` has elapsed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15054,"byte_end":15097,"line_start":265,"line_end":265,"column_start":1,"column_end":44}},{"value":"/ * The `Future` implementation for `Timer` is used to process incoming timer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15098,"byte_end":15177,"line_start":266,"line_end":266,"column_start":1,"column_end":80}},{"value":"/   updates and requests. This is used to schedule new timeouts, update","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15178,"byte_end":15251,"line_start":267,"line_end":267,"column_start":1,"column_end":74}},{"value":"/   existing ones, or delete existing timeouts. The `Future` implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15252,"byte_end":15329,"line_start":268,"line_end":268,"column_start":1,"column_end":78}},{"value":"/   will never resolve, but it'll schedule notifications of when to wake up","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15330,"byte_end":15407,"line_start":269,"line_end":269,"column_start":1,"column_end":78}},{"value":"/   and process more messages.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15408,"byte_end":15440,"line_start":270,"line_end":270,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15441,"byte_end":15444,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Note that if you're using this crate you probably don't need to use a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15445,"byte_end":15518,"line_start":272,"line_end":272,"column_start":1,"column_end":74}},{"value":"/ `Timer` as there is a global one already available for you run on a helper","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15519,"byte_end":15597,"line_start":273,"line_end":273,"column_start":1,"column_end":79}},{"value":"/ thread. If this isn't desirable, though, then the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15598,"byte_end":15651,"line_start":274,"line_end":274,"column_start":1,"column_end":54}},{"value":"/ `TimerHandle::set_fallback` method can be used instead!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15652,"byte_end":15711,"line_start":275,"line_end":275,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15892,"byte_end":15903,"line_start":283,"line_end":283,"column_start":12,"column_end":23},"name":"TimerHandle","qualname":"::timer::TimerHandle","value":"TimerHandle {  }","parent":null,"children":[{"krate":0,"index":312}],"decl_id":null,"docs":" A handle to a `Timer` which is used to create instances of a `Delay`.\n","sig":null,"attributes":[{"value":"/ A handle to a `Timer` which is used to create instances of a `Delay`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":15790,"byte_end":15863,"line_start":281,"line_end":281,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52331,"byte_end":52336,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Delay","qualname":"::timer::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" A future representing the notification that an elapsed duration has\n occurred.","sig":null,"attributes":[{"value":"/ A future representing the notification that an elapsed duration has","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":51910,"byte_end":51981,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":51982,"byte_end":51995,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":51996,"byte_end":51999,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is created through the `Delay::new` or `Delay::new_at` methods","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52000,"byte_end":52071,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ indicating when the future should fire at.  Note that these futures are not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52072,"byte_end":52151,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ intended for high resolution timers, but rather they will likely fire some","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52152,"byte_end":52230,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ granularity after the exact instant that they're otherwise indicated to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52231,"byte_end":52306,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ fire at.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52307,"byte_end":52319,"line_start":29,"line_end":29,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52684,"byte_end":52687,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Delay>::new","value":"pub fn new(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will fire at `dur` time into the future.","sig":null,"attributes":[{"value":"/ Creates a new future which will fire at `dur` time into the future.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52424,"byte_end":52495,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52500,"byte_end":52503,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The returned object will be bound to the default timer for this thread.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52508,"byte_end":52583,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ The default timer will be spun up in a helper thread on first use.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52588,"byte_end":52658,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52663,"byte_end":52672,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":53029,"byte_end":53035,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"new_at","qualname":"<Delay>::new_at","value":"pub fn new_at(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will fire at the time specified by `at`.","sig":null,"attributes":[{"value":"/ Creates a new future which will fire at the time specified by `at`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52769,"byte_end":52840,"line_start":45,"line_end":45,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52845,"byte_end":52848,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The returned object will be bound to the default timer for this thread.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52853,"byte_end":52928,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ The default timer will be spun up in a helper thread on first use.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52933,"byte_end":53003,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":53008,"byte_end":53017,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":53324,"byte_end":53334,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"new_handle","qualname":"<Delay>::new_handle","value":"pub fn new_handle(Instant, TimerHandle) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will fire at the time specified by `at`.","sig":null,"attributes":[{"value":"/ Creates a new future which will fire at the time specified by `at`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":53121,"byte_end":53192,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":53197,"byte_end":53200,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The returned instance of `Delay` will be bound to the timer specified by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":53205,"byte_end":53281,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ the `handle` argument.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":53286,"byte_end":53312,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54525,"byte_end":54530,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Resets this timeout to an new timeout which will fire at the time\n specified by `dur`.","sig":null,"attributes":[{"value":"/ Resets this timeout to an new timeout which will fire at the time","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54317,"byte_end":54386,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ specified by `dur`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54391,"byte_end":54414,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54419,"byte_end":54422,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `reset_at` with `Instant::now() + dur`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54427,"byte_end":54499,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54504,"byte_end":54513,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":55331,"byte_end":55339,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<Delay>::reset_at","value":"pub fn reset_at(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets this timeout to an new timeout which will fire at the time\n specified by `at`.","sig":null,"attributes":[{"value":"/ Resets this timeout to an new timeout which will fire at the time","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54614,"byte_end":54683,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ specified by `at`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54688,"byte_end":54710,"line_start":103,"line_end":103,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54715,"byte_end":54718,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This method is usable even of this instance of `Delay` has \"already","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54723,"byte_end":54794,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ fired\". That is, if this future has resovled, calling this method means","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54799,"byte_end":54874,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ that the future will still re-resolve at the specified instant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54879,"byte_end":54946,"line_start":107,"line_end":107,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54951,"byte_end":54954,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If `at` is in the past then this future will immediately be resolved","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":54959,"byte_end":55031,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ (when `poll` is called).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":55036,"byte_end":55064,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":55069,"byte_end":55072,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Note that if any task is currently blocked on this future then that task","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":55077,"byte_end":55153,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ will be dropped. It is required to call `poll` again after this method","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":55158,"byte_end":55232,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ has been called to ensure tha ta task is blocked on this future.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":55237,"byte_end":55305,"line_start":114,"line_end":114,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":55310,"byte_end":55319,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":315},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58839,"byte_end":58847,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Interval","qualname":"::timer::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"decl_id":null,"docs":" A stream representing notifications at fixed interval","sig":null,"attributes":[{"value":"/ A stream representing notifications at fixed interval","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58370,"byte_end":58427,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58428,"byte_end":58431,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Intervals are created through the `Interval::new` or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58432,"byte_end":58488,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ `Interval::new_at` methods indicating when a first notification","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58489,"byte_end":58556,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ should be triggered and when it will be repeated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58557,"byte_end":58610,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58611,"byte_end":58614,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note that intervals are not intended for high resolution timers, but rather","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58615,"byte_end":58694,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ they will likely fire some granularity after the exact instant that they're","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58695,"byte_end":58774,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ otherwise indicated to fire at.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58775,"byte_end":58810,"line_start":19,"line_end":19,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59249,"byte_end":59252,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Interval>::new","value":"pub fn new(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates a new interval which will fire at `dur` time into the future,\n and will repeat every `dur` interval after","sig":null,"attributes":[{"value":"/ Creates a new interval which will fire at `dur` time into the future,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58950,"byte_end":59023,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ and will repeat every `dur` interval after","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59028,"byte_end":59074,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59079,"byte_end":59082,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The returned object will be bound to the default timer for this thread.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59087,"byte_end":59162,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ The default timer will be spun up in a helper thread on first use.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59167,"byte_end":59237,"line_start":33,"line_end":33,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59649,"byte_end":59655,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"new_at","qualname":"<Interval>::new_at","value":"pub fn new_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates a new interval which will fire at the time specified by `at`,\n and then will repeat every `dur` interval after","sig":null,"attributes":[{"value":"/ Creates a new interval which will fire at the time specified by `at`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59345,"byte_end":59418,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ and then will repeat every `dur` interval after","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59423,"byte_end":59474,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59479,"byte_end":59482,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ The returned object will be bound to the default timer for this thread.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59487,"byte_end":59562,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ The default timer will be spun up in a helper thread on first use.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59567,"byte_end":59637,"line_start":42,"line_end":42,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":60030,"byte_end":60040,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"new_handle","qualname":"<Interval>::new_handle","value":"pub fn new_handle(Instant, Duration, TimerHandle) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates a new interval which will fire at the time specified by `at`,\n and then will repeat every `dur` interval after","sig":null,"attributes":[{"value":"/ Creates a new interval which will fire at the time specified by `at`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59803,"byte_end":59876,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ and then will repeat every `dur` interval after","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59881,"byte_end":59932,"line_start":51,"line_end":51,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59937,"byte_end":59940,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The returned object will be bound to the timer specified by `handle`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":59945,"byte_end":60018,"line_start":53,"line_end":53,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17166,"byte_end":17169,"line_start":328,"line_end":328,"column_start":12,"column_end":15},"name":"new","qualname":"<Timer>::new","value":"pub fn new() -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new timer heap ready to create new timers.\n","sig":null,"attributes":[{"value":"/ Creates a new timer heap ready to create new timers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17098,"byte_end":17154,"line_start":327,"line_end":327,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17471,"byte_end":17477,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"handle","qualname":"<Timer>::handle","value":"pub fn handle(&Self) -> TimerHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to this timer heap, used to create new timeouts.\n","sig":null,"attributes":[{"value":"/ Returns a handle to this timer heap, used to create new timeouts.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17390,"byte_end":17459,"line_start":338,"line_end":338,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17797,"byte_end":17807,"line_start":350,"line_end":350,"column_start":12,"column_end":22},"name":"next_event","qualname":"<Timer>::next_event","value":"pub fn next_event(&Self) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns the time at which this timer next needs to be invoked with\n `advance_to`.","sig":null,"attributes":[{"value":"/ Returns the time at which this timer next needs to be invoked with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17593,"byte_end":17663,"line_start":345,"line_end":345,"column_start":5,"column_end":75}},{"value":"/ `advance_to`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17668,"byte_end":17685,"line_start":346,"line_end":346,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17690,"byte_end":17693,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ Event loops or threads typically want to sleep until the specified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17698,"byte_end":17768,"line_start":348,"line_end":348,"column_start":5,"column_end":75}},{"value":"/ instant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17773,"byte_end":17785,"line_start":349,"line_end":349,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":18074,"byte_end":18081,"line_start":358,"line_end":358,"column_start":12,"column_end":19},"name":"advance","qualname":"<Timer>::advance","value":"pub fn advance(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Proces any timers which are supposed to fire at or before the current\n instant.","sig":null,"attributes":[{"value":"/ Proces any timers which are supposed to fire at or before the current","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17892,"byte_end":17965,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ instant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17970,"byte_end":17982,"line_start":355,"line_end":355,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17987,"byte_end":17990,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `self.advance_to(Instant::now())`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17995,"byte_end":18062,"line_start":357,"line_end":357,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":18388,"byte_end":18398,"line_start":366,"line_end":366,"column_start":12,"column_end":22},"name":"advance_to","qualname":"<Timer>::advance_to","value":"pub fn advance_to(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Proces any timers which are supposed to fire before `now` specified.","sig":null,"attributes":[{"value":"/ Proces any timers which are supposed to fire before `now` specified.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":18146,"byte_end":18218,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":18223,"byte_end":18226,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This method should be called on `Timer` periodically to advance the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":18231,"byte_end":18302,"line_start":364,"line_end":364,"column_start":5,"column_end":76}},{"value":"/ internal state and process any pending timers which need to fire.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":18307,"byte_end":18376,"line_start":365,"line_end":365,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":323},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22323,"byte_end":22338,"line_start":491,"line_end":491,"column_start":12,"column_end":27},"name":"SetDefaultError","qualname":"::timer::SetDefaultError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from `TimerHandle::set_fallback`.\n","sig":null,"attributes":[{"value":"/ Error returned from `TimerHandle::set_fallback`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22235,"byte_end":22287,"line_start":489,"line_end":489,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":23457,"byte_end":23479,"line_start":516,"line_end":516,"column_start":12,"column_end":34},"name":"set_as_global_fallback","qualname":"<TimerHandle>::set_as_global_fallback","value":"pub fn set_as_global_fallback(Self) -> Result<(), SetDefaultError>","parent":null,"children":[],"decl_id":null,"docs":" Configures this timer handle to be the one returned by\n `TimerHandle::default`.","sig":null,"attributes":[{"value":"/ Configures this timer handle to be the one returned by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22368,"byte_end":22426,"line_start":494,"line_end":494,"column_start":5,"column_end":63}},{"value":"/ `TimerHandle::default`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22431,"byte_end":22458,"line_start":495,"line_end":495,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22463,"byte_end":22466,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ By default a global thread is initialized on the first call to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22471,"byte_end":22537,"line_start":497,"line_end":497,"column_start":5,"column_end":71}},{"value":"/ `TimerHandle::default`. This first call can happen transitively through","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22542,"byte_end":22617,"line_start":498,"line_end":498,"column_start":5,"column_end":80}},{"value":"/ `Delay::new`. If, however, that hasn't happened yet then the global","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22622,"byte_end":22693,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/ default timer handle can be configured through this method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22698,"byte_end":22761,"line_start":500,"line_end":500,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22766,"byte_end":22769,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ This method can be used to prevent the global helper thread from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22774,"byte_end":22842,"line_start":502,"line_end":502,"column_start":5,"column_end":73}},{"value":"/ spawning. If this method is successful then the global helper thread","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22847,"byte_end":22919,"line_start":503,"line_end":503,"column_start":5,"column_end":77}},{"value":"/ will never get spun up.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22924,"byte_end":22951,"line_start":504,"line_end":504,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22956,"byte_end":22959,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ On success this timer handle will have installed itself globally to be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22964,"byte_end":23038,"line_start":506,"line_end":506,"column_start":5,"column_end":79}},{"value":"/ used as the return value for `TimerHandle::default` unless otherwise","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":23043,"byte_end":23115,"line_start":507,"line_end":507,"column_start":5,"column_end":77}},{"value":"/ specified.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":23120,"byte_end":23134,"line_start":508,"line_end":508,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":23139,"byte_end":23142,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":23147,"byte_end":23159,"line_start":510,"line_end":510,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":23164,"byte_end":23167,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ If another thread has already called `set_as_global_fallback` or this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":23172,"byte_end":23245,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ thread otherwise loses a race to call this method then it will fail","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":23250,"byte_end":23321,"line_start":513,"line_end":513,"column_start":5,"column_end":76}},{"value":"/ returning an error. Once a call to `set_as_global_fallback` is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":23326,"byte_end":23392,"line_start":514,"line_end":514,"column_start":5,"column_end":71}},{"value":"/ successful then no future calls may succeed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":23397,"byte_end":23445,"line_start":515,"line_end":515,"column_start":5,"column_end":53}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/arc_list.rs","byte_start":28205,"byte_end":28212,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/arc_list.rs","byte_start":31044,"byte_end":31051,"line_start":97,"line_end":97,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/arc_list.rs","byte_start":31255,"byte_end":31259,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/arc_list.rs","byte_start":31463,"byte_end":31467,"line_start":121,"line_end":121,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/global/desktop.rs","byte_start":32867,"byte_end":32879,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/global/desktop.rs","byte_start":33459,"byte_end":33471,"line_start":45,"line_end":45,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/heap.rs","byte_start":36161,"byte_end":36165,"line_start":33,"line_end":33,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":48153,"byte_end":48154,"line_start":77,"line_end":77,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":48357,"byte_end":48364,"line_start":90,"line_end":90,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":48514,"byte_end":48521,"line_start":99,"line_end":99,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":50128,"byte_end":50129,"line_start":147,"line_end":147,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":50357,"byte_end":50370,"line_start":161,"line_end":161,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":50520,"byte_end":50533,"line_start":170,"line_end":170,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52412,"byte_end":52417,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":56586,"byte_end":56591,"line_start":157,"line_end":157,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":57625,"byte_end":57630,"line_start":189,"line_end":189,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":58011,"byte_end":58016,"line_start":204,"line_end":204,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58900,"byte_end":58908,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":60235,"byte_end":60243,"line_start":62,"line_end":62,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17086,"byte_end":17091,"line_start":326,"line_end":326,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":20462,"byte_end":20467,"line_start":425,"line_end":425,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":20970,"byte_end":20975,"line_start":442,"line_end":442,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":21627,"byte_end":21632,"line_start":461,"line_end":461,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":21800,"byte_end":21809,"line_start":467,"line_end":467,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":21907,"byte_end":21916,"line_start":473,"line_end":473,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":21941,"byte_end":21950,"line_start":475,"line_end":475,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22072,"byte_end":22081,"line_start":481,"line_end":481,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22350,"byte_end":22361,"line_start":493,"line_end":493,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":24148,"byte_end":24159,"line_start":539,"line_end":539,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":27728,"byte_end":27739,"line_start":620,"line_end":620,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":14488,"byte_end":14491,"line_start":252,"line_end":252,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":135}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/arc_list.rs","byte_start":28205,"byte_end":28212,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/arc_list.rs","byte_start":31044,"byte_end":31051,"line_start":97,"line_end":97,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/arc_list.rs","byte_start":31255,"byte_end":31259,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/arc_list.rs","byte_start":31463,"byte_end":31467,"line_start":121,"line_end":121,"column_start":19,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/global/desktop.rs","byte_start":32867,"byte_end":32879,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/global/desktop.rs","byte_start":33459,"byte_end":33471,"line_start":45,"line_end":45,"column_start":15,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":89},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/heap.rs","byte_start":36161,"byte_end":36165,"line_start":33,"line_end":33,"column_start":14,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46036,"byte_end":46045,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":19,"index":32},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":46048,"byte_end":46053,"line_start":15,"line_end":15,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":48153,"byte_end":48154,"line_start":77,"line_end":77,"column_start":37,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":151},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":48357,"byte_end":48364,"line_start":90,"line_end":90,"column_start":9,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":48514,"byte_end":48521,"line_start":99,"line_end":99,"column_start":20,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":284},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49208,"byte_end":49217,"line_start":123,"line_end":123,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":19,"index":97},"to":{"krate":0,"index":158}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":49220,"byte_end":49225,"line_start":123,"line_end":123,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":158}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":50128,"byte_end":50129,"line_start":147,"line_end":147,"column_start":37,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":0,"index":158}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":50357,"byte_end":50370,"line_start":161,"line_end":161,"column_start":9,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/ext.rs","byte_start":50520,"byte_end":50533,"line_start":170,"line_end":170,"column_start":20,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":297},"to":{"krate":19,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":52412,"byte_end":52417,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":56586,"byte_end":56591,"line_start":157,"line_end":157,"column_start":17,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":57625,"byte_end":57630,"line_start":189,"line_end":189,"column_start":15,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/delay.rs","byte_start":58011,"byte_end":58016,"line_start":204,"line_end":204,"column_start":21,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":58900,"byte_end":58908,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer/interval.rs","byte_start":60235,"byte_end":60243,"line_start":62,"line_end":62,"column_start":17,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":315},"to":{"krate":19,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":17086,"byte_end":17091,"line_start":326,"line_end":326,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":20462,"byte_end":20467,"line_start":425,"line_end":425,"column_start":17,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":20970,"byte_end":20975,"line_start":442,"line_end":442,"column_start":15,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":21627,"byte_end":21632,"line_start":461,"line_end":461,"column_start":21,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":21800,"byte_end":21809,"line_start":467,"line_end":467,"column_start":20,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":21907,"byte_end":21916,"line_start":473,"line_end":473,"column_start":13,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":21941,"byte_end":21950,"line_start":475,"line_end":475,"column_start":21,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22072,"byte_end":22081,"line_start":481,"line_end":481,"column_start":14,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":22350,"byte_end":22361,"line_start":493,"line_end":493,"column_start":6,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":24148,"byte_end":24159,"line_start":539,"line_end":539,"column_start":18,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-timer-0.2.5/src/timer.rs","byte_start":27728,"byte_end":27739,"line_start":620,"line_end":620,"column_start":21,"column_end":32},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":6563}}]}