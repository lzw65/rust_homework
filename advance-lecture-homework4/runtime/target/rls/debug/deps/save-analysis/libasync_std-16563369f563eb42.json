{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_std","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-channel\"","--cfg","feature=\"async-global-executor\"","--cfg","feature=\"async-io\"","--cfg","feature=\"async-mutex\"","--cfg","feature=\"async-process\"","--cfg","feature=\"blocking\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-lite\"","--cfg","feature=\"gloo-timers\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","--cfg","feature=\"unstable\"","--cfg","feature=\"wasm-bindgen-futures\"","-C","metadata=16563369f563eb42","-C","extra-filename=-16563369f563eb42","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--extern","async_channel=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libasync_channel-6c606740e13f87e8.rmeta","--extern","async_global_executor=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libasync_global_executor-109718497d4d43b7.rmeta","--extern","async_io=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libasync_io-55d1fc5d7c7ce792.rmeta","--extern","async_mutex=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libasync_mutex-a67daa7e68e74f27.rmeta","--extern","async_process=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libasync_process-9444a40c2921bbf3.rmeta","--extern","blocking=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libblocking-93c426e4a91277f2.rmeta","--extern","crossbeam_utils=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libcrossbeam_utils-5fbabe5f27850731.rmeta","--extern","futures_core=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libfutures_core-8a1a9732d775b0df.rmeta","--extern","futures_io=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libfutures_io-06ea0f33393dc27a.rmeta","--extern","futures_lite=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libfutures_lite-4ff7fc043f950697.rmeta","--extern","kv_log_macro=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libkv_log_macro-d3ec428177d3d7b4.rmeta","--extern","log=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/liblog-d3884e8e45296dbc.rmeta","--extern","memchr=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libmemchr-f5b128bc88333e3b.rmeta","--extern","num_cpus=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libnum_cpus-70bdbb321ae757b9.rmeta","--extern","once_cell=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libonce_cell-ddf8120c60d41ace.rmeta","--extern","pin_project_lite=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libpin_project_lite-1620212b61c1acbb.rmeta","--extern","pin_utils=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libpin_utils-7c8a191063a5eaa6.rmeta","--extern","slab=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libslab-259161656569c6a2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libasync_std-16563369f563eb42.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[4976142818790629699,699457004843249861]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/all.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","num":18,"id":{"name":"kv_log_macro","disambiguator":[13870330670879452609,4987634712318717476]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":19,"id":{"name":"log","disambiguator":[17254312244691266404,17120298729262202934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":20,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cycle.rs","num":21,"id":{"name":"futures_core","disambiguator":[6091960194481922876,16111170612509824982]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","num":22,"id":{"name":"pin_utils","disambiguator":[14006933666536538846,10325894616585527374]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[11050117765846224188,12097442257352640106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","num":24,"id":{"name":"async_mutex","disambiguator":[7093409143793060504,2697586272730987767]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","num":25,"id":{"name":"event_listener","disambiguator":[1329321184522063609,6930102895973449987]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","num":26,"id":{"name":"crossbeam_utils","disambiguator":[11567421732596137513,7394014683715249577]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","num":27,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","num":28,"id":{"name":"lazy_static","disambiguator":[16863586403248268720,14388819080293591203]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","num":29,"id":{"name":"slab","disambiguator":[7754159738850082191,972067075306833933]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/channel.rs","num":30,"id":{"name":"async_channel","disambiguator":[7284386733277590033,8869133026576240120]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/channel.rs","num":31,"id":{"name":"concurrent_queue","disambiguator":[18213822786008996053,10867190005056278931]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/channel.rs","num":32,"id":{"name":"cache_padded","disambiguator":[18353092046062123632,1298457636792068056]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/mod.rs","num":33,"id":{"name":"futures_io","disambiguator":[5832703695225160921,17043717576790152055]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":34,"id":{"name":"async_process","disambiguator":[10980086272662971037,2826203564880721132]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","num":35,"id":{"name":"async_io","disambiguator":[15217185869467787680,17945062292530268098]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","num":36,"id":{"name":"futures_lite","disambiguator":[2941846766315098300,9370564556904000169]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":37,"id":{"name":"parking","disambiguator":[1999498884191094626,9252083634413959091]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":38,"id":{"name":"waker_fn","disambiguator":[6477177352258648891,1408471870261056396]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":39,"id":{"name":"fastrand","disambiguator":[2557478997660195169,13453224216195452879]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/mod.rs","num":40,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/rt/mod.rs","num":41,"id":{"name":"once_cell","disambiguator":[8114906871986815057,215681476928989787]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":42,"id":{"name":"parking_lot","disambiguator":[10061552480279027668,1018443910502703418]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":43,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":44,"id":{"name":"lock_api","disambiguator":[1370039747192521928,13370481355962836312]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":45,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":46,"id":{"name":"parking_lot_core","disambiguator":[6910326554005380636,13334944336695677100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":47,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":48,"id":{"name":"libc","disambiguator":[6571333170903906260,2103687221578517612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":49,"id":{"name":"polling","disambiguator":[1682147684354064500,12950341847355975983]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":50,"id":{"name":"vec_arena","disambiguator":[14419761904539993776,12862170585453807711]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":51,"id":{"name":"nb_connect","disambiguator":[8517493651729196043,8189959879834134100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":52,"id":{"name":"signal_hook","disambiguator":[2515232465840280565,4769161616505312633]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","num":53,"id":{"name":"signal_hook_registry","disambiguator":[15937606200030807710,3403566883897947767]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","num":54,"id":{"name":"async_global_executor","disambiguator":[14173521401437149121,17380380653226254649]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","num":55,"id":{"name":"async_executor","disambiguator":[13886365471732247359,16515060364476313181]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","num":56,"id":{"name":"async_task","disambiguator":[1666060535690288555,1561392910602399679]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","num":57,"id":{"name":"num_cpus","disambiguator":[17237370829952825392,8933627738761765040]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","num":58,"id":{"name":"blocking","disambiguator":[5042968959983971879,18321643593935634367]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","num":59,"id":{"name":"atomic_waker","disambiguator":[4500734903781178819,12137793048633055083]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":0,"byte_end":11342,"line_start":1,"line_end":330,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":9237},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246235,"byte_end":8246242,"line_start":122,"line_end":122,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":2,"index":34508},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246244,"byte_end":8246248,"line_start":122,"line_end":122,"column_start":35,"column_end":39},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":2,"index":9247},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246250,"byte_end":8246255,"line_start":122,"line_end":122,"column_start":41,"column_end":46},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":21,"index":131},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246277,"byte_end":8246282,"line_start":123,"line_end":123,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":21,"index":131},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/ready.rs","byte_start":8404186,"byte_end":8404191,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1101}},{"kind":"Use","ref_id":{"krate":0,"index":1110},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246337,"byte_end":8246346,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246407,"byte_end":8246415,"line_start":134,"line_end":134,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1311},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246438,"byte_end":8246445,"line_start":135,"line_end":135,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1178},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246468,"byte_end":8246475,"line_start":136,"line_end":136,"column_start":22,"column_end":29},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246495,"byte_end":8246499,"line_start":137,"line_end":137,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246522,"byte_end":8246528,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1337},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246522,"byte_end":8246528,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":1123}},{"kind":"Use","ref_id":{"krate":0,"index":1324},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246555,"byte_end":8246565,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1207},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246586,"byte_end":8246591,"line_start":140,"line_end":140,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1215},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246651,"byte_end":8246656,"line_start":142,"line_end":142,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1361},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246683,"byte_end":8246694,"line_start":143,"line_end":143,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1354},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246696,"byte_end":8246704,"line_start":143,"line_end":143,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1222},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8247207,"byte_end":8247221,"line_start":164,"line_end":164,"column_start":29,"column_end":43},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1392},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8247438,"byte_end":8247449,"line_start":172,"line_end":172,"column_start":26,"column_end":37},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":2,"index":9062},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8250209,"byte_end":8250215,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":2,"index":9062},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8551710,"byte_end":8551716,"line_start":139,"line_end":139,"column_start":40,"column_end":46},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":1396}},{"kind":"Use","ref_id":{"krate":0,"index":1555},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8250279,"byte_end":8250286,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":1572},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8250309,"byte_end":8250316,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":1588},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8250337,"byte_end":8250342,"line_start":57,"line_end":57,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8250470,"byte_end":8250477,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":1592},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8250479,"byte_end":8250491,"line_start":65,"line_end":65,"column_start":28,"column_end":40},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":1610},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8250604,"byte_end":8250614,"line_start":70,"line_end":70,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":1012},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263268,"byte_end":8263273,"line_start":303,"line_end":303,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2001},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263275,"byte_end":8263280,"line_start":303,"line_end":303,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":1026},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263301,"byte_end":8263308,"line_start":304,"line_end":304,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2007},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263310,"byte_end":8263316,"line_start":304,"line_end":304,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":1042},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263339,"byte_end":8263348,"line_start":305,"line_end":305,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":7205},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263350,"byte_end":8263358,"line_start":305,"line_end":305,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":1059},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263376,"byte_end":8263380,"line_start":306,"line_end":306,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":7166},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263382,"byte_end":8263386,"line_start":306,"line_end":306,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":1074},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263406,"byte_end":8263412,"line_start":307,"line_end":307,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2016},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263414,"byte_end":8263420,"line_start":307,"line_end":307,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263445,"byte_end":8263456,"line_start":308,"line_end":308,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2025},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263458,"byte_end":8263468,"line_start":308,"line_end":308,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":78}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263487,"byte_end":8263488,"line_start":309,"line_end":309,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Fuse, Stream","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":7591},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8266962,"byte_end":8266967,"line_start":128,"line_end":128,"column_start":20,"column_end":25},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":2147},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263865,"byte_end":8263882,"line_start":333,"line_end":333,"column_start":34,"column_end":51},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2162},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263915,"byte_end":8263930,"line_start":334,"line_end":334,"column_start":32,"column_end":47},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2176},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263953,"byte_end":8263959,"line_start":335,"line_end":335,"column_start":22,"column_end":28},"alias_span":null,"name":"extend","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2171},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263961,"byte_end":8263967,"line_start":335,"line_end":335,"column_start":30,"column_end":36},"alias_span":null,"name":"Extend","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2187},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263995,"byte_end":8264005,"line_start":336,"line_end":336,"column_start":26,"column_end":36},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2194},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264033,"byte_end":8264044,"line_start":337,"line_end":337,"column_start":27,"column_end":38},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2208},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264069,"byte_end":8264077,"line_start":338,"line_end":338,"column_start":24,"column_end":32},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2312},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264079,"byte_end":8264087,"line_start":338,"line_end":338,"column_start":34,"column_end":42},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2214},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264115,"byte_end":8264125,"line_start":339,"line_end":339,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2234},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264149,"byte_end":8264156,"line_start":340,"line_end":340,"column_start":23,"column_end":30},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2317},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264158,"byte_end":8264165,"line_start":340,"line_end":340,"column_start":32,"column_end":39},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2252},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264189,"byte_end":8264196,"line_start":341,"line_end":341,"column_start":22,"column_end":29},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":7591},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264218,"byte_end":8264223,"line_start":342,"line_end":342,"column_start":21,"column_end":26},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2270},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264250,"byte_end":8264260,"line_start":343,"line_end":343,"column_start":26,"column_end":36},"alias_span":null,"name":"successors","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":7005},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264262,"byte_end":8264272,"line_start":343,"line_end":343,"column_start":38,"column_end":48},"alias_span":null,"name":"Successors","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2282},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8264292,"byte_end":8264295,"line_start":344,"line_end":344,"column_start":18,"column_end":21},"alias_span":null,"name":"Sum","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":1,"index":2659},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667126,"byte_end":8667131,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":1,"index":7065},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667133,"byte_end":8667142,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":1,"index":7128},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667144,"byte_end":8667151,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":1,"index":3080},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667153,"byte_end":8667163,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":1,"index":2657},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667165,"byte_end":8667171,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":1,"index":7142},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667173,"byte_end":8667181,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":33,"index":27},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667208,"byte_end":8667215,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":6955},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667217,"byte_end":8667222,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":6907},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667224,"byte_end":8667229,"line_start":278,"line_end":278,"column_start":40,"column_end":45},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":6768},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667256,"byte_end":8667265,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":6727},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667292,"byte_end":8667301,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3878},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667303,"byte_end":8667317,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3662},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667338,"byte_end":8667342,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3886},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667364,"byte_end":8667370,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3729},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667392,"byte_end":8667397,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3730},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667399,"byte_end":8667404,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2903}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667425,"byte_end":8667426,"line_start":284,"line_end":284,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"_, Read","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3749},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667449,"byte_end":8667455,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3750},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667457,"byte_end":8667463,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":33,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667484,"byte_end":8667488,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3765},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667509,"byte_end":8667513,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3766},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667515,"byte_end":8667519,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":33,"index":20},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667541,"byte_end":8667546,"line_start":288,"line_end":288,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":33,"index":27},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699527,"byte_end":8699534,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":33,"index":17},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699573,"byte_end":8699577,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":33,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699616,"byte_end":8699620,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":33,"index":20},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699659,"byte_end":8699664,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":0,"index":3786},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699711,"byte_end":8699721,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":0,"index":3813},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699763,"byte_end":8699770,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699812,"byte_end":8699819,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":0,"index":3859},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699862,"byte_end":8699870,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":33,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/seek/mod.rs","byte_start":8756749,"byte_end":8756758,"line_start":51,"line_end":51,"column_start":36,"column_end":45},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":3421}},{"kind":"Use","ref_id":{"krate":33,"index":20},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/mod.rs","byte_start":8761934,"byte_end":8761944,"line_start":84,"line_end":84,"column_start":37,"column_end":47},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":3443}},{"kind":"Use","ref_id":{"krate":0,"index":3986},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667950,"byte_end":8667957,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3983},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667959,"byte_end":8667965,"line_start":311,"line_end":311,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3945},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8668029,"byte_end":8668035,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":4008},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8668037,"byte_end":8668043,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3966},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8668105,"byte_end":8668110,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":4042},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8668112,"byte_end":8668117,"line_start":316,"line_end":316,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":4001},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8668180,"byte_end":8668186,"line_start":318,"line_end":318,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":4077},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8668188,"byte_end":8668194,"line_start":318,"line_end":318,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":0,"index":3923},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8668218,"byte_end":8668225,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":2903}},{"kind":"Use","ref_id":{"krate":1,"index":8769},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/io.rs","byte_start":8839785,"byte_end":8839792,"line_start":4,"line_end":4,"column_start":33,"column_end":40},"alias_span":null,"name":"AsRawFd","value":"","parent":{"krate":0,"index":4113}},{"kind":"Use","ref_id":{"krate":1,"index":8771},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/io.rs","byte_start":8839794,"byte_end":8839803,"line_start":4,"line_end":4,"column_start":42,"column_end":51},"alias_span":null,"name":"FromRawFd","value":"","parent":{"krate":0,"index":4113}},{"kind":"Use","ref_id":{"krate":1,"index":8773},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/io.rs","byte_start":8839805,"byte_end":8839814,"line_start":4,"line_end":4,"column_start":53,"column_end":62},"alias_span":null,"name":"IntoRawFd","value":"","parent":{"krate":0,"index":4113}},{"kind":"Use","ref_id":{"krate":1,"index":8768},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/io.rs","byte_start":8839816,"byte_end":8839821,"line_start":4,"line_end":4,"column_start":64,"column_end":69},"alias_span":null,"name":"RawFd","value":"","parent":{"krate":0,"index":4113}},{"kind":"Use","ref_id":{"krate":1,"index":8755},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842933,"byte_end":8842946,"line_start":33,"line_end":33,"column_start":33,"column_end":46},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":4119}},{"kind":"Use","ref_id":{"krate":1,"index":8748},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842948,"byte_end":8842959,"line_start":33,"line_end":33,"column_start":48,"column_end":59},"alias_span":null,"name":"DirEntryExt","value":"","parent":{"krate":0,"index":4119}},{"kind":"Use","ref_id":{"krate":1,"index":8698},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842961,"byte_end":8842975,"line_start":33,"line_end":33,"column_start":61,"column_end":75},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":4119}},{"kind":"Use","ref_id":{"krate":0,"index":4148},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/mod.rs","byte_start":8844638,"byte_end":8844650,"line_start":3,"line_end":3,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":4129}},{"kind":"Use","ref_id":{"krate":0,"index":4223},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/mod.rs","byte_start":8844671,"byte_end":8844679,"line_start":4,"line_end":4,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":4129}},{"kind":"Use","ref_id":{"krate":0,"index":4209},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/mod.rs","byte_start":8844681,"byte_end":8844693,"line_start":4,"line_end":4,"column_start":30,"column_end":42},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":4129}},{"kind":"Use","ref_id":{"krate":0,"index":4297},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/mod.rs","byte_start":8844712,"byte_end":8844722,"line_start":5,"line_end":5,"column_start":17,"column_end":27},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":4129}},{"kind":"Use","ref_id":{"krate":1,"index":10115},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/mod.rs","byte_start":8844814,"byte_end":8844824,"line_start":12,"line_end":12,"column_start":33,"column_end":43},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":4129}},{"kind":"Use","ref_id":{"krate":34,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","byte_start":8839669,"byte_end":8839673,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"alias_span":null,"name":"process","value":"","parent":{"krate":0,"index":4111}},{"kind":"Use","ref_id":{"krate":2,"index":9062},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669207,"byte_end":8669213,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":21,"index":68},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669264,"byte_end":8669270,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669327,"byte_end":8669336,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":0,"index":1881},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669392,"byte_end":8669401,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":33,"index":27},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669448,"byte_end":8669455,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":33,"index":17},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669507,"byte_end":8669511,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":33,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669563,"byte_end":8669567,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":33,"index":20},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669619,"byte_end":8669624,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":0,"index":3786},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669686,"byte_end":8669696,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":0,"index":3813},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669757,"byte_end":8669764,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669825,"byte_end":8669832,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":0,"index":3859},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669893,"byte_end":8669901,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669967,"byte_end":8669977,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":0,"index":2147},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8670047,"byte_end":8670064,"line_start":50,"line_end":50,"column_start":28,"column_end":45},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":0,"index":2162},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8670115,"byte_end":8670130,"line_start":52,"line_end":52,"column_start":28,"column_end":43},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":2906}},{"kind":"Use","ref_id":{"krate":5,"index":4219},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676994,"byte_end":8676997,"line_start":177,"line_end":177,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":5,"index":4237},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676999,"byte_end":8677003,"line_start":177,"line_end":177,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":24,"index":18},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677044,"byte_end":8677049,"line_start":180,"line_end":180,"column_start":23,"column_end":28},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":24,"index":61},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677051,"byte_end":8677061,"line_start":180,"line_end":180,"column_start":30,"column_end":40},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":2938},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677082,"byte_end":8677088,"line_start":182,"line_end":182,"column_start":18,"column_end":24},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":3002},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677090,"byte_end":8677105,"line_start":182,"line_end":182,"column_start":26,"column_end":41},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":3024},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677107,"byte_end":8677123,"line_start":182,"line_end":182,"column_start":43,"column_end":59},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":4564},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677178,"byte_end":8677185,"line_start":187,"line_end":187,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":4575},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677187,"byte_end":8677204,"line_start":187,"line_end":187,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":4433},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677254,"byte_end":8677261,"line_start":189,"line_end":189,"column_start":23,"column_end":30},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":4435},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677263,"byte_end":8677269,"line_start":189,"line_end":189,"column_start":32,"column_end":38},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":4472},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677271,"byte_end":8677279,"line_start":189,"line_end":189,"column_start":40,"column_end":48},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":6606},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677281,"byte_end":8677290,"line_start":189,"line_end":189,"column_start":50,"column_end":59},"alias_span":null,"name":"RecvError","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":6607},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677281,"byte_end":8677290,"line_start":189,"line_end":189,"column_start":50,"column_end":59},"alias_span":null,"name":"RecvError","value":"","parent":{"krate":0,"index":4324}},{"kind":"Use","ref_id":{"krate":0,"index":6616},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677292,"byte_end":8677304,"line_start":189,"line_end":189,"column_start":61,"column_end":73},"alias_span":null,"name":"TryRecvError","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":4597},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677306,"byte_end":8677318,"line_start":189,"line_end":189,"column_start":75,"column_end":87},"alias_span":null,"name":"TrySendError","value":"","parent":{"krate":0,"index":2907}},{"kind":"Use","ref_id":{"krate":0,"index":4353},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8677342,"byte_end":8677349,"line_start":190,"line_end":190,"column_start":22,"column_end":29},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":2907}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/channel.rs","byte_start":8699219,"byte_end":8699220,"line_start":6,"line_end":6,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3093}},{"kind":"Use","ref_id":{"krate":0,"index":5659},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926160,"byte_end":8926170,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":4728},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926191,"byte_end":8926199,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":4783},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926215,"byte_end":8926219,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":1,"index":6997},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926240,"byte_end":8926248,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":1,"index":6966},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926268,"byte_end":8926276,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5685},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926300,"byte_end":8926311,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":1,"index":6983},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926334,"byte_end":8926345,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5697},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926365,"byte_end":8926372,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":4665},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926397,"byte_end":8926409,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":4676},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926425,"byte_end":8926429,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":4688},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926451,"byte_end":8926461,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":4699},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926487,"byte_end":8926501,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":4918},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926522,"byte_end":8926531,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":4929},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926551,"byte_end":8926559,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":4961},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926575,"byte_end":8926579,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":4980},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926599,"byte_end":8926607,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5000},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926628,"byte_end":8926637,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5011},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926663,"byte_end":8926677,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5022},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926699,"byte_end":8926709,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5033},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926735,"byte_end":8926749,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5044},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926772,"byte_end":8926783,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5055},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926801,"byte_end":8926807,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5067},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926834,"byte_end":8926849,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5077},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926877,"byte_end":8926893,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":0,"index":5087},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926910,"byte_end":8926915,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":4632}},{"kind":"Use","ref_id":{"krate":1,"index":6997},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file_type.rs","byte_start":8970912,"byte_end":8970920,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":4912}},{"kind":"Use","ref_id":{"krate":1,"index":6966},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8976282,"byte_end":8976290,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":1,"index":6983},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/permissions.rs","byte_start":8991558,"byte_end":8991569,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":4955}},{"kind":"Use","ref_id":{"krate":1,"index":3986},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011832,"byte_end":9011844,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":1,"index":7523},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011846,"byte_end":9011855,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":1,"index":4262},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011857,"byte_end":9011864,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":1,"index":7420},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011866,"byte_end":9011872,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":1,"index":7506},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011874,"byte_end":9011889,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":1,"index":7601},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011891,"byte_end":9011907,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":1,"index":3987},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011909,"byte_end":9011923,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":0,"index":5711},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011948,"byte_end":9011957,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":0,"index":5722},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011979,"byte_end":9011989,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":0,"index":5752},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9012005,"byte_end":9012009,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":0,"index":5758},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9012025,"byte_end":9012029,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":0,"index":6036},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9012048,"byte_end":9012055,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":5094}},{"kind":"Use","ref_id":{"krate":1,"index":7295},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062555,"byte_end":9062569,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":1,"index":7315},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062589,"byte_end":9062597,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":1,"index":7224},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062618,"byte_end":9062624,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":1,"index":7252},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062626,"byte_end":9062634,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":1,"index":7255},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062636,"byte_end":9062644,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":1,"index":7190},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062666,"byte_end":9062676,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":1,"index":7218},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062678,"byte_end":9062690,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":1,"index":7221},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062692,"byte_end":9062704,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":0,"index":5435},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062757,"byte_end":9062770,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":0,"index":5531},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062821,"byte_end":9062829,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":0,"index":6063},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062831,"byte_end":9062842,"line_start":67,"line_end":67,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":0,"index":6078},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062844,"byte_end":9062853,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":0,"index":6095},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062904,"byte_end":9062913,"line_start":69,"line_end":69,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":5399}},{"kind":"Use","ref_id":{"krate":2,"index":32003},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/pin/mod.rs","byte_start":9117115,"byte_end":9117118,"line_start":6,"line_end":6,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":6110}},{"kind":"Use","ref_id":{"krate":1,"index":7938},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117555,"byte_end":9117565,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"alias_span":null,"name":"ExitStatus","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":1,"index":7925},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117656,"byte_end":9117662,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":1,"index":4448},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117753,"byte_end":9117758,"line_start":20,"line_end":20,"column_start":24,"column_end":29},"alias_span":null,"name":"Stdio","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":34,"index":52},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117849,"byte_end":9117854,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"alias_span":null,"name":"Child","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":34,"index":138},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117945,"byte_end":9117956,"line_start":28,"line_end":28,"column_start":24,"column_end":35},"alias_span":null,"name":"ChildStderr","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":34,"index":128},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9118047,"byte_end":9118057,"line_start":32,"line_end":32,"column_start":24,"column_end":34},"alias_span":null,"name":"ChildStdin","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":34,"index":133},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9118148,"byte_end":9118159,"line_start":36,"line_end":36,"column_start":24,"column_end":35},"alias_span":null,"name":"ChildStdout","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":34,"index":143},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9118250,"byte_end":9118257,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"alias_span":null,"name":"Command","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":1,"index":4486},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9118307,"byte_end":9118312,"line_start":43,"line_end":43,"column_start":24,"column_end":29},"alias_span":null,"name":"abort","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":1,"index":4485},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9118314,"byte_end":9118318,"line_start":43,"line_end":43,"column_start":31,"column_end":35},"alias_span":null,"name":"exit","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":1,"index":4487},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9118320,"byte_end":9118322,"line_start":43,"line_end":43,"column_start":37,"column_end":39},"alias_span":null,"name":"id","value":"","parent":{"krate":0,"index":6112}},{"kind":"Use","ref_id":{"krate":2,"index":11},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":11324,"byte_end":11329,"line_start":329,"line_end":329,"column_start":19,"column_end":24},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":11331,"byte_end":11338,"line_start":329,"line_end":329,"column_start":26,"column_end":33},"alias_span":null,"name":"writeln","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":0,"byte_end":11342,"line_start":1,"line_end":330,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":35},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":78},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":3093},{"krate":0,"index":4632},{"krate":0,"index":5094},{"krate":0,"index":5399},{"krate":0,"index":5652},{"krate":0,"index":6110},{"krate":0,"index":6112},{"krate":0,"index":6125},{"krate":0,"index":6147},{"krate":0,"index":6202},{"krate":0,"index":6220},{"krate":0,"index":6237},{"krate":0,"index":6310},{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":6605}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"/ # Async version of the Rust standard library","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [I/O]: io/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ [multithreading]: task/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"/ [`use async_std::future`]: future/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [crates.io]: https://crates.io","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`Future`]: future/trait.Future.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # How to read this documentation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ bar</a> at the top of the page.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * [`async_std::*` modules](#modules)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ * [Async macros](#macros)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ * [The Async Prelude](prelude/index.html)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ * [Cargo.toml feature flags](#features)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ * [Examples](#examples)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If this is your first time, the documentation for `async-std` is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ written to be casually perused. Clicking on interesting things should","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ generally lead you to interesting places. Still, there are important bits","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ its documentation!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Once you are familiar with the contents of `async-std` you may","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ development you may want to press the `[-]` button near the top of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ page to collapse it into a more skimmable view.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ button. Rust's API documentation comes with the source code and you are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ encouraged to read it. The `async-std` source is generally high","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ quality and a peek behind the curtains is often enlightening.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"/ functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ lightweight tasks.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can find more information, reading materials, and other resources here:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * [The async-std website](https://async.rs/)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ * [The async-std book](https://book.async.rs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"/ * [List of code examples](https://github.com/async-rs/async-std/tree/master/examples)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2851,"byte_end":2940,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"/ * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2941,"byte_end":2989,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2990,"byte_end":2993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # What is in the `async-std` documentation?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":2994,"byte_end":3041,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3042,"byte_end":3045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ First, `async-std` is divided into a number of focused","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3046,"byte_end":3104,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3105,"byte_end":3182,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3183,"byte_end":3258,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3259,"byte_end":3333,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ typically includes an overview of the module along with examples, and are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3334,"byte_end":3411,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ a smart place to start familiarizing yourself with the library.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3412,"byte_end":3479,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3480,"byte_end":3483,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3484,"byte_end":3555,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/ of items - mostly traits - that should be imported into every module of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3556,"byte_end":3631,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3632,"byte_end":3706,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ prelude documentation a good entry point to learning about the library.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3707,"byte_end":3782,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3783,"byte_end":3786,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [The Async Prelude]: prelude/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3787,"byte_end":3830,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/ [`async_std::os`]: os/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3831,"byte_end":3867,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ [`async_std::task`]: task/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3868,"byte_end":3908,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ And finally, `async-std` exports a number of async macros, and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3913,"byte_end":3979,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ [lists them on this page](#macros).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":3980,"byte_end":4019,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Contributing changes to the documentation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4024,"byte_end":4071,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4072,"byte_end":4075,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4076,"byte_end":4164,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4165,"byte_end":4257,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/ To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4258,"byte_end":4337,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ pull requests for your suggested changes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4338,"byte_end":4383,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4384,"byte_end":4387,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4388,"byte_end":4464,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ improved, submit a PR, or chat with us first on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4465,"byte_end":4516,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4517,"byte_end":4559,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4560,"byte_end":4563,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # A tour of `async-std`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4564,"byte_end":4591,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4592,"byte_end":4595,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4596,"byte_end":4673,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ features of `async-std`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4674,"byte_end":4702,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4703,"byte_end":4706,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Platform abstractions and I/O","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4707,"byte_end":4743,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4744,"byte_end":4747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4748,"byte_end":4815,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/ abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4816,"byte_end":4894,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ Unix derivatives.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4895,"byte_end":4916,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4917,"byte_end":4920,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4921,"byte_end":4997,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"/ [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":4998,"byte_end":5038,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5039,"byte_end":5042,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5043,"byte_end":5117,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ contains further primitive shared memory types. [`channel`]  contains the channel types for message passing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5118,"byte_end":5230,"line_start":109,"line_end":109,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5231,"byte_end":5234,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [files]: fs/struct.File.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5235,"byte_end":5267,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ [TCP]: net/struct.TcpStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5268,"byte_end":5304,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [UDP]: net/struct.UdpSocket.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5305,"byte_end":5341,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/ [`io`]: fs/struct.File.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5342,"byte_end":5373,"line_start":114,"line_end":114,"column_start":1,"column_end":32}},{"value":"/ [`sync`]: sync/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5374,"byte_end":5403,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ [`channel`]: channel/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5404,"byte_end":5439,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5440,"byte_end":5443,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Timeouts, intervals, and delays","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5444,"byte_end":5482,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5483,"byte_end":5486,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ `async-std` provides several methods to manipulate time:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5487,"byte_end":5547,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5548,"byte_end":5551,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5552,"byte_end":5622,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"/ * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5623,"byte_end":5690,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/ * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5691,"byte_end":5767,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/   set interval.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5768,"byte_end":5787,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5788,"byte_end":5791,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5792,"byte_end":5831,"line_start":127,"line_end":127,"column_start":1,"column_end":40}},{"value":"/ [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5832,"byte_end":5881,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/ [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5882,"byte_end":5929,"line_start":129,"line_end":129,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5930,"byte_end":5933,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5934,"byte_end":5948,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5949,"byte_end":5952,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":5953,"byte_end":6032,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ This feature is not enabled by default because it significantly impacts","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6033,"byte_end":6108,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6109,"byte_end":6182,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ executing tasks.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6183,"byte_end":6203,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6204,"byte_end":6207,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Call an async function from the main function:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6208,"byte_end":6258,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6259,"byte_end":6262,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ async fn say_hello() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6374,"byte_end":6400,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6401,"byte_end":6435,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6436,"byte_end":6441,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6442,"byte_end":6445,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6446,"byte_end":6468,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6469,"byte_end":6490,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     say_hello().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6491,"byte_end":6517,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6518,"byte_end":6523,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6524,"byte_end":6531,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6532,"byte_end":6535,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6536,"byte_end":6607,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6608,"byte_end":6611,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6723,"byte_end":6753,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6754,"byte_end":6757,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6758,"byte_end":6780,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6781,"byte_end":6802,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/     let a = async { 1u8 };","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6803,"byte_end":6833,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"/     let b = async { 2u8 };","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6834,"byte_end":6864,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6865,"byte_end":6912,"line_start":162,"line_end":162,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6913,"byte_end":6918,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6919,"byte_end":6926,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6927,"byte_end":6930,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":6931,"byte_end":7008,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7009,"byte_end":7012,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7130,"byte_end":7164,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7165,"byte_end":7168,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7169,"byte_end":7191,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7192,"byte_end":7236,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7237,"byte_end":7299,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7300,"byte_end":7358,"line_start":175,"line_end":175,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7359,"byte_end":7362,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7363,"byte_end":7401,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7402,"byte_end":7405,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7406,"byte_end":7420,"line_start":179,"line_end":179,"column_start":1,"column_end":15}},{"value":"/         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7421,"byte_end":7486,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7487,"byte_end":7553,"line_start":181,"line_end":181,"column_start":1,"column_end":67}},{"value":"/         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7554,"byte_end":7626,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7627,"byte_end":7636,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7637,"byte_end":7642,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7643,"byte_end":7650,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7651,"byte_end":7696,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7697,"byte_end":7700,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7701,"byte_end":7715,"line_start":188,"line_end":188,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7716,"byte_end":7719,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7720,"byte_end":7741,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7742,"byte_end":7751,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7752,"byte_end":7794,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7795,"byte_end":7893,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/ ><code>unstable</code></span>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7894,"byte_end":7927,"line_start":194,"line_end":194,"column_start":1,"column_end":34}},{"value":"/ are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7928,"byte_end":7996,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":7997,"byte_end":8000,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8001,"byte_end":8012,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8013,"byte_end":8041,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8042,"byte_end":8063,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/ features = [\"unstable\"]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8064,"byte_end":8091,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8092,"byte_end":8099,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8100,"byte_end":8103,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8104,"byte_end":8125,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8126,"byte_end":8135,"line_start":204,"line_end":204,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8136,"byte_end":8178,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8179,"byte_end":8277,"line_start":206,"line_end":206,"column_start":1,"column_end":99}},{"value":"/ ><code>attributes</code></span>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8278,"byte_end":8313,"line_start":207,"line_end":207,"column_start":1,"column_end":36}},{"value":"/ are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8314,"byte_end":8384,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8385,"byte_end":8388,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8389,"byte_end":8400,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8401,"byte_end":8429,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8430,"byte_end":8451,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ features = [\"attributes\"]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8452,"byte_end":8481,"line_start":213,"line_end":213,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8482,"byte_end":8489,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8490,"byte_end":8493,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.2 runtime is possible using the `tokio02`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8494,"byte_end":8572,"line_start":216,"line_end":216,"column_start":1,"column_end":79}},{"value":"/ Cargo feature:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8573,"byte_end":8591,"line_start":217,"line_end":217,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8592,"byte_end":8595,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8596,"byte_end":8607,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8608,"byte_end":8636,"line_start":220,"line_end":220,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8637,"byte_end":8658,"line_start":221,"line_end":221,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio02\"]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8659,"byte_end":8685,"line_start":222,"line_end":222,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8686,"byte_end":8693,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8694,"byte_end":8697,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.3 runtime is also simultaneously possible","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8698,"byte_end":8776,"line_start":225,"line_end":225,"column_start":1,"column_end":79}},{"value":"/ using the `tokio03` Cargo feature:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8777,"byte_end":8815,"line_start":226,"line_end":226,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8816,"byte_end":8819,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8820,"byte_end":8831,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8832,"byte_end":8860,"line_start":229,"line_end":229,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8861,"byte_end":8882,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio03\"]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8883,"byte_end":8909,"line_start":231,"line_end":231,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8910,"byte_end":8917,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8918,"byte_end":8921,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":8922,"byte_end":8999,"line_start":234,"line_end":234,"column_start":1,"column_end":78}},{"value":"/ only enabling the `std` Cargo feature:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9000,"byte_end":9042,"line_start":235,"line_end":235,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9043,"byte_end":9046,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9047,"byte_end":9058,"line_start":237,"line_end":237,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9059,"byte_end":9087,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9088,"byte_end":9109,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9110,"byte_end":9138,"line_start":240,"line_end":240,"column_start":1,"column_end":29}},{"value":"/ features = [\"std\"]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9139,"byte_end":9161,"line_start":241,"line_end":241,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9162,"byte_end":9169,"line_start":242,"line_end":242,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9170,"byte_end":9173,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ And to use async-std on `no_std` targets that only support `alloc` only","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9174,"byte_end":9249,"line_start":244,"line_end":244,"column_start":1,"column_end":76}},{"value":"/ enable the `alloc` Cargo feature:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9250,"byte_end":9287,"line_start":245,"line_end":245,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9288,"byte_end":9291,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9292,"byte_end":9303,"line_start":247,"line_end":247,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9304,"byte_end":9332,"line_start":248,"line_end":248,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9333,"byte_end":9354,"line_start":249,"line_end":249,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9355,"byte_end":9383,"line_start":250,"line_end":250,"column_start":1,"column_end":29}},{"value":"/ features = [\"alloc\"]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9384,"byte_end":9408,"line_start":251,"line_end":251,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9409,"byte_end":9416,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9417,"byte_end":9420,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ # Runtime configuration","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9421,"byte_end":9448,"line_start":254,"line_end":254,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9449,"byte_end":9452,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ Several environment variables are available to tune the async-std","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9453,"byte_end":9522,"line_start":256,"line_end":256,"column_start":1,"column_end":70}},{"value":"/ runtime:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9523,"byte_end":9535,"line_start":257,"line_end":257,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9536,"byte_end":9539,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ * `ASYNC_STD_THREAD_COUNT`: The number of threads that the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9540,"byte_end":9602,"line_start":259,"line_end":259,"column_start":1,"column_end":63}},{"value":"/ async-std runtime will start. By default, this is one per logical","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9603,"byte_end":9672,"line_start":260,"line_end":260,"column_start":1,"column_end":70}},{"value":"/ cpu as reported by the [num_cpus](num_cpus) crate, which may be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9673,"byte_end":9740,"line_start":261,"line_end":261,"column_start":1,"column_end":68}},{"value":"/ different than the number of physical cpus. Async-std _will panic_","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9741,"byte_end":9811,"line_start":262,"line_end":262,"column_start":1,"column_end":71}},{"value":"/ if this is set to any value other than a positive integer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9812,"byte_end":9874,"line_start":263,"line_end":263,"column_start":1,"column_end":63}},{"value":"/ * `ASYNC_STD_THREAD_NAME`: The name that async-std's runtime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9875,"byte_end":9939,"line_start":264,"line_end":264,"column_start":1,"column_end":65}},{"value":"/ threads report to the operating system. The default value is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":9940,"byte_end":10004,"line_start":265,"line_end":265,"column_start":1,"column_end":65}},{"value":"/ `\"async-std/runtime\"`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10005,"byte_end":10031,"line_start":266,"line_end":266,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10032,"byte_end":10035,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10129,"byte_end":10200,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10201,"byte_end":10258,"line_start":272,"line_end":272,"column_start":1,"column_end":58}},{"value":"recursion_limit = \"2048\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10446,"byte_end":10474,"line_start":276,"line_end":276,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":45},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":9685},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1138},{"krate":0,"index":1174},{"krate":0,"index":1180},{"krate":0,"index":1203},{"krate":0,"index":1210},{"krate":0,"index":1218},{"krate":0,"index":1225},{"krate":0,"index":1236},{"krate":0,"index":1246},{"krate":0,"index":1283},{"krate":0,"index":1310},{"krate":0,"index":1386},{"krate":0,"index":1387}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16763,"byte_end":16788,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Types and traits for working with asynchronous tasks.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241496,"byte_end":8241553,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241554,"byte_end":8241557,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241558,"byte_end":8241650,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ threads.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241651,"byte_end":8241663,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241664,"byte_end":8241667,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241668,"byte_end":8241725,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241726,"byte_end":8241729,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## The task model","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241730,"byte_end":8241751,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241752,"byte_end":8241755,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241756,"byte_end":8241855,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241856,"byte_end":8241953,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ be named, and provide some built-in support for synchronization.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8241954,"byte_end":8242022,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242023,"byte_end":8242026,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242027,"byte_end":8242124,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242125,"byte_end":8242215,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/ structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242216,"byte_end":8242315,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242316,"byte_end":8242384,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242385,"byte_end":8242388,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242389,"byte_end":8242486,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242487,"byte_end":8242584,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242585,"byte_end":8242684,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242685,"byte_end":8242757,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242758,"byte_end":8242761,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Spawning a task","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242762,"byte_end":8242784,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242785,"byte_end":8242788,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242789,"byte_end":8242863,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242864,"byte_end":8242867,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242868,"byte_end":8242881,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242882,"byte_end":8242906,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242907,"byte_end":8242910,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242911,"byte_end":8242934,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/     // some work here","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242935,"byte_end":8242960,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242961,"byte_end":8242968,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242969,"byte_end":8242976,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242977,"byte_end":8242980,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8242981,"byte_end":8243078,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243079,"byte_end":8243166,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243167,"byte_end":8243170,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243171,"byte_end":8243270,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243271,"byte_end":8243338,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243339,"byte_end":8243342,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243343,"byte_end":8243350,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243351,"byte_end":8243375,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243376,"byte_end":8243379,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243380,"byte_end":8243419,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243420,"byte_end":8243425,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ let child = task::spawn(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243426,"byte_end":8243461,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/     // some work here","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243462,"byte_end":8243487,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243488,"byte_end":8243495,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ // some work here","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243496,"byte_end":8243517,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ let res = child.await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243518,"byte_end":8243544,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243545,"byte_end":8243550,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243551,"byte_end":8243559,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243560,"byte_end":8243567,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243568,"byte_end":8243571,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `await` operator returns the final value produced by the child task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243572,"byte_end":8243648,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243649,"byte_end":8243652,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Configuring tasks","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243653,"byte_end":8243677,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243678,"byte_end":8243681,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243682,"byte_end":8243761,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ which currently allows you to set the name for the child task:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243762,"byte_end":8243828,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243829,"byte_end":8243832,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243833,"byte_end":8243840,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243841,"byte_end":8243873,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243874,"byte_end":8243898,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243899,"byte_end":8243902,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243903,"byte_end":8243942,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243943,"byte_end":8243948,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8243949,"byte_end":8244014,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244015,"byte_end":8244049,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244050,"byte_end":8244057,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244058,"byte_end":8244063,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244064,"byte_end":8244072,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244073,"byte_end":8244080,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244081,"byte_end":8244084,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## The `Task` type","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244085,"byte_end":8244107,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244108,"byte_end":8244111,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244112,"byte_end":8244188,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ two ways:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244189,"byte_end":8244202,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244203,"byte_end":8244206,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244207,"byte_end":8244277,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244278,"byte_end":8244357,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244358,"byte_end":8244433,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244434,"byte_end":8244437,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Task-local storage","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244438,"byte_end":8244463,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244464,"byte_end":8244467,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This module also provides an implementation of task-local storage for Rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244468,"byte_end":8244546,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ programs. Task-local storage is a method of storing data into a global","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244547,"byte_end":8244621,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ variable that each task in the program will have its own copy of.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244622,"byte_end":8244691,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244692,"byte_end":8244769,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244770,"byte_end":8244773,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244774,"byte_end":8244857,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/ task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244858,"byte_end":8244938,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8244939,"byte_end":8245024,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"/ [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245025,"byte_end":8245099,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245100,"byte_end":8245185,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245186,"byte_end":8245250,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245251,"byte_end":8245254,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Naming tasks","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245255,"byte_end":8245274,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245275,"byte_end":8245278,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245279,"byte_end":8245371,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/ tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245372,"byte_end":8245465,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"/ the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245466,"byte_end":8245555,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"/ task, use [`Task::name`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245556,"byte_end":8245585,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245586,"byte_end":8245589,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: ../gsync/struct.Arc.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245590,"byte_end":8245627,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245628,"byte_end":8245656,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245657,"byte_end":8245699,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245700,"byte_end":8245760,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"/ [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245761,"byte_end":8245809,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/ [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245810,"byte_end":8245872,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245873,"byte_end":8245909,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245910,"byte_end":8245964,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/ [`task::current`]: fn.current.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8245965,"byte_end":8246003,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246004,"byte_end":8246034,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246035,"byte_end":8246083,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/ [`task_local!`]: ../macro.task_local.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246084,"byte_end":8246129,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/ [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/mod.rs","byte_start":8246130,"byte_end":8246176,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1110},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404881,"byte_end":8404890,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404278,"byte_end":8404339,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404340,"byte_end":8404343,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404344,"byte_end":8404422,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404423,"byte_end":8404500,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404501,"byte_end":8404578,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404579,"byte_end":8404582,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404583,"byte_end":8404621,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404622,"byte_end":8404625,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404626,"byte_end":8404678,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404679,"byte_end":8404682,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404683,"byte_end":8404697,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404698,"byte_end":8404701,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404702,"byte_end":8404718,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404719,"byte_end":8404722,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404723,"byte_end":8404730,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404731,"byte_end":8404770,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404771,"byte_end":8404776,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404777,"byte_end":8404801,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404802,"byte_end":8404805,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404806,"byte_end":8404834,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404835,"byte_end":8404840,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404841,"byte_end":8404849,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404850,"byte_end":8404857,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404858,"byte_end":8404867,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406243,"byte_end":8406251,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"pub fn block_on<F, T>(F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405559,"byte_end":8405621,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405622,"byte_end":8405625,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405626,"byte_end":8405725,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405726,"byte_end":8405764,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405765,"byte_end":8405768,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405769,"byte_end":8405808,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405809,"byte_end":8405812,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405813,"byte_end":8405865,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405866,"byte_end":8405869,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405870,"byte_end":8405936,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8405937,"byte_end":8406023,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406024,"byte_end":8406027,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406028,"byte_end":8406042,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406043,"byte_end":8406046,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406047,"byte_end":8406060,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406061,"byte_end":8406085,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406086,"byte_end":8406089,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406090,"byte_end":8406105,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406106,"byte_end":8406136,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406137,"byte_end":8406175,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406176,"byte_end":8406186,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406187,"byte_end":8406192,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406193,"byte_end":8406200,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/block_on.rs","byte_start":8406201,"byte_end":8406235,"line_start":28,"line_end":28,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1311},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8406911,"byte_end":8406918,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1312}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8406813,"byte_end":8406873,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8407032,"byte_end":8407035,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8406980,"byte_end":8407006,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8407011,"byte_end":8407020,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8407155,"byte_end":8407159,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"pub fn name(Self, String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8407093,"byte_end":8407129,"line_start":24,"line_end":24,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8407134,"byte_end":8407143,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8407778,"byte_end":8407783,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + Send + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8407680,"byte_end":8407727,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8407732,"byte_end":8407766,"line_start":49,"line_end":49,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8408445,"byte_end":8408450,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"local","qualname":"<Builder>::local","value":"pub fn local<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + 'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task locally with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task locally with the configured settings.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8408312,"byte_end":8408367,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"unstable\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8408372,"byte_end":8408433,"line_start":69,"line_end":69,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8410775,"byte_end":8410783,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"blocking","qualname":"<Builder>::blocking","value":"pub fn blocking<F, T>(Self, F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings, blocking on its execution.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings, blocking on its execution.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8410650,"byte_end":8410724,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8410729,"byte_end":8410763,"line_start":140,"line_end":140,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1178},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413431,"byte_end":8413438,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"pub fn current() -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8412901,"byte_end":8412942,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8412943,"byte_end":8412946,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8412947,"byte_end":8412959,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8412960,"byte_end":8412963,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8412964,"byte_end":8413060,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413061,"byte_end":8413098,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413099,"byte_end":8413102,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413103,"byte_end":8413137,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413138,"byte_end":8413166,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413167,"byte_end":8413223,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413224,"byte_end":8413227,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413228,"byte_end":8413242,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413243,"byte_end":8413246,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413247,"byte_end":8413254,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413255,"byte_end":8413294,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413295,"byte_end":8413300,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413301,"byte_end":8413325,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413326,"byte_end":8413329,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413330,"byte_end":8413400,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413401,"byte_end":8413406,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413407,"byte_end":8413415,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/current.rs","byte_start":8413416,"byte_end":8413423,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1324},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8413990,"byte_end":8414000,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327}],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8413699,"byte_end":8413745,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8413746,"byte_end":8413749,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8413750,"byte_end":8413833,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8413834,"byte_end":8413886,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8413887,"byte_end":8413890,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8413891,"byte_end":8413928,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8413929,"byte_end":8413932,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8413933,"byte_end":8413961,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414809,"byte_end":8414813,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"pub fn task(&Self) -> &Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414472,"byte_end":8414516,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414521,"byte_end":8414524,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414529,"byte_end":8414543,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414548,"byte_end":8414551,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414556,"byte_end":8414563,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414568,"byte_end":8414607,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414612,"byte_end":8414617,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414622,"byte_end":8414646,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414651,"byte_end":8414654,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414659,"byte_end":8414695,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414700,"byte_end":8414713,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414718,"byte_end":8414725,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414730,"byte_end":8414774,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414779,"byte_end":8414784,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414789,"byte_end":8414797,"line_start":48,"line_end":48,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414940,"byte_end":8414946,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"name":"cancel","qualname":"<JoinHandle<T>>::cancel","value":"pub async fn cancel(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cancel this task.\n","sig":null,"attributes":[{"value":"/ Cancel this task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414862,"byte_end":8414883,"line_start":53,"line_end":53,"column_start":5,"column_end":26}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414888,"byte_end":8414922,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1207},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416875,"byte_end":8416880,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"pub async fn sleep(Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416261,"byte_end":8416305,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416306,"byte_end":8416309,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416310,"byte_end":8416403,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416404,"byte_end":8416407,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416408,"byte_end":8416472,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416473,"byte_end":8416476,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416477,"byte_end":8416555,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416556,"byte_end":8416559,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416560,"byte_end":8416595,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416596,"byte_end":8416599,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416600,"byte_end":8416652,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416653,"byte_end":8416656,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416657,"byte_end":8416671,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416672,"byte_end":8416675,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416676,"byte_end":8416683,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416684,"byte_end":8416723,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416724,"byte_end":8416729,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416730,"byte_end":8416758,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416759,"byte_end":8416762,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416763,"byte_end":8416787,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416788,"byte_end":8416791,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416792,"byte_end":8416838,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416839,"byte_end":8416844,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416845,"byte_end":8416853,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/sleep.rs","byte_start":8416854,"byte_end":8416861,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1215},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417498,"byte_end":8417503,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> + Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417072,"byte_end":8417090,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417091,"byte_end":8417094,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417095,"byte_end":8417189,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417190,"byte_end":8417193,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417194,"byte_end":8417265,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417266,"byte_end":8417269,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417270,"byte_end":8417284,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417285,"byte_end":8417288,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417289,"byte_end":8417296,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417297,"byte_end":8417336,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417337,"byte_end":8417342,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417343,"byte_end":8417367,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417368,"byte_end":8417371,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417372,"byte_end":8417408,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417409,"byte_end":8417422,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417423,"byte_end":8417430,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417431,"byte_end":8417434,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417435,"byte_end":8417467,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417468,"byte_end":8417473,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417474,"byte_end":8417482,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn.rs","byte_start":8417483,"byte_end":8417490,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1222},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418460,"byte_end":8418474,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"spawn_blocking","qualname":"::task::spawn_blocking::spawn_blocking","value":"pub fn spawn_blocking<F, T>(F) -> JoinHandle<T> where F: FnOnce() -> T +\nSend + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a blocking task.","sig":null,"attributes":[{"value":"/ Spawns a blocking task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8417747,"byte_end":8417774,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8417775,"byte_end":8417778,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The task will be spawned onto a thread pool specifically dedicated to blocking tasks. This","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8417779,"byte_end":8417873,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ is useful to prevent long-running synchronous operations from blocking the main futures","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8417874,"byte_end":8417965,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"/ executor.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8417966,"byte_end":8417979,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8417980,"byte_end":8417983,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::block_on`], [`task::spawn`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8417984,"byte_end":8418034,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418035,"byte_end":8418038,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`task::block_on`]: fn.block_on.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418039,"byte_end":8418079,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`task::spawn`]: fn.spawn.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418080,"byte_end":8418114,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418115,"byte_end":8418118,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418119,"byte_end":8418133,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418134,"byte_end":8418137,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418138,"byte_end":8418154,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418155,"byte_end":8418158,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418159,"byte_end":8418166,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418167,"byte_end":8418201,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418202,"byte_end":8418241,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418242,"byte_end":8418247,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418248,"byte_end":8418272,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418273,"byte_end":8418276,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418277,"byte_end":8418306,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/     println!(\"long-running task here\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418307,"byte_end":8418350,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418351,"byte_end":8418357,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418358,"byte_end":8418369,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418370,"byte_end":8418375,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418376,"byte_end":8418384,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418385,"byte_end":8418392,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_blocking.rs","byte_start":8418443,"byte_end":8418452,"line_start":32,"line_end":32,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8418767,"byte_end":8418771,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8418715,"byte_end":8418738,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419152,"byte_end":8419154,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"pub fn id(&Self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419088,"byte_end":8419126,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419131,"byte_end":8419140,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419391,"byte_end":8419395,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419201,"byte_end":8419235,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419240,"byte_end":8419243,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419248,"byte_end":8419312,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419317,"byte_end":8419320,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419325,"byte_end":8419379,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1336},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8420072,"byte_end":8420078,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8419819,"byte_end":8419854,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8419855,"byte_end":8419858,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8419859,"byte_end":8419873,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8419874,"byte_end":8419877,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8419878,"byte_end":8419885,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8419886,"byte_end":8419910,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8419911,"byte_end":8419914,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8419915,"byte_end":8419941,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8419942,"byte_end":8419994,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8419995,"byte_end":8420001,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8420002,"byte_end":8420009,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1354},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421004,"byte_end":8421012,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8420818,"byte_end":8420863,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8420864,"byte_end":8420867,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8420868,"byte_end":8420960,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8420961,"byte_end":8420975,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1356},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421061,"byte_end":8421067,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1357},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421108,"byte_end":8421113,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422135,"byte_end":8422139,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421171,"byte_end":8421230,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421235,"byte_end":8421238,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421243,"byte_end":8421311,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421316,"byte_end":8421319,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421324,"byte_end":8421416,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421421,"byte_end":8421424,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421429,"byte_end":8421441,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421446,"byte_end":8421449,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421454,"byte_end":8421536,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421541,"byte_end":8421592,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421597,"byte_end":8421600,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421605,"byte_end":8421639,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421644,"byte_end":8421672,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421677,"byte_end":8421733,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421738,"byte_end":8421741,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421746,"byte_end":8421760,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421765,"byte_end":8421768,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421773,"byte_end":8421780,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421785,"byte_end":8421790,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421795,"byte_end":8421819,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421824,"byte_end":8421827,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421832,"byte_end":8421856,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421861,"byte_end":8421891,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421896,"byte_end":8421899,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421904,"byte_end":8421921,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421926,"byte_end":8421974,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421979,"byte_end":8421984,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421989,"byte_end":8421992,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421997,"byte_end":8422023,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422028,"byte_end":8422069,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422074,"byte_end":8422099,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422104,"byte_end":8422111,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422116,"byte_end":8422123,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423425,"byte_end":8423433,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422329,"byte_end":8422399,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422404,"byte_end":8422407,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422412,"byte_end":8422480,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422485,"byte_end":8422488,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422493,"byte_end":8422585,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422590,"byte_end":8422593,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422598,"byte_end":8422686,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422691,"byte_end":8422742,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422747,"byte_end":8422750,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422755,"byte_end":8422789,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422794,"byte_end":8422822,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422827,"byte_end":8422883,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422888,"byte_end":8422891,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422896,"byte_end":8422910,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422915,"byte_end":8422918,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422923,"byte_end":8422930,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422935,"byte_end":8422940,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422945,"byte_end":8422969,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422974,"byte_end":8422977,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8422982,"byte_end":8423006,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423011,"byte_end":8423041,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423046,"byte_end":8423049,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423054,"byte_end":8423071,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423076,"byte_end":8423121,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423126,"byte_end":8423131,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423136,"byte_end":8423139,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423144,"byte_end":8423170,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423175,"byte_end":8423217,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423222,"byte_end":8423251,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423256,"byte_end":8423263,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423268,"byte_end":8423271,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423276,"byte_end":8423348,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423353,"byte_end":8423401,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8423406,"byte_end":8423413,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1361},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8424958,"byte_end":8424969,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":1362}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8424791,"byte_end":8424839,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8424840,"byte_end":8424843,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8424844,"byte_end":8424908,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1392},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545871,"byte_end":8545882,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn_local::spawn_local","value":"pub fn spawn_local<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> +\n'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task onto the thread-local executor.","sig":null,"attributes":[{"value":"/ Spawns a task onto the thread-local executor.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545488,"byte_end":8545537,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545538,"byte_end":8545541,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545542,"byte_end":8545556,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545557,"byte_end":8545560,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545561,"byte_end":8545568,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545569,"byte_end":8545603,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545604,"byte_end":8545643,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545644,"byte_end":8545649,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545650,"byte_end":8545674,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545675,"byte_end":8545678,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn_local(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545679,"byte_end":8545721,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/     1 + 2","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545722,"byte_end":8545735,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545736,"byte_end":8545743,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545744,"byte_end":8545747,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545748,"byte_end":8545780,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545781,"byte_end":8545786,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545787,"byte_end":8545795,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545796,"byte_end":8545803,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/spawn_local.rs","byte_start":8545854,"byte_end":8545863,"line_start":24,"line_end":24,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":46},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1566},{"krate":0,"index":1587},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1619}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16763,"byte_end":16788,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Asynchronous values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8247684,"byte_end":8247708,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8247709,"byte_end":8247712,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Base Futures Concurrency","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8247713,"byte_end":8247744,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8247745,"byte_end":8247748,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Often it's desireable to await multiple futures as if it was a single","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8247749,"byte_end":8247822,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ future. The `join` family of operations converts multiple futures into a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8247823,"byte_end":8247899,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ single future that returns all of their outputs. The `race` family of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8247900,"byte_end":8247973,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ operations converts multiple future into a single future that returns the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8247974,"byte_end":8248051,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ first output.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248052,"byte_end":8248069,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248070,"byte_end":8248073,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For operating on futures the following functions can be used:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248074,"byte_end":8248139,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248140,"byte_end":8248143,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | Name               | Return signature | When does it return?     |","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248144,"byte_end":8248216,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ | ---                | ---              | ---                      |","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248217,"byte_end":8248289,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248290,"byte_end":8248360,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248361,"byte_end":8248428,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248429,"byte_end":8248432,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Fallible Futures Concurrency","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248433,"byte_end":8248468,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248469,"byte_end":8248472,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248473,"byte_end":8248552,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248553,"byte_end":8248639,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ and will behave slightly differently from their base variants.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248640,"byte_end":8248706,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248707,"byte_end":8248710,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248711,"byte_end":8248781,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ futures are dropped and an error is returned. This is referred to as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248782,"byte_end":8248854,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ \"short-circuiting\".","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248855,"byte_end":8248878,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248879,"byte_end":8248882,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_race`, instead of returning the first future that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248883,"byte_end":8248956,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ completes it returns the first future that _successfully_ completes. This","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8248957,"byte_end":8249034,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ means `try_race` will keep going until any one of the futures returns","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249035,"byte_end":8249108,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249109,"byte_end":8249156,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249157,"byte_end":8249160,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249161,"byte_end":8249241,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249242,"byte_end":8249322,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ work on `Result`, and their respective semantics:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249323,"byte_end":8249376,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249377,"byte_end":8249380,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ | Name                   | Return signature               | When does it return? |","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249381,"byte_end":8249467,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/ | ---                    | ---                            | ---                  |","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249468,"byte_end":8249554,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"/ | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249555,"byte_end":8249643,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249644,"byte_end":8249755,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"/ | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249756,"byte_end":8249841,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249842,"byte_end":8249946,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249947,"byte_end":8249950,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8249951,"byte_end":8250002,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8250003,"byte_end":8250062,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8250063,"byte_end":8250114,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/mod.rs","byte_start":8250115,"byte_end":8250174,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":9577},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/delay.rs","byte_start":8562027,"byte_end":8562038,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"DelayFuture","qualname":"::future::future::delay::DelayFuture","value":"DelayFuture {  }","parent":null,"children":[{"krate":0,"index":9579},{"krate":0,"index":9580}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/delay.rs","byte_start":8562160,"byte_end":8562163,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayFuture<F>>::new","value":"pub fn new(F, Duration) -> DelayFuture<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9536},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/flatten.rs","byte_start":8563046,"byte_end":8563059,"line_start":11,"line_end":11,"column_start":16,"column_end":29},"name":"FlattenFuture","qualname":"::future::future::flatten::FlattenFuture","value":"FlattenFuture {  }","parent":null,"children":[{"krate":0,"index":9539}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9444},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/race.rs","byte_start":8564774,"byte_end":8564778,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Race","qualname":"::future::future::race::Race","value":"Race {  }","parent":null,"children":[{"krate":0,"index":9447},{"krate":0,"index":9448}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9399},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/try_race.rs","byte_start":8566083,"byte_end":8566090,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryRace","qualname":"::future::future::try_race::TryRace","value":"TryRace {  }","parent":null,"children":[{"krate":0,"index":9402},{"krate":0,"index":9403}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9354},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/join.rs","byte_start":8567917,"byte_end":8567921,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Join","qualname":"::future::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":9357},{"krate":0,"index":9358}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9309},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/try_join.rs","byte_start":8569394,"byte_end":8569401,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryJoin","qualname":"::future::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":9312},{"krate":0,"index":9313}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1526},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8551685,"byte_end":8551694,"line_start":139,"line_end":139,"column_start":15,"column_end":24},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1537},{"krate":0,"index":1539},{"krate":0,"index":1544}],"decl_id":null,"docs":"        Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8552265,"byte_end":8552270,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"delay","qualname":"::future::future::FutureExt::delay","value":"pub fn delay(Self, Duration) -> DelayFuture<Self> where Self: Sized","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":" Returns a Future that delays execution for a specified time.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8552167,"byte_end":8552195,"line_start":154,"line_end":154,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8553023,"byte_end":8553030,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self)\n-> FlattenFuture<Self, <Self::Output as IntoFuture>::Future> where\nSelf: Sized, <Self as Future>::Output: IntoFuture","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":" Flatten out the execution of this future when the result itself\n can be converted into another future.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8552925,"byte_end":8552953,"line_start":177,"line_end":177,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8554454,"byte_end":8554458,"line_start":221,"line_end":221,"column_start":12,"column_end":16},"name":"race","qualname":"::future::future::FutureExt::race","value":"pub fn race<F>(Self, F) -> Race<Self, F> where Self: std::future::Future +\nSized, F: std::future::Future<Output = <Self as std::future::Future>::Output>","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"            Waits for one of two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8554356,"byte_end":8554384,"line_start":219,"line_end":219,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8556045,"byte_end":8556053,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"try_race","qualname":"::future::future::FutureExt::try_race","value":"pub fn try_race<F, T, E>(Self, F) -> TryRace<Self, F> where\nSelf: std::future::Future<Output = Result<T, E>> + Sized,\nF: std::future::Future<Output = <Self as std::future::Future>::Output>","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"            Waits for one of two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8555947,"byte_end":8555975,"line_start":265,"line_end":265,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8557223,"byte_end":8557227,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"join","qualname":"::future::future::FutureExt::join","value":"pub fn join<F>(Self, F) -> Join<Self, F> where Self: std::future::Future +\nSized, F: std::future::Future","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"            Waits for two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8557102,"byte_end":8557153,"line_start":302,"line_end":302,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8558711,"byte_end":8558719,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"try_join","qualname":"::future::future::FutureExt::try_join","value":"pub fn try_join<F, A, B, E>(Self, F) -> TryJoin<Self, F> where\nSelf: std::future::Future<Output = Result<A, E>> + Sized,\nF: std::future::Future<Output = Result<B, E>>","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"            Waits for two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8558590,"byte_end":8558641,"line_start":349,"line_end":349,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8559980,"byte_end":8559987,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"timeout","qualname":"::future::future::FutureExt::timeout","value":"pub fn timeout(Self, Duration) -> TimeoutFuture<Self> where Self: Sized","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"            Waits for both the future and a timeout, if the timeout completes before\n            the future, it returns an TimeoutError.","sig":null,"attributes":[{"value":"cfg(any(all(feature = \"default\", feature = \"unstable\"), feature = \"docs\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8559833,"byte_end":8559910,"line_start":388,"line_end":388,"column_start":9,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":1555},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571643,"byte_end":8571650,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"pub async fn pending<T>() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571251,"byte_end":8571281,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571282,"byte_end":8571285,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571286,"byte_end":8571300,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571301,"byte_end":8571304,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571305,"byte_end":8571312,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571313,"byte_end":8571352,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571353,"byte_end":8571358,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571359,"byte_end":8571387,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571388,"byte_end":8571391,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571392,"byte_end":8571418,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571419,"byte_end":8571441,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571442,"byte_end":8571445,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571446,"byte_end":8571483,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571484,"byte_end":8571516,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571517,"byte_end":8571520,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571521,"byte_end":8571579,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571580,"byte_end":8571606,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571607,"byte_end":8571612,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571613,"byte_end":8571621,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571622,"byte_end":8571629,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1572},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572585,"byte_end":8572592,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub async fn poll_fn<F, T>(F) -> /*impl Trait*/ where F: FnMut(&mut Context)\n-> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572070,"byte_end":8572141,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572142,"byte_end":8572145,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572146,"byte_end":8572212,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572213,"byte_end":8572216,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572217,"byte_end":8572231,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572232,"byte_end":8572235,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572236,"byte_end":8572243,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572244,"byte_end":8572283,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572284,"byte_end":8572289,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572290,"byte_end":8572316,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572317,"byte_end":8572358,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572359,"byte_end":8572362,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572363,"byte_end":8572422,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572423,"byte_end":8572469,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572470,"byte_end":8572475,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572476,"byte_end":8572479,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572480,"byte_end":8572548,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572549,"byte_end":8572554,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572555,"byte_end":8572563,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572564,"byte_end":8572571,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1588},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573421,"byte_end":8573426,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"pub async fn ready<T>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573032,"byte_end":8573067,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573068,"byte_end":8573071,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573072,"byte_end":8573140,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573141,"byte_end":8573144,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573145,"byte_end":8573231,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573232,"byte_end":8573235,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573236,"byte_end":8573250,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573251,"byte_end":8573254,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573255,"byte_end":8573262,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573263,"byte_end":8573302,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573303,"byte_end":8573308,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573309,"byte_end":8573335,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573336,"byte_end":8573339,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573340,"byte_end":8573384,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573385,"byte_end":8573390,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573391,"byte_end":8573399,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/ready.rs","byte_start":8573400,"byte_end":8573407,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251522,"byte_end":8251529,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8250994,"byte_end":8251052,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251053,"byte_end":8251056,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251057,"byte_end":8251110,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251111,"byte_end":8251162,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251163,"byte_end":8251166,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251167,"byte_end":8251181,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251182,"byte_end":8251185,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251186,"byte_end":8251193,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251194,"byte_end":8251268,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251269,"byte_end":8251274,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251275,"byte_end":8251303,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251304,"byte_end":8251307,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251308,"byte_end":8251334,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251335,"byte_end":8251338,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251339,"byte_end":8251379,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251380,"byte_end":8251419,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251420,"byte_end":8251476,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251477,"byte_end":8251482,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251483,"byte_end":8251500,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251501,"byte_end":8251508,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9272},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251747,"byte_end":8251760,"line_start":41,"line_end":41,"column_start":16,"column_end":29},"name":"TimeoutFuture","qualname":"::future::timeout::TimeoutFuture","value":"TimeoutFuture {  }","parent":null,"children":[{"krate":0,"index":9274},{"krate":0,"index":9275}],"decl_id":null,"docs":" A future that times out after a duration of time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1592},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8252692,"byte_end":8252704,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":1593}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8252589,"byte_end":8252635,"line_start":74,"line_end":74,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":1610},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574220,"byte_end":8574230,"line_start":35,"line_end":35,"column_start":11,"column_end":21},"name":"IntoFuture","qualname":"::future::into_future::IntoFuture","value":"IntoFuture","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"decl_id":null,"docs":" Convert a type into a `Future`.","sig":null,"attributes":[{"value":"/ Convert a type into a `Future`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573502,"byte_end":8573537,"line_start":3,"line_end":3,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573538,"byte_end":8573541,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573542,"byte_end":8573556,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573557,"byte_end":8573560,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573561,"byte_end":8573568,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use async_std::future::{Future, IntoFuture};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573569,"byte_end":8573617,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573618,"byte_end":8573640,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/ use async_std::pin::Pin;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573641,"byte_end":8573669,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573670,"byte_end":8573673,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ struct Client;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573674,"byte_end":8573692,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573693,"byte_end":8573696,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ impl Client {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573697,"byte_end":8573714,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/     pub async fn send(self) -> io::Result<()> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573715,"byte_end":8573766,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/         // Send a request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573767,"byte_end":8573796,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/         Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573797,"byte_end":8573815,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573816,"byte_end":8573825,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573826,"byte_end":8573831,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573832,"byte_end":8573835,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ impl IntoFuture for Client {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573836,"byte_end":8573868,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/     type Output = io::Result<()>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573869,"byte_end":8573906,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573907,"byte_end":8573910,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Self::Output>>>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573911,"byte_end":8573977,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573978,"byte_end":8573981,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     fn into_future(self) -> Self::Future {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8573982,"byte_end":8574028,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/         Box::pin(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574029,"byte_end":8574057,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/             self.send().await","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574058,"byte_end":8574091,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/         })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574092,"byte_end":8574106,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574107,"byte_end":8574116,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574117,"byte_end":8574122,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574123,"byte_end":8574130,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574131,"byte_end":8574159,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1611},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574292,"byte_end":8574298,"line_start":37,"line_end":37,"column_start":10,"column_end":16},"name":"Output","qualname":"::future::into_future::IntoFuture::Output","value":"type Output;","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" The type of value produced on completion.\n","sig":null,"attributes":[{"value":"/ The type of value produced on completion.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574237,"byte_end":8574282,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1612},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574365,"byte_end":8574371,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Future","qualname":"::future::into_future::IntoFuture::Future","value":"type Future: Future<Output = Self::Output>;","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" Which kind of future are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of future are we turning this into?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574305,"byte_end":8574355,"line_start":39,"line_end":39,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574449,"byte_end":8574460,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::into_future::IntoFuture::into_future","value":"pub fn into_future(Self) -> Self::Future","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" Create a future from a value\n","sig":null,"attributes":[{"value":"/ Create a future from a value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574409,"byte_end":8574441,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":78},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":1005},{"krate":0,"index":1018},{"krate":0,"index":1034},{"krate":0,"index":1051},{"krate":0,"index":1068},{"krate":0,"index":1080},{"krate":0,"index":2034},{"krate":0,"index":2160},{"krate":0,"index":2167},{"krate":0,"index":2183},{"krate":0,"index":2192},{"krate":0,"index":2197},{"krate":0,"index":2212},{"krate":0,"index":2223},{"krate":0,"index":2248},{"krate":0,"index":2262},{"krate":0,"index":2278},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2311}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16763,"byte_end":16788,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Composable asynchronous iteration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8252993,"byte_end":8253031,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253032,"byte_end":8253035,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::iter`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253036,"byte_end":8253089,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253090,"byte_end":8253093,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253094,"byte_end":8253168,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ and needed to perform an operation on the elements of said collection,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253169,"byte_end":8253243,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253244,"byte_end":8253320,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253321,"byte_end":8253391,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253392,"byte_end":8253395,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Before explaining more, let's talk about how this module is structured:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253396,"byte_end":8253471,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253472,"byte_end":8253475,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253476,"byte_end":8253494,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253495,"byte_end":8253498,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This module is largely organized by type:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253499,"byte_end":8253544,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253545,"byte_end":8253548,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253549,"byte_end":8253626,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253627,"byte_end":8253707,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   putting some extra study time into.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253708,"byte_end":8253749,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253750,"byte_end":8253823,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ * [Structs] are often the return types of the various methods on this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253824,"byte_end":8253897,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253898,"byte_end":8253975,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8253976,"byte_end":8254055,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254056,"byte_end":8254112,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254113,"byte_end":8254116,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [Traits]: #traits","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254117,"byte_end":8254138,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ [Functions]: #functions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254139,"byte_end":8254166,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ [Structs]: #structs","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254167,"byte_end":8254190,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254191,"byte_end":8254194,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ That's it! Let's dig into streams.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254195,"byte_end":8254233,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254234,"byte_end":8254237,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Stream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254238,"byte_end":8254250,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254251,"byte_end":8254254,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254255,"byte_end":8254329,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ [`Stream`] looks like this:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254330,"byte_end":8254361,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254362,"byte_end":8254365,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254366,"byte_end":8254373,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254374,"byte_end":8254417,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254418,"byte_end":8254442,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ trait Stream {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254443,"byte_end":8254461,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/     type Item;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254462,"byte_end":8254480,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254481,"byte_end":8254574,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254575,"byte_end":8254580,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254581,"byte_end":8254588,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254589,"byte_end":8254592,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ A stream has a method, [`next`], which when called, returns an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254593,"byte_end":8254659,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254660,"byte_end":8254734,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254735,"byte_end":8254811,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254812,"byte_end":8254889,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ something asynchronous to resolve `Pending` is returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254890,"byte_end":8254950,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254951,"byte_end":8254954,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Individual streams may choose to resume iteration, and so calling","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8254955,"byte_end":8255024,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255025,"byte_end":8255105,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ again at some point.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255106,"byte_end":8255130,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255131,"byte_end":8255134,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255135,"byte_end":8255211,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255212,"byte_end":8255286,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ them for free.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255287,"byte_end":8255305,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255306,"byte_end":8255309,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Streams are also composable, and it's common to chain them together to do","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255310,"byte_end":8255387,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255388,"byte_end":8255463,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ below for more details.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255464,"byte_end":8255491,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255492,"byte_end":8255495,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255496,"byte_end":8255532,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255533,"byte_end":8255566,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255567,"byte_end":8255612,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255613,"byte_end":8255662,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255663,"byte_end":8255666,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # The three forms of streaming","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255667,"byte_end":8255701,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255702,"byte_end":8255705,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ There are three common methods which can create streams from a collection:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255706,"byte_end":8255784,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255785,"byte_end":8255788,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `stream()`, which iterates over `&T`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255789,"byte_end":8255832,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/ * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255833,"byte_end":8255884,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ * `into_stream()`, which iterates over `T`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255885,"byte_end":8255932,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255933,"byte_end":8255936,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Various things in async-std may implement one or more of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8255937,"byte_end":8256001,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ three, where appropriate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256002,"byte_end":8256031,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256032,"byte_end":8256035,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Implementing Stream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256036,"byte_end":8256061,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256062,"byte_end":8256065,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256066,"byte_end":8256142,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256143,"byte_end":8256215,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256216,"byte_end":8256294,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ one for each stream and iterator adapter.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256295,"byte_end":8256340,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256341,"byte_end":8256344,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256345,"byte_end":8256414,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256415,"byte_end":8256418,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256419,"byte_end":8256426,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256427,"byte_end":8256459,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256460,"byte_end":8256503,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256504,"byte_end":8256528,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/ // First, the struct:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256529,"byte_end":8256554,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256555,"byte_end":8256558,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ /// A stream which counts from one to five","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256559,"byte_end":8256605,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/ struct Counter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256606,"byte_end":8256626,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"/     count: usize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256627,"byte_end":8256648,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256649,"byte_end":8256654,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256655,"byte_end":8256658,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256659,"byte_end":8256737,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256738,"byte_end":8256813,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256814,"byte_end":8256887,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ impl Counter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256888,"byte_end":8256906,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/     fn new() -> Counter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256907,"byte_end":8256936,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"/         Counter { count: 0 }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256937,"byte_end":8256969,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256970,"byte_end":8256979,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256980,"byte_end":8256985,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256986,"byte_end":8256989,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8256990,"byte_end":8257043,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257044,"byte_end":8257047,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ impl Stream for Counter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257048,"byte_end":8257077,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/     // we will be counting with usize","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257078,"byte_end":8257119,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/     type Item = usize;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257120,"byte_end":8257146,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257147,"byte_end":8257150,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     // poll_next() is the only required method","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257151,"byte_end":8257201,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257202,"byte_end":8257300,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/         // Increment our count. This is why we started at zero.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257301,"byte_end":8257368,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/         self.count += 1;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257369,"byte_end":8257397,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257398,"byte_end":8257401,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/         // Check to see if we've finished counting or not.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257402,"byte_end":8257464,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/         if self.count < 6 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257465,"byte_end":8257496,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"/             Poll::Ready(Some(self.count))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257497,"byte_end":8257542,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/         } else {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257543,"byte_end":8257563,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257564,"byte_end":8257597,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257598,"byte_end":8257611,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257612,"byte_end":8257621,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257622,"byte_end":8257627,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257628,"byte_end":8257631,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257632,"byte_end":8257661,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257662,"byte_end":8257736,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257737,"byte_end":8257742,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ let mut counter = Counter::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257743,"byte_end":8257780,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257781,"byte_end":8257784,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257785,"byte_end":8257827,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257828,"byte_end":8257850,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257851,"byte_end":8257854,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257855,"byte_end":8257897,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257898,"byte_end":8257920,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257921,"byte_end":8257924,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257925,"byte_end":8257967,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257968,"byte_end":8257990,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257991,"byte_end":8257994,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8257995,"byte_end":8258037,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258038,"byte_end":8258060,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258061,"byte_end":8258064,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258065,"byte_end":8258107,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258108,"byte_end":8258130,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258131,"byte_end":8258136,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258137,"byte_end":8258154,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258155,"byte_end":8258162,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258163,"byte_end":8258166,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This will print `1` through `5`, each on their own line.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258167,"byte_end":8258227,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258228,"byte_end":8258231,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258232,"byte_end":8258311,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258312,"byte_end":8258388,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ that next.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258389,"byte_end":8258403,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258404,"byte_end":8258407,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # while let Loops and IntoStream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258408,"byte_end":8258444,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258445,"byte_end":8258448,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258449,"byte_end":8258543,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"/ example of `while let`:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258544,"byte_end":8258571,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258572,"byte_end":8258575,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258576,"byte_end":8258583,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258584,"byte_end":8258658,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258659,"byte_end":8258664,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258665,"byte_end":8258697,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258698,"byte_end":8258726,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"/ let mut values = stream::repeat(1u8).take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258727,"byte_end":8258776,"line_start":167,"line_end":167,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258777,"byte_end":8258780,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = values.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258781,"byte_end":8258826,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258827,"byte_end":8258853,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258854,"byte_end":8258859,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258860,"byte_end":8258865,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258866,"byte_end":8258883,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258884,"byte_end":8258891,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258892,"byte_end":8258895,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers one through five, each on their own line. But","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258896,"byte_end":8258973,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ you'll notice something here: we never called anything on our vector to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8258974,"byte_end":8259049,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ produce a stream. What gives?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259050,"byte_end":8259083,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259084,"byte_end":8259087,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ There's a trait in the standard library for converting something into an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259088,"byte_end":8259164,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259165,"byte_end":8259236,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"/ which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259237,"byte_end":8259308,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259309,"byte_end":8259312,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259313,"byte_end":8259386,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259387,"byte_end":8259463,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"/ doesn't occur yet, and `into_stream` will always have to be called manually.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259464,"byte_end":8259544,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259545,"byte_end":8259548,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259549,"byte_end":8259590,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259591,"byte_end":8259654,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259655,"byte_end":8259658,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Adapters","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259659,"byte_end":8259673,"line_start":191,"line_end":191,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259674,"byte_end":8259677,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259678,"byte_end":8259750,"line_start":193,"line_end":193,"column_start":1,"column_end":73}},{"value":"/ often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259751,"byte_end":8259821,"line_start":194,"line_end":194,"column_start":1,"column_end":71}},{"value":"/ pattern'.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259822,"byte_end":8259835,"line_start":195,"line_end":195,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259836,"byte_end":8259839,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259840,"byte_end":8259909,"line_start":197,"line_end":197,"column_start":1,"column_end":70}},{"value":"/ For more, see their documentation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259910,"byte_end":8259948,"line_start":198,"line_end":198,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259949,"byte_end":8259952,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259953,"byte_end":8259994,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8259995,"byte_end":8260038,"line_start":201,"line_end":201,"column_start":1,"column_end":44}},{"value":"/ [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260039,"byte_end":8260086,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260087,"byte_end":8260090,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ # Laziness","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260091,"byte_end":8260105,"line_start":204,"line_end":204,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260106,"byte_end":8260109,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260110,"byte_end":8260184,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"/ just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260185,"byte_end":8260260,"line_start":207,"line_end":207,"column_start":1,"column_end":76}},{"value":"/ until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260261,"byte_end":8260334,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"/ creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260335,"byte_end":8260410,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"/ method calls a closure on each element it iterates over:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260411,"byte_end":8260471,"line_start":210,"line_end":210,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260472,"byte_end":8260475,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260476,"byte_end":8260483,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260484,"byte_end":8260516,"line_start":213,"line_end":213,"column_start":1,"column_end":33}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260517,"byte_end":8260591,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260592,"byte_end":8260597,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260598,"byte_end":8260630,"line_start":216,"line_end":216,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260631,"byte_end":8260659,"line_start":217,"line_end":217,"column_start":1,"column_end":29}},{"value":"/ let v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260660,"byte_end":8260700,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/ v.map(|x| println!(\"{}\", x));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260701,"byte_end":8260734,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260735,"byte_end":8260740,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260741,"byte_end":8260758,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260759,"byte_end":8260766,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260767,"byte_end":8260770,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ This will not print any values, as we only created a stream, rather than","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260771,"byte_end":8260847,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260848,"byte_end":8260916,"line_start":225,"line_end":225,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260917,"byte_end":8260920,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260921,"byte_end":8260932,"line_start":227,"line_end":227,"column_start":1,"column_end":12}},{"value":"/ warning: unused result that must be used: streams are lazy and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8260933,"byte_end":8260999,"line_start":228,"line_end":228,"column_start":1,"column_end":67}},{"value":"/ do nothing unless consumed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261000,"byte_end":8261030,"line_start":229,"line_end":229,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261031,"byte_end":8261038,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261039,"byte_end":8261042,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261043,"byte_end":8261116,"line_start":232,"line_end":232,"column_start":1,"column_end":74}},{"value":"/ `while let` loop instead:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261117,"byte_end":8261146,"line_start":233,"line_end":233,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261147,"byte_end":8261150,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261151,"byte_end":8261158,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261159,"byte_end":8261233,"line_start":236,"line_end":236,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261234,"byte_end":8261239,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261240,"byte_end":8261272,"line_start":238,"line_end":238,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261273,"byte_end":8261301,"line_start":239,"line_end":239,"column_start":1,"column_end":29}},{"value":"/ let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261302,"byte_end":8261346,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261347,"byte_end":8261350,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = &v.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261351,"byte_end":8261392,"line_start":242,"line_end":242,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261393,"byte_end":8261419,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261420,"byte_end":8261425,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261426,"byte_end":8261431,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261432,"byte_end":8261449,"line_start":246,"line_end":246,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261450,"byte_end":8261457,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261458,"byte_end":8261461,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261462,"byte_end":8261503,"line_start":249,"line_end":249,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261504,"byte_end":8261507,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261508,"byte_end":8261587,"line_start":251,"line_end":251,"column_start":1,"column_end":80}},{"value":"/ like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261588,"byte_end":8261663,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261664,"byte_end":8261667,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261668,"byte_end":8261717,"line_start":254,"line_end":254,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261718,"byte_end":8261721,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Infinity","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261722,"byte_end":8261736,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261737,"byte_end":8261740,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Streams do not have to be finite. As an example, an repeat stream is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261741,"byte_end":8261813,"line_start":258,"line_end":258,"column_start":1,"column_end":73}},{"value":"/ an infinite stream:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261814,"byte_end":8261837,"line_start":259,"line_end":259,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261838,"byte_end":8261841,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261842,"byte_end":8261849,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261850,"byte_end":8261878,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261879,"byte_end":8261917,"line_start":263,"line_end":263,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261918,"byte_end":8261925,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261926,"byte_end":8261929,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8261930,"byte_end":8262001,"line_start":266,"line_end":266,"column_start":1,"column_end":72}},{"value":"/ stream into a finite one:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262002,"byte_end":8262031,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262032,"byte_end":8262035,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262036,"byte_end":8262043,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262044,"byte_end":8262118,"line_start":270,"line_end":270,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262119,"byte_end":8262124,"line_start":271,"line_end":271,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262125,"byte_end":8262157,"line_start":272,"line_end":272,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262158,"byte_end":8262186,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262187,"byte_end":8262225,"line_start":274,"line_end":274,"column_start":1,"column_end":39}},{"value":"/ let mut five_numbers = numbers.take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262226,"byte_end":8262269,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262270,"byte_end":8262273,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ while let Some(number) = five_numbers.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262274,"byte_end":8262330,"line_start":277,"line_end":277,"column_start":1,"column_end":57}},{"value":"/     println!(\"{}\", number);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262331,"byte_end":8262362,"line_start":278,"line_end":278,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262363,"byte_end":8262368,"line_start":279,"line_end":279,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262369,"byte_end":8262374,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262375,"byte_end":8262392,"line_start":281,"line_end":281,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262393,"byte_end":8262400,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262401,"byte_end":8262404,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262405,"byte_end":8262477,"line_start":284,"line_end":284,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262478,"byte_end":8262481,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262482,"byte_end":8262555,"line_start":286,"line_end":286,"column_start":1,"column_end":74}},{"value":"/ result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262556,"byte_end":8262634,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"/ Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262635,"byte_end":8262711,"line_start":288,"line_end":288,"column_start":1,"column_end":77}},{"value":"/ traversing every element in the stream, are likely not to return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262712,"byte_end":8262780,"line_start":289,"line_end":289,"column_start":1,"column_end":69}},{"value":"/ successfully for any infinite streams.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262781,"byte_end":8262823,"line_start":290,"line_end":290,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262824,"byte_end":8262827,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262828,"byte_end":8262841,"line_start":292,"line_end":292,"column_start":1,"column_end":14}},{"value":"/ let ones = async_std::stream::repeat(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262842,"byte_end":8262886,"line_start":293,"line_end":293,"column_start":1,"column_end":45}},{"value":"/ let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262887,"byte_end":8262957,"line_start":294,"line_end":294,"column_start":1,"column_end":71}},{"value":"/ // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8262958,"byte_end":8263032,"line_start":295,"line_end":295,"column_start":1,"column_end":75}},{"value":"/ println!(\"The smallest number one is {}.\", least);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263033,"byte_end":8263087,"line_start":296,"line_end":296,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263088,"byte_end":8263095,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263096,"byte_end":8263099,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263100,"byte_end":8263164,"line_start":299,"line_end":299,"column_start":1,"column_end":65}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263165,"byte_end":8263208,"line_start":300,"line_end":300,"column_start":1,"column_end":44}},{"value":"/ [`min`]: trait.Stream.html#method.min","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/mod.rs","byte_start":8263209,"byte_end":8263250,"line_start":301,"line_end":301,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":107},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/all.rs","byte_start":8337952,"byte_end":8337961,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/all.rs","byte_start":8337901,"byte_end":8337940,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/any.rs","byte_start":8339360,"byte_end":8339369,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/any.rs","byte_start":8339309,"byte_end":8339348,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9230},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/chain.rs","byte_start":8341069,"byte_end":8341074,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9233},{"krate":0,"index":9234}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9192},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cloned.rs","byte_start":8342462,"byte_end":8342468,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":9194}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9134},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cmp.rs","byte_start":8343425,"byte_end":8343434,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":9137},{"krate":0,"index":9138},{"krate":0,"index":9139},{"krate":0,"index":9140}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9103},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/copied.rs","byte_start":8346209,"byte_end":8346215,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":9105}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9063},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cycle.rs","byte_start":8347007,"byte_end":8347012,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":9065},{"krate":0,"index":9066}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9023},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/enumerate.rs","byte_start":8347938,"byte_end":8347947,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":9025},{"krate":0,"index":9026}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8973},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/eq.rs","byte_start":8349066,"byte_end":8349074,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":8976},{"krate":0,"index":8977}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8931},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/filter.rs","byte_start":8350676,"byte_end":8350682,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":8934},{"krate":0,"index":8935}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8882},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/filter_map.rs","byte_start":8351708,"byte_end":8351717,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":8885},{"krate":0,"index":8886}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":319},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find.rs","byte_start":8352740,"byte_end":8352750,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find.rs","byte_start":8352689,"byte_end":8352728,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find_map.rs","byte_start":8353777,"byte_end":8353790,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find_map.rs","byte_start":8353726,"byte_end":8353765,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8822},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/fold.rs","byte_start":8354910,"byte_end":8354920,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":8826},{"krate":0,"index":8827},{"krate":0,"index":8828}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8768},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/for_each.rs","byte_start":8356161,"byte_end":8356174,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":8771},{"krate":0,"index":8772}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8730},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/fuse.rs","byte_start":8357400,"byte_end":8357404,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8732},{"krate":0,"index":8733}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8684},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/ge.rs","byte_start":8358608,"byte_end":8358616,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":8687}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8643},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/gt.rs","byte_start":8359891,"byte_end":8359899,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":8646}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8601},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/inspect.rs","byte_start":8361178,"byte_end":8361185,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":8604},{"krate":0,"index":8605}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8549},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/last.rs","byte_start":8362096,"byte_end":8362106,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":8552},{"krate":0,"index":8553}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8508},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/le.rs","byte_start":8363364,"byte_end":8363372,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":8511}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8467},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/lt.rs","byte_start":8364657,"byte_end":8364665,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":8470}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8425},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/map.rs","byte_start":8365713,"byte_end":8365716,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8428},{"krate":0,"index":8429}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8373},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max.rs","byte_start":8366579,"byte_end":8366588,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":8376},{"krate":0,"index":8377}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8316},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max_by.rs","byte_start":8367909,"byte_end":8367920,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":8320},{"krate":0,"index":8321},{"krate":0,"index":8322}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8259},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max_by_key.rs","byte_start":8369390,"byte_end":8369404,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":8263},{"krate":0,"index":8264},{"krate":0,"index":8265}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8214},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min.rs","byte_start":8371109,"byte_end":8371118,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":8217},{"krate":0,"index":8218}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8157},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min_by.rs","byte_start":8372436,"byte_end":8372447,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":8161},{"krate":0,"index":8162},{"krate":0,"index":8163}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8100},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min_by_key.rs","byte_start":8373944,"byte_end":8373958,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":8104},{"krate":0,"index":8105},{"krate":0,"index":8106}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8055},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/ne.rs","byte_start":8375783,"byte_end":8375791,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":8058},{"krate":0,"index":8059}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":701},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/next.rs","byte_start":8377156,"byte_end":8377166,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":704}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/next.rs","byte_start":8377105,"byte_end":8377144,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/nth.rs","byte_start":8377665,"byte_end":8377674,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/nth.rs","byte_start":8377614,"byte_end":8377653,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8002},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/partial_cmp.rs","byte_start":8378970,"byte_end":8378986,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":8005},{"krate":0,"index":8006},{"krate":0,"index":8007},{"krate":0,"index":8008}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":759},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/position.rs","byte_start":8381809,"byte_end":8381823,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/position.rs","byte_start":8381758,"byte_end":8381797,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7953},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/scan.rs","byte_start":8383345,"byte_end":8383349,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":7957},{"krate":0,"index":7958}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7909},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/skip.rs","byte_start":8384615,"byte_end":8384619,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7911},{"krate":0,"index":7912}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7862},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/skip_while.rs","byte_start":8385884,"byte_end":8385893,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7865},{"krate":0,"index":7866}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7816},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/step_by.rs","byte_start":8387486,"byte_end":8387492,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":7818},{"krate":0,"index":7819},{"krate":0,"index":7820}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7773},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/take.rs","byte_start":8388953,"byte_end":8388957,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7775},{"krate":0,"index":7776}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7726},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/take_while.rs","byte_start":8390241,"byte_end":8390250,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7729},{"krate":0,"index":7730}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":883},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_fold.rs","byte_start":8391314,"byte_end":8391327,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_fold.rs","byte_start":8391263,"byte_end":8391302,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":917},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_for_each.rs","byte_start":8392706,"byte_end":8392722,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_for_each.rs","byte_start":8392655,"byte_end":8392694,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7670},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/zip.rs","byte_start":8394124,"byte_end":8394127,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":7673},{"krate":0,"index":7674},{"krate":0,"index":7675}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7633},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/count.rs","byte_start":8607718,"byte_end":8607729,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"name":"CountFuture","qualname":"::stream::stream::count::CountFuture","value":"CountFuture {  }","parent":null,"children":[{"krate":0,"index":7635},{"krate":0,"index":7636}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7591},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/merge.rs","byte_start":8609077,"byte_end":8609082,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":7594},{"krate":0,"index":7595}],"decl_id":null,"docs":" A stream that merges two other streams into a single stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7547},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flatten.rs","byte_start":8610891,"byte_end":8610898,"line_start":18,"line_end":18,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7549},{"krate":0,"index":7550}],"decl_id":null,"docs":" A stream that flattens one level of nesting in an stream of things that can be turned into\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7494},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flat_map.rs","byte_start":8613116,"byte_end":8613123,"line_start":19,"line_end":19,"column_start":16,"column_end":23},"name":"FlatMap","qualname":"::stream::stream::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":7498},{"krate":0,"index":7499}],"decl_id":null,"docs":" A stream that maps each element to a stream, and yields the elements of the produced\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7441},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/partition.rs","byte_start":8614688,"byte_end":8614703,"line_start":13,"line_end":13,"column_start":16,"column_end":31},"name":"PartitionFuture","qualname":"::stream::stream::partition::PartitionFuture","value":"PartitionFuture {  }","parent":null,"children":[{"krate":0,"index":7445},{"krate":0,"index":7446},{"krate":0,"index":7447}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7393},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8616222,"byte_end":8616229,"line_start":16,"line_end":16,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7395},{"krate":0,"index":7396},{"krate":0,"index":7397}],"decl_id":null,"docs":" A stream with timeout time set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1855},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8617437,"byte_end":8617449,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::stream::stream::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":1856}],"decl_id":null,"docs":" An error returned when a stream times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a stream times out.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8617232,"byte_end":8617278,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8617329,"byte_end":8617380,"line_start":56,"line_end":56,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7343},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/throttle.rs","byte_start":8618315,"byte_end":8618323,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::stream::stream::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":7345},{"krate":0,"index":7346},{"krate":0,"index":7347},{"krate":0,"index":7348}],"decl_id":null,"docs":" A stream that only yields one element once every `duration`.","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7302},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/delay.rs","byte_start":8619894,"byte_end":8619899,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Delay","qualname":"::stream::stream::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":7304},{"krate":0,"index":7305},{"krate":0,"index":7306}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7248},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/unzip.rs","byte_start":8620931,"byte_end":8620942,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"UnzipFuture","qualname":"::stream::stream::unzip::UnzipFuture","value":"UnzipFuture {  }","parent":null,"children":[{"krate":0,"index":7252},{"krate":0,"index":7253}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1881},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8270243,"byte_end":8270252,"line_start":237,"line_end":237,"column_start":15,"column_end":24},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1895},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1966},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":1978},{"krate":0,"index":1980},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1998}],"decl_id":null,"docs":"        Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8271087,"byte_end":8271091,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> NextFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8271771,"byte_end":8271775,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8272504,"byte_end":8272514,"line_start":318,"line_end":318,"column_start":12,"column_end":22},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<P>(Self, P) -> TakeWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8273833,"byte_end":8273841,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"throttle","qualname":"::stream::stream::StreamExt::throttle","value":"pub fn throttle(Self, Duration) -> Throttle<Self> where Self: Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Limit the amount of items yielded per timeslice in a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8273735,"byte_end":8273763,"line_start":358,"line_end":358,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8274755,"byte_end":8274762,"line_start":396,"line_end":396,"column_start":12,"column_end":19},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"pub fn step_by(Self, usize) -> StepBy<Self> where Self: Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8275682,"byte_end":8275687,"line_start":430,"line_end":430,"column_start":12,"column_end":17},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8276571,"byte_end":8276577,"line_start":464,"line_end":464,"column_start":12,"column_end":18},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Clone + 'a","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8277443,"byte_end":8277449,"line_start":497,"line_end":497,"column_start":12,"column_end":18},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Copy + 'a","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8278293,"byte_end":8278298,"line_start":529,"line_end":529,"column_start":12,"column_end":17},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Clone + Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8279208,"byte_end":8279217,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8280548,"byte_end":8280553,"line_start":603,"line_end":603,"column_start":12,"column_end":17},"name":"delay","qualname":"::stream::stream::StreamExt::delay","value":"pub fn delay(Self, std::time::Duration) -> Delay<Self> where Self: Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates a stream that is delayed before it starts yielding items.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8280427,"byte_end":8280478,"line_start":601,"line_end":601,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8281374,"byte_end":8281377,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<B, F>(Self, F) -> Map<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> B","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8282317,"byte_end":8282324,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> ()","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            A combinator that does something with each element in the stream, passing the value\n            on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8283373,"byte_end":8283377,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"pub fn last(Self) -> LastFuture<Self, Self::Item> where Self: Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8284336,"byte_end":8284340,"line_start":745,"line_end":745,"column_start":12,"column_end":16},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8285106,"byte_end":8285112,"line_start":775,"line_end":775,"column_start":12,"column_end":18},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8286328,"byte_end":8286336,"line_start":815,"line_end":815,"column_start":12,"column_end":20},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where Self: Sized,\nU: IntoStream, F: FnMut(Self::Item) -> U","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates an stream that works like map, but flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8286230,"byte_end":8286258,"line_start":813,"line_end":813,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8287249,"byte_end":8287256,"line_start":849,"line_end":849,"column_start":12,"column_end":19},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self: Sized,\nSelf::Item: IntoStream","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates an stream that flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8287151,"byte_end":8287179,"line_start":847,"line_end":847,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8288236,"byte_end":8288246,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<B, F>(Self, F) -> FilterMap<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8289235,"byte_end":8289245,"line_start":922,"line_end":922,"column_start":12,"column_end":22},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"pub fn min_by_key<B, F>(Self, F) -> MinByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Returns the element that gives the minimum value with respect to the\n            specified key function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8290364,"byte_end":8290374,"line_start":958,"line_end":958,"column_start":12,"column_end":22},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"pub fn max_by_key<B, F>(Self, F) -> MaxByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Returns the element that gives the maximum value with respect to the\n            specified key function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8291578,"byte_end":8291584,"line_start":997,"line_end":997,"column_start":12,"column_end":18},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"pub fn min_by<F>(Self, F) -> MinByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Returns the element that gives the minimum value with respect to the\n            specified comparison function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8292595,"byte_end":8292598,"line_start":1031,"line_end":1031,"column_start":12,"column_end":15},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"pub fn max(Self) -> MaxFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Returns the element that gives the maximum value. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8293543,"byte_end":8293546,"line_start":1064,"line_end":1064,"column_start":12,"column_end":15},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"pub fn min(Self) -> MinFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Returns the element that gives the minimum value. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8294673,"byte_end":8294679,"line_start":1101,"line_end":1101,"column_start":12,"column_end":18},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"pub fn max_by<F>(Self, F) -> MaxByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Returns the element that gives the maximum value with respect to the\n            specified comparison function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8296404,"byte_end":8296407,"line_start":1165,"line_end":1165,"column_start":12,"column_end":15},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"pub fn nth(&mut Self, usize) -> NthFuture<, Self> where Self: Unpin + Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8297997,"byte_end":8298000,"line_start":1221,"line_end":1221,"column_start":12,"column_end":15},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8297976,"byte_end":8297985,"line_start":1220,"line_end":1220,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8299285,"byte_end":8299289,"line_start":1270,"line_end":1270,"column_start":12,"column_end":16},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"pub fn find<P>(&mut Self, P) -> FindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8300110,"byte_end":8300118,"line_start":1298,"line_end":1298,"column_start":12,"column_end":20},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"pub fn find_map<F, B>(&mut Self, F) -> FindMapFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8300978,"byte_end":8300982,"line_start":1331,"line_end":1331,"column_start":12,"column_end":16},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            A combinator that applies a function to every element in a stream\n            producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8301999,"byte_end":8302008,"line_start":1369,"line_end":1369,"column_start":12,"column_end":21},"name":"partition","qualname":"::stream::stream::StreamExt::partition","value":"pub fn partition<B, F>(Self, F) -> PartitionFuture<Self, F, B> where\nSelf: Sized, F: FnMut(&Self::Item) -> bool, B: Default + Extend<Self::Item>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            A combinator that applies a function to every element in a stream\n            creating two collections from it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8301901,"byte_end":8301929,"line_start":1367,"line_end":1367,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8302965,"byte_end":8302973,"line_start":1405,"line_end":1405,"column_start":12,"column_end":20},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<F>(Self, F) -> ForEachFuture<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> ()","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8304566,"byte_end":8304569,"line_start":1461,"line_end":1461,"column_start":12,"column_end":15},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8304545,"byte_end":8304554,"line_start":1460,"line_end":1460,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8306179,"byte_end":8306185,"line_start":1516,"line_end":1516,"column_start":12,"column_end":18},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Borrows an stream, rather than consuming it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8306081,"byte_end":8306109,"line_start":1514,"line_end":1514,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8307585,"byte_end":8307589,"line_start":1557,"line_end":1557,"column_start":12,"column_end":16},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<St, B, F>(Self, St, F) -> Scan<Self, St, F> where Self: Sized,\nF: FnMut(&mut St, Self::Item) -> Option<B>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            A stream adaptor similar to [`fold`] that holds internal state and produces a new\n            stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8307564,"byte_end":8307573,"line_start":1556,"line_end":1556,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8308709,"byte_end":8308719,"line_start":1592,"line_end":1592,"column_start":12,"column_end":22},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<P>(Self, P) -> SkipWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8309468,"byte_end":8309472,"line_start":1620,"line_end":1620,"column_start":12,"column_end":16},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8310684,"byte_end":8310691,"line_start":1661,"line_end":1661,"column_start":12,"column_end":19},"name":"timeout","qualname":"::stream::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Stream + Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Await a stream or times out after a duration of time.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8310563,"byte_end":8310614,"line_start":1659,"line_end":1659,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8311661,"byte_end":8311669,"line_start":1696,"line_end":1696,"column_start":12,"column_end":20},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"pub fn try_fold<B, F, T, E>(&mut Self, T, F) -> TryFoldFuture<, Self, F, T>\nwhere Self: Unpin + Sized, F: FnMut(B, Self::Item) -> Result<T, E>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8312964,"byte_end":8312976,"line_start":1742,"line_end":1742,"column_start":12,"column_end":24},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"pub fn try_for_each<F, E>(&mut Self, F) -> TryForEachFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Result<(), E>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8314683,"byte_end":8314686,"line_start":1790,"line_end":1790,"column_start":12,"column_end":15},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<U>(Self, U) -> Zip<Self, U> where Self: Sized, U: Stream","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8314662,"byte_end":8314671,"line_start":1789,"line_end":1789,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8315770,"byte_end":8315775,"line_start":1827,"line_end":1827,"column_start":12,"column_end":17},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> UnzipFuture<Self, FromA, FromB>\nwhere FromA: Default + Extend<A>, FromB: Default + Extend<B>,\nSelf: Stream<Item = (A, B)> + Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Converts an stream of pairs into a pair of containers.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8315672,"byte_end":8315700,"line_start":1825,"line_end":1825,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8318158,"byte_end":8318165,"line_start":1889,"line_end":1889,"column_start":12,"column_end":19},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<'a, B>(Self) -> Pin<Box<Future<Output = B> + Send + 'a>> where\nSelf: Sized + 'a + Send, B: FromStream<Self::Item>, Self::Item: Send","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Transforms a stream into a collection.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8318060,"byte_end":8318088,"line_start":1887,"line_end":1887,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8319393,"byte_end":8319398,"line_start":1927,"line_end":1927,"column_start":12,"column_end":17},"name":"merge","qualname":"::stream::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Combines multiple streams into a single stream of all their outputs.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8319295,"byte_end":8319323,"line_start":1925,"line_end":1925,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8320663,"byte_end":8320674,"line_start":1962,"line_end":1962,"column_start":12,"column_end":23},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"pub fn partial_cmp<S>(Self, S) -> PartialCmpFuture<Self, S> where\nSelf: Sized + Stream, S: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Lexicographically compares the elements of this `Stream` with those\n            of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8321835,"byte_end":8321843,"line_start":2002,"line_end":2002,"column_start":12,"column_end":20},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"pub fn position<P>(&mut Self, P) -> PositionFuture<, Self, P> where\nSelf: Unpin + Sized, P: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Searches for an element in a Stream that satisfies a predicate, returning\n            its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8323161,"byte_end":8323164,"line_start":2040,"line_end":2040,"column_start":12,"column_end":15},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"pub fn cmp<S>(Self, S) -> CmpFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: Ord","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Lexicographically compares the elements of this `Stream` with those\n            of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8324072,"byte_end":8324077,"line_start":2074,"line_end":2074,"column_start":12,"column_end":17},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> CountFuture<Self> where Self: Sized","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Counts the number of elements in the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8323974,"byte_end":8324002,"line_start":2072,"line_end":2072,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8325178,"byte_end":8325180,"line_start":2106,"line_end":2106,"column_start":12,"column_end":14},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"pub fn ne<S>(Self, S) -> NeFuture<Self, S> where Self: Sized, S: Sized +\nStream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8326404,"byte_end":8326406,"line_start":2143,"line_end":2143,"column_start":12,"column_end":14},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"pub fn ge<S>(Self, S) -> GeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8327622,"byte_end":8327624,"line_start":2180,"line_end":2180,"column_start":12,"column_end":14},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"pub fn eq<S>(Self, S) -> EqFuture<Self, S> where Self: Sized + Stream,\nS: Sized + Stream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8328838,"byte_end":8328840,"line_start":2217,"line_end":2217,"column_start":12,"column_end":14},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"pub fn gt<S>(Self, S) -> GtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8330050,"byte_end":8330052,"line_start":2254,"line_end":2254,"column_start":12,"column_end":14},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"pub fn le<S>(Self, S) -> LeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8331256,"byte_end":8331258,"line_start":2291,"line_end":2291,"column_start":12,"column_end":14},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"pub fn lt<S>(Self, S) -> LtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            less than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8332488,"byte_end":8332491,"line_start":2336,"line_end":2336,"column_start":12,"column_end":15},"name":"sum","qualname":"::stream::stream::StreamExt::sum","value":"pub fn sum<'a, S>(Self) -> Pin<Box<Future<Output = S> + 'a>> where\nSelf: Sized + Stream<Item = S> + 'a, S: Sum<Self::Item>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Sums the elements of a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8332390,"byte_end":8332418,"line_start":2334,"line_end":2334,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8333872,"byte_end":8333879,"line_start":2382,"line_end":2382,"column_start":12,"column_end":19},"name":"product","qualname":"::stream::stream::StreamExt::product","value":"pub fn product<'a, P>(Self) -> Pin<Box<Future<Output = P> + 'a>> where\nSelf: Sized + Stream<Item = P> + 'a, P: Product","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":"            Multiplies all elements of the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8333774,"byte_end":8333802,"line_start":2380,"line_end":2380,"column_start":9,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1012},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396061,"byte_end":8396066,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395630,"byte_end":8395680,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395681,"byte_end":8395684,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395685,"byte_end":8395748,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395749,"byte_end":8395776,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395777,"byte_end":8395780,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395781,"byte_end":8395809,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395810,"byte_end":8395813,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395814,"byte_end":8395828,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395829,"byte_end":8395832,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395833,"byte_end":8395840,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395841,"byte_end":8395880,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395881,"byte_end":8395886,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395887,"byte_end":8395917,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395918,"byte_end":8395944,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395945,"byte_end":8395948,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395949,"byte_end":8395988,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395989,"byte_end":8395992,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8395993,"byte_end":8396030,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396031,"byte_end":8396036,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396037,"byte_end":8396045,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396046,"byte_end":8396053,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2001},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396303,"byte_end":8396308,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2003}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396137,"byte_end":8396179,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396180,"byte_end":8396183,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396184,"byte_end":8396241,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396242,"byte_end":8396245,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396246,"byte_end":8396274,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2007},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8396878,"byte_end":8396884,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":2009}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8396654,"byte_end":8396709,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8396710,"byte_end":8396713,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8396714,"byte_end":8396777,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8396778,"byte_end":8396805,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8396806,"byte_end":8396809,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8396810,"byte_end":8396842,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1026},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397744,"byte_end":8397751,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"pub fn from_fn<T, F>(F) -> FromFn<F> where F: FnMut() -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8396935,"byte_end":8397023,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397024,"byte_end":8397027,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397028,"byte_end":8397118,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397119,"byte_end":8397200,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397201,"byte_end":8397204,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397205,"byte_end":8397219,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397220,"byte_end":8397223,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397224,"byte_end":8397231,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397232,"byte_end":8397271,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397272,"byte_end":8397277,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397278,"byte_end":8397308,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397309,"byte_end":8397335,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397336,"byte_end":8397339,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397340,"byte_end":8397364,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397365,"byte_end":8397397,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397398,"byte_end":8397417,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397418,"byte_end":8397440,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397441,"byte_end":8397457,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397458,"byte_end":8397474,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397475,"byte_end":8397498,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397499,"byte_end":8397508,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397509,"byte_end":8397516,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397517,"byte_end":8397520,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397521,"byte_end":8397548,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397549,"byte_end":8397552,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397553,"byte_end":8397593,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397594,"byte_end":8397634,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397635,"byte_end":8397675,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397676,"byte_end":8397713,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397714,"byte_end":8397719,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397720,"byte_end":8397728,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397729,"byte_end":8397736,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7205},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398628,"byte_end":8398636,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":7207}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1042},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8399136,"byte_end":8399145,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"pub fn from_iter<I: IntoIterator>(I) -> FromIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398668,"byte_end":8398707,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398708,"byte_end":8398711,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398712,"byte_end":8398726,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398727,"byte_end":8398730,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398731,"byte_end":8398738,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398739,"byte_end":8398778,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398779,"byte_end":8398784,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398785,"byte_end":8398815,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398816,"byte_end":8398842,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398843,"byte_end":8398846,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398847,"byte_end":8398899,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398900,"byte_end":8398903,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398904,"byte_end":8398944,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398945,"byte_end":8398985,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8398986,"byte_end":8399026,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8399027,"byte_end":8399067,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8399068,"byte_end":8399105,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8399106,"byte_end":8399111,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8399112,"byte_end":8399120,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8399121,"byte_end":8399128,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1059},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400293,"byte_end":8400297,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8399960,"byte_end":8400007,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400008,"byte_end":8400011,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400012,"byte_end":8400026,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400027,"byte_end":8400030,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400031,"byte_end":8400038,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400039,"byte_end":8400078,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400079,"byte_end":8400084,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400085,"byte_end":8400115,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400116,"byte_end":8400142,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400143,"byte_end":8400146,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400147,"byte_end":8400179,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400180,"byte_end":8400183,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400184,"byte_end":8400224,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400225,"byte_end":8400262,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400263,"byte_end":8400268,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400269,"byte_end":8400277,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400278,"byte_end":8400285,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7166},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400597,"byte_end":8400601,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":7168}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1074},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401545,"byte_end":8401551,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401196,"byte_end":8401254,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401255,"byte_end":8401258,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401259,"byte_end":8401273,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401274,"byte_end":8401277,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401278,"byte_end":8401285,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401286,"byte_end":8401325,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401326,"byte_end":8401331,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401332,"byte_end":8401362,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401363,"byte_end":8401389,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401390,"byte_end":8401393,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401394,"byte_end":8401428,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401429,"byte_end":8401432,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401433,"byte_end":8401473,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401474,"byte_end":8401514,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401515,"byte_end":8401520,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401521,"byte_end":8401529,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401530,"byte_end":8401537,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2016},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401838,"byte_end":8401844,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2018}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401622,"byte_end":8401672,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401673,"byte_end":8401676,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401677,"byte_end":8401739,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401740,"byte_end":8401767,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401768,"byte_end":8401771,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401772,"byte_end":8401802,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2025},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402467,"byte_end":8402477,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":2027}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402198,"byte_end":8402286,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402287,"byte_end":8402290,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402291,"byte_end":8402358,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402359,"byte_end":8402386,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402387,"byte_end":8402390,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402391,"byte_end":8402431,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1088},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403583,"byte_end":8403594,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<T, F>(F) -> RepeatWith<F> where F: FnMut() -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402532,"byte_end":8402634,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402635,"byte_end":8402638,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402639,"byte_end":8402653,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402654,"byte_end":8402657,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402658,"byte_end":8402674,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402675,"byte_end":8402678,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402679,"byte_end":8402686,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402687,"byte_end":8402726,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402727,"byte_end":8402732,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402733,"byte_end":8402763,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402764,"byte_end":8402790,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402791,"byte_end":8402794,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402795,"byte_end":8402833,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402834,"byte_end":8402837,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402838,"byte_end":8402865,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402866,"byte_end":8402869,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402870,"byte_end":8402910,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402911,"byte_end":8402951,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402952,"byte_end":8402992,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402993,"byte_end":8403033,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403034,"byte_end":8403042,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403043,"byte_end":8403050,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403051,"byte_end":8403054,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403055,"byte_end":8403072,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403073,"byte_end":8403076,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403077,"byte_end":8403084,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403085,"byte_end":8403124,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403125,"byte_end":8403130,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403131,"byte_end":8403161,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403162,"byte_end":8403188,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403189,"byte_end":8403192,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403193,"byte_end":8403211,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403212,"byte_end":8403248,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403249,"byte_end":8403270,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403271,"byte_end":8403286,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403287,"byte_end":8403299,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403300,"byte_end":8403306,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403307,"byte_end":8403320,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403321,"byte_end":8403324,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403325,"byte_end":8403352,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403353,"byte_end":8403356,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403357,"byte_end":8403397,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403398,"byte_end":8403438,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403439,"byte_end":8403479,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403480,"byte_end":8403520,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403521,"byte_end":8403558,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403559,"byte_end":8403567,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403568,"byte_end":8403575,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2047},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/next_back.rs","byte_start":8629563,"byte_end":8629577,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"NextBackFuture","qualname":"::stream::double_ended_stream::next_back::NextBackFuture","value":"NextBackFuture {  }","parent":null,"children":[{"krate":0,"index":2050}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/next_back.rs","byte_start":8629512,"byte_end":8629551,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2062},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/nth_back.rs","byte_start":8630107,"byte_end":8630120,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"NthBackFuture","qualname":"::stream::double_ended_stream::nth_back::NthBackFuture","value":"NthBackFuture {  }","parent":null,"children":[{"krate":0,"index":2065},{"krate":0,"index":2066}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/nth_back.rs","byte_start":8630056,"byte_end":8630095,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2083},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfind.rs","byte_start":8631170,"byte_end":8631181,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"RFindFuture","qualname":"::stream::double_ended_stream::rfind::RFindFuture","value":"RFindFuture {  }","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfind.rs","byte_start":8631119,"byte_end":8631158,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7104},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfold.rs","byte_start":8632308,"byte_end":8632319,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"RFoldFuture","qualname":"::stream::double_ended_stream::rfold::RFoldFuture","value":"RFoldFuture {  }","parent":null,"children":[{"krate":0,"index":7108},{"krate":0,"index":7109},{"krate":0,"index":7110}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7047},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":8633598,"byte_end":8633612,"line_start":12,"line_end":12,"column_start":16,"column_end":30},"name":"TryRFoldFuture","qualname":"::stream::double_ended_stream::try_rfold::TryRFoldFuture","value":"TryRFoldFuture {  }","parent":null,"children":[{"krate":0,"index":7051},{"krate":0,"index":7052},{"krate":0,"index":7053}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2147},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8622783,"byte_end":8622800,"line_start":27,"line_end":27,"column_start":11,"column_end":28},"name":"DoubleEndedStream","qualname":"::stream::double_ended_stream::DoubleEndedStream","value":"DoubleEndedStream: Stream","parent":null,"children":[{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2156}],"decl_id":null,"docs":" A stream able to yield elements from both ends.","sig":null,"attributes":[{"value":"/ A stream able to yield elements from both ends.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8622404,"byte_end":8622455,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8622456,"byte_end":8622459,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Something that implements `DoubleEndedStream` has one extra capability","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8622460,"byte_end":8622534,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ over something that implements [`Stream`]: the ability to also take","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8622535,"byte_end":8622606,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ `Item`s from the back, as well as the front.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8622607,"byte_end":8622655,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8622656,"byte_end":8622659,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8622660,"byte_end":8622693,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8622694,"byte_end":8622722,"line_start":25,"line_end":25,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8625028,"byte_end":8625042,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"poll_next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::poll_next_back","value":"pub fn poll_next_back(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":0,"index":2147},"children":[],"decl_id":null,"docs":"        Attempts to receive the next item from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8625934,"byte_end":8625943,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::next_back","value":"pub fn next_back(&mut Self) -> NextBackFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":2147},"children":[],"decl_id":null,"docs":"            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8626586,"byte_end":8626594,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"nth_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::nth_back","value":"pub fn nth_back(&mut Self, usize) -> NthBackFuture<, Self> where Self: Unpin +\nSized","parent":{"krate":0,"index":2147},"children":[],"decl_id":null,"docs":"            Returns the nth element from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8627280,"byte_end":8627285,"line_start":175,"line_end":175,"column_start":8,"column_end":13},"name":"rfind","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfind","value":"pub fn rfind<P>(&mut Self, P) -> RFindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":2147},"children":[],"decl_id":null,"docs":"            Returns the the frist element from the right that matches the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8627919,"byte_end":8627924,"line_start":203,"line_end":203,"column_start":8,"column_end":13},"name":"rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfold","value":"pub fn rfold<B, F>(Self, B, F) -> RFoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":2147},"children":[],"decl_id":null,"docs":"            # Examples","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8628921,"byte_end":8628930,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::try_rfold","value":"pub fn try_rfold<B, F, E>(Self, B, F) -> TryRFoldFuture<Self, F, B> where\nSelf: Sized, F: FnMut(B, Self::Item) -> Result<B, E>","parent":{"krate":0,"index":2147},"children":[],"decl_id":null,"docs":"            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2162},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637238,"byte_end":8637253,"line_start":81,"line_end":81,"column_start":11,"column_end":26},"name":"ExactSizeStream","qualname":"::stream::exact_size_stream::ExactSizeStream","value":"ExactSizeStream: Stream","parent":null,"children":[{"krate":0,"index":2163}],"decl_id":null,"docs":" A stream that knows its exact length.","sig":null,"attributes":[{"value":"/ A stream that knows its exact length.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8634843,"byte_end":8634884,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8634885,"byte_end":8634888,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Many [`Stream`]s don't know how many times they will iterate, but some do.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8634889,"byte_end":8634967,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ If a stream knows how many times it can iterate, providing access to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8634968,"byte_end":8635040,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ that information can be useful. For example, if you want to iterate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635041,"byte_end":8635112,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ backwards, a good start is to know where the end is.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635113,"byte_end":8635169,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635170,"byte_end":8635173,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ When implementing an `ExactSizeStream`, you must also implement","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635174,"byte_end":8635241,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`Stream`]. When doing so, the implementation of [`size_hint`] *must*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635242,"byte_end":8635315,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ return the exact size of the stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635316,"byte_end":8635356,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635357,"byte_end":8635360,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635361,"byte_end":8635394,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635395,"byte_end":8635448,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635449,"byte_end":8635452,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The [`len`] method has a default implementation, so you usually shouldn't","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635453,"byte_end":8635530,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ implement it. However, you may be able to provide a more performant","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635531,"byte_end":8635602,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ implementation than the default, so overriding it in this case makes sense.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635603,"byte_end":8635682,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635683,"byte_end":8635686,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`len`]: #method.len","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635687,"byte_end":8635711,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635712,"byte_end":8635715,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635716,"byte_end":8635730,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635731,"byte_end":8635734,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635735,"byte_end":8635751,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635752,"byte_end":8635755,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635756,"byte_end":8635763,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635764,"byte_end":8635830,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ let five = 0..5;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635831,"byte_end":8635851,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635852,"byte_end":8635855,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635856,"byte_end":8635886,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635887,"byte_end":8635894,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635895,"byte_end":8635898,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ In the [module level docs][moddocs], we implemented an [`Stream`],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635899,"byte_end":8635969,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ `Counter`. Let's implement `ExactSizeStream` for it as well:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8635970,"byte_end":8636034,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636035,"byte_end":8636038,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [moddocs]: index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636039,"byte_end":8636064,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636065,"byte_end":8636068,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636069,"byte_end":8636076,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # use std::task::{Context, Poll};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636077,"byte_end":8636114,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636115,"byte_end":8636139,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636140,"byte_end":8636172,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ # struct Counter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636173,"byte_end":8636195,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ #     count: usize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636196,"byte_end":8636219,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636220,"byte_end":8636227,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # impl Counter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636228,"byte_end":8636248,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/ #     fn new() -> Counter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636249,"byte_end":8636280,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ #         Counter { count: 0 }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636281,"byte_end":8636315,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636316,"byte_end":8636327,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636328,"byte_end":8636335,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ # impl Stream for Counter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636336,"byte_end":8636367,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ #     type Item = usize;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636368,"byte_end":8636396,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ #     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636397,"byte_end":8636498,"line_start":53,"line_end":53,"column_start":1,"column_end":102}},{"value":"/ #         self.count += 1;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636499,"byte_end":8636529,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ #         if self.count < 6 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636530,"byte_end":8636563,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/ #             Poll::Ready(Some(self.count))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636564,"byte_end":8636611,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #         } else {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636612,"byte_end":8636634,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/ #             Poll::Ready(None)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636635,"byte_end":8636670,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ #         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636671,"byte_end":8636686,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636687,"byte_end":8636698,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636699,"byte_end":8636706,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636707,"byte_end":8636746,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636747,"byte_end":8636752,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ impl ExactSizeStream for Counter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636753,"byte_end":8636791,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/     // We can easily calculate the remaining number of iterations.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636792,"byte_end":8636862,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/     fn len(&self) -> usize {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636863,"byte_end":8636895,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/         5 - self.count","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636896,"byte_end":8636922,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636923,"byte_end":8636932,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636933,"byte_end":8636938,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636939,"byte_end":8636942,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636943,"byte_end":8636972,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636973,"byte_end":8636976,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let counter = Counter::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8636977,"byte_end":8637010,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637011,"byte_end":8637014,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, counter.len());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637015,"byte_end":8637048,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637049,"byte_end":8637058,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637059,"byte_end":8637066,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637067,"byte_end":8637105,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637149,"byte_end":8637177,"line_start":79,"line_end":79,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8638031,"byte_end":8638034,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"len","qualname":"::stream::exact_size_stream::ExactSizeStream::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":" Returns the exact number of times the stream will iterate.","sig":null,"attributes":[{"value":"/ Returns the exact number of times the stream will iterate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637268,"byte_end":8637330,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637335,"byte_end":8637338,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method has a default implementation, so you usually should not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637343,"byte_end":8637414,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ implement it directly. However, if you can provide a more efficient","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637419,"byte_end":8637490,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ implementation, you can do so. See the [trait-level] docs for an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637495,"byte_end":8637563,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/ example.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637568,"byte_end":8637580,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637585,"byte_end":8637588,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function has the same safety guarantees as the [`size_hint`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637593,"byte_end":8637662,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"/ function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637667,"byte_end":8637680,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637685,"byte_end":8637688,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [trait-level]: trait.ExactSizeStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637693,"byte_end":8637738,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637743,"byte_end":8637796,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637801,"byte_end":8637804,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637809,"byte_end":8637823,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637828,"byte_end":8637831,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637836,"byte_end":8637852,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637857,"byte_end":8637860,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637865,"byte_end":8637872,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637877,"byte_end":8637943,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ let five = 0..5;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637948,"byte_end":8637968,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637973,"byte_end":8637976,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637981,"byte_end":8638011,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8638016,"byte_end":8638023,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2171},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639681,"byte_end":8639687,"line_start":32,"line_end":32,"column_start":11,"column_end":17},"name":"Extend","qualname":"::stream::extend::Extend","value":"Extend<A>","parent":null,"children":[{"krate":0,"index":2173}],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8638752,"byte_end":8638807,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8638808,"byte_end":8638811,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8638812,"byte_end":8638910,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ series of values. The `Extend` trait bridges this gap, allowing you to extend a collection","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8638911,"byte_end":8639005,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639006,"byte_end":8639102,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639103,"byte_end":8639202,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639203,"byte_end":8639255,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639256,"byte_end":8639259,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639260,"byte_end":8639275,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639276,"byte_end":8639279,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639280,"byte_end":8639287,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639288,"byte_end":8639327,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639328,"byte_end":8639333,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639334,"byte_end":8639364,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639365,"byte_end":8639391,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639392,"byte_end":8639395,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639396,"byte_end":8639435,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639436,"byte_end":8639479,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ stream::Extend::extend(&mut v, s).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639480,"byte_end":8639524,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639525,"byte_end":8639528,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639529,"byte_end":8639568,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639569,"byte_end":8639574,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639575,"byte_end":8639583,"line_start":28,"line_end":28,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639584,"byte_end":8639591,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639592,"byte_end":8639620,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639760,"byte_end":8639766,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"extend","qualname":"::stream::extend::Extend::extend","value":"pub fn extend<'a, T: IntoStream<Item = A> + 'a>(&'a mut Self, T)\n-> Pin<Box<Future<Output = ()> + Send + 'a>> where\n<T as IntoStream>::IntoStream: Send","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.\n","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639697,"byte_end":8639752,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":2176},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640920,"byte_end":8640926,"line_start":70,"line_end":70,"column_start":14,"column_end":20},"name":"extend","qualname":"::stream::extend::extend","value":"pub async fn extend<'a, C, T, S, '_>(&'_ mut C, S) -> /*impl Trait*/ where\nC: Extend<T>, S: IntoStream<Item = T> + 'a,\n<S as IntoStream>::IntoStream: Send","parent":null,"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8639956,"byte_end":8640011,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640012,"byte_end":8640015,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640016,"byte_end":8640114,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/ series of values. The [`Extend`] trait bridges this gap, allowing you to extend a collection","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640115,"byte_end":8640211,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640212,"byte_end":8640308,"line_start":46,"line_end":46,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640309,"byte_end":8640408,"line_start":47,"line_end":47,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640409,"byte_end":8640461,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640462,"byte_end":8640465,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Extend`]: trait.Extend.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640466,"byte_end":8640499,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640500,"byte_end":8640503,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640504,"byte_end":8640519,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640520,"byte_end":8640523,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640524,"byte_end":8640531,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640532,"byte_end":8640571,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640572,"byte_end":8640577,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640578,"byte_end":8640608,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640609,"byte_end":8640635,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640636,"byte_end":8640639,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640640,"byte_end":8640679,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640680,"byte_end":8640723,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ stream::extend(&mut v, s).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640724,"byte_end":8640760,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640761,"byte_end":8640764,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640765,"byte_end":8640804,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640805,"byte_end":8640810,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640811,"byte_end":8640819,"line_start":66,"line_end":66,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640820,"byte_end":8640827,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/extend.rs","byte_start":8640828,"byte_end":8640856,"line_start":68,"line_end":68,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":2187},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644183,"byte_end":8644193,"line_start":118,"line_end":118,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::from_stream::FromStream","value":"FromStream<T: Send>","parent":null,"children":[{"krate":0,"index":2189}],"decl_id":null,"docs":" Conversion from a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion from a `Stream`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641276,"byte_end":8641307,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641308,"byte_end":8641311,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ By implementing `FromStream` for a type, you define how it will be created from a stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641312,"byte_end":8641405,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ This is common for types which describe a collection of some kind.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641406,"byte_end":8641476,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641477,"byte_end":8641480,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See also: [`IntoStream`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641481,"byte_end":8641510,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641511,"byte_end":8641514,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641515,"byte_end":8641529,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641530,"byte_end":8641533,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641534,"byte_end":8641550,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641551,"byte_end":8641554,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641555,"byte_end":8641562,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641563,"byte_end":8641637,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641638,"byte_end":8641643,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641644,"byte_end":8641674,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641675,"byte_end":8641721,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641722,"byte_end":8641725,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641726,"byte_end":8641773,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641774,"byte_end":8641777,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641778,"byte_end":8641825,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641826,"byte_end":8641829,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641830,"byte_end":8641869,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641870,"byte_end":8641875,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641876,"byte_end":8641893,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641894,"byte_end":8641901,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641902,"byte_end":8641905,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Using `collect` to  implicitly use `FromStream`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641906,"byte_end":8641957,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641958,"byte_end":8641961,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641962,"byte_end":8641969,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8641970,"byte_end":8642044,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642045,"byte_end":8642050,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642051,"byte_end":8642081,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642082,"byte_end":8642108,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642109,"byte_end":8642156,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642157,"byte_end":8642160,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let v: Vec<i32> = five_fives.collect().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642161,"byte_end":8642210,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642211,"byte_end":8642214,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642215,"byte_end":8642254,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642255,"byte_end":8642260,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642261,"byte_end":8642278,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642279,"byte_end":8642286,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642287,"byte_end":8642290,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromStream` for your type:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642291,"byte_end":8642335,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642336,"byte_end":8642339,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642340,"byte_end":8642347,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642348,"byte_end":8642378,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream, IntoStream};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642379,"byte_end":8642437,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642438,"byte_end":8642460,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642461,"byte_end":8642464,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // A sample collection, that's just a wrapper over Vec<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642465,"byte_end":8642526,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642527,"byte_end":8642547,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/ struct MyCollection(Vec<i32>);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642548,"byte_end":8642582,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642583,"byte_end":8642586,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Let's give it some methods so we can create one and add things","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642587,"byte_end":8642656,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ // to it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642657,"byte_end":8642670,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ impl MyCollection {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642671,"byte_end":8642694,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/     fn new() -> MyCollection {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642695,"byte_end":8642729,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/         MyCollection(Vec::new())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642730,"byte_end":8642766,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642767,"byte_end":8642776,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642777,"byte_end":8642780,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     fn add(&mut self, elem: i32) {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642781,"byte_end":8642819,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/         self.0.push(elem);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642820,"byte_end":8642850,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642851,"byte_end":8642860,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642861,"byte_end":8642866,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642867,"byte_end":8642870,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // and we'll implement FromIterator","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642871,"byte_end":8642910,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ impl FromStream<i32> for MyCollection {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642911,"byte_end":8642954,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/     fn from_stream<'a, S: IntoStream<Item = i32> + 'a>(","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8642955,"byte_end":8643014,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/         stream: S,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643015,"byte_end":8643037,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/     ) -> Pin<Box<dyn Future<Output = Self> + 'a + Send>>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643038,"byte_end":8643098,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/    where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643099,"byte_end":8643111,"line_start":76,"line_end":76,"column_start":1,"column_end":13}},{"value":"/        <S as IntoStream>::IntoStream: Send,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643112,"byte_end":8643159,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/    {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643160,"byte_end":8643168,"line_start":78,"line_end":78,"column_start":1,"column_end":9}},{"value":"/         let stream = stream.into_stream();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643169,"byte_end":8643215,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643216,"byte_end":8643219,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/         Box::pin(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643220,"byte_end":8643253,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/             let mut c = MyCollection::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643254,"byte_end":8643302,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643303,"byte_end":8643306,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/             let mut v = vec![];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643307,"byte_end":8643342,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/             stream::extend(&mut v, stream).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643343,"byte_end":8643396,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643397,"byte_end":8643400,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/             for i in v {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643401,"byte_end":8643429,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/                 c.add(i);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643430,"byte_end":8643459,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643460,"byte_end":8643477,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/             c","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643478,"byte_end":8643495,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643496,"byte_end":8643510,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643511,"byte_end":8643520,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643521,"byte_end":8643526,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643527,"byte_end":8643530,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643531,"byte_end":8643605,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643606,"byte_end":8643611,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ // Now we can make a new stream...","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643612,"byte_end":8643650,"line_start":97,"line_end":97,"column_start":1,"column_end":39}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643651,"byte_end":8643694,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643695,"byte_end":8643698,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // ...and make a MyCollection out of it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643699,"byte_end":8643742,"line_start":100,"line_end":100,"column_start":1,"column_end":44}},{"value":"/ let c = MyCollection::from_stream(stream).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643743,"byte_end":8643795,"line_start":101,"line_end":101,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643796,"byte_end":8643799,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643800,"byte_end":8643841,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643842,"byte_end":8643845,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // collect works too!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643846,"byte_end":8643871,"line_start":105,"line_end":105,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643872,"byte_end":8643875,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643876,"byte_end":8643919,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ let c: MyCollection = stream.collect().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643920,"byte_end":8643969,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643970,"byte_end":8643973,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8643974,"byte_end":8644015,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644016,"byte_end":8644021,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644022,"byte_end":8644039,"line_start":112,"line_end":112,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644040,"byte_end":8644047,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644048,"byte_end":8644051,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644052,"byte_end":8644093,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644094,"byte_end":8644122,"line_start":116,"line_end":116,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644718,"byte_end":8644729,"line_start":139,"line_end":139,"column_start":8,"column_end":19},"name":"from_stream","qualname":"::stream::from_stream::FromStream::from_stream","value":"pub fn from_stream<'a, S: IntoStream<Item = T> + 'a>(S)\n-> Pin<Box<Future<Output = Self> + Send + 'a>> where\n<S as IntoStream>::IntoStream: Send","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" Creates a value from a stream.","sig":null,"attributes":[{"value":"/ Creates a value from a stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644209,"byte_end":8644243,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644248,"byte_end":8644251,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644256,"byte_end":8644270,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644275,"byte_end":8644278,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644283,"byte_end":8644299,"line_start":123,"line_end":123,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644304,"byte_end":8644307,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644312,"byte_end":8644319,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644324,"byte_end":8644398,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644403,"byte_end":8644408,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644413,"byte_end":8644443,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644448,"byte_end":8644494,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644499,"byte_end":8644502,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644507,"byte_end":8644554,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644559,"byte_end":8644562,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644567,"byte_end":8644614,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644619,"byte_end":8644622,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644627,"byte_end":8644666,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644671,"byte_end":8644676,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644681,"byte_end":8644698,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_stream.rs","byte_start":8644703,"byte_end":8644710,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2194},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645916,"byte_end":8645927,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::fused_stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[],"decl_id":null,"docs":" A stream that always continues to yield `None` when exhausted.","sig":null,"attributes":[{"value":"/ A stream that always continues to yield `None` when exhausted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645071,"byte_end":8645137,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645138,"byte_end":8645141,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Calling next on a fused stream that has returned `None` once is guaranteed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645142,"byte_end":8645220,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to return [`None`] again. This trait should be implemented by all streams","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645221,"byte_end":8645298,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ that behave this way because it allows optimizing [`Stream::fuse`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645299,"byte_end":8645370,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645371,"byte_end":8645374,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Note: In general, you should not use `FusedStream` in generic bounds if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645375,"byte_end":8645450,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ you need a fused stream. Instead, you should just call [`Stream::fuse`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645451,"byte_end":8645526,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ on the stream. If the stream is already fused, the additional [`Fuse`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645527,"byte_end":8645601,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ wrapper will be a no-op with no performance penalty.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645602,"byte_end":8645658,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645659,"byte_end":8645662,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645663,"byte_end":8645743,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`Stream::fuse`]: trait.Stream.html#method.fuse","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645744,"byte_end":8645795,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Fuse`]: struct.Fuse.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645796,"byte_end":8645826,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645827,"byte_end":8645855,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":2208},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647347,"byte_end":8647355,"line_start":46,"line_end":46,"column_start":8,"column_end":16},"name":"interval","qualname":"::stream::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that yields at a set interval.","sig":null,"attributes":[{"value":"/ Creates a new stream that yields at a set interval.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646196,"byte_end":8646251,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646252,"byte_end":8646255,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The stream first yields after `dur`, and continues to yield every","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646256,"byte_end":8646325,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ `dur` after that. The stream accounts for time elapsed between calls, and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646326,"byte_end":8646403,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ will adjust accordingly to prevent time skews.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646404,"byte_end":8646454,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646455,"byte_end":8646458,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Each interval may be slightly longer than the specified duration, but never","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646459,"byte_end":8646538,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ less.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646539,"byte_end":8646548,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646549,"byte_end":8646552,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note that intervals are not intended for high resolution timers, but rather","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646553,"byte_end":8646632,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ they will likely fire some granularity after the exact instant that they're","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646633,"byte_end":8646712,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ otherwise indicated to fire at.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646713,"byte_end":8646748,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646749,"byte_end":8646752,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::sleep`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646753,"byte_end":8646783,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646784,"byte_end":8646787,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: ../task/fn.sleep.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646788,"byte_end":8646830,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646831,"byte_end":8646834,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646835,"byte_end":8646849,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646850,"byte_end":8646853,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Basic example:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646854,"byte_end":8646872,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646873,"byte_end":8646876,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646877,"byte_end":8646890,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646891,"byte_end":8646921,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646922,"byte_end":8646948,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646949,"byte_end":8646977,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646978,"byte_end":8646981,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8646982,"byte_end":8647056,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647057,"byte_end":8647062,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ let mut interval = stream::interval(Duration::from_secs(4));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647063,"byte_end":8647127,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ while let Some(_) = interval.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647128,"byte_end":8647175,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/     println!(\"prints every four seconds\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647176,"byte_end":8647222,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647223,"byte_end":8647228,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647229,"byte_end":8647234,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647235,"byte_end":8647252,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647253,"byte_end":8647260,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647261,"byte_end":8647289,"line_start":44,"line_end":44,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2312},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647766,"byte_end":8647774,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"Interval","qualname":"::stream::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314}],"decl_id":null,"docs":" A stream representing notifications at fixed interval","sig":null,"attributes":[{"value":"/ A stream representing notifications at fixed interval","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647465,"byte_end":8647522,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647523,"byte_end":8647526,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`interval`] function. See its","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647527,"byte_end":8647591,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/ documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647592,"byte_end":8647619,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647620,"byte_end":8647623,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: fn.interval.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647624,"byte_end":8647658,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647659,"byte_end":8647687,"line_start":59,"line_end":59,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":2214},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648838,"byte_end":8648848,"line_start":18,"line_end":18,"column_start":11,"column_end":21},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream","value":"IntoStream","parent":null,"children":[{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217}],"decl_id":null,"docs":" Conversion into a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion into a `Stream`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648328,"byte_end":8648359,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648360,"byte_end":8648363,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoIterator` for a type, you define how it will be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648364,"byte_end":8648436,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ converted to an iterator. This is common for types which describe a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648437,"byte_end":8648508,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ collection of some kind.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648509,"byte_end":8648537,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648538,"byte_end":8648541,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`from_stream`]: #tymethod.from_stream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648542,"byte_end":8648584,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648585,"byte_end":8648618,"line_start":10,"line_end":10,"column_start":1,"column_end":34}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648619,"byte_end":8648668,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648669,"byte_end":8648672,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See also: [`FromStream`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648673,"byte_end":8648702,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648703,"byte_end":8648706,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648707,"byte_end":8648748,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648749,"byte_end":8648777,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":2215},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648914,"byte_end":8648918,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::into_stream::IntoStream::Item","value":"type Item;","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The type of the elements being iterated over.\n","sig":null,"attributes":[{"value":"/ The type of the elements being iterated over.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648855,"byte_end":8648904,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2216},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648985,"byte_end":8648995,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream::IntoStream","value":"type IntoStream: Stream<Item = Self::Item>;","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" Which kind of stream are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of stream are we turning this into?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8648925,"byte_end":8648975,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8649071,"byte_end":8649082,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::into_stream::IntoStream::into_stream","value":"pub fn into_stream(Self) -> Self::IntoStream","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" Creates a stream from a value.\n","sig":null,"attributes":[{"value":"/ Creates a stream from a value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8649029,"byte_end":8649063,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2317},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649672,"byte_end":8649679,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":2319}],"decl_id":null,"docs":" A stream that never returns any items.","sig":null,"attributes":[{"value":"/ A stream that never returns any items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649468,"byte_end":8649510,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649511,"byte_end":8649514,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`pending`] function. See its","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649515,"byte_end":8649578,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649579,"byte_end":8649606,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649607,"byte_end":8649610,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`pending`]: fn.pending.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649611,"byte_end":8649643,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":2234},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650241,"byte_end":8650248,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that never returns any items.","sig":null,"attributes":[{"value":"/ Creates a stream that never returns any items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649717,"byte_end":8649767,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649768,"byte_end":8649771,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649772,"byte_end":8649837,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649838,"byte_end":8649852,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649853,"byte_end":8649856,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649857,"byte_end":8649864,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649865,"byte_end":8649904,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649905,"byte_end":8649910,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649911,"byte_end":8649939,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649940,"byte_end":8649943,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649944,"byte_end":8649974,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8649975,"byte_end":8650001,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650002,"byte_end":8650005,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_millis(100);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650006,"byte_end":8650047,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ let mut s = stream::pending::<()>().timeout(dur);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650048,"byte_end":8650101,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650102,"byte_end":8650105,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let item = s.next().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650106,"byte_end":8650136,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650137,"byte_end":8650140,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ assert!(item.is_some());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650141,"byte_end":8650169,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ assert!(item.unwrap().is_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650170,"byte_end":8650206,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650207,"byte_end":8650210,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650211,"byte_end":8650216,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650217,"byte_end":8650225,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650226,"byte_end":8650233,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2252},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651538,"byte_end":8651545,"line_start":18,"line_end":18,"column_start":11,"column_end":18},"name":"Product","qualname":"::stream::product::Product","value":"Product<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":2254}],"decl_id":null,"docs":" Trait to represent types that can be created by multiplying the elements of a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by multiplying the elements of a stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8650918,"byte_end":8651007,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651008,"byte_end":8651011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`product`] method on streams. Types which","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651012,"byte_end":8651094,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ implement the trait can be generated by the [`product`] method. Like","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651095,"byte_end":8651167,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651168,"byte_end":8651242,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::product`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651243,"byte_end":8651291,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651292,"byte_end":8651295,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`product`]: trait.Product.html#tymethod.product","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651296,"byte_end":8651348,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651349,"byte_end":8651390,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::product`]: trait.Stream.html#method.product","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651391,"byte_end":8651448,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651449,"byte_end":8651477,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651681,"byte_end":8651688,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"product","qualname":"::stream::product::Product::product","value":"pub fn product<'a, S>(S) -> Pin<Box<Future<Output = Self> + 'a>> where\nS: Stream<Item = A> + 'a","parent":{"krate":0,"index":2252},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n multiplying the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651569,"byte_end":8651642,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ multiplying the items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651647,"byte_end":8651673,"line_start":20,"line_end":20,"column_start":5,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2270},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654366,"byte_end":8654376,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"successors","qualname":"::stream::successors::successors","value":"pub fn successors<F, T>(Option<T>, F) -> Successors<F, T> where F: FnMut(&T)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a closure is called with the previous\n value.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a closure is called with the previous","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8653752,"byte_end":8653848,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8653849,"byte_end":8653859,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8653860,"byte_end":8653863,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8653864,"byte_end":8653878,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8653879,"byte_end":8653882,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8653883,"byte_end":8653890,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8653891,"byte_end":8653942,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8653943,"byte_end":8653948,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8653949,"byte_end":8653979,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8653980,"byte_end":8654006,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654007,"byte_end":8654010,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::successors(Some(22), |&val| Some(val + 1));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654011,"byte_end":8654078,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654079,"byte_end":8654082,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(22));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654083,"byte_end":8654124,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(23));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654125,"byte_end":8654166,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(24));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654167,"byte_end":8654208,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(25));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654209,"byte_end":8654250,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654251,"byte_end":8654254,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654255,"byte_end":8654260,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654261,"byte_end":8654271,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654272,"byte_end":8654279,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654280,"byte_end":8654308,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7005},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8654880,"byte_end":8654890,"line_start":49,"line_end":49,"column_start":16,"column_end":26},"name":"Successors","qualname":"::stream::successors::Successors","value":"Successors {  }","parent":null,"children":[{"krate":0,"index":7008},{"krate":0,"index":7009}],"decl_id":null,"docs":" A stream that yields elements by calling an async closure with the previous value as an\n argument","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9164797,"byte_end":9164806,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2282},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656289,"byte_end":8656292,"line_start":18,"line_end":18,"column_start":11,"column_end":14},"name":"Sum","qualname":"::stream::sum::Sum","value":"Sum<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":2284}],"decl_id":null,"docs":" Trait to represent types that can be created by summing up a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by summing up a stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8655718,"byte_end":8655790,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8655791,"byte_end":8655794,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`sum`] method on streams. Types which","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8655795,"byte_end":8655873,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ implement the trait can be generated by the [`sum`] method. Like","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8655874,"byte_end":8655942,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8655943,"byte_end":8656017,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::sum`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656018,"byte_end":8656062,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656063,"byte_end":8656066,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`sum`]: trait.Sum.html#tymethod.sum","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656067,"byte_end":8656107,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656108,"byte_end":8656149,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::sum`]: trait.Stream.html#method.sum","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656150,"byte_end":8656199,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656200,"byte_end":8656228,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656429,"byte_end":8656432,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"sum","qualname":"::stream::sum::Sum::sum","value":"pub fn sum<'a, S>(S) -> Pin<Box<Future<Output = Self> + 'a>> where\nS: Stream<Item = A> + 'a","parent":{"krate":0,"index":2282},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n \"summing up\" the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656316,"byte_end":8656389,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ \"summing up\" the items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656394,"byte_end":8656421,"line_start":20,"line_end":20,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":2903},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":2904},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3133},{"krate":0,"index":3227},{"krate":0,"index":3421},{"krate":0,"index":3443},{"krate":0,"index":3545},{"krate":0,"index":3563},{"krate":0,"index":3610},{"krate":0,"index":3648},{"krate":0,"index":3673},{"krate":0,"index":3719},{"krate":0,"index":3740},{"krate":0,"index":3756},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3933},{"krate":0,"index":3952},{"krate":0,"index":3977},{"krate":0,"index":3989}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16561,"byte_end":16584,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658339,"byte_end":8658408,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658409,"byte_end":8658412,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658413,"byte_end":8658490,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ when doing input and output. The most core part of this module is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658491,"byte_end":8658560,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658561,"byte_end":8658617,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ most general interface for reading and writing input and output.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658618,"byte_end":8658686,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658687,"byte_end":8658690,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::io`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658691,"byte_end":8658742,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658743,"byte_end":8658746,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658747,"byte_end":8658807,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658808,"byte_end":8658811,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Read and Write","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658812,"byte_end":8658832,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658833,"byte_end":8658836,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658837,"byte_end":8658916,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of other types, and you can implement them for your types too. As such,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658917,"byte_end":8658992,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8658993,"byte_end":8659068,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659069,"byte_end":8659148,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659149,"byte_end":8659228,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ [`File`]s:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659229,"byte_end":8659243,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659244,"byte_end":8659247,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659248,"byte_end":8659261,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659262,"byte_end":8659290,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659291,"byte_end":8659321,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659322,"byte_end":8659325,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659326,"byte_end":8659400,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659401,"byte_end":8659406,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659407,"byte_end":8659452,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659453,"byte_end":8659482,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659483,"byte_end":8659486,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659487,"byte_end":8659513,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659514,"byte_end":8659553,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659554,"byte_end":8659557,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659558,"byte_end":8659604,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659605,"byte_end":8659610,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659611,"byte_end":8659628,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659629,"byte_end":8659636,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659637,"byte_end":8659640,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659641,"byte_end":8659723,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659724,"byte_end":8659801,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659802,"byte_end":8659866,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659867,"byte_end":8659870,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Seek and BufRead","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659871,"byte_end":8659894,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659895,"byte_end":8659898,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659899,"byte_end":8659974,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8659975,"byte_end":8660045,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660046,"byte_end":8660123,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ coming from:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660124,"byte_end":8660140,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660141,"byte_end":8660144,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660145,"byte_end":8660158,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660159,"byte_end":8660187,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660188,"byte_end":8660220,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660221,"byte_end":8660251,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660252,"byte_end":8660255,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660256,"byte_end":8660330,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660331,"byte_end":8660336,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660337,"byte_end":8660382,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660383,"byte_end":8660412,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660413,"byte_end":8660416,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // skip to the last 10 bytes of the file","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660417,"byte_end":8660461,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660462,"byte_end":8660500,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660501,"byte_end":8660504,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660505,"byte_end":8660531,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660532,"byte_end":8660571,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660572,"byte_end":8660575,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660576,"byte_end":8660622,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660623,"byte_end":8660628,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660629,"byte_end":8660646,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660647,"byte_end":8660654,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660655,"byte_end":8660658,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660659,"byte_end":8660745,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"/ to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660746,"byte_end":8660824,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660825,"byte_end":8660828,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## BufReader and BufWriter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660829,"byte_end":8660859,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660860,"byte_end":8660863,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660864,"byte_end":8660945,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8660946,"byte_end":8661020,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661021,"byte_end":8661102,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661103,"byte_end":8661177,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661178,"byte_end":8661252,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661253,"byte_end":8661256,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661257,"byte_end":8661333,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ methods to any reader:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661334,"byte_end":8661360,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661361,"byte_end":8661364,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661365,"byte_end":8661378,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661379,"byte_end":8661407,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661408,"byte_end":8661441,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661442,"byte_end":8661472,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661473,"byte_end":8661476,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661477,"byte_end":8661551,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661552,"byte_end":8661557,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661558,"byte_end":8661599,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ let mut reader = BufReader::new(f);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661600,"byte_end":8661639,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661640,"byte_end":8661675,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661676,"byte_end":8661679,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // read a line into buffer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661680,"byte_end":8661710,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/ reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661711,"byte_end":8661752,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661753,"byte_end":8661756,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", buffer);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661757,"byte_end":8661784,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661785,"byte_end":8661790,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661791,"byte_end":8661808,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661809,"byte_end":8661816,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661817,"byte_end":8661820,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661821,"byte_end":8661902,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/ to [`write`][`Write::write`]:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661903,"byte_end":8661936,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661937,"byte_end":8661940,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661941,"byte_end":8661954,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661955,"byte_end":8661983,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8661984,"byte_end":8662018,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662019,"byte_end":8662052,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662053,"byte_end":8662056,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662057,"byte_end":8662131,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662132,"byte_end":8662137,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662138,"byte_end":8662181,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662182,"byte_end":8662187,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/     let mut writer = BufWriter::new(f);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662188,"byte_end":8662231,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662232,"byte_end":8662235,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     // write a byte to the buffer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662236,"byte_end":8662273,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/     writer.write(&[42]).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662274,"byte_end":8662309,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/ } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662310,"byte_end":8662370,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"/ //","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662371,"byte_end":8662377,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662378,"byte_end":8662383,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662384,"byte_end":8662401,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662402,"byte_end":8662409,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662410,"byte_end":8662413,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Standard input and output","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662414,"byte_end":8662446,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662447,"byte_end":8662450,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ A very common source of input is standard input:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662451,"byte_end":8662503,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662504,"byte_end":8662507,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662508,"byte_end":8662521,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662522,"byte_end":8662544,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662545,"byte_end":8662548,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662549,"byte_end":8662623,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662624,"byte_end":8662629,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662630,"byte_end":8662664,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662665,"byte_end":8662668,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662669,"byte_end":8662714,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662715,"byte_end":8662718,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662719,"byte_end":8662763,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662764,"byte_end":8662769,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662770,"byte_end":8662787,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662788,"byte_end":8662795,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662796,"byte_end":8662799,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662800,"byte_end":8662879,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662880,"byte_end":8662949,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/ or `match` on the return value to catch any possible errors:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8662950,"byte_end":8663014,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663015,"byte_end":8663018,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663019,"byte_end":8663032,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663033,"byte_end":8663055,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663056,"byte_end":8663059,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663060,"byte_end":8663134,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663135,"byte_end":8663140,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663141,"byte_end":8663175,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663176,"byte_end":8663179,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663180,"byte_end":8663233,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663234,"byte_end":8663239,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663240,"byte_end":8663257,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663258,"byte_end":8663265,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663266,"byte_end":8663269,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ And a very common source of output is standard output:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663270,"byte_end":8663328,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663329,"byte_end":8663332,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663333,"byte_end":8663346,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663347,"byte_end":8663369,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663370,"byte_end":8663404,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663405,"byte_end":8663408,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663409,"byte_end":8663483,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663484,"byte_end":8663489,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/ io::stdout().write(&[42]).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663490,"byte_end":8663527,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663528,"byte_end":8663533,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663534,"byte_end":8663551,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663552,"byte_end":8663559,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663560,"byte_end":8663563,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663564,"byte_end":8663643,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ [`println!`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663644,"byte_end":8663661,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663662,"byte_end":8663665,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ## Iterator types","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663666,"byte_end":8663687,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663688,"byte_end":8663691,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ A large number of the structures provided by `std::io` are for various","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663692,"byte_end":8663766,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"/ ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663767,"byte_end":8663843,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ lines:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663844,"byte_end":8663854,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663855,"byte_end":8663858,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663859,"byte_end":8663872,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663873,"byte_end":8663901,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663902,"byte_end":8663935,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663936,"byte_end":8663966,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663967,"byte_end":8663970,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8663971,"byte_end":8664045,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664046,"byte_end":8664051,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664052,"byte_end":8664093,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ let reader = BufReader::new(f);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664094,"byte_end":8664129,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664130,"byte_end":8664133,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let mut lines = reader.lines();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664134,"byte_end":8664169,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/ while let Some(line) = lines.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664170,"byte_end":8664217,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"/     println!(\"{}\", line?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664218,"byte_end":8664248,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664249,"byte_end":8664254,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664255,"byte_end":8664260,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664261,"byte_end":8664278,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664279,"byte_end":8664286,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664287,"byte_end":8664290,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Functions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664291,"byte_end":8664307,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664308,"byte_end":8664311,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664312,"byte_end":8664394,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"/ features. For example, we can use three of these functions to copy everything","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664395,"byte_end":8664476,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"/ from standard input to standard output:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664477,"byte_end":8664520,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664521,"byte_end":8664524,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664525,"byte_end":8664538,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664539,"byte_end":8664561,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664562,"byte_end":8664565,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664566,"byte_end":8664640,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664641,"byte_end":8664646,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664647,"byte_end":8664704,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664705,"byte_end":8664710,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664711,"byte_end":8664728,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664729,"byte_end":8664736,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664737,"byte_end":8664740,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [functions-list]: #functions-1","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664741,"byte_end":8664775,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664776,"byte_end":8664779,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## io::Result","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664780,"byte_end":8664797,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664798,"byte_end":8664801,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664802,"byte_end":8664873,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"/ as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664874,"byte_end":8664953,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8664954,"byte_end":8665035,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"/ module use the [`?` operator]:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665036,"byte_end":8665070,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665071,"byte_end":8665074,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665075,"byte_end":8665082,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ #![allow(dead_code)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665083,"byte_end":8665107,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665108,"byte_end":8665130,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665131,"byte_end":8665134,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ async fn read_input() -> io::Result<()> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665135,"byte_end":8665180,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/     let mut input = String::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665181,"byte_end":8665219,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665220,"byte_end":8665223,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/     io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665224,"byte_end":8665273,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665274,"byte_end":8665277,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665278,"byte_end":8665326,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665327,"byte_end":8665330,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665331,"byte_end":8665345,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665346,"byte_end":8665351,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665352,"byte_end":8665359,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665360,"byte_end":8665363,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665364,"byte_end":8665444,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665445,"byte_end":8665529,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"/ return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665530,"byte_end":8665614,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ to read the line and print it, so we use `()`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665615,"byte_end":8665665,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665666,"byte_end":8665669,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ## Platform-specific behavior","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665670,"byte_end":8665703,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665704,"byte_end":8665707,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665708,"byte_end":8665789,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"/ what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665790,"byte_end":8665870,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ applications both understand what's happening under the hood as well as investigate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665871,"byte_end":8665958,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"/ any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8665959,"byte_end":8666049,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"/ contract. The implementation of many of these functions are subject to change over","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666050,"byte_end":8666136,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"/ time and may call fewer or more syscalls/library functions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666137,"byte_end":8666200,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666201,"byte_end":8666204,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666205,"byte_end":8666234,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666235,"byte_end":8666266,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666267,"byte_end":8666296,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666297,"byte_end":8666332,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"/ [`File`]: ../fs/struct.File.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666333,"byte_end":8666369,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666370,"byte_end":8666417,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/ [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666418,"byte_end":8666456,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"/ [`BufReader`]: struct.BufReader.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666457,"byte_end":8666497,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"/ [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666498,"byte_end":8666538,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"/ [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666539,"byte_end":8666592,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"/ [`io::stdout`]: fn.stdout.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666593,"byte_end":8666627,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"/ [`println!`]: ../macro.println.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666628,"byte_end":8666667,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"/ [`Lines`]: struct.Lines.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666668,"byte_end":8666700,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"/ [`io::Result`]: type.Result.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666701,"byte_end":8666737,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"/ [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666738,"byte_end":8666822,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"/ [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666823,"byte_end":8666872,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/ [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666873,"byte_end":8666942,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8666943,"byte_end":8667029,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":3124},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16561,"byte_end":16584,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async I/O prelude.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699229,"byte_end":8699255,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699256,"byte_end":8699259,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699260,"byte_end":8699340,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699341,"byte_end":8699401,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699402,"byte_end":8699405,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699406,"byte_end":8699413,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699414,"byte_end":8699445,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699446,"byte_end":8699480,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/prelude.rs","byte_start":8699481,"byte_end":8699488,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6955},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/lines.rs","byte_start":8712812,"byte_end":8712817,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":6957},{"krate":0,"index":6958},{"krate":0,"index":6959},{"krate":0,"index":6960}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3166},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/read_line.rs","byte_start":8714793,"byte_end":8714807,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/read_line.rs","byte_start":8714742,"byte_end":8714781,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3188},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/read_until.rs","byte_start":8716321,"byte_end":8716336,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/read_until.rs","byte_start":8716270,"byte_end":8716309,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6907},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/split.rs","byte_start":8717590,"byte_end":8717595,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":6911},{"krate":0,"index":6912}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3786},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/mod.rs","byte_start":8702289,"byte_end":8702299,"line_start":72,"line_end":72,"column_start":15,"column_end":25},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":3789},{"krate":0,"index":3791},{"krate":0,"index":3793},{"krate":0,"index":3794}],"decl_id":null,"docs":"        Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/mod.rs","byte_start":8704063,"byte_end":8704073,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntilFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3786},"children":[],"decl_id":null,"docs":"            Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/mod.rs","byte_start":8705862,"byte_end":8705871,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLineFuture where\nSelf: Unpin","parent":{"krate":0,"index":3786},"children":[],"decl_id":null,"docs":"            Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n            reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3793},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/mod.rs","byte_start":8707329,"byte_end":8707334,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Unpin + Sized","parent":{"krate":0,"index":3786},"children":[],"decl_id":null,"docs":"            Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/mod.rs","byte_start":8709098,"byte_end":8709103,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized","parent":{"krate":0,"index":3786},"children":[],"decl_id":null,"docs":"            Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3795},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/bytes.rs","byte_start":8735184,"byte_end":8735189,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":3797}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/bytes.rs","byte_start":8734926,"byte_end":8734968,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/bytes.rs","byte_start":8734969,"byte_end":8734972,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/bytes.rs","byte_start":8734973,"byte_end":8735043,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/bytes.rs","byte_start":8735044,"byte_end":8735107,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/bytes.rs","byte_start":8735108,"byte_end":8735111,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/bytes.rs","byte_start":8735112,"byte_end":8735155,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":6853},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8736976,"byte_end":8736981,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6856},{"krate":0,"index":6857},{"krate":0,"index":6858}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737705,"byte_end":8737715,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737154,"byte_end":8737210,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737215,"byte_end":8737218,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737223,"byte_end":8737237,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737242,"byte_end":8737245,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737250,"byte_end":8737263,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737268,"byte_end":8737348,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737353,"byte_end":8737358,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737363,"byte_end":8737393,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737398,"byte_end":8737426,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737431,"byte_end":8737434,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737439,"byte_end":8737487,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737492,"byte_end":8737540,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737545,"byte_end":8737548,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737553,"byte_end":8737594,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737599,"byte_end":8737649,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737654,"byte_end":8737659,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737664,"byte_end":8737681,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737686,"byte_end":8737693,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738333,"byte_end":8738340,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737779,"byte_end":8737841,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737846,"byte_end":8737849,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737854,"byte_end":8737868,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737873,"byte_end":8737876,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737881,"byte_end":8737894,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737899,"byte_end":8737979,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737984,"byte_end":8737989,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737994,"byte_end":8738024,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738029,"byte_end":8738057,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738062,"byte_end":8738065,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738070,"byte_end":8738118,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738123,"byte_end":8738171,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738176,"byte_end":8738179,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738184,"byte_end":8738225,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738230,"byte_end":8738277,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738282,"byte_end":8738287,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738292,"byte_end":8738309,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738314,"byte_end":8738321,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8739156,"byte_end":8739163,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738409,"byte_end":8738479,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738484,"byte_end":8738487,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738492,"byte_end":8738565,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738570,"byte_end":8738643,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738648,"byte_end":8738660,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738665,"byte_end":8738668,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738673,"byte_end":8738687,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738692,"byte_end":8738695,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738700,"byte_end":8738713,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738718,"byte_end":8738798,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738803,"byte_end":8738808,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738813,"byte_end":8738843,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738848,"byte_end":8738876,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738881,"byte_end":8738884,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738889,"byte_end":8738937,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738942,"byte_end":8738990,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8738995,"byte_end":8738998,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8739003,"byte_end":8739048,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8739053,"byte_end":8739100,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8739105,"byte_end":8739110,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8739115,"byte_end":8739132,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8739137,"byte_end":8739144,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3282},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read.rs","byte_start":8742444,"byte_end":8742454,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":3285},{"krate":0,"index":3286}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read.rs","byte_start":8742393,"byte_end":8742432,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3301},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_exact.rs","byte_start":8743045,"byte_end":8743060,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":3304},{"krate":0,"index":3305}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_exact.rs","byte_start":8742994,"byte_end":8743033,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3319},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_to_end.rs","byte_start":8743979,"byte_end":8743994,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_to_end.rs","byte_start":8743928,"byte_end":8743967,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3349},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_to_string.rs","byte_start":8746518,"byte_end":8746536,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_to_string.rs","byte_start":8746467,"byte_end":8746506,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3371},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_vectored.rs","byte_start":8747993,"byte_end":8748011,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":3374},{"krate":0,"index":3375}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_vectored.rs","byte_start":8747942,"byte_end":8747981,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6818},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8748920,"byte_end":8748924,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6820},{"krate":0,"index":6821}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749814,"byte_end":8749819,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749036,"byte_end":8749110,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749115,"byte_end":8749130,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749135,"byte_end":8749138,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749143,"byte_end":8749153,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749158,"byte_end":8749161,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749166,"byte_end":8749243,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749248,"byte_end":8749312,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749317,"byte_end":8749320,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749325,"byte_end":8749354,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749359,"byte_end":8749362,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749367,"byte_end":8749381,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749386,"byte_end":8749389,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749394,"byte_end":8749407,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749412,"byte_end":8749492,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749497,"byte_end":8749502,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749507,"byte_end":8749537,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749542,"byte_end":8749570,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749575,"byte_end":8749578,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749583,"byte_end":8749624,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749629,"byte_end":8749632,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749637,"byte_end":8749667,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749672,"byte_end":8749699,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749704,"byte_end":8749707,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749712,"byte_end":8749754,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749759,"byte_end":8749764,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749769,"byte_end":8749790,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749795,"byte_end":8749802,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750608,"byte_end":8750617,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749866,"byte_end":8749937,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749942,"byte_end":8750016,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750021,"byte_end":8750096,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750101,"byte_end":8750125,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750130,"byte_end":8750133,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750138,"byte_end":8750152,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750157,"byte_end":8750160,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750165,"byte_end":8750178,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750183,"byte_end":8750263,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750268,"byte_end":8750273,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750278,"byte_end":8750308,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750313,"byte_end":8750341,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750346,"byte_end":8750349,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750354,"byte_end":8750395,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750400,"byte_end":8750403,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750408,"byte_end":8750438,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750443,"byte_end":8750474,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750479,"byte_end":8750504,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750509,"byte_end":8750512,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750517,"byte_end":8750552,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750557,"byte_end":8750562,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750567,"byte_end":8750584,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750589,"byte_end":8750596,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751234,"byte_end":8751244,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750682,"byte_end":8750736,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750741,"byte_end":8750744,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750749,"byte_end":8750763,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750768,"byte_end":8750771,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750776,"byte_end":8750789,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750794,"byte_end":8750874,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750879,"byte_end":8750884,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750889,"byte_end":8750919,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750924,"byte_end":8750952,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750957,"byte_end":8750960,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8750965,"byte_end":8751009,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751014,"byte_end":8751017,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751022,"byte_end":8751050,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751055,"byte_end":8751089,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751094,"byte_end":8751130,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751135,"byte_end":8751138,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751143,"byte_end":8751178,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751183,"byte_end":8751188,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751193,"byte_end":8751210,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751215,"byte_end":8751222,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751829,"byte_end":8751836,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751288,"byte_end":8751334,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751339,"byte_end":8751342,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751347,"byte_end":8751361,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751366,"byte_end":8751369,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751374,"byte_end":8751387,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751392,"byte_end":8751472,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751477,"byte_end":8751482,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751487,"byte_end":8751517,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751522,"byte_end":8751550,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751555,"byte_end":8751558,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751563,"byte_end":8751607,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751612,"byte_end":8751615,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751620,"byte_end":8751648,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751653,"byte_end":8751687,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751692,"byte_end":8751728,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751733,"byte_end":8751736,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751741,"byte_end":8751773,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751778,"byte_end":8751783,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751788,"byte_end":8751805,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751810,"byte_end":8751817,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752611,"byte_end":8752618,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751883,"byte_end":8751937,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751942,"byte_end":8751945,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8751950,"byte_end":8752023,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752028,"byte_end":8752100,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752105,"byte_end":8752116,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752121,"byte_end":8752124,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752129,"byte_end":8752143,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752148,"byte_end":8752151,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752156,"byte_end":8752169,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752174,"byte_end":8752254,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752259,"byte_end":8752264,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752269,"byte_end":8752299,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752304,"byte_end":8752332,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752337,"byte_end":8752340,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752345,"byte_end":8752389,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752394,"byte_end":8752397,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752402,"byte_end":8752430,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752435,"byte_end":8752469,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752474,"byte_end":8752510,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752515,"byte_end":8752518,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752523,"byte_end":8752555,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752560,"byte_end":8752565,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752570,"byte_end":8752587,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752592,"byte_end":8752599,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3813},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8720626,"byte_end":8720633,"line_start":80,"line_end":80,"column_start":15,"column_end":22},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":3816},{"krate":0,"index":3818},{"krate":0,"index":3820},{"krate":0,"index":3822},{"krate":0,"index":3824},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829}],"decl_id":null,"docs":"        Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3816},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8721826,"byte_end":8721830,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"read","qualname":"::io::read::ReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> ReadFuture where Self: Unpin","parent":{"krate":0,"index":3813},"children":[],"decl_id":null,"docs":"            Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8722622,"byte_end":8722635,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut])\n-> ReadVectoredFuture where Self: Unpin","parent":{"krate":0,"index":3813},"children":[],"decl_id":null,"docs":"            Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3820},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8723792,"byte_end":8723803,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEndFuture where\nSelf: Unpin","parent":{"krate":0,"index":3813},"children":[],"decl_id":null,"docs":"            Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3822},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8724941,"byte_end":8724955,"line_start":210,"line_end":210,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToStringFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3813},"children":[],"decl_id":null,"docs":"            Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3824},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8727036,"byte_end":8727046,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExactFuture where\nSelf: Unpin","parent":{"krate":0,"index":3813},"children":[],"decl_id":null,"docs":"            Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8728400,"byte_end":8728404,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"take","qualname":"::io::read::ReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3813},"children":[],"decl_id":null,"docs":"            Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8729619,"byte_end":8729625,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":3813},"children":[],"decl_id":null,"docs":"            Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3828},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8730627,"byte_end":8730632,"line_start":384,"line_end":384,"column_start":12,"column_end":17},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"pub fn bytes(Self) -> Bytes<Self> where Self: Sized","parent":{"krate":0,"index":3813},"children":[],"decl_id":null,"docs":"            Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8731767,"byte_end":8731772,"line_start":420,"line_end":420,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"pub fn chain<R: Read>(Self, R) -> Chain<Self, R> where Self: Sized","parent":{"krate":0,"index":3813},"children":[],"decl_id":null,"docs":"            Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3432},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/seek/seek.rs","byte_start":8758966,"byte_end":8758976,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":3435},{"krate":0,"index":3436}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/seek/seek.rs","byte_start":8758915,"byte_end":8758954,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":3843},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/seek/mod.rs","byte_start":8756728,"byte_end":8756735,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":3846}],"decl_id":null,"docs":"        Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3846},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/seek/mod.rs","byte_start":8757469,"byte_end":8757473,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> SeekFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":3843},"children":[],"decl_id":null,"docs":"            Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3453},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/flush.rs","byte_start":8770645,"byte_end":8770656,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":3456}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/flush.rs","byte_start":8770594,"byte_end":8770633,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3470},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write.rs","byte_start":8771157,"byte_end":8771168,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write.rs","byte_start":8771106,"byte_end":8771145,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3489},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_all.rs","byte_start":8771751,"byte_end":8771765,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":3492},{"krate":0,"index":3493}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_all.rs","byte_start":8771700,"byte_end":8771739,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3507},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_fmt.rs","byte_start":8772683,"byte_end":8772697,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_fmt.rs","byte_start":8772620,"byte_end":8772659,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_fmt.rs","byte_start":8772660,"byte_end":8772671,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3528},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_vectored.rs","byte_start":8774307,"byte_end":8774326,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":3531},{"krate":0,"index":3532}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_vectored.rs","byte_start":8774256,"byte_end":8774295,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":3859},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/mod.rs","byte_start":8761912,"byte_end":8761920,"line_start":84,"line_end":84,"column_start":15,"column_end":23},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":3862},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3867},{"krate":0,"index":3869}],"decl_id":null,"docs":"        Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/mod.rs","byte_start":8762837,"byte_end":8762842,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"write","qualname":"::io::write::WriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> WriteFuture where Self: Unpin","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":"            Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/mod.rs","byte_start":8763644,"byte_end":8763649,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"pub fn flush(&mut Self) -> FlushFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":"            Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3865},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/mod.rs","byte_start":8764372,"byte_end":8764386,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectoredFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":"            Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3867},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/mod.rs","byte_start":8765483,"byte_end":8765492,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAllFuture where\nSelf: Unpin","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":"            Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3869},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/mod.rs","byte_start":8766701,"byte_end":8766710,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"pub fn write_fmt<'a>(&'a mut Self, std::fmt::Arguments) -> WriteFmtFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":"            Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6768},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777576,"byte_end":8777585,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":6770},{"krate":0,"index":6771},{"krate":0,"index":6772},{"krate":0,"index":6773}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778216,"byte_end":8778219,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777734,"byte_end":8777793,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777798,"byte_end":8777801,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777806,"byte_end":8777879,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777884,"byte_end":8777887,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777892,"byte_end":8777906,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777911,"byte_end":8777914,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777919,"byte_end":8777932,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777937,"byte_end":8778011,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778016,"byte_end":8778021,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778026,"byte_end":8778054,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778059,"byte_end":8778092,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778097,"byte_end":8778100,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778105,"byte_end":8778160,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778165,"byte_end":8778170,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778175,"byte_end":8778192,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778197,"byte_end":8778204,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778732,"byte_end":8778745,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778317,"byte_end":8778379,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778384,"byte_end":8778387,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778392,"byte_end":8778406,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778411,"byte_end":8778414,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778419,"byte_end":8778432,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778437,"byte_end":8778511,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778516,"byte_end":8778521,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778526,"byte_end":8778554,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778559,"byte_end":8778592,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778597,"byte_end":8778600,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778605,"byte_end":8778676,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778681,"byte_end":8778686,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778691,"byte_end":8778708,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778713,"byte_end":8778720,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779466,"byte_end":8779473,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778971,"byte_end":8779017,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779022,"byte_end":8779025,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779030,"byte_end":8779096,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779101,"byte_end":8779104,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779109,"byte_end":8779123,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779128,"byte_end":8779131,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779136,"byte_end":8779149,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779154,"byte_end":8779228,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779233,"byte_end":8779238,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779243,"byte_end":8779271,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779276,"byte_end":8779309,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779314,"byte_end":8779317,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779322,"byte_end":8779377,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779382,"byte_end":8779410,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779415,"byte_end":8779420,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779425,"byte_end":8779442,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779447,"byte_end":8779454,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3589},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780033,"byte_end":8780040,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779520,"byte_end":8779574,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779579,"byte_end":8779582,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779587,"byte_end":8779653,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779658,"byte_end":8779661,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779666,"byte_end":8779680,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779685,"byte_end":8779688,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779693,"byte_end":8779706,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779711,"byte_end":8779785,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779790,"byte_end":8779795,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779800,"byte_end":8779828,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779833,"byte_end":8779866,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779871,"byte_end":8779874,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779879,"byte_end":8779941,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779946,"byte_end":8779977,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779982,"byte_end":8779987,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8779992,"byte_end":8780009,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780014,"byte_end":8780021,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3591},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780837,"byte_end":8780843,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780338,"byte_end":8780385,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780390,"byte_end":8780393,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780398,"byte_end":8780467,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780472,"byte_end":8780475,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780480,"byte_end":8780494,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780499,"byte_end":8780502,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780507,"byte_end":8780520,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780525,"byte_end":8780599,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780604,"byte_end":8780609,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780614,"byte_end":8780642,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780647,"byte_end":8780680,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780685,"byte_end":8780688,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780693,"byte_end":8780748,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780753,"byte_end":8780781,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780786,"byte_end":8780791,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780796,"byte_end":8780813,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780818,"byte_end":8780825,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781425,"byte_end":8781435,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780911,"byte_end":8780976,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780981,"byte_end":8780984,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8780989,"byte_end":8781052,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781057,"byte_end":8781060,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781065,"byte_end":8781079,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781084,"byte_end":8781087,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781092,"byte_end":8781105,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781110,"byte_end":8781184,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781189,"byte_end":8781194,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781199,"byte_end":8781227,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781232,"byte_end":8781265,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781270,"byte_end":8781273,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781278,"byte_end":8781333,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781338,"byte_end":8781369,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781374,"byte_end":8781379,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781384,"byte_end":8781401,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781406,"byte_end":8781413,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6727},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8790686,"byte_end":8790695,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":6729},{"krate":0,"index":6730},{"krate":0,"index":6731}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3878},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791560,"byte_end":8791574,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8790789,"byte_end":8790855,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8790856,"byte_end":8790929,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8790930,"byte_end":8790982,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8790983,"byte_end":8790986,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8790987,"byte_end":8791001,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791002,"byte_end":8791005,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791006,"byte_end":8791019,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791020,"byte_end":8791094,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791095,"byte_end":8791128,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791129,"byte_end":8791163,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791164,"byte_end":8791167,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791168,"byte_end":8791250,"line_start":103,"line_end":103,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791251,"byte_end":8791254,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791255,"byte_end":8791303,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791304,"byte_end":8791358,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791359,"byte_end":8791378,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791379,"byte_end":8791398,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791399,"byte_end":8791442,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791443,"byte_end":8791483,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791484,"byte_end":8791493,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791494,"byte_end":8791500,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791501,"byte_end":8791506,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791507,"byte_end":8791524,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791525,"byte_end":8791531,"line_start":115,"line_end":115,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792157,"byte_end":8792160,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791635,"byte_end":8791727,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791732,"byte_end":8791765,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791770,"byte_end":8791773,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791778,"byte_end":8791792,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791797,"byte_end":8791800,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791805,"byte_end":8791818,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791823,"byte_end":8791850,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791855,"byte_end":8791929,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791934,"byte_end":8791967,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791972,"byte_end":8792006,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792011,"byte_end":8792014,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792019,"byte_end":8792101,"line_start":131,"line_end":131,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792106,"byte_end":8792111,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792116,"byte_end":8792133,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792138,"byte_end":8792145,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792827,"byte_end":8792840,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792258,"byte_end":8792323,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792328,"byte_end":8792331,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792336,"byte_end":8792350,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792355,"byte_end":8792358,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792363,"byte_end":8792418,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792423,"byte_end":8792426,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792431,"byte_end":8792444,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792449,"byte_end":8792476,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792481,"byte_end":8792555,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792560,"byte_end":8792593,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792598,"byte_end":8792632,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792637,"byte_end":8792640,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792645,"byte_end":8792707,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792712,"byte_end":8792771,"line_start":152,"line_end":152,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792776,"byte_end":8792781,"line_start":153,"line_end":153,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792786,"byte_end":8792803,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8792808,"byte_end":8792815,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793554,"byte_end":8793561,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793017,"byte_end":8793063,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793068,"byte_end":8793071,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793076,"byte_end":8793090,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793095,"byte_end":8793098,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793103,"byte_end":8793116,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793121,"byte_end":8793148,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793153,"byte_end":8793227,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793232,"byte_end":8793265,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793270,"byte_end":8793304,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793309,"byte_end":8793312,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793317,"byte_end":8793399,"line_start":174,"line_end":174,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793404,"byte_end":8793407,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793412,"byte_end":8793456,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793461,"byte_end":8793498,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793503,"byte_end":8793508,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793513,"byte_end":8793530,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793535,"byte_end":8793542,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794199,"byte_end":8794206,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793608,"byte_end":8793662,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793667,"byte_end":8793670,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793675,"byte_end":8793740,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793745,"byte_end":8793748,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793753,"byte_end":8793767,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793772,"byte_end":8793775,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793780,"byte_end":8793793,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793798,"byte_end":8793872,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793877,"byte_end":8793910,"line_start":193,"line_end":193,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793915,"byte_end":8793949,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793954,"byte_end":8793957,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8793962,"byte_end":8794044,"line_start":196,"line_end":196,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794049,"byte_end":8794052,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794057,"byte_end":8794101,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794106,"byte_end":8794143,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794148,"byte_end":8794153,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794158,"byte_end":8794175,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794180,"byte_end":8794187,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795272,"byte_end":8795282,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub async fn into_inner(Self) -> /*impl Trait*/ where Self: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794503,"byte_end":8794558,"line_start":214,"line_end":214,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794563,"byte_end":8794566,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794571,"byte_end":8794633,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794638,"byte_end":8794731,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794736,"byte_end":8794739,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794744,"byte_end":8794792,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794797,"byte_end":8794811,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794816,"byte_end":8794819,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794824,"byte_end":8794837,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794842,"byte_end":8794916,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794921,"byte_end":8794954,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794959,"byte_end":8794993,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8794998,"byte_end":8795001,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795006,"byte_end":8795088,"line_start":227,"line_end":227,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795093,"byte_end":8795096,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795101,"byte_end":8795149,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795154,"byte_end":8795210,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795215,"byte_end":8795220,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795225,"byte_end":8795242,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795247,"byte_end":8795254,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8796052,"byte_end":8796058,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795519,"byte_end":8795575,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795580,"byte_end":8795583,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795588,"byte_end":8795602,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795607,"byte_end":8795610,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795615,"byte_end":8795628,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795633,"byte_end":8795707,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795712,"byte_end":8795745,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795750,"byte_end":8795784,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795789,"byte_end":8795792,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795797,"byte_end":8795879,"line_start":253,"line_end":253,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795884,"byte_end":8795887,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795892,"byte_end":8795940,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8795945,"byte_end":8795996,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8796001,"byte_end":8796006,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8796011,"byte_end":8796028,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8796033,"byte_end":8796040,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3662},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803470,"byte_end":8803474,"line_start":135,"line_end":135,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"pub async fn copy<R, W>(R, W) -> /*impl Trait*/ where R: Read + Unpin,\nW: Write + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802218,"byte_end":8802275,"line_start":97,"line_end":97,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802276,"byte_end":8802279,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802280,"byte_end":8802348,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802349,"byte_end":8802413,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802414,"byte_end":8802430,"line_start":101,"line_end":101,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802431,"byte_end":8802434,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802435,"byte_end":8802498,"line_start":103,"line_end":103,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802499,"byte_end":8802536,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802537,"byte_end":8802540,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802541,"byte_end":8802621,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802622,"byte_end":8802687,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802688,"byte_end":8802691,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802692,"byte_end":8802751,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802752,"byte_end":8802755,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802756,"byte_end":8802824,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802825,"byte_end":8802861,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802862,"byte_end":8802865,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802866,"byte_end":8802878,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802879,"byte_end":8802882,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802883,"byte_end":8802958,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8802959,"byte_end":8803034,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803035,"byte_end":8803104,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803105,"byte_end":8803108,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803109,"byte_end":8803123,"line_start":120,"line_end":120,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803124,"byte_end":8803127,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803128,"byte_end":8803135,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803136,"byte_end":8803210,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803211,"byte_end":8803216,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803217,"byte_end":8803239,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803240,"byte_end":8803243,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803244,"byte_end":8803281,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803282,"byte_end":8803316,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803317,"byte_end":8803320,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803321,"byte_end":8803367,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803368,"byte_end":8803373,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803374,"byte_end":8803391,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803392,"byte_end":8803399,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"cfg(all(feature = \"unstable\", not(feature = \"docs\")))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803400,"byte_end":8803456,"line_start":134,"line_end":134,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3886},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805976,"byte_end":8805982,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":3888}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805152,"byte_end":8805215,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805216,"byte_end":8805244,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805245,"byte_end":8805248,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805249,"byte_end":8805317,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805318,"byte_end":8805390,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805391,"byte_end":8805470,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805471,"byte_end":8805496,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805497,"byte_end":8805500,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805501,"byte_end":8805575,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805576,"byte_end":8805643,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805644,"byte_end":8805677,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805678,"byte_end":8805681,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805682,"byte_end":8805711,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805712,"byte_end":8805741,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805742,"byte_end":8805773,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805774,"byte_end":8805836,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805837,"byte_end":8805900,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8805901,"byte_end":8805931,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3689},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806569,"byte_end":8806572,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806046,"byte_end":8806121,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806126,"byte_end":8806129,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806134,"byte_end":8806208,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806213,"byte_end":8806281,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806286,"byte_end":8806324,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806329,"byte_end":8806332,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806337,"byte_end":8806351,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806356,"byte_end":8806359,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806364,"byte_end":8806371,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806376,"byte_end":8806406,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806411,"byte_end":8806414,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806419,"byte_end":8806458,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806463,"byte_end":8806511,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806516,"byte_end":8806545,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806550,"byte_end":8806557,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3690},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807031,"byte_end":8807041,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806684,"byte_end":8806741,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806746,"byte_end":8806749,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806754,"byte_end":8806768,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806773,"byte_end":8806776,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806781,"byte_end":8806788,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806793,"byte_end":8806823,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806828,"byte_end":8806831,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806836,"byte_end":8806875,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806880,"byte_end":8806928,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806933,"byte_end":8806962,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806967,"byte_end":8806970,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806975,"byte_end":8807007,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807012,"byte_end":8807019,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807451,"byte_end":8807458,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807098,"byte_end":8807158,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807163,"byte_end":8807166,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807171,"byte_end":8807185,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807190,"byte_end":8807193,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807198,"byte_end":8807205,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807210,"byte_end":8807240,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807245,"byte_end":8807248,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807253,"byte_end":8807292,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807297,"byte_end":8807345,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807350,"byte_end":8807379,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807384,"byte_end":8807387,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807392,"byte_end":8807427,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807432,"byte_end":8807439,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808032,"byte_end":8808039,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807514,"byte_end":8807582,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807587,"byte_end":8807590,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807595,"byte_end":8807668,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807673,"byte_end":8807735,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807740,"byte_end":8807743,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807748,"byte_end":8807762,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807767,"byte_end":8807770,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807775,"byte_end":8807782,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807787,"byte_end":8807817,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807822,"byte_end":8807825,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807830,"byte_end":8807873,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807878,"byte_end":8807926,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807931,"byte_end":8807960,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807965,"byte_end":8807968,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8807973,"byte_end":8808008,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808013,"byte_end":8808020,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808760,"byte_end":8808768,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808103,"byte_end":8808151,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808156,"byte_end":8808159,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808164,"byte_end":8808178,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808183,"byte_end":8808186,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808191,"byte_end":8808198,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808203,"byte_end":8808277,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808282,"byte_end":8808287,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808292,"byte_end":8808322,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808327,"byte_end":8808361,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808366,"byte_end":8808398,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808403,"byte_end":8808406,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808411,"byte_end":8808463,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808468,"byte_end":8808471,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808476,"byte_end":8808511,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808516,"byte_end":8808519,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808524,"byte_end":8808567,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808572,"byte_end":8808607,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808612,"byte_end":8808615,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808620,"byte_end":8808664,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808669,"byte_end":8808704,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808709,"byte_end":8808714,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808719,"byte_end":8808736,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808741,"byte_end":8808748,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809238,"byte_end":8809250,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808826,"byte_end":8808863,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808868,"byte_end":8808871,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808876,"byte_end":8808890,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808895,"byte_end":8808898,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808903,"byte_end":8808910,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808915,"byte_end":8808945,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808950,"byte_end":8808953,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8808958,"byte_end":8809010,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809015,"byte_end":8809018,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809023,"byte_end":8809058,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809063,"byte_end":8809066,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809071,"byte_end":8809096,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809101,"byte_end":8809136,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809141,"byte_end":8809144,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809149,"byte_end":8809174,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809179,"byte_end":8809214,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809219,"byte_end":8809226,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3729},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813055,"byte_end":8813060,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812660,"byte_end":8812703,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812704,"byte_end":8812707,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812708,"byte_end":8812722,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812723,"byte_end":8812726,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812727,"byte_end":8812738,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812739,"byte_end":8812813,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812814,"byte_end":8812819,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812820,"byte_end":8812842,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812843,"byte_end":8812873,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812874,"byte_end":8812877,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812878,"byte_end":8812907,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812908,"byte_end":8812941,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812942,"byte_end":8812982,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812983,"byte_end":8812986,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8812987,"byte_end":8813015,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813016,"byte_end":8813021,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813022,"byte_end":8813039,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813040,"byte_end":8813047,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3730},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813278,"byte_end":8813283,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3731}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813104,"byte_end":8813139,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813140,"byte_end":8813143,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813144,"byte_end":8813205,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813206,"byte_end":8813233,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813234,"byte_end":8813237,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813238,"byte_end":8813266,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3749},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814595,"byte_end":8814601,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814076,"byte_end":8814145,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814146,"byte_end":8814149,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814150,"byte_end":8814246,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814247,"byte_end":8814250,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814251,"byte_end":8814266,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814267,"byte_end":8814270,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814271,"byte_end":8814282,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814283,"byte_end":8814357,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814358,"byte_end":8814363,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814364,"byte_end":8814386,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814387,"byte_end":8814417,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814418,"byte_end":8814421,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814422,"byte_end":8814450,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814451,"byte_end":8814504,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814505,"byte_end":8814508,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814509,"byte_end":8814555,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814556,"byte_end":8814561,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814562,"byte_end":8814579,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814580,"byte_end":8814587,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3750},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814871,"byte_end":8814877,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3751}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814647,"byte_end":8814729,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814730,"byte_end":8814733,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814734,"byte_end":8814796,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814797,"byte_end":8814824,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814825,"byte_end":8814828,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814829,"byte_end":8814859,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3765},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815811,"byte_end":8815815,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815469,"byte_end":8815523,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815524,"byte_end":8815527,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815528,"byte_end":8815542,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815543,"byte_end":8815546,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815547,"byte_end":8815558,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815559,"byte_end":8815633,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815634,"byte_end":8815639,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815640,"byte_end":8815662,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815663,"byte_end":8815693,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815694,"byte_end":8815697,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815698,"byte_end":8815730,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815731,"byte_end":8815771,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815772,"byte_end":8815777,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815778,"byte_end":8815795,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815796,"byte_end":8815803,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3766},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8816043,"byte_end":8816047,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3767}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815857,"byte_end":8815903,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815904,"byte_end":8815907,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815908,"byte_end":8815986,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8815987,"byte_end":8816000,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8816001,"byte_end":8816004,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8816005,"byte_end":8816031,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":3923},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817552,"byte_end":8817559,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = io::Result<T>>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8816939,"byte_end":8817002,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817003,"byte_end":8817006,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817007,"byte_end":8817063,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817064,"byte_end":8817123,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817124,"byte_end":8817127,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817128,"byte_end":8817142,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817143,"byte_end":8817146,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817147,"byte_end":8817160,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817161,"byte_end":8817235,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817236,"byte_end":8817241,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817242,"byte_end":8817270,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817271,"byte_end":8817274,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817275,"byte_end":8817297,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817298,"byte_end":8817301,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817302,"byte_end":8817349,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817350,"byte_end":8817382,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817383,"byte_end":8817420,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817421,"byte_end":8817471,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817472,"byte_end":8817486,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817487,"byte_end":8817493,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817494,"byte_end":8817506,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817507,"byte_end":8817512,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817513,"byte_end":8817530,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8817531,"byte_end":8817538,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3945},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819586,"byte_end":8819592,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8818817,"byte_end":8818890,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8818891,"byte_end":8818894,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8818895,"byte_end":8818956,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8818957,"byte_end":8818960,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8818961,"byte_end":8819033,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819034,"byte_end":8819037,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819038,"byte_end":8819085,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819086,"byte_end":8819089,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819090,"byte_end":8819181,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819182,"byte_end":8819274,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819275,"byte_end":8819288,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819289,"byte_end":8819292,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819293,"byte_end":8819307,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819308,"byte_end":8819311,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819312,"byte_end":8819325,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819326,"byte_end":8819400,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819401,"byte_end":8819406,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819407,"byte_end":8819429,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819430,"byte_end":8819460,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819461,"byte_end":8819464,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819465,"byte_end":8819499,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819500,"byte_end":8819546,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819547,"byte_end":8819552,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819553,"byte_end":8819570,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819571,"byte_end":8819578,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4008},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8820222,"byte_end":8820228,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819750,"byte_end":8819808,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819809,"byte_end":8819812,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819813,"byte_end":8819893,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819894,"byte_end":8819903,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819904,"byte_end":8819907,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819908,"byte_end":8819955,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819956,"byte_end":8819959,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8819960,"byte_end":8820051,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8820052,"byte_end":8820144,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8820145,"byte_end":8820158,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8820159,"byte_end":8820162,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8820163,"byte_end":8820193,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3966},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826079,"byte_end":8826084,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825324,"byte_end":8825397,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825398,"byte_end":8825401,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825402,"byte_end":8825462,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825463,"byte_end":8825466,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825467,"byte_end":8825537,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825538,"byte_end":8825541,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825542,"byte_end":8825589,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825590,"byte_end":8825593,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825594,"byte_end":8825685,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825686,"byte_end":8825778,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825779,"byte_end":8825792,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825793,"byte_end":8825796,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825797,"byte_end":8825811,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825812,"byte_end":8825815,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825816,"byte_end":8825829,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825830,"byte_end":8825904,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825905,"byte_end":8825910,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825911,"byte_end":8825933,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825934,"byte_end":8825937,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825938,"byte_end":8825966,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8825967,"byte_end":8826000,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826001,"byte_end":8826039,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826040,"byte_end":8826045,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826046,"byte_end":8826063,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826064,"byte_end":8826071,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4042},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826736,"byte_end":8826741,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826267,"byte_end":8826325,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826326,"byte_end":8826329,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826330,"byte_end":8826409,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826410,"byte_end":8826419,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826420,"byte_end":8826423,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826424,"byte_end":8826471,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826472,"byte_end":8826475,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826476,"byte_end":8826567,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826568,"byte_end":8826660,"line_start":52,"line_end":52,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826661,"byte_end":8826674,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826675,"byte_end":8826678,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8826679,"byte_end":8826707,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3968},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8828063,"byte_end":8828072,"line_start":112,"line_end":112,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"pub async fn read_line<'_, '_>(&'_ Self, &'_ mut String) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827658,"byte_end":8827710,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827715,"byte_end":8827718,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827723,"byte_end":8827737,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827742,"byte_end":8827745,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827750,"byte_end":8827763,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827768,"byte_end":8827842,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827847,"byte_end":8827852,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827857,"byte_end":8827879,"line_start":104,"line_end":104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827884,"byte_end":8827887,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827892,"byte_end":8827920,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827925,"byte_end":8827958,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827963,"byte_end":8828001,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8828006,"byte_end":8828011,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8828016,"byte_end":8828033,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8828038,"byte_end":8828045,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3983},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdio.rs","byte_start":8832588,"byte_end":8832594,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"pub async fn _print<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3986},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdio.rs","byte_start":8832765,"byte_end":8832772,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"pub async fn _eprint<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4001},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833866,"byte_end":8833872,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833096,"byte_end":8833170,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833171,"byte_end":8833174,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833175,"byte_end":8833236,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833237,"byte_end":8833240,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833241,"byte_end":8833313,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833314,"byte_end":8833317,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833318,"byte_end":8833365,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833366,"byte_end":8833369,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833370,"byte_end":8833461,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833462,"byte_end":8833554,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833555,"byte_end":8833568,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833569,"byte_end":8833572,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833573,"byte_end":8833587,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833588,"byte_end":8833591,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833592,"byte_end":8833605,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833606,"byte_end":8833680,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833681,"byte_end":8833686,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833687,"byte_end":8833709,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833710,"byte_end":8833740,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833741,"byte_end":8833744,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833745,"byte_end":8833779,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833780,"byte_end":8833826,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833827,"byte_end":8833832,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833833,"byte_end":8833850,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8833851,"byte_end":8833858,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4077},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834503,"byte_end":8834509,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834030,"byte_end":8834089,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834090,"byte_end":8834093,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834094,"byte_end":8834170,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834171,"byte_end":8834184,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834185,"byte_end":8834188,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834189,"byte_end":8834236,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834237,"byte_end":8834240,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834241,"byte_end":8834332,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834333,"byte_end":8834425,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834426,"byte_end":8834439,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834440,"byte_end":8834443,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8834444,"byte_end":8834474,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":2905},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/mod.rs","parent":null,"children":[{"krate":0,"index":4111}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16561,"byte_end":16584,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ OS-specific extensions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/mod.rs","byte_start":8668796,"byte_end":8668823,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":4111},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::os::unix","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":4113},{"krate":0,"index":4119},{"krate":0,"index":4129},{"krate":0,"index":4112}],"decl_id":null,"docs":" Platform-specific extensions for Unix platforms.\n","sig":null,"attributes":[{"value":"cfg(any(unix, feature = \"docs\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":15534,"byte_end":15569,"line_start":157,"line_end":157,"column_start":13,"column_end":48}},{"value":"/ Platform-specific extensions for Unix platforms.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","byte_start":8839395,"byte_end":8839447,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":4113},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::unix::io","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/io.rs","parent":null,"children":[{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4118}],"decl_id":null,"docs":" Unix-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16561,"byte_end":16584,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Unix-specific I/O extensions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/io.rs","byte_start":8839702,"byte_end":8839735,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":4119},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::os::unix::fs","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","parent":null,"children":[{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296}],"decl_id":null,"docs":" Unix-specific filesystem extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16970,"byte_end":16997,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Unix-specific filesystem extensions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8841994,"byte_end":8842034,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4123},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842655,"byte_end":8842662,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"symlink","qualname":"::os::unix::fs::symlink","value":"pub async fn symlink<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842108,"byte_end":8842158,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842159,"byte_end":8842162,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842163,"byte_end":8842233,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842234,"byte_end":8842237,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::os::unix::fs::symlink`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842238,"byte_end":8842310,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842311,"byte_end":8842314,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::fs::symlink`]: https://doc.rust-lang.org/std/os/unix/fs/fn.symlink.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842315,"byte_end":8842407,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842408,"byte_end":8842411,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842412,"byte_end":8842426,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842427,"byte_end":8842430,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842431,"byte_end":8842444,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842445,"byte_end":8842519,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842520,"byte_end":8842525,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::fs::symlink;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842526,"byte_end":8842567,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842568,"byte_end":8842571,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ symlink(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842572,"byte_end":8842609,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842610,"byte_end":8842615,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842616,"byte_end":8842633,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/fs.rs","byte_start":8842634,"byte_end":8842641,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4129},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::os::unix::net","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/mod.rs","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135},{"krate":0,"index":4188},{"krate":0,"index":4241},{"krate":0,"index":4301}],"decl_id":null,"docs":" Unix-specific networking extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16970,"byte_end":16997,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Unix-specific networking extensions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/mod.rs","byte_start":8844578,"byte_end":8844618,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4148},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848525,"byte_end":8848537,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::os::unix::net::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":4149}],"decl_id":null,"docs":" A Unix datagram socket.","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8847636,"byte_end":8847663,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8847664,"byte_end":8847667,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixDatagram` by [`bind`]ing it to a path, data can be [sent to] and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8847668,"byte_end":8847758,"line_start":16,"line_end":16,"column_start":1,"column_end":91}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8847759,"byte_end":8847804,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8847805,"byte_end":8847808,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixDatagram`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8847809,"byte_end":8847883,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8847884,"byte_end":8847887,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixDatagram`]:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8847888,"byte_end":8847929,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixDatagram.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8847930,"byte_end":8848000,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848001,"byte_end":8848027,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848028,"byte_end":8848066,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848067,"byte_end":8848097,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848098,"byte_end":8848101,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848102,"byte_end":8848117,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848118,"byte_end":8848121,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848122,"byte_end":8848135,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848136,"byte_end":8848210,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848211,"byte_end":8848216,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848217,"byte_end":8848264,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848265,"byte_end":8848268,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket1\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848269,"byte_end":8848328,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket2\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848329,"byte_end":8848387,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848388,"byte_end":8848391,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848392,"byte_end":8848426,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848427,"byte_end":8848481,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848482,"byte_end":8848487,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848488,"byte_end":8848505,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848506,"byte_end":8848513,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4152},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849168,"byte_end":8849172,"line_start":66,"line_end":66,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub async fn bind<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848782,"byte_end":8848841,"line_start":53,"line_end":53,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848846,"byte_end":8848849,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848854,"byte_end":8848868,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848873,"byte_end":8848876,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848881,"byte_end":8848894,"line_start":57,"line_end":57,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848899,"byte_end":8848973,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848978,"byte_end":8848983,"line_start":59,"line_end":59,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848988,"byte_end":8849035,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849040,"byte_end":8849043,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849048,"byte_end":8849106,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849111,"byte_end":8849116,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849121,"byte_end":8849138,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849143,"byte_end":8849150,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4156},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849756,"byte_end":8849763,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram which is not bound to any address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849389,"byte_end":8849451,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849456,"byte_end":8849459,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849464,"byte_end":8849478,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849483,"byte_end":8849486,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849491,"byte_end":8849504,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849509,"byte_end":8849583,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849588,"byte_end":8849593,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849598,"byte_end":8849645,"line_start":79,"line_end":79,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849650,"byte_end":8849653,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849658,"byte_end":8849700,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849705,"byte_end":8849710,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849715,"byte_end":8849732,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849737,"byte_end":8849744,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850329,"byte_end":8850333,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849895,"byte_end":8849944,"line_start":90,"line_end":90,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849949,"byte_end":8849952,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns two sockets which are connected to each other.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8849957,"byte_end":8850015,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850020,"byte_end":8850023,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850028,"byte_end":8850042,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850047,"byte_end":8850050,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850055,"byte_end":8850068,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850073,"byte_end":8850147,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850152,"byte_end":8850157,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850162,"byte_end":8850209,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850214,"byte_end":8850217,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let (socket1, socket2) = UnixDatagram::pair()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850222,"byte_end":8850273,"line_start":101,"line_end":101,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850278,"byte_end":8850283,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850288,"byte_end":8850305,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850310,"byte_end":8850317,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4158},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851216,"byte_end":8851223,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub async fn connect<P: AsRef<Path>, '_>(&'_ Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850535,"byte_end":8850584,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850589,"byte_end":8850592,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The [`send`] method may be used to send data to the specified address. [`recv`] and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850597,"byte_end":8850684,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ [`recv_from`] will only receive data from that address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850689,"byte_end":8850748,"line_start":115,"line_end":115,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850753,"byte_end":8850756,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850761,"byte_end":8850787,"line_start":117,"line_end":117,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850792,"byte_end":8850818,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850823,"byte_end":8850859,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850864,"byte_end":8850867,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850872,"byte_end":8850886,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850891,"byte_end":8850894,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850899,"byte_end":8850912,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850917,"byte_end":8850991,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8850996,"byte_end":8851001,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851006,"byte_end":8851053,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851058,"byte_end":8851061,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851066,"byte_end":8851108,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851113,"byte_end":8851154,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851159,"byte_end":8851164,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851169,"byte_end":8851186,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851191,"byte_end":8851198,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851827,"byte_end":8851837,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851426,"byte_end":8851465,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851470,"byte_end":8851473,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851478,"byte_end":8851492,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851497,"byte_end":8851500,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851505,"byte_end":8851518,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851523,"byte_end":8851597,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851602,"byte_end":8851607,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851612,"byte_end":8851659,"line_start":146,"line_end":146,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851664,"byte_end":8851667,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851672,"byte_end":8851730,"line_start":148,"line_end":148,"column_start":5,"column_end":63}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851735,"byte_end":8851771,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851776,"byte_end":8851781,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851786,"byte_end":8851803,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851808,"byte_end":8851815,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4163},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852484,"byte_end":8852493,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851928,"byte_end":8851974,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851979,"byte_end":8851982,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect the socket to a peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8851987,"byte_end":8852048,"line_start":159,"line_end":159,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852053,"byte_end":8852056,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852061,"byte_end":8852093,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852098,"byte_end":8852101,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852106,"byte_end":8852120,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852125,"byte_end":8852128,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852133,"byte_end":8852146,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852151,"byte_end":8852225,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852230,"byte_end":8852235,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852240,"byte_end":8852287,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852292,"byte_end":8852295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852300,"byte_end":8852342,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852347,"byte_end":8852388,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/ let peer = socket.peer_addr()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852393,"byte_end":8852428,"line_start":172,"line_end":172,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852433,"byte_end":8852438,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852443,"byte_end":8852460,"line_start":174,"line_end":174,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852465,"byte_end":8852472,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853127,"byte_end":8853136,"line_start":197,"line_end":197,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852583,"byte_end":8852617,"line_start":180,"line_end":180,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852622,"byte_end":8852625,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from where the data came.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852630,"byte_end":8852720,"line_start":182,"line_end":182,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852725,"byte_end":8852728,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852733,"byte_end":8852747,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852752,"byte_end":8852755,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852760,"byte_end":8852773,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852778,"byte_end":8852852,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852857,"byte_end":8852862,"line_start":188,"line_end":188,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852867,"byte_end":8852914,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852919,"byte_end":8852922,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852927,"byte_end":8852969,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8852974,"byte_end":8853006,"line_start":192,"line_end":192,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853011,"byte_end":8853065,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853070,"byte_end":8853075,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853080,"byte_end":8853097,"line_start":195,"line_end":195,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853102,"byte_end":8853109,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4167},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853756,"byte_end":8853760,"line_start":218,"line_end":218,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853250,"byte_end":8853284,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853289,"byte_end":8853292,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853297,"byte_end":8853346,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853351,"byte_end":8853354,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853359,"byte_end":8853373,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853378,"byte_end":8853381,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853386,"byte_end":8853399,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853404,"byte_end":8853478,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853483,"byte_end":8853488,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853493,"byte_end":8853540,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853545,"byte_end":8853548,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853553,"byte_end":8853611,"line_start":212,"line_end":212,"column_start":5,"column_end":63}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853616,"byte_end":8853648,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853653,"byte_end":8853694,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853699,"byte_end":8853704,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853709,"byte_end":8853726,"line_start":216,"line_end":216,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853731,"byte_end":8853738,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4170},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854347,"byte_end":8854354,"line_start":238,"line_end":238,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P: AsRef<Path>, '_, '_>(&'_ Self, &'_ [u8], P)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853855,"byte_end":8853909,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853914,"byte_end":8853917,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853922,"byte_end":8853974,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853979,"byte_end":8853982,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8853987,"byte_end":8854001,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854006,"byte_end":8854009,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854014,"byte_end":8854027,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854032,"byte_end":8854106,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854111,"byte_end":8854116,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854121,"byte_end":8854168,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854173,"byte_end":8854176,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854181,"byte_end":8854223,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854228,"byte_end":8854285,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854290,"byte_end":8854295,"line_start":235,"line_end":235,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854300,"byte_end":8854317,"line_start":236,"line_end":236,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854322,"byte_end":8854329,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4174},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855004,"byte_end":8855008,"line_start":259,"line_end":259,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854488,"byte_end":8854538,"line_start":242,"line_end":242,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854543,"byte_end":8854546,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854551,"byte_end":8854603,"line_start":244,"line_end":244,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854608,"byte_end":8854611,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854616,"byte_end":8854630,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854635,"byte_end":8854638,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854643,"byte_end":8854656,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854661,"byte_end":8854735,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854740,"byte_end":8854745,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854750,"byte_end":8854797,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854802,"byte_end":8854805,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854810,"byte_end":8854852,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854857,"byte_end":8854898,"line_start":254,"line_end":254,"column_start":5,"column_end":46}},{"value":"/ socket.send(b\"hello world\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854903,"byte_end":8854942,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854947,"byte_end":8854952,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854957,"byte_end":8854974,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8854979,"byte_end":8854986,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4177},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855824,"byte_end":8855832,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855099,"byte_end":8855164,"line_start":263,"line_end":263,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855169,"byte_end":8855172,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855177,"byte_end":8855267,"line_start":265,"line_end":265,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855272,"byte_end":8855361,"line_start":266,"line_end":266,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855366,"byte_end":8855369,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855374,"byte_end":8855444,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855449,"byte_end":8855452,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855457,"byte_end":8855472,"line_start":270,"line_end":270,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855477,"byte_end":8855480,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855485,"byte_end":8855498,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855503,"byte_end":8855577,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855582,"byte_end":8855587,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855592,"byte_end":8855639,"line_start":275,"line_end":275,"column_start":5,"column_end":52}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855644,"byte_end":8855671,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855676,"byte_end":8855679,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855684,"byte_end":8855726,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855731,"byte_end":8855768,"line_start":279,"line_end":279,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855773,"byte_end":8855778,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855783,"byte_end":8855800,"line_start":281,"line_end":281,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855805,"byte_end":8855812,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4209},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859060,"byte_end":8859072,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::os::unix::net::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":4210}],"decl_id":null,"docs":" A Unix domain socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A Unix domain socket server, listening for connections.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8857968,"byte_end":8858027,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858028,"byte_end":8858031,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858032,"byte_end":8858130,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ connections. These can be accepted by awaiting elements from the async stream of [`incoming`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858131,"byte_end":8858228,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ connections.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858229,"byte_end":8858245,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858246,"byte_end":8858249,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858250,"byte_end":8858306,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858307,"byte_end":8858310,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixListener`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858311,"byte_end":8858385,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858386,"byte_end":8858389,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixListener`]:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858390,"byte_end":8858431,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixListener.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858432,"byte_end":8858502,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858503,"byte_end":8858529,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858530,"byte_end":8858564,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858565,"byte_end":8858568,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858569,"byte_end":8858583,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858584,"byte_end":8858587,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858588,"byte_end":8858601,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858602,"byte_end":8858676,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858677,"byte_end":8858682,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858683,"byte_end":8858730,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858731,"byte_end":8858761,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858762,"byte_end":8858765,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858766,"byte_end":8858826,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858827,"byte_end":8858870,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858871,"byte_end":8858874,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858875,"byte_end":8858927,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858928,"byte_end":8858961,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8858962,"byte_end":8859010,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859011,"byte_end":8859016,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859017,"byte_end":8859022,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859023,"byte_end":8859040,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859041,"byte_end":8859048,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4212},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859529,"byte_end":8859533,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixListener>::bind","value":"pub async fn bind<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram listener bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram listener bound to the given path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859139,"byte_end":8859200,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859205,"byte_end":8859208,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859213,"byte_end":8859227,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859232,"byte_end":8859235,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859240,"byte_end":8859253,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859258,"byte_end":8859332,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859337,"byte_end":8859342,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859347,"byte_end":8859394,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859399,"byte_end":8859402,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859407,"byte_end":8859467,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859472,"byte_end":8859477,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859482,"byte_end":8859499,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859504,"byte_end":8859511,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4216},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860299,"byte_end":8860305,"line_start":93,"line_end":93,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859755,"byte_end":8859810,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859815,"byte_end":8859818,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859823,"byte_end":8859915,"line_start":79,"line_end":79,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859920,"byte_end":8859923,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859928,"byte_end":8859942,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859947,"byte_end":8859950,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859955,"byte_end":8859968,"line_start":83,"line_end":83,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859973,"byte_end":8860047,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860052,"byte_end":8860057,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860062,"byte_end":8860109,"line_start":86,"line_end":86,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860114,"byte_end":8860117,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860122,"byte_end":8860182,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/ let (socket, addr) = listener.accept().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860187,"byte_end":8860237,"line_start":89,"line_end":89,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860242,"byte_end":8860247,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860252,"byte_end":8860269,"line_start":91,"line_end":91,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860274,"byte_end":8860281,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4219},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861497,"byte_end":8861505,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860551,"byte_end":8860596,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860601,"byte_end":8860604,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860609,"byte_end":8860700,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860705,"byte_end":8860797,"line_start":107,"line_end":107,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860802,"byte_end":8860805,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860810,"byte_end":8860840,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860845,"byte_end":8860925,"line_start":110,"line_end":110,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860930,"byte_end":8860933,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860938,"byte_end":8860952,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860957,"byte_end":8860960,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860965,"byte_end":8860978,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8860983,"byte_end":8861057,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861062,"byte_end":8861067,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861072,"byte_end":8861119,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861124,"byte_end":8861154,"line_start":118,"line_end":118,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861159,"byte_end":8861162,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861167,"byte_end":8861227,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861232,"byte_end":8861275,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861280,"byte_end":8861283,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861288,"byte_end":8861340,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861345,"byte_end":8861378,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861383,"byte_end":8861431,"line_start":125,"line_end":125,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861436,"byte_end":8861441,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861446,"byte_end":8861451,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861456,"byte_end":8861473,"line_start":128,"line_end":128,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861478,"byte_end":8861485,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4220},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862045,"byte_end":8862055,"line_start":151,"line_end":151,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861625,"byte_end":8861679,"line_start":137,"line_end":137,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861684,"byte_end":8861687,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861692,"byte_end":8861706,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861711,"byte_end":8861714,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861719,"byte_end":8861732,"line_start":141,"line_end":141,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861737,"byte_end":8861811,"line_start":142,"line_end":142,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861816,"byte_end":8861821,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861826,"byte_end":8861873,"line_start":144,"line_end":144,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861878,"byte_end":8861881,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861886,"byte_end":8861946,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861951,"byte_end":8861989,"line_start":147,"line_end":147,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8861994,"byte_end":8861999,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862004,"byte_end":8862021,"line_start":149,"line_end":149,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862026,"byte_end":8862033,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4223},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8863081,"byte_end":8863089,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::os::unix::net::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":4225},{"krate":0,"index":4226}],"decl_id":null,"docs":" A stream of incoming Unix domain socket connections.","sig":null,"attributes":[{"value":"/ A stream of incoming Unix domain socket connections.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862483,"byte_end":8862539,"line_start":169,"line_end":169,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862540,"byte_end":8862543,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862544,"byte_end":8862642,"line_start":171,"line_end":171,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`UnixListener`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862643,"byte_end":8862702,"line_start":172,"line_end":172,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862703,"byte_end":8862706,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::Incoming`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862707,"byte_end":8862777,"line_start":174,"line_end":174,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862778,"byte_end":8862781,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::Incoming`]: https://doc.rust-lang.org/std/os/unix/net/struct.Incoming.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862782,"byte_end":8862882,"line_start":176,"line_end":176,"column_start":1,"column_end":101}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862883,"byte_end":8862963,"line_start":177,"line_end":177,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.UnixListener.html#method.incoming","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862964,"byte_end":8863022,"line_start":178,"line_end":178,"column_start":1,"column_end":59}},{"value":"/ [`UnixListener`]: struct.UnixListener.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8863023,"byte_end":8863069,"line_start":179,"line_end":179,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4297},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866062,"byte_end":8866072,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::os::unix::net::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":4298}],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[{"value":"/ A Unix stream socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865393,"byte_end":8865418,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865419,"byte_end":8865422,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixStream`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865423,"byte_end":8865495,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865496,"byte_end":8865499,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixStream`]:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865500,"byte_end":8865539,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865540,"byte_end":8865608,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865609,"byte_end":8865612,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865613,"byte_end":8865627,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865628,"byte_end":8865631,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865632,"byte_end":8865645,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865646,"byte_end":8865720,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865721,"byte_end":8865726,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865727,"byte_end":8865772,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865773,"byte_end":8865803,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865804,"byte_end":8865807,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865808,"byte_end":8865871,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865872,"byte_end":8865916,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865917,"byte_end":8865920,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let mut response = Vec::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865921,"byte_end":8865955,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ stream.read_to_end(&mut response).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8865956,"byte_end":8866001,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866002,"byte_end":8866007,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866008,"byte_end":8866025,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866026,"byte_end":8866033,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4263},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866529,"byte_end":8866536,"line_start":59,"line_end":59,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects to the socket to the specified address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866151,"byte_end":8866203,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866208,"byte_end":8866211,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866216,"byte_end":8866230,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866235,"byte_end":8866238,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866243,"byte_end":8866256,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866261,"byte_end":8866335,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866340,"byte_end":8866345,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866350,"byte_end":8866395,"line_start":53,"line_end":53,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866400,"byte_end":8866403,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866408,"byte_end":8866467,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866472,"byte_end":8866477,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866482,"byte_end":8866499,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866504,"byte_end":8866511,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4267},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867185,"byte_end":8867189,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866767,"byte_end":8866816,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866821,"byte_end":8866824,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Returns two streams which are connected to each other.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866829,"byte_end":8866887,"line_start":68,"line_end":68,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866892,"byte_end":8866895,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866900,"byte_end":8866914,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866919,"byte_end":8866922,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866927,"byte_end":8866940,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866945,"byte_end":8867019,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867024,"byte_end":8867029,"line_start":74,"line_end":74,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867034,"byte_end":8867079,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867084,"byte_end":8867087,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::pair()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867092,"byte_end":8867129,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867134,"byte_end":8867139,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867144,"byte_end":8867161,"line_start":79,"line_end":79,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867166,"byte_end":8867173,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4268},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867895,"byte_end":8867905,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867466,"byte_end":8867534,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867539,"byte_end":8867542,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867547,"byte_end":8867561,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867566,"byte_end":8867569,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867574,"byte_end":8867587,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867592,"byte_end":8867666,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867671,"byte_end":8867676,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867681,"byte_end":8867726,"line_start":99,"line_end":99,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867731,"byte_end":8867734,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867739,"byte_end":8867798,"line_start":101,"line_end":101,"column_start":5,"column_end":64}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867803,"byte_end":8867839,"line_start":102,"line_end":102,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867844,"byte_end":8867849,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867854,"byte_end":8867871,"line_start":104,"line_end":104,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867876,"byte_end":8867883,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4269},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868425,"byte_end":8868434,"line_start":124,"line_end":124,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8867996,"byte_end":8868065,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868070,"byte_end":8868073,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868078,"byte_end":8868092,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868097,"byte_end":8868100,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868105,"byte_end":8868118,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868123,"byte_end":8868197,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868202,"byte_end":8868207,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868212,"byte_end":8868257,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868262,"byte_end":8868265,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868270,"byte_end":8868329,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868334,"byte_end":8868369,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868374,"byte_end":8868379,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868384,"byte_end":8868401,"line_start":122,"line_end":122,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868406,"byte_end":8868413,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869237,"byte_end":8869245,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868524,"byte_end":8868590,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868595,"byte_end":8868598,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868603,"byte_end":8868693,"line_start":130,"line_end":130,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868698,"byte_end":8868787,"line_start":131,"line_end":131,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868792,"byte_end":8868795,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868800,"byte_end":8868870,"line_start":133,"line_end":133,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868875,"byte_end":8868878,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868883,"byte_end":8868896,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868901,"byte_end":8868975,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868980,"byte_end":8868985,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8868990,"byte_end":8869035,"line_start":138,"line_end":138,"column_start":5,"column_end":50}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869040,"byte_end":8869067,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869072,"byte_end":8869075,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869080,"byte_end":8869139,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869144,"byte_end":8869181,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869186,"byte_end":8869191,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869196,"byte_end":8869213,"line_start":144,"line_end":144,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869218,"byte_end":8869225,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2906},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":4302},{"krate":0,"index":4303},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16561,"byte_end":16584,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async prelude.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8668906,"byte_end":8668928,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8668929,"byte_end":8668932,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8668933,"byte_end":8669013,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669014,"byte_end":8669017,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669018,"byte_end":8669032,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669033,"byte_end":8669036,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Import the prelude with:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669037,"byte_end":8669065,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669066,"byte_end":8669069,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669070,"byte_end":8669077,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669078,"byte_end":8669108,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669109,"byte_end":8669139,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/prelude.rs","byte_start":8669140,"byte_end":8669147,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2907},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":11893},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328},{"krate":0,"index":4339},{"krate":0,"index":4408},{"krate":0,"index":3049},{"krate":0,"index":3092}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16561,"byte_end":16584,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Synchronization primitives.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670188,"byte_end":8670219,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670220,"byte_end":8670223,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::sync`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670224,"byte_end":8670277,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670278,"byte_end":8670281,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670282,"byte_end":8670346,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670347,"byte_end":8670350,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## The need for synchronization","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670351,"byte_end":8670386,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670387,"byte_end":8670390,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670391,"byte_end":8670465,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670466,"byte_end":8670537,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670538,"byte_end":8670541,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Conceptually, a Rust program is a series of operations which will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670542,"byte_end":8670611,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ be executed on a computer. The timeline of events happening in the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670612,"byte_end":8670682,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ program is consistent with the order of the operations in the code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670683,"byte_end":8670754,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670755,"byte_end":8670758,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consider the following code, operating on some global static variables:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670759,"byte_end":8670834,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670835,"byte_end":8670838,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670839,"byte_end":8670846,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ static mut A: u32 = 0;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670847,"byte_end":8670873,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ static mut B: u32 = 0;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670874,"byte_end":8670900,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ static mut C: u32 = 0;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670901,"byte_end":8670927,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670928,"byte_end":8670931,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670932,"byte_end":8670947,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     unsafe {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670948,"byte_end":8670964,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/         A = 3;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670965,"byte_end":8670983,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/         B = 4;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8670984,"byte_end":8671002,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         A = A + B;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671003,"byte_end":8671025,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/         C = B;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671026,"byte_end":8671044,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671045,"byte_end":8671087,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/         C = A;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671088,"byte_end":8671106,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671107,"byte_end":8671116,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671117,"byte_end":8671122,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671123,"byte_end":8671130,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671131,"byte_end":8671134,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671135,"byte_end":8671212,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671213,"byte_end":8671278,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ modified twice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671279,"byte_end":8671298,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671299,"byte_end":8671302,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When only a single thread is involved, the results are as expected:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671303,"byte_end":8671374,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ the line `7 4 4` gets printed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671375,"byte_end":8671409,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671410,"byte_end":8671413,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671414,"byte_end":8671491,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ final generated machine code might look very different from the code:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671492,"byte_end":8671565,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671566,"byte_end":8671569,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671570,"byte_end":8671645,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671646,"byte_end":8671697,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671698,"byte_end":8671701,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671702,"byte_end":8671782,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/   in a temporary location until it gets printed, with the global variable","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671783,"byte_end":8671860,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   never getting updated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671861,"byte_end":8671889,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671890,"byte_end":8671893,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - The final result could be determined just by looking at the code","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671894,"byte_end":8671964,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/   at compile time, so [constant folding] might turn the whole","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8671965,"byte_end":8672030,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672031,"byte_end":8672077,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672078,"byte_end":8672081,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The compiler is allowed to perform any combination of these","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672082,"byte_end":8672145,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ optimizations, as long as the final optimized code, when executed,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672146,"byte_end":8672216,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ produces the same results as the one without optimizations.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672217,"byte_end":8672280,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672281,"byte_end":8672284,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672285,"byte_end":8672355,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ about the program's execution order are often wrong. Access to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672356,"byte_end":8672422,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ global variables can lead to nondeterministic results, **even if**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672423,"byte_end":8672493,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672494,"byte_end":8672563,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ to introduce synchronization bugs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672564,"byte_end":8672602,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672603,"byte_end":8672606,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672607,"byte_end":8672682,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672683,"byte_end":8672753,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ synchronization primitives in this module.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672754,"byte_end":8672800,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672801,"byte_end":8672804,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672805,"byte_end":8672875,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672876,"byte_end":8672955,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672956,"byte_end":8672959,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Out-of-order execution","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672960,"byte_end":8672989,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672990,"byte_end":8672993,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instructions can execute in a different order from the one we define, due to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8672994,"byte_end":8673074,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ various reasons:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673075,"byte_end":8673095,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673096,"byte_end":8673099,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673100,"byte_end":8673176,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673177,"byte_end":8673253,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673254,"byte_end":8673332,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   start [prefetching] the values from memory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673333,"byte_end":8673382,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673383,"byte_end":8673386,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673387,"byte_end":8673457,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/   signal handlers or certain kinds of low-level code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673458,"byte_end":8673515,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/   Use [compiler fences] to prevent this reordering.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673516,"byte_end":8673571,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673572,"byte_end":8673575,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673576,"byte_end":8673643,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673644,"byte_end":8673701,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673702,"byte_end":8673772,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/   even though the machine code describes a sequential process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673773,"byte_end":8673839,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673840,"byte_end":8673843,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673844,"byte_end":8673910,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673911,"byte_end":8673914,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673915,"byte_end":8673984,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8673985,"byte_end":8674053,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/   kinds of primitives to deal with synchronization:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674054,"byte_end":8674109,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674110,"byte_end":8674179,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"/   other CPUs in the right order.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674180,"byte_end":8674216,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"/   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674217,"byte_end":8674286,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/   memory location doesn't lead to undefined behavior.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674287,"byte_end":8674344,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674345,"byte_end":8674348,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674349,"byte_end":8674415,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"/ [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674416,"byte_end":8674503,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"/ [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674504,"byte_end":8674576,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674577,"byte_end":8674647,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674648,"byte_end":8674724,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674725,"byte_end":8674802,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674803,"byte_end":8674806,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Higher-level synchronization objects","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674807,"byte_end":8674850,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674851,"byte_end":8674854,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674855,"byte_end":8674933,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ inconvenient to use, which is why async-std also exposes some","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8674934,"byte_end":8674999,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ higher-level synchronization objects.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675000,"byte_end":8675041,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675042,"byte_end":8675045,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ These abstractions can be built out of lower-level primitives.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675046,"byte_end":8675112,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ For efficiency, the sync objects in async-std are usually","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675113,"byte_end":8675174,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ implemented with help from the scheduler, which is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675175,"byte_end":8675229,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675230,"byte_end":8675298,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ a lock.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675299,"byte_end":8675310,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675311,"byte_end":8675314,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The following is an overview of the available synchronization","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675315,"byte_end":8675380,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ objects:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675381,"byte_end":8675393,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675394,"byte_end":8675397,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675398,"byte_end":8675468,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675469,"byte_end":8675536,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/   data until all the threads have finished using it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675537,"byte_end":8675593,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675594,"byte_end":8675597,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675598,"byte_end":8675666,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/   to reach a point in the program, before continuing execution all","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675667,"byte_end":8675737,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/   together.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675738,"byte_end":8675753,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675754,"byte_end":8675757,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - [`channel`]: Multi-producer, multi-consumer queues, used for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675758,"byte_end":8675824,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"/   message-based communication. Can provide a lightweight","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675825,"byte_end":8675885,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/   inter-task synchronisation mechanism, at the cost of some","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675886,"byte_end":8675949,"line_start":134,"line_end":134,"column_start":1,"column_end":64}},{"value":"/   extra memory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675950,"byte_end":8675969,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675970,"byte_end":8675973,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8675974,"byte_end":8676040,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"/   most one task at a time is able to access some data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676041,"byte_end":8676099,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676100,"byte_end":8676103,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676104,"byte_end":8676172,"line_start":140,"line_end":140,"column_start":1,"column_end":69}},{"value":"/   multiple readers at the same time, while allowing only one","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676173,"byte_end":8676237,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"/   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676238,"byte_end":8676308,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/   a mutex.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676309,"byte_end":8676323,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676324,"byte_end":8676327,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: struct.Arc.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676328,"byte_end":8676356,"line_start":145,"line_end":145,"column_start":1,"column_end":29}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676357,"byte_end":8676393,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676394,"byte_end":8676426,"line_start":147,"line_end":147,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: struct.Mutex.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676427,"byte_end":8676459,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"/ [`RwLock`]: struct.RwLock.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676460,"byte_end":8676494,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676495,"byte_end":8676498,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676499,"byte_end":8676513,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676514,"byte_end":8676517,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676518,"byte_end":8676580,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676581,"byte_end":8676584,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676585,"byte_end":8676592,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676593,"byte_end":8676632,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676633,"byte_end":8676638,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676639,"byte_end":8676677,"line_start":158,"line_end":158,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676678,"byte_end":8676702,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676703,"byte_end":8676706,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676707,"byte_end":8676744,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676745,"byte_end":8676769,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676770,"byte_end":8676773,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676774,"byte_end":8676802,"line_start":164,"line_end":164,"column_start":1,"column_end":29}},{"value":"/     *m2.lock().await = 1;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676803,"byte_end":8676832,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/ })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676833,"byte_end":8676839,"line_start":166,"line_end":166,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676840,"byte_end":8676851,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676852,"byte_end":8676855,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(*m1.lock().await, 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676856,"byte_end":8676892,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676893,"byte_end":8676898,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676899,"byte_end":8676907,"line_start":171,"line_end":171,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676908,"byte_end":8676915,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/mod.rs","byte_start":8676917,"byte_end":8676957,"line_start":174,"line_end":174,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2938},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678923,"byte_end":8678929,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943}],"decl_id":null,"docs":" A reader-writer lock for protecting shared data.","sig":null,"attributes":[{"value":"/ A reader-writer lock for protecting shared data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678229,"byte_end":8678281,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678282,"byte_end":8678285,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::RwLock`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678286,"byte_end":8678345,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678346,"byte_end":8678349,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::RwLock`]: https://doc.rust-lang.org/std/sync/struct.RwLock.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678350,"byte_end":8678430,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678431,"byte_end":8678434,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678435,"byte_end":8678449,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678450,"byte_end":8678453,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678454,"byte_end":8678461,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678462,"byte_end":8678501,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678502,"byte_end":8678507,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678508,"byte_end":8678540,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678541,"byte_end":8678544,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678545,"byte_end":8678575,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678576,"byte_end":8678579,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Multiple read locks can be held at a time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678580,"byte_end":8678629,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/ let r1 = lock.read().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678630,"byte_end":8678661,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ let r2 = lock.read().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678662,"byte_end":8678693,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(*r1, 5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678694,"byte_end":8678717,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(*r2, 5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678718,"byte_end":8678741,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ drop((r1, r2));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678742,"byte_end":8678761,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678762,"byte_end":8678765,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Only one write locks can be held at a time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678766,"byte_end":8678816,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/ let mut w = lock.write().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678817,"byte_end":8678852,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/ *w += 1;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678853,"byte_end":8678865,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/ assert_eq!(*w, 6);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678866,"byte_end":8678888,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678889,"byte_end":8678894,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678895,"byte_end":8678903,"line_start":50,"line_end":50,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8678904,"byte_end":8678911,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679375,"byte_end":8679378,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new reader-writer lock.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679187,"byte_end":8679224,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679229,"byte_end":8679232,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679237,"byte_end":8679251,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679256,"byte_end":8679259,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679264,"byte_end":8679271,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679276,"byte_end":8679308,"line_start":68,"line_end":68,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679313,"byte_end":8679316,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(0);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679321,"byte_end":8679351,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679356,"byte_end":8679363,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8680082,"byte_end":8680086,"line_start":103,"line_end":103,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a read lock.","sig":null,"attributes":[{"value":"/ Acquires a read lock.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679632,"byte_end":8679657,"line_start":83,"line_end":83,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679662,"byte_end":8679665,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679670,"byte_end":8679726,"line_start":85,"line_end":85,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679731,"byte_end":8679734,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679739,"byte_end":8679753,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679758,"byte_end":8679761,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679766,"byte_end":8679773,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679778,"byte_end":8679817,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679822,"byte_end":8679827,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679832,"byte_end":8679864,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679869,"byte_end":8679872,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679877,"byte_end":8679907,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679912,"byte_end":8679915,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679920,"byte_end":8679950,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679955,"byte_end":8679977,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679982,"byte_end":8679985,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679990,"byte_end":8680029,"line_start":99,"line_end":99,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8680034,"byte_end":8680039,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8680044,"byte_end":8680052,"line_start":101,"line_end":101,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8680057,"byte_end":8680064,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682768,"byte_end":8682776,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Option<RwLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682119,"byte_end":8682155,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682160,"byte_end":8682163,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ If a read lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682168,"byte_end":8682262,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682267,"byte_end":8682325,"line_start":161,"line_end":161,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682330,"byte_end":8682333,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682338,"byte_end":8682418,"line_start":163,"line_end":163,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682423,"byte_end":8682426,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682431,"byte_end":8682445,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682450,"byte_end":8682453,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682458,"byte_end":8682465,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682470,"byte_end":8682509,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682514,"byte_end":8682519,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682524,"byte_end":8682556,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682561,"byte_end":8682564,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682569,"byte_end":8682599,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682604,"byte_end":8682607,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682612,"byte_end":8682642,"line_start":174,"line_end":174,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682647,"byte_end":8682669,"line_start":175,"line_end":175,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682674,"byte_end":8682677,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682682,"byte_end":8682721,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682726,"byte_end":8682731,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682736,"byte_end":8682744,"line_start":179,"line_end":179,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8682749,"byte_end":8682756,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8684050,"byte_end":8684055,"line_start":228,"line_end":228,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a write lock.","sig":null,"attributes":[{"value":"/ Acquires a write lock.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683605,"byte_end":8683631,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683636,"byte_end":8683639,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683644,"byte_end":8683700,"line_start":210,"line_end":210,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683705,"byte_end":8683708,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683713,"byte_end":8683727,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683732,"byte_end":8683735,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683740,"byte_end":8683747,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683752,"byte_end":8683791,"line_start":215,"line_end":215,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683796,"byte_end":8683801,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683806,"byte_end":8683838,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683843,"byte_end":8683846,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683851,"byte_end":8683881,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683886,"byte_end":8683889,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683894,"byte_end":8683929,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ *n = 2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683934,"byte_end":8683945,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683950,"byte_end":8683953,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8683958,"byte_end":8683997,"line_start":224,"line_end":224,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8684002,"byte_end":8684007,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8684012,"byte_end":8684020,"line_start":226,"line_end":226,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8684025,"byte_end":8684032,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686620,"byte_end":8686629,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Option<RwLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a write lock.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8685968,"byte_end":8686005,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686010,"byte_end":8686013,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If a write lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686018,"byte_end":8686113,"line_start":282,"line_end":282,"column_start":5,"column_end":100}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686118,"byte_end":8686176,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686181,"byte_end":8686184,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686189,"byte_end":8686269,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686274,"byte_end":8686277,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686282,"byte_end":8686296,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686301,"byte_end":8686304,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686309,"byte_end":8686316,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686321,"byte_end":8686360,"line_start":290,"line_end":290,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686365,"byte_end":8686370,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686375,"byte_end":8686407,"line_start":292,"line_end":292,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686412,"byte_end":8686415,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686420,"byte_end":8686450,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686455,"byte_end":8686458,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686463,"byte_end":8686493,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686498,"byte_end":8686520,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686525,"byte_end":8686528,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_none());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686533,"byte_end":8686573,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686578,"byte_end":8686583,"line_start":300,"line_end":300,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686588,"byte_end":8686596,"line_start":301,"line_end":301,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686601,"byte_end":8686608,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687097,"byte_end":8687107,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686849,"byte_end":8686902,"line_start":311,"line_end":311,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686907,"byte_end":8686910,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686915,"byte_end":8686929,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686934,"byte_end":8686937,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686942,"byte_end":8686949,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686954,"byte_end":8686986,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686991,"byte_end":8686994,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(10);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8686999,"byte_end":8687030,"line_start":318,"line_end":318,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(lock.into_inner(), 10);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687035,"byte_end":8687073,"line_start":319,"line_end":319,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687078,"byte_end":8687085,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687697,"byte_end":8687704,"line_start":343,"line_end":343,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687179,"byte_end":8687234,"line_start":325,"line_end":325,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687239,"byte_end":8687242,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking takes place -- the mutable","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687247,"byte_end":8687337,"line_start":327,"line_end":327,"column_start":5,"column_end":95}},{"value":"/ borrow statically guarantees no locks exist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687342,"byte_end":8687390,"line_start":328,"line_end":328,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687395,"byte_end":8687398,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687403,"byte_end":8687417,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687422,"byte_end":8687425,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687430,"byte_end":8687437,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687442,"byte_end":8687481,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687486,"byte_end":8687491,"line_start":334,"line_end":334,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687496,"byte_end":8687528,"line_start":335,"line_end":335,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687533,"byte_end":8687536,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let mut lock = RwLock::new(0);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687541,"byte_end":8687575,"line_start":337,"line_end":337,"column_start":5,"column_end":39}},{"value":"/ *lock.get_mut() = 10;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687580,"byte_end":8687605,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(*lock.write().await, 10);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687610,"byte_end":8687650,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687655,"byte_end":8687660,"line_start":340,"line_end":340,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687665,"byte_end":8687673,"line_start":341,"line_end":341,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687678,"byte_end":8687685,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3002},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688606,"byte_end":8688621,"line_start":377,"line_end":377,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the read lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the read lock when dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688541,"byte_end":8688594,"line_start":376,"line_end":376,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689704,"byte_end":8689720,"line_start":414,"line_end":414,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the write lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the write lock when dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689638,"byte_end":8689692,"line_start":413,"line_end":413,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4564},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873197,"byte_end":8873204,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":4565},{"krate":0,"index":4566},{"krate":0,"index":4567}],"decl_id":null,"docs":" A barrier enables multiple tasks to synchronize the beginning\n of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple tasks to synchronize the beginning","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872320,"byte_end":8872385,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ of some computation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872386,"byte_end":8872410,"line_start":4,"line_end":4,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872411,"byte_end":8872414,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872415,"byte_end":8872429,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872430,"byte_end":8872433,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872434,"byte_end":8872441,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872442,"byte_end":8872481,"line_start":9,"line_end":9,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872482,"byte_end":8872487,"line_start":10,"line_end":10,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Barrier};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872488,"byte_end":8872528,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872529,"byte_end":8872553,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872554,"byte_end":8872557,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872558,"byte_end":8872603,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872604,"byte_end":8872649,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872650,"byte_end":8872670,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872671,"byte_end":8872703,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872704,"byte_end":8872758,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872759,"byte_end":8872804,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/     handles.push(task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872805,"byte_end":8872850,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872851,"byte_end":8872887,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/         c.wait().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872888,"byte_end":8872915,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872916,"byte_end":8872951,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/     }));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872952,"byte_end":8872964,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872965,"byte_end":8872970,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ // Wait for the other futures to finish.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8872971,"byte_end":8873015,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ for handle in handles {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873016,"byte_end":8873043,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/     handle.await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873044,"byte_end":8873065,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873066,"byte_end":8873071,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873072,"byte_end":8873081,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873082,"byte_end":8873089,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873090,"byte_end":8873118,"line_start":32,"line_end":32,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4575},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873868,"byte_end":8873885,"line_start":64,"line_end":64,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873408,"byte_end":8873508,"line_start":48,"line_end":48,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873509,"byte_end":8873512,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`wait`]: struct.Barrier.html#method.wait","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873513,"byte_end":8873558,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873559,"byte_end":8873595,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873596,"byte_end":8873599,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873600,"byte_end":8873614,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873615,"byte_end":8873618,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873619,"byte_end":8873626,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use async_std::sync::Barrier;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873627,"byte_end":8873660,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873661,"byte_end":8873664,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let barrier = Barrier::new(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873665,"byte_end":8873699,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/ let barrier_wait_result = barrier.wait();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873700,"byte_end":8873745,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873746,"byte_end":8873753,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873754,"byte_end":8873782,"line_start":61,"line_end":61,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4333},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874316,"byte_end":8874319,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of tasks.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873913,"byte_end":8873978,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873983,"byte_end":8873986,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`wait`] and then wake up","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873991,"byte_end":8874064,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ all tasks at once when the `n`th task calls [`wait`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874069,"byte_end":8874126,"line_start":70,"line_end":70,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874131,"byte_end":8874134,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`wait`]: #method.wait","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874139,"byte_end":8874165,"line_start":72,"line_end":72,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874170,"byte_end":8874173,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874178,"byte_end":8874192,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874197,"byte_end":8874200,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874205,"byte_end":8874212,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Barrier;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874217,"byte_end":8874244,"line_start":77,"line_end":77,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874249,"byte_end":8874252,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let barrier = Barrier::new(10);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874257,"byte_end":8874292,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874297,"byte_end":8874304,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875955,"byte_end":8875959,"line_start":131,"line_end":131,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Blocks the current task until all tasks have rendezvoused here.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874563,"byte_end":8874630,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874635,"byte_end":8874638,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all tasks have rendezvoused once, and can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874643,"byte_end":8874717,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ be used continuously.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874722,"byte_end":8874747,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874752,"byte_end":8874755,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) task will receive a [`BarrierWaitResult`] that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874760,"byte_end":8874831,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ returns `true` from [`is_leader`] when returning from this function, and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874836,"byte_end":8874912,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ all other tasks will receive a result that will return `false` from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874917,"byte_end":8874988,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ [`is_leader`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8874993,"byte_end":8875011,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875016,"byte_end":8875019,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`BarrierWaitResult`]: struct.BarrierWaitResult.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875024,"byte_end":8875080,"line_start":102,"line_end":102,"column_start":5,"column_end":61}},{"value":"/ [`is_leader`]: struct.BarrierWaitResult.html#method.is_leader","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875085,"byte_end":8875150,"line_start":103,"line_end":103,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875155,"byte_end":8875158,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875163,"byte_end":8875177,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875182,"byte_end":8875185,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875190,"byte_end":8875197,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875202,"byte_end":8875241,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875246,"byte_end":8875251,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::{Arc, Barrier};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875256,"byte_end":8875296,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875301,"byte_end":8875325,"line_start":111,"line_end":111,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875330,"byte_end":8875333,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875338,"byte_end":8875383,"line_start":113,"line_end":113,"column_start":5,"column_end":50}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875388,"byte_end":8875433,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875438,"byte_end":8875458,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875463,"byte_end":8875495,"line_start":116,"line_end":116,"column_start":5,"column_end":37}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875500,"byte_end":8875554,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875559,"byte_end":8875604,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/     handles.push(task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875609,"byte_end":8875654,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875659,"byte_end":8875695,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/         c.wait().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875700,"byte_end":8875727,"line_start":121,"line_end":121,"column_start":5,"column_end":32}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875732,"byte_end":8875767,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/     }));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875772,"byte_end":8875784,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875789,"byte_end":8875794,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ // Wait for the other futures to finish.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875799,"byte_end":8875843,"line_start":125,"line_end":125,"column_start":5,"column_end":49}},{"value":"/ for handle in handles {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875848,"byte_end":8875875,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/     handle.await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875880,"byte_end":8875901,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875906,"byte_end":8875911,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875916,"byte_end":8875925,"line_start":129,"line_end":129,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8875930,"byte_end":8875937,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4338},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8877171,"byte_end":8877180,"line_start":171,"line_end":171,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task from [`wait`] is the \"leader task\".","sig":null,"attributes":[{"value":"/ Returns `true` if this task from [`wait`] is the \"leader task\".","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876580,"byte_end":8876647,"line_start":152,"line_end":152,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876652,"byte_end":8876655,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Only one task will have `true` returned from their result, all other","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876660,"byte_end":8876732,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ tasks will have `false` returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876737,"byte_end":8876774,"line_start":155,"line_end":155,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876779,"byte_end":8876782,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`wait`]: struct.Barrier.html#method.wait","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876787,"byte_end":8876832,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876837,"byte_end":8876840,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876845,"byte_end":8876859,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876864,"byte_end":8876867,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876872,"byte_end":8876879,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876884,"byte_end":8876923,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876928,"byte_end":8876933,"line_start":163,"line_end":163,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::Barrier;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876938,"byte_end":8876971,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876976,"byte_end":8876979,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let barrier = Barrier::new(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876984,"byte_end":8877018,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ let barrier_wait_result = barrier.wait().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8877023,"byte_end":8877074,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/ println!(\"{:?}\", barrier_wait_result.is_leader());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8877079,"byte_end":8877133,"line_start":168,"line_end":168,"column_start":5,"column_end":59}},{"value":"/ # });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8877138,"byte_end":8877147,"line_start":169,"line_end":169,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8877152,"byte_end":8877159,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4582},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879409,"byte_end":8879426,"line_start":11,"line_end":11,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::sync::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879640,"byte_end":8879649,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"pub fn timed_out(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the wait was known to have timed out.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879569,"byte_end":8879628,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4353},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880669,"byte_end":8880676,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::sync::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":4354}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879690,"byte_end":8879714,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879715,"byte_end":8879718,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::Condvar`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879719,"byte_end":8879779,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879780,"byte_end":8879783,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Condvar`]: https://doc.rust-lang.org/std/sync/struct.Condvar.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879784,"byte_end":8879866,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879867,"byte_end":8879870,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879871,"byte_end":8879885,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879886,"byte_end":8879889,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879890,"byte_end":8879897,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879898,"byte_end":8879937,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879938,"byte_end":8879943,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879944,"byte_end":8879967,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879968,"byte_end":8879971,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879972,"byte_end":8880014,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880015,"byte_end":8880039,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880040,"byte_end":8880043,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880044,"byte_end":8880105,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880106,"byte_end":8880135,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880136,"byte_end":8880139,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880140,"byte_end":8880217,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880218,"byte_end":8880246,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880247,"byte_end":8880282,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880283,"byte_end":8880327,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/     *started = true;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880328,"byte_end":8880352,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880353,"byte_end":8880413,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880414,"byte_end":8880440,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880441,"byte_end":8880448,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880449,"byte_end":8880452,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880453,"byte_end":8880492,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880493,"byte_end":8880523,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880524,"byte_end":8880564,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ while !*started {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880565,"byte_end":8880586,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880587,"byte_end":8880630,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880631,"byte_end":8880636,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880637,"byte_end":8880640,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880641,"byte_end":8880649,"line_start":57,"line_end":57,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880650,"byte_end":8880657,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4360},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881062,"byte_end":8881065,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Condvar>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable","sig":null,"attributes":[{"value":"/ Creates a new condition variable","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880874,"byte_end":8880910,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880915,"byte_end":8880918,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880923,"byte_end":8880937,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880942,"byte_end":8880945,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880950,"byte_end":8880957,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Condvar;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880962,"byte_end":8880995,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881000,"byte_end":8881003,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let cvar = Condvar::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881008,"byte_end":8881038,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881043,"byte_end":8881050,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4361},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882288,"byte_end":8882292,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"name":"wait","qualname":"<Condvar>::wait","value":"pub async fn wait<'a, T, '_>(&'_ Self, MutexGuard) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until this condition variable receives a notification.","sig":null,"attributes":[{"value":"/ Blocks the current task until this condition variable receives a notification.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881154,"byte_end":8881236,"line_start":88,"line_end":88,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881241,"byte_end":8881244,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Unlike the std equivalent, this does not check that a single mutex is used at runtime.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881249,"byte_end":8881339,"line_start":90,"line_end":90,"column_start":5,"column_end":95}},{"value":"/ However, as a best practice avoid using with multiple mutexes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881344,"byte_end":8881410,"line_start":91,"line_end":91,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881415,"byte_end":8881418,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881423,"byte_end":8881437,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881442,"byte_end":8881445,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881450,"byte_end":8881457,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881462,"byte_end":8881501,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881506,"byte_end":8881529,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881534,"byte_end":8881537,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881542,"byte_end":8881584,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881589,"byte_end":8881613,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881618,"byte_end":8881621,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881626,"byte_end":8881687,"line_start":102,"line_end":102,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881692,"byte_end":8881721,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881726,"byte_end":8881729,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881734,"byte_end":8881762,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881767,"byte_end":8881802,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881807,"byte_end":8881851,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881856,"byte_end":8881880,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881885,"byte_end":8881945,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881950,"byte_end":8881976,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881981,"byte_end":8881988,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8881993,"byte_end":8881996,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882001,"byte_end":8882040,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882045,"byte_end":8882075,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882080,"byte_end":8882120,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882125,"byte_end":8882146,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882151,"byte_end":8882194,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882199,"byte_end":8882204,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882209,"byte_end":8882217,"line_start":119,"line_end":119,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882222,"byte_end":8882229,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882234,"byte_end":8882270,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883853,"byte_end":8883863,"line_start":171,"line_end":171,"column_start":18,"column_end":28},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"pub async fn wait_until<'a, T, F, '_>(&'_ Self, MutexGuard, F)\n-> /*impl Trait*/ where F: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current taks until this condition variable receives a notification and the\n required condition is met. Spurious wakeups are ignored and this function will only\n return once the condition has been met.","sig":null,"attributes":[{"value":"/ Blocks the current taks until this condition variable receives a notification and the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882690,"byte_end":8882779,"line_start":138,"line_end":138,"column_start":5,"column_end":94}},{"value":"/ required condition is met. Spurious wakeups are ignored and this function will only","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882784,"byte_end":8882871,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ return once the condition has been met.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882876,"byte_end":8882919,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882924,"byte_end":8882927,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882932,"byte_end":8882946,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882951,"byte_end":8882954,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882959,"byte_end":8882966,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8882971,"byte_end":8883010,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883015,"byte_end":8883020,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883025,"byte_end":8883048,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883053,"byte_end":8883056,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883061,"byte_end":8883103,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883108,"byte_end":8883132,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883137,"byte_end":8883140,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883145,"byte_end":8883206,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883211,"byte_end":8883240,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883245,"byte_end":8883248,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883253,"byte_end":8883281,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883286,"byte_end":8883321,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883326,"byte_end":8883370,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883375,"byte_end":8883399,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883404,"byte_end":8883464,"line_start":159,"line_end":159,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883469,"byte_end":8883495,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883500,"byte_end":8883507,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883512,"byte_end":8883515,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883520,"byte_end":8883559,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883564,"byte_end":8883594,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883599,"byte_end":8883672,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ let _guard = cvar.wait_until(lock.lock().await, |started| { *started }).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883677,"byte_end":8883759,"line_start":166,"line_end":166,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883764,"byte_end":8883769,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883774,"byte_end":8883782,"line_start":168,"line_end":168,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883787,"byte_end":8883794,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8883799,"byte_end":8883835,"line_start":170,"line_end":170,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4375},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885470,"byte_end":8885482,"line_start":226,"line_end":226,"column_start":18,"column_end":30},"name":"wait_timeout","qualname":"<Condvar>::wait_timeout","value":"pub async fn wait_timeout<'a, T, '_>(&'_ Self, MutexGuard, Duration)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884150,"byte_end":8884245,"line_start":185,"line_end":185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884250,"byte_end":8884253,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ For these reasons `Condvar::wait_timeout_until` is recommended in most cases.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884258,"byte_end":8884339,"line_start":187,"line_end":187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884344,"byte_end":8884347,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884352,"byte_end":8884366,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884371,"byte_end":8884374,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884379,"byte_end":8884386,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884391,"byte_end":8884430,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884435,"byte_end":8884440,"line_start":193,"line_end":193,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884445,"byte_end":8884468,"line_start":194,"line_end":194,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884473,"byte_end":8884501,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884506,"byte_end":8884509,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884514,"byte_end":8884556,"line_start":197,"line_end":197,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884561,"byte_end":8884585,"line_start":198,"line_end":198,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884590,"byte_end":8884593,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884598,"byte_end":8884659,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884664,"byte_end":8884693,"line_start":201,"line_end":201,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884698,"byte_end":8884701,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884706,"byte_end":8884734,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/   let (lock, cvar) = &*pair2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884739,"byte_end":8884772,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/   let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884777,"byte_end":8884819,"line_start":205,"line_end":205,"column_start":5,"column_end":47}},{"value":"/   *started = true;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884824,"byte_end":8884846,"line_start":206,"line_end":206,"column_start":5,"column_end":27}},{"value":"/   // We notify the condvar that the value has changed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884851,"byte_end":8884909,"line_start":207,"line_end":207,"column_start":5,"column_end":63}},{"value":"/   cvar.notify_one();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884914,"byte_end":8884938,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884943,"byte_end":8884950,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884955,"byte_end":8884958,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8884963,"byte_end":8885001,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885006,"byte_end":8885036,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885041,"byte_end":8885081,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885086,"byte_end":8885096,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/   let result = cvar.wait_timeout(started, Duration::from_millis(10)).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885101,"byte_end":8885180,"line_start":215,"line_end":215,"column_start":5,"column_end":84}},{"value":"/   started = result.0;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885185,"byte_end":8885210,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/   if *started == true {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885215,"byte_end":8885242,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/       // We received the notification and the value has been updated, we can leave.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885247,"byte_end":8885334,"line_start":218,"line_end":218,"column_start":5,"column_end":92}},{"value":"/       break","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885339,"byte_end":8885354,"line_start":219,"line_end":219,"column_start":5,"column_end":20}},{"value":"/   }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885359,"byte_end":8885366,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885371,"byte_end":8885376,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885381,"byte_end":8885386,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885391,"byte_end":8885399,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885404,"byte_end":8885411,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885416,"byte_end":8885452,"line_start":225,"line_end":225,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4380},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887130,"byte_end":8887148,"line_start":275,"line_end":275,"column_start":18,"column_end":36},"name":"wait_timeout_until","qualname":"<Condvar>::wait_timeout_until","value":"pub async fn wait_timeout_until<'a, T, F,\n                                '_>(&'_ Self, MutexGuard, Duration, F)\n-> /*impl Trait*/ where F: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.\n Spurious wakes will not cause this function to return.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885864,"byte_end":8885959,"line_start":238,"line_end":238,"column_start":5,"column_end":100}},{"value":"/ Spurious wakes will not cause this function to return.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8885964,"byte_end":8886022,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886027,"byte_end":8886030,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886035,"byte_end":8886049,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886054,"byte_end":8886061,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886066,"byte_end":8886105,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886110,"byte_end":8886133,"line_start":244,"line_end":244,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886138,"byte_end":8886166,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886171,"byte_end":8886174,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886179,"byte_end":8886221,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886226,"byte_end":8886250,"line_start":248,"line_end":248,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886255,"byte_end":8886258,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886263,"byte_end":8886324,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886329,"byte_end":8886358,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886363,"byte_end":8886366,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886371,"byte_end":8886399,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886404,"byte_end":8886439,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886444,"byte_end":8886488,"line_start":255,"line_end":255,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886493,"byte_end":8886517,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886522,"byte_end":8886582,"line_start":257,"line_end":257,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886587,"byte_end":8886613,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886618,"byte_end":8886625,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886630,"byte_end":8886633,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886638,"byte_end":8886676,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886681,"byte_end":8886711,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/ let result = cvar.wait_timeout_until(","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886716,"byte_end":8886757,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/     lock.lock().await,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886762,"byte_end":8886788,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/     Duration::from_millis(100),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886793,"byte_end":8886828,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     |&mut started| started,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886833,"byte_end":8886864,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/ ).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886869,"byte_end":8886881,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/ if result.1.timed_out() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886886,"byte_end":8886915,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/     // timed-out without the condition ever evaluating to true.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886920,"byte_end":8886987,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8886992,"byte_end":8886997,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ // access the locked mutex via result.0","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887002,"byte_end":8887045,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887050,"byte_end":8887059,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887064,"byte_end":8887071,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887076,"byte_end":8887112,"line_start":274,"line_end":274,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4386},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888511,"byte_end":8888521,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked task on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked task on this condvar.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887620,"byte_end":8887666,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887671,"byte_end":8887674,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887679,"byte_end":8887693,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887698,"byte_end":8887701,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887706,"byte_end":8887713,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887718,"byte_end":8887769,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887774,"byte_end":8887797,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887802,"byte_end":8887805,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887810,"byte_end":8887852,"line_start":299,"line_end":299,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887857,"byte_end":8887881,"line_start":300,"line_end":300,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887886,"byte_end":8887889,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887894,"byte_end":8887955,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887960,"byte_end":8887989,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8887994,"byte_end":8887997,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888002,"byte_end":8888030,"line_start":305,"line_end":305,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888035,"byte_end":8888070,"line_start":306,"line_end":306,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888075,"byte_end":8888119,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888124,"byte_end":8888148,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888153,"byte_end":8888213,"line_start":309,"line_end":309,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888218,"byte_end":8888244,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888249,"byte_end":8888256,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888261,"byte_end":8888264,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888269,"byte_end":8888308,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888313,"byte_end":8888343,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888348,"byte_end":8888388,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888393,"byte_end":8888414,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888419,"byte_end":8888462,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888467,"byte_end":8888472,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888477,"byte_end":8888487,"line_start":319,"line_end":319,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888492,"byte_end":8888499,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4387},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889558,"byte_end":8889568,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"pub fn notify_all(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked tasks on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked tasks on this condvar.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888576,"byte_end":8888623,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888628,"byte_end":8888631,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888636,"byte_end":8888650,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888655,"byte_end":8888662,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888667,"byte_end":8888718,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888723,"byte_end":8888728,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888733,"byte_end":8888756,"line_start":331,"line_end":331,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888761,"byte_end":8888764,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888769,"byte_end":8888811,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888816,"byte_end":8888840,"line_start":334,"line_end":334,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888845,"byte_end":8888848,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888853,"byte_end":8888914,"line_start":336,"line_end":336,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888919,"byte_end":8888948,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888953,"byte_end":8888956,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888961,"byte_end":8888989,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8888994,"byte_end":8889029,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889034,"byte_end":8889078,"line_start":341,"line_end":341,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889083,"byte_end":8889107,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889112,"byte_end":8889172,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_all();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889177,"byte_end":8889203,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889208,"byte_end":8889215,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889220,"byte_end":8889223,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889228,"byte_end":8889267,"line_start":347,"line_end":347,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889272,"byte_end":8889302,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889307,"byte_end":8889347,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889352,"byte_end":8889425,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ while !*started {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889430,"byte_end":8889451,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889456,"byte_end":8889499,"line_start":352,"line_end":352,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889504,"byte_end":8889509,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889514,"byte_end":8889519,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889524,"byte_end":8889534,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889539,"byte_end":8889546,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":4433},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893792,"byte_end":8893799,"line_start":67,"line_end":67,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::channel::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded multi-producer multi-consumer channel.","sig":null,"attributes":[{"value":"/ Creates a bounded multi-producer multi-consumer channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892365,"byte_end":8892425,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892426,"byte_end":8892429,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This channel has a buffer that can hold at most `cap` messages at a time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892430,"byte_end":8892507,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892508,"byte_end":8892511,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Senders and receivers can be cloned. When all senders associated with a channel get dropped, it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892512,"byte_end":8892611,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ becomes closed. Receive operations on a closed and empty channel return [RecvError] instead of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892612,"byte_end":8892710,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ trying to await a message when using [Receiver::recv] or `None` when used as a [Stream].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892711,"byte_end":8892803,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892804,"byte_end":8892807,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892808,"byte_end":8892820,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892821,"byte_end":8892824,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ If `cap` is zero, this function will panic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892825,"byte_end":8892872,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892873,"byte_end":8892876,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892877,"byte_end":8892891,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892892,"byte_end":8892895,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892896,"byte_end":8892903,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892904,"byte_end":8892929,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/ # fn main() -> Result<(), async_std::sync::RecvError> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892930,"byte_end":8892989,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8892990,"byte_end":8893029,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893030,"byte_end":8893035,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893036,"byte_end":8893064,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893065,"byte_end":8893068,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893069,"byte_end":8893102,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893103,"byte_end":8893127,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893128,"byte_end":8893131,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893132,"byte_end":8893160,"line_start":46,"line_end":46,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893161,"byte_end":8893164,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // This call returns immediately because there is enough space in the channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893165,"byte_end":8893247,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/ s.send(1usize).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893248,"byte_end":8893273,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893274,"byte_end":8893277,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893278,"byte_end":8893306,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/     // This call will have to wait because the channel is full.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893307,"byte_end":8893374,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/     // It will be able to complete only after the first message is received.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893375,"byte_end":8893455,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/     s.send(2).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893456,"byte_end":8893480,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893481,"byte_end":8893488,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893489,"byte_end":8893492,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893493,"byte_end":8893539,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(r.recv().await?, 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893540,"byte_end":8893575,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(r.recv().await?, 2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893576,"byte_end":8893611,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893612,"byte_end":8893624,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893625,"byte_end":8893630,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893631,"byte_end":8893641,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893642,"byte_end":8893649,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893650,"byte_end":8893678,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"deprecated = \"new channel api at async_std::channel\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8893729,"byte_end":8893784,"line_start":66,"line_end":66,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4435},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894832,"byte_end":8894838,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::channel::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4437}],"decl_id":null,"docs":" The sending side of a channel.","sig":null,"attributes":[{"value":"/ The sending side of a channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894048,"byte_end":8894082,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894083,"byte_end":8894086,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`channel`] function. See its","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894087,"byte_end":8894150,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894151,"byte_end":8894178,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894179,"byte_end":8894182,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894183,"byte_end":8894215,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894216,"byte_end":8894219,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894220,"byte_end":8894234,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894235,"byte_end":8894238,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894239,"byte_end":8894246,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894247,"byte_end":8894272,"line_start":89,"line_end":89,"column_start":1,"column_end":26}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894273,"byte_end":8894312,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894313,"byte_end":8894318,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894319,"byte_end":8894352,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894353,"byte_end":8894377,"line_start":93,"line_end":93,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894378,"byte_end":8894381,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ let (s1, r) = channel(100);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894382,"byte_end":8894413,"line_start":95,"line_end":95,"column_start":1,"column_end":32}},{"value":"/ let s2 = s1.clone();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894414,"byte_end":8894438,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894439,"byte_end":8894442,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move { s1.send(1).await });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894443,"byte_end":8894492,"line_start":98,"line_end":98,"column_start":1,"column_end":50}},{"value":"/ task::spawn(async move { s2.send(2).await });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894493,"byte_end":8894542,"line_start":99,"line_end":99,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894543,"byte_end":8894546,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ let msg1 = r.recv().await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894547,"byte_end":8894586,"line_start":101,"line_end":101,"column_start":1,"column_end":40}},{"value":"/ let msg2 = r.recv().await.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894587,"byte_end":8894626,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894627,"byte_end":8894630,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(msg1 + msg2, 3);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894631,"byte_end":8894662,"line_start":104,"line_end":104,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894663,"byte_end":8894668,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894669,"byte_end":8894677,"line_start":106,"line_end":106,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894678,"byte_end":8894685,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894686,"byte_end":8894714,"line_start":108,"line_end":108,"column_start":1,"column_end":29}},{"value":"deprecated = \"new channel api at async_std::channel\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894765,"byte_end":8894820,"line_start":110,"line_end":110,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4440},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895680,"byte_end":8895684,"line_start":145,"line_end":145,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a message into the channel.","sig":null,"attributes":[{"value":"/ Sends a message into the channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894928,"byte_end":8894965,"line_start":117,"line_end":117,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894970,"byte_end":8894973,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, this method will wait until there is space in the channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894978,"byte_end":8895064,"line_start":119,"line_end":119,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895069,"byte_end":8895072,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895077,"byte_end":8895091,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895096,"byte_end":8895099,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895104,"byte_end":8895111,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895116,"byte_end":8895141,"line_start":124,"line_end":124,"column_start":5,"column_end":30}},{"value":"/ # fn main() -> Result<(), async_std::sync::RecvError> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895146,"byte_end":8895205,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895210,"byte_end":8895249,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895254,"byte_end":8895259,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895264,"byte_end":8895297,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895302,"byte_end":8895326,"line_start":129,"line_end":129,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895331,"byte_end":8895334,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895339,"byte_end":8895367,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895372,"byte_end":8895375,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895380,"byte_end":8895408,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/     s.send(1).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895413,"byte_end":8895437,"line_start":134,"line_end":134,"column_start":5,"column_end":29}},{"value":"/     s.send(2).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895442,"byte_end":8895466,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895471,"byte_end":8895478,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895483,"byte_end":8895486,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.recv().await?, 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895491,"byte_end":8895526,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.recv().await?, 2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895531,"byte_end":8895566,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ assert!(r.recv().await.is_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895571,"byte_end":8895608,"line_start":140,"line_end":140,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895613,"byte_end":8895618,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895623,"byte_end":8895635,"line_start":142,"line_end":142,"column_start":5,"column_end":17}},{"value":"/ # }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895640,"byte_end":8895650,"line_start":143,"line_end":143,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895655,"byte_end":8895662,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898310,"byte_end":8898318,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message into the channel.","sig":null,"attributes":[{"value":"/ Attempts to send a message into the channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8897850,"byte_end":8897898,"line_start":207,"line_end":207,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8897903,"byte_end":8897906,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, this method will return an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8897911,"byte_end":8897972,"line_start":209,"line_end":209,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8897977,"byte_end":8897980,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8897985,"byte_end":8897999,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898004,"byte_end":8898007,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898012,"byte_end":8898019,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898024,"byte_end":8898049,"line_start":214,"line_end":214,"column_start":5,"column_end":30}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898054,"byte_end":8898093,"line_start":215,"line_end":215,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898098,"byte_end":8898103,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898108,"byte_end":8898141,"line_start":217,"line_end":217,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898146,"byte_end":8898149,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898154,"byte_end":8898182,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/ assert!(s.try_send(1).is_ok());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898187,"byte_end":8898222,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/ assert!(s.try_send(2).is_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898227,"byte_end":8898263,"line_start":221,"line_end":221,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898268,"byte_end":8898273,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898278,"byte_end":8898286,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898291,"byte_end":8898298,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4459},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898670,"byte_end":8898678,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity.","sig":null,"attributes":[{"value":"/ Returns the channel capacity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898413,"byte_end":8898446,"line_start":229,"line_end":229,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898451,"byte_end":8898454,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898459,"byte_end":8898473,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898478,"byte_end":8898481,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898486,"byte_end":8898493,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898498,"byte_end":8898523,"line_start":234,"line_end":234,"column_start":5,"column_end":30}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898528,"byte_end":8898561,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898566,"byte_end":8898569,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let (s, _) = channel::<i32>(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898574,"byte_end":8898609,"line_start":237,"line_end":237,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.capacity(), 5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898614,"byte_end":8898646,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898651,"byte_end":8898658,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4460},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899129,"byte_end":8899137,"line_start":262,"line_end":262,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Sender<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898733,"byte_end":8898776,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898781,"byte_end":8898784,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898789,"byte_end":8898803,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898808,"byte_end":8898811,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898816,"byte_end":8898823,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898828,"byte_end":8898853,"line_start":249,"line_end":249,"column_start":5,"column_end":30}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898858,"byte_end":8898897,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898902,"byte_end":8898907,"line_start":251,"line_end":251,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898912,"byte_end":8898945,"line_start":252,"line_end":252,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898950,"byte_end":8898953,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898958,"byte_end":8898986,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898991,"byte_end":8898994,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8898999,"byte_end":8899025,"line_start":256,"line_end":256,"column_start":5,"column_end":31}},{"value":"/ s.send(0).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899030,"byte_end":8899050,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/ assert!(!s.is_empty());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899055,"byte_end":8899082,"line_start":258,"line_end":258,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899087,"byte_end":8899092,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899097,"byte_end":8899105,"line_start":260,"line_end":260,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899110,"byte_end":8899117,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4461},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899591,"byte_end":8899598,"line_start":284,"line_end":284,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Sender<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is full.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is full.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899198,"byte_end":8899240,"line_start":266,"line_end":266,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899245,"byte_end":8899248,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899253,"byte_end":8899267,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899272,"byte_end":8899275,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899280,"byte_end":8899287,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899292,"byte_end":8899317,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899322,"byte_end":8899361,"line_start":272,"line_end":272,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899366,"byte_end":8899371,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899376,"byte_end":8899409,"line_start":274,"line_end":274,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899414,"byte_end":8899417,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899422,"byte_end":8899450,"line_start":276,"line_end":276,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899455,"byte_end":8899458,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ assert!(!s.is_full());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899463,"byte_end":8899489,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ s.send(0).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899494,"byte_end":8899514,"line_start":279,"line_end":279,"column_start":5,"column_end":25}},{"value":"/ assert!(s.is_full());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899519,"byte_end":8899544,"line_start":280,"line_end":280,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899549,"byte_end":8899554,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899559,"byte_end":8899567,"line_start":282,"line_end":282,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899572,"byte_end":8899579,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4462},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900087,"byte_end":8900090,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"len","qualname":"<Sender<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages in the channel.","sig":null,"attributes":[{"value":"/ Returns the number of messages in the channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899658,"byte_end":8899708,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899713,"byte_end":8899716,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899721,"byte_end":8899735,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899740,"byte_end":8899743,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899748,"byte_end":8899755,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899760,"byte_end":8899785,"line_start":293,"line_end":293,"column_start":5,"column_end":30}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899790,"byte_end":8899829,"line_start":294,"line_end":294,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899834,"byte_end":8899839,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899844,"byte_end":8899877,"line_start":296,"line_end":296,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899882,"byte_end":8899885,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899890,"byte_end":8899918,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(s.len(), 0);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899923,"byte_end":8899950,"line_start":299,"line_end":299,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899955,"byte_end":8899958,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ s.send(1).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899963,"byte_end":8899983,"line_start":301,"line_end":301,"column_start":5,"column_end":25}},{"value":"/ s.send(2).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8899988,"byte_end":8900008,"line_start":302,"line_end":302,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(s.len(), 2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900013,"byte_end":8900040,"line_start":303,"line_end":303,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900045,"byte_end":8900050,"line_start":304,"line_end":304,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900055,"byte_end":8900063,"line_start":305,"line_end":305,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900068,"byte_end":8900075,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4472},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902069,"byte_end":8902077,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::channel::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4474},{"krate":0,"index":4475}],"decl_id":null,"docs":" The receiving side of a channel.","sig":null,"attributes":[{"value":"/ The receiving side of a channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900957,"byte_end":8900993,"line_start":342,"line_end":342,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900994,"byte_end":8900997,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ This type receives messages by calling `recv`. But it also implements the [`Stream`] trait,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900998,"byte_end":8901093,"line_start":344,"line_end":344,"column_start":1,"column_end":96}},{"value":"/ which means it can act as an asynchronous iterator. This struct is created by the [`channel`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901094,"byte_end":8901191,"line_start":345,"line_end":345,"column_start":1,"column_end":98}},{"value":"/ function. See its documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901192,"byte_end":8901237,"line_start":346,"line_end":346,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901238,"byte_end":8901241,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901242,"byte_end":8901274,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ [`Stream`]: ../stream/trait.Stream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901275,"byte_end":8901318,"line_start":349,"line_end":349,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901319,"byte_end":8901322,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901323,"byte_end":8901337,"line_start":351,"line_end":351,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901338,"byte_end":8901341,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901342,"byte_end":8901349,"line_start":353,"line_end":353,"column_start":1,"column_end":8}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901350,"byte_end":8901375,"line_start":354,"line_end":354,"column_start":1,"column_end":26}},{"value":"/ # fn main() -> Result<(), async_std::sync::RecvError> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901376,"byte_end":8901435,"line_start":355,"line_end":355,"column_start":1,"column_end":60}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901436,"byte_end":8901475,"line_start":356,"line_end":356,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901476,"byte_end":8901481,"line_start":357,"line_end":357,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901482,"byte_end":8901510,"line_start":358,"line_end":358,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901511,"byte_end":8901514,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901515,"byte_end":8901548,"line_start":360,"line_end":360,"column_start":1,"column_end":34}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901549,"byte_end":8901573,"line_start":361,"line_end":361,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901574,"byte_end":8901577,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ let (s, r) = channel(100);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901578,"byte_end":8901608,"line_start":363,"line_end":363,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901609,"byte_end":8901612,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901613,"byte_end":8901641,"line_start":365,"line_end":365,"column_start":1,"column_end":29}},{"value":"/     s.send(1usize).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901642,"byte_end":8901671,"line_start":366,"line_end":366,"column_start":1,"column_end":30}},{"value":"/     task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901672,"byte_end":8901722,"line_start":367,"line_end":367,"column_start":1,"column_end":51}},{"value":"/     s.send(2).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901723,"byte_end":8901747,"line_start":368,"line_end":368,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901748,"byte_end":8901755,"line_start":369,"line_end":369,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901756,"byte_end":8901759,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r.recv().await?, 1); // Received immediately.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901760,"byte_end":8901820,"line_start":371,"line_end":371,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(r.recv().await?, 2); // Received after 1 second.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901821,"byte_end":8901884,"line_start":372,"line_end":372,"column_start":1,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901885,"byte_end":8901890,"line_start":373,"line_end":373,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901891,"byte_end":8901903,"line_start":374,"line_end":374,"column_start":1,"column_end":13}},{"value":"/ # }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901904,"byte_end":8901914,"line_start":375,"line_end":375,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901915,"byte_end":8901922,"line_start":376,"line_end":376,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8901923,"byte_end":8901951,"line_start":377,"line_end":377,"column_start":1,"column_end":29}},{"value":"deprecated = \"new channel api at async_std::channel\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902002,"byte_end":8902057,"line_start":379,"line_end":379,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4478},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903165,"byte_end":8903169,"line_start":420,"line_end":420,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a message from the channel.","sig":null,"attributes":[{"value":"/ Receives a message from the channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902268,"byte_end":8902308,"line_start":389,"line_end":389,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902313,"byte_end":8902316,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ If the channel is empty and still has senders, this method","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902321,"byte_end":8902383,"line_start":391,"line_end":391,"column_start":5,"column_end":67}},{"value":"/ will wait until a message is sent into it. Once all senders","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902388,"byte_end":8902451,"line_start":392,"line_end":392,"column_start":5,"column_end":68}},{"value":"/ have been dropped it will return [RecvError].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902456,"byte_end":8902505,"line_start":393,"line_end":393,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902510,"byte_end":8902513,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902518,"byte_end":8902532,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902537,"byte_end":8902540,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902545,"byte_end":8902552,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902557,"byte_end":8902582,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/ # fn main() -> Result<(), async_std::sync::RecvError> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902587,"byte_end":8902646,"line_start":399,"line_end":399,"column_start":5,"column_end":64}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902651,"byte_end":8902690,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902695,"byte_end":8902700,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902705,"byte_end":8902738,"line_start":402,"line_end":402,"column_start":5,"column_end":38}},{"value":"/ use async_std::task;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902743,"byte_end":8902767,"line_start":403,"line_end":403,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902772,"byte_end":8902775,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902780,"byte_end":8902808,"line_start":405,"line_end":405,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902813,"byte_end":8902816,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902821,"byte_end":8902849,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/     s.send(1usize).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902854,"byte_end":8902883,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/     s.send(2).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902888,"byte_end":8902912,"line_start":409,"line_end":409,"column_start":5,"column_end":29}},{"value":"/     // Then we drop the sender","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902917,"byte_end":8902951,"line_start":410,"line_end":410,"column_start":5,"column_end":39}},{"value":"/ });","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902956,"byte_end":8902963,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902968,"byte_end":8902971,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.recv().await?, 1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902976,"byte_end":8903011,"line_start":413,"line_end":413,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.recv().await?, 2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903016,"byte_end":8903051,"line_start":414,"line_end":414,"column_start":5,"column_end":40}},{"value":"/ assert!(r.recv().await.is_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903056,"byte_end":8903093,"line_start":415,"line_end":415,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903098,"byte_end":8903103,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903108,"byte_end":8903120,"line_start":417,"line_end":417,"column_start":5,"column_end":17}},{"value":"/ # }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903125,"byte_end":8903135,"line_start":418,"line_end":418,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903140,"byte_end":8903147,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4493},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904677,"byte_end":8904685,"line_start":476,"line_end":476,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message from the channel.","sig":null,"attributes":[{"value":"/ Attempts to receive a message from the channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904172,"byte_end":8904223,"line_start":455,"line_end":455,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904228,"byte_end":8904231,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ If the channel is empty, this method will return an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904236,"byte_end":8904298,"line_start":457,"line_end":457,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904303,"byte_end":8904306,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904311,"byte_end":8904325,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904330,"byte_end":8904333,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904338,"byte_end":8904345,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904350,"byte_end":8904375,"line_start":462,"line_end":462,"column_start":5,"column_end":30}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904380,"byte_end":8904419,"line_start":463,"line_end":463,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904424,"byte_end":8904429,"line_start":464,"line_end":464,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904434,"byte_end":8904467,"line_start":465,"line_end":465,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904472,"byte_end":8904475,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904480,"byte_end":8904508,"line_start":467,"line_end":467,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904513,"byte_end":8904516,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ s.send(1u8).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904521,"byte_end":8904543,"line_start":469,"line_end":469,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904548,"byte_end":8904551,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ assert!(r.try_recv().is_ok());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904556,"byte_end":8904590,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/ assert!(r.try_recv().is_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904595,"byte_end":8904630,"line_start":472,"line_end":472,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904635,"byte_end":8904640,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904645,"byte_end":8904653,"line_start":474,"line_end":474,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904658,"byte_end":8904665,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4494},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905022,"byte_end":8905030,"line_start":491,"line_end":491,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Receiver<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity.","sig":null,"attributes":[{"value":"/ Returns the channel capacity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904765,"byte_end":8904798,"line_start":480,"line_end":480,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904803,"byte_end":8904806,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904811,"byte_end":8904825,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904830,"byte_end":8904833,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904838,"byte_end":8904845,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904850,"byte_end":8904875,"line_start":485,"line_end":485,"column_start":5,"column_end":30}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904880,"byte_end":8904913,"line_start":486,"line_end":486,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904918,"byte_end":8904921,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let (_, r) = channel::<i32>(5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904926,"byte_end":8904961,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.capacity(), 5);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8904966,"byte_end":8904998,"line_start":489,"line_end":489,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905003,"byte_end":8905010,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4495},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905481,"byte_end":8905489,"line_start":513,"line_end":513,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Receiver<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905085,"byte_end":8905128,"line_start":495,"line_end":495,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905133,"byte_end":8905136,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905141,"byte_end":8905155,"line_start":497,"line_end":497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905160,"byte_end":8905163,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905168,"byte_end":8905175,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905180,"byte_end":8905205,"line_start":500,"line_end":500,"column_start":5,"column_end":30}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905210,"byte_end":8905249,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905254,"byte_end":8905259,"line_start":502,"line_end":502,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905264,"byte_end":8905297,"line_start":503,"line_end":503,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905302,"byte_end":8905305,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905310,"byte_end":8905338,"line_start":505,"line_end":505,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905343,"byte_end":8905346,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert!(r.is_empty());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905351,"byte_end":8905377,"line_start":507,"line_end":507,"column_start":5,"column_end":31}},{"value":"/ s.send(0).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905382,"byte_end":8905402,"line_start":508,"line_end":508,"column_start":5,"column_end":25}},{"value":"/ assert!(!r.is_empty());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905407,"byte_end":8905434,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905439,"byte_end":8905444,"line_start":510,"line_end":510,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905449,"byte_end":8905457,"line_start":511,"line_end":511,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905462,"byte_end":8905469,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4496},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905943,"byte_end":8905950,"line_start":535,"line_end":535,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Receiver<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is full.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is full.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905550,"byte_end":8905592,"line_start":517,"line_end":517,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905597,"byte_end":8905600,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905605,"byte_end":8905619,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905624,"byte_end":8905627,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905632,"byte_end":8905639,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905644,"byte_end":8905669,"line_start":522,"line_end":522,"column_start":5,"column_end":30}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905674,"byte_end":8905713,"line_start":523,"line_end":523,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905718,"byte_end":8905723,"line_start":524,"line_end":524,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905728,"byte_end":8905761,"line_start":525,"line_end":525,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905766,"byte_end":8905769,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905774,"byte_end":8905802,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905807,"byte_end":8905810,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ assert!(!r.is_full());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905815,"byte_end":8905841,"line_start":529,"line_end":529,"column_start":5,"column_end":31}},{"value":"/ s.send(0).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905846,"byte_end":8905866,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ assert!(r.is_full());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905871,"byte_end":8905896,"line_start":531,"line_end":531,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905901,"byte_end":8905906,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905911,"byte_end":8905919,"line_start":533,"line_end":533,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8905924,"byte_end":8905931,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4497},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906439,"byte_end":8906442,"line_start":558,"line_end":558,"column_start":12,"column_end":15},"name":"len","qualname":"<Receiver<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages in the channel.","sig":null,"attributes":[{"value":"/ Returns the number of messages in the channel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906010,"byte_end":8906060,"line_start":539,"line_end":539,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906065,"byte_end":8906068,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906073,"byte_end":8906087,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906092,"byte_end":8906095,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906100,"byte_end":8906107,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ #![allow(deprecated)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906112,"byte_end":8906137,"line_start":544,"line_end":544,"column_start":5,"column_end":30}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906142,"byte_end":8906181,"line_start":545,"line_end":545,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906186,"byte_end":8906191,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906196,"byte_end":8906229,"line_start":547,"line_end":547,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906234,"byte_end":8906237,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906242,"byte_end":8906270,"line_start":549,"line_end":549,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(r.len(), 0);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906275,"byte_end":8906302,"line_start":550,"line_end":550,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906307,"byte_end":8906310,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ s.send(1).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906315,"byte_end":8906335,"line_start":552,"line_end":552,"column_start":5,"column_end":25}},{"value":"/ s.send(2).await;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906340,"byte_end":8906360,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(r.len(), 2);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906365,"byte_end":8906392,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906397,"byte_end":8906402,"line_start":555,"line_end":555,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906407,"byte_end":8906415,"line_start":556,"line_end":556,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906420,"byte_end":8906427,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4599},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922489,"byte_end":8922493,"line_start":1019,"line_end":1019,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::channel::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The channel is full but not disconnected.\n","sig":null,"attributes":[{"value":"/ The channel is full but not disconnected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922439,"byte_end":8922484,"line_start":1018,"line_end":1018,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4602},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922549,"byte_end":8922561,"line_start":1022,"line_end":1022,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::sync::channel::TrySendError::Disconnected","value":"TrySendError::Disconnected(T)","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The channel is full and disconnected.\n","sig":null,"attributes":[{"value":"/ The channel is full and disconnected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922503,"byte_end":8922544,"line_start":1021,"line_end":1021,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":4597},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922417,"byte_end":8922429,"line_start":1017,"line_end":1017,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::channel::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The channel is full but not disconnected.\n    Full(T),\n\n    /// The channel is full and disconnected.\n    Disconnected(T),\n}","parent":null,"children":[{"krate":0,"index":4599},{"krate":0,"index":4602}],"decl_id":null,"docs":" An error returned from the `try_send` method.\n","sig":null,"attributes":[{"value":"/ An error returned from the `try_send` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922198,"byte_end":8922247,"line_start":1012,"line_end":1012,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922248,"byte_end":8922276,"line_start":1013,"line_end":1013,"column_start":1,"column_end":29}},{"value":"deprecated = \"new channel api at async_std::channel\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922352,"byte_end":8922407,"line_start":1016,"line_end":1016,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6617},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923474,"byte_end":8923479,"line_start":1052,"line_end":1052,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::channel::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6616},"children":[],"decl_id":null,"docs":" The channel is empty but not disconnected.\n","sig":null,"attributes":[{"value":"/ The channel is empty but not disconnected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923423,"byte_end":8923469,"line_start":1051,"line_end":1051,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6619},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923533,"byte_end":8923545,"line_start":1055,"line_end":1055,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::sync::channel::TryRecvError::Disconnected","value":"TryRecvError::Disconnected","parent":{"krate":0,"index":6616},"children":[],"decl_id":null,"docs":" The channel is empty and disconnected.\n","sig":null,"attributes":[{"value":"/ The channel is empty and disconnected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923486,"byte_end":8923528,"line_start":1054,"line_end":1054,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":6616},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923404,"byte_end":8923416,"line_start":1050,"line_end":1050,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::channel::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is empty but not disconnected.\n    Empty,\n\n    /// The channel is empty and disconnected.\n    Disconnected,\n}","parent":null,"children":[{"krate":0,"index":6617},{"krate":0,"index":6619}],"decl_id":null,"docs":" An error returned from the `try_recv` method.\n","sig":null,"attributes":[{"value":"/ An error returned from the `try_recv` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923178,"byte_end":8923227,"line_start":1045,"line_end":1045,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923228,"byte_end":8923256,"line_start":1046,"line_end":1046,"column_start":1,"column_end":29}},{"value":"deprecated = \"new channel api at async_std::channel\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923339,"byte_end":8923394,"line_start":1049,"line_end":1049,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":6606},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8924103,"byte_end":8924112,"line_start":1074,"line_end":1074,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::channel::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from the `recv` method.\n","sig":null,"attributes":[{"value":"/ An error returned from the `recv` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923879,"byte_end":8923924,"line_start":1069,"line_end":1069,"column_start":1,"column_end":46}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923925,"byte_end":8923953,"line_start":1070,"line_end":1070,"column_start":1,"column_end":29}},{"value":"deprecated = \"new channel api at async_std::channel\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8924036,"byte_end":8924091,"line_start":1073,"line_end":1073,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":3093},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/channel.rs","parent":null,"children":[{"krate":0,"index":3094}],"decl_id":null,"docs":" Channels\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16561,"byte_end":16584,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Channels","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/channel.rs","byte_start":8699088,"byte_end":8699100,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":4632},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4637},{"krate":0,"index":4638},{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651},{"krate":0,"index":4652},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4671},{"krate":0,"index":4683},{"krate":0,"index":4694},{"krate":0,"index":4705},{"krate":0,"index":4718},{"krate":0,"index":4747},{"krate":0,"index":4912},{"krate":0,"index":4913},{"krate":0,"index":4925},{"krate":0,"index":4934},{"krate":0,"index":4955},{"krate":0,"index":4956},{"krate":0,"index":4967},{"krate":0,"index":4993},{"krate":0,"index":5006},{"krate":0,"index":5017},{"krate":0,"index":5028},{"krate":0,"index":5039},{"krate":0,"index":5050},{"krate":0,"index":5062},{"krate":0,"index":5072},{"krate":0,"index":5082}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16970,"byte_end":16997,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10897,"byte_end":10931,"line_start":306,"line_end":306,"column_start":5,"column_end":39}},{"value":"/ Filesystem manipulation operations.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925376,"byte_end":8925415,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925416,"byte_end":8925419,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::fs`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925420,"byte_end":8925471,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925472,"byte_end":8925475,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925476,"byte_end":8925522,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/ [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925523,"byte_end":8925575,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/ [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925576,"byte_end":8925636,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925637,"byte_end":8925640,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925641,"byte_end":8925675,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925676,"byte_end":8925679,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925680,"byte_end":8925724,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925725,"byte_end":8925775,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925776,"byte_end":8925779,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925780,"byte_end":8925794,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925795,"byte_end":8925798,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925799,"byte_end":8925848,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925849,"byte_end":8925852,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925853,"byte_end":8925866,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925867,"byte_end":8925941,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925942,"byte_end":8925947,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925948,"byte_end":8925976,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8925977,"byte_end":8926007,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926008,"byte_end":8926011,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926012,"byte_end":8926060,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926061,"byte_end":8926105,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926106,"byte_end":8926111,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926112,"byte_end":8926129,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/mod.rs","byte_start":8926130,"byte_end":8926137,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4665},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928278,"byte_end":8928290,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927476,"byte_end":8927517,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927518,"byte_end":8927521,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927522,"byte_end":8927620,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927621,"byte_end":8927640,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927641,"byte_end":8927644,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927645,"byte_end":8927712,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927713,"byte_end":8927716,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927717,"byte_end":8927801,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927802,"byte_end":8927805,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927806,"byte_end":8927818,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927819,"byte_end":8927822,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927823,"byte_end":8927881,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927882,"byte_end":8927885,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927886,"byte_end":8927947,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8927948,"byte_end":8928005,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928006,"byte_end":8928042,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928043,"byte_end":8928046,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928047,"byte_end":8928061,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928062,"byte_end":8928065,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928066,"byte_end":8928079,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928080,"byte_end":8928154,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928155,"byte_end":8928160,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928161,"byte_end":8928183,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928184,"byte_end":8928187,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928188,"byte_end":8928232,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928233,"byte_end":8928238,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928239,"byte_end":8928256,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/canonicalize.rs","byte_start":8928257,"byte_end":8928264,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4676},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929922,"byte_end":8929926,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8928724,"byte_end":8928792,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8928793,"byte_end":8928796,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8928797,"byte_end":8928896,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8928897,"byte_end":8928922,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8928923,"byte_end":8928926,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8928927,"byte_end":8929024,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929025,"byte_end":8929099,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929100,"byte_end":8929103,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929104,"byte_end":8929200,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929201,"byte_end":8929227,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929228,"byte_end":8929231,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929232,"byte_end":8929291,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929292,"byte_end":8929295,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929296,"byte_end":8929326,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929327,"byte_end":8929363,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929364,"byte_end":8929432,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929433,"byte_end":8929436,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929437,"byte_end":8929449,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929450,"byte_end":8929453,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929454,"byte_end":8929512,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929513,"byte_end":8929516,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929517,"byte_end":8929565,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929566,"byte_end":8929639,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929640,"byte_end":8929676,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929677,"byte_end":8929680,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929681,"byte_end":8929695,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929696,"byte_end":8929699,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929700,"byte_end":8929713,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929714,"byte_end":8929788,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929789,"byte_end":8929794,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929795,"byte_end":8929817,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929818,"byte_end":8929821,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929822,"byte_end":8929876,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929877,"byte_end":8929882,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929883,"byte_end":8929900,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/copy.rs","byte_start":8929901,"byte_end":8929908,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4688},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931371,"byte_end":8931381,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930406,"byte_end":8930434,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930435,"byte_end":8930438,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930439,"byte_end":8930536,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930537,"byte_end":8930628,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930629,"byte_end":8930632,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930633,"byte_end":8930698,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930699,"byte_end":8930702,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930703,"byte_end":8930749,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930750,"byte_end":8930830,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930831,"byte_end":8930834,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930835,"byte_end":8930847,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930848,"byte_end":8930851,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930852,"byte_end":8930910,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930911,"byte_end":8930914,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930915,"byte_end":8930976,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8930977,"byte_end":8931027,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931028,"byte_end":8931096,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931097,"byte_end":8931133,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931134,"byte_end":8931137,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931138,"byte_end":8931152,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931153,"byte_end":8931156,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931157,"byte_end":8931170,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931171,"byte_end":8931245,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931246,"byte_end":8931251,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931252,"byte_end":8931274,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931275,"byte_end":8931278,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931279,"byte_end":8931325,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931326,"byte_end":8931331,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931332,"byte_end":8931349,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir.rs","byte_start":8931350,"byte_end":8931357,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4699},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932539,"byte_end":8932553,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8931784,"byte_end":8931855,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8931856,"byte_end":8931859,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8931860,"byte_end":8931929,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8931930,"byte_end":8931933,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8931934,"byte_end":8932022,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932023,"byte_end":8932026,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932027,"byte_end":8932039,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932040,"byte_end":8932043,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932044,"byte_end":8932102,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932103,"byte_end":8932106,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932107,"byte_end":8932168,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932169,"byte_end":8932260,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932261,"byte_end":8932297,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932298,"byte_end":8932301,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932302,"byte_end":8932316,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932317,"byte_end":8932320,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932321,"byte_end":8932334,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932335,"byte_end":8932409,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932410,"byte_end":8932415,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932416,"byte_end":8932438,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932439,"byte_end":8932442,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932443,"byte_end":8932493,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932494,"byte_end":8932499,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932500,"byte_end":8932517,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/create_dir_all.rs","byte_start":8932518,"byte_end":8932525,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5659},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933373,"byte_end":8933383,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":5660},{"krate":0,"index":5661}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8932954,"byte_end":8933019,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933020,"byte_end":8933023,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933024,"byte_end":8933104,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933105,"byte_end":8933108,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933109,"byte_end":8933170,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933171,"byte_end":8933174,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933175,"byte_end":8933250,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933251,"byte_end":8933335,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4711},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933911,"byte_end":8933914,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933598,"byte_end":8933633,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933638,"byte_end":8933641,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933646,"byte_end":8933703,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933708,"byte_end":8933711,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933716,"byte_end":8933752,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933757,"byte_end":8933760,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933765,"byte_end":8933779,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933784,"byte_end":8933787,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933792,"byte_end":8933799,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933804,"byte_end":8933838,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933843,"byte_end":8933846,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933851,"byte_end":8933887,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933892,"byte_end":8933899,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4712},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934662,"byte_end":8934671,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934164,"byte_end":8934203,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934208,"byte_end":8934211,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934216,"byte_end":8934310,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934315,"byte_end":8934409,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934414,"byte_end":8934417,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934422,"byte_end":8934466,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934471,"byte_end":8934474,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934479,"byte_end":8934493,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934498,"byte_end":8934501,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934506,"byte_end":8934513,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934518,"byte_end":8934552,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934557,"byte_end":8934560,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934565,"byte_end":8934605,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934610,"byte_end":8934638,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934643,"byte_end":8934650,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4713},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935603,"byte_end":8935609,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"pub fn create<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934775,"byte_end":8934827,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934832,"byte_end":8934835,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934840,"byte_end":8934935,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934940,"byte_end":8934943,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934948,"byte_end":8934960,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934965,"byte_end":8934968,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8934973,"byte_end":8935031,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935036,"byte_end":8935039,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935044,"byte_end":8935105,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935110,"byte_end":8935201,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935206,"byte_end":8935242,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935247,"byte_end":8935250,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935255,"byte_end":8935269,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935274,"byte_end":8935277,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935282,"byte_end":8935295,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935300,"byte_end":8935374,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935379,"byte_end":8935384,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935389,"byte_end":8935423,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935428,"byte_end":8935431,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935436,"byte_end":8935457,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935462,"byte_end":8935486,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935491,"byte_end":8935526,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935531,"byte_end":8935547,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935552,"byte_end":8935557,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935562,"byte_end":8935579,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8935584,"byte_end":8935591,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4728},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936898,"byte_end":8936906,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936602,"byte_end":8936630,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936631,"byte_end":8936634,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936635,"byte_end":8936702,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936703,"byte_end":8936706,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936707,"byte_end":8936766,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936767,"byte_end":8936770,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936771,"byte_end":8936805,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936806,"byte_end":8936886,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4733},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937797,"byte_end":8937801,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937123,"byte_end":8937163,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937168,"byte_end":8937171,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937176,"byte_end":8937270,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937275,"byte_end":8937293,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937298,"byte_end":8937301,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937306,"byte_end":8937340,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937345,"byte_end":8937348,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937353,"byte_end":8937367,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937372,"byte_end":8937375,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937380,"byte_end":8937393,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937398,"byte_end":8937472,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937477,"byte_end":8937482,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937487,"byte_end":8937509,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937514,"byte_end":8937544,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937549,"byte_end":8937552,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937557,"byte_end":8937600,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937605,"byte_end":8937608,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937613,"byte_end":8937657,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937662,"byte_end":8937687,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937692,"byte_end":8937731,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937736,"byte_end":8937741,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937746,"byte_end":8937751,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937756,"byte_end":8937773,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937778,"byte_end":8937785,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4734},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938932,"byte_end":8938940,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937862,"byte_end":8937900,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937905,"byte_end":8937908,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937913,"byte_end":8937981,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937986,"byte_end":8937989,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8937994,"byte_end":8938085,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938090,"byte_end":8938102,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938107,"byte_end":8938110,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938115,"byte_end":8938165,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938170,"byte_end":8938173,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938178,"byte_end":8938190,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938195,"byte_end":8938198,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938203,"byte_end":8938261,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938266,"byte_end":8938269,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938274,"byte_end":8938347,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938352,"byte_end":8938417,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938422,"byte_end":8938458,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938463,"byte_end":8938466,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938471,"byte_end":8938485,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938490,"byte_end":8938493,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938498,"byte_end":8938511,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938516,"byte_end":8938590,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938595,"byte_end":8938600,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938605,"byte_end":8938627,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938632,"byte_end":8938662,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938667,"byte_end":8938670,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938675,"byte_end":8938718,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938723,"byte_end":8938726,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938731,"byte_end":8938775,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938780,"byte_end":8938805,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938810,"byte_end":8938860,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938865,"byte_end":8938870,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938875,"byte_end":8938880,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938885,"byte_end":8938902,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8938907,"byte_end":8938914,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4738},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940133,"byte_end":8940142,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939076,"byte_end":8939115,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939120,"byte_end":8939123,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939128,"byte_end":8939207,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939212,"byte_end":8939215,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939220,"byte_end":8939309,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939314,"byte_end":8939317,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939322,"byte_end":8939356,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939361,"byte_end":8939364,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939369,"byte_end":8939381,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939386,"byte_end":8939389,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939394,"byte_end":8939452,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939457,"byte_end":8939460,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939465,"byte_end":8939538,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939543,"byte_end":8939617,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939622,"byte_end":8939658,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939663,"byte_end":8939666,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939671,"byte_end":8939685,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939690,"byte_end":8939693,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939698,"byte_end":8939711,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939716,"byte_end":8939790,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939795,"byte_end":8939800,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939805,"byte_end":8939827,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939832,"byte_end":8939862,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939867,"byte_end":8939870,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939875,"byte_end":8939918,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939923,"byte_end":8939926,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939931,"byte_end":8939975,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8939980,"byte_end":8940005,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940010,"byte_end":8940061,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940066,"byte_end":8940071,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940076,"byte_end":8940081,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940086,"byte_end":8940103,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940108,"byte_end":8940115,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4742},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940822,"byte_end":8940831,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940279,"byte_end":8940344,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940349,"byte_end":8940352,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940357,"byte_end":8940371,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940376,"byte_end":8940379,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940384,"byte_end":8940397,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940402,"byte_end":8940476,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940481,"byte_end":8940486,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940491,"byte_end":8940513,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940518,"byte_end":8940548,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940553,"byte_end":8940556,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940561,"byte_end":8940604,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940609,"byte_end":8940612,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940617,"byte_end":8940661,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940666,"byte_end":8940691,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940696,"byte_end":8940756,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940761,"byte_end":8940766,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940771,"byte_end":8940776,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940781,"byte_end":8940798,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940803,"byte_end":8940810,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4783},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943249,"byte_end":8943253,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":4784},{"krate":0,"index":4785}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8941974,"byte_end":8942009,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942010,"byte_end":8942013,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942014,"byte_end":8942110,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942111,"byte_end":8942123,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942124,"byte_end":8942127,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942128,"byte_end":8942223,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942224,"byte_end":8942322,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942323,"byte_end":8942326,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942327,"byte_end":8942382,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942383,"byte_end":8942386,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942387,"byte_end":8942421,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942422,"byte_end":8942494,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942495,"byte_end":8942498,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942499,"byte_end":8942513,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942514,"byte_end":8942517,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942518,"byte_end":8942567,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942568,"byte_end":8942571,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942572,"byte_end":8942585,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942586,"byte_end":8942660,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942661,"byte_end":8942666,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942667,"byte_end":8942695,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942696,"byte_end":8942726,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942727,"byte_end":8942730,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942731,"byte_end":8942779,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942780,"byte_end":8942824,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942825,"byte_end":8942830,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942831,"byte_end":8942848,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942849,"byte_end":8942856,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942857,"byte_end":8942860,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942861,"byte_end":8942916,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942917,"byte_end":8942920,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942921,"byte_end":8942934,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8942935,"byte_end":8943009,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943010,"byte_end":8943015,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943016,"byte_end":8943044,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943045,"byte_end":8943075,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943076,"byte_end":8943079,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943080,"byte_end":8943126,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943127,"byte_end":8943161,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943162,"byte_end":8943205,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943206,"byte_end":8943211,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943212,"byte_end":8943229,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943230,"byte_end":8943237,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4788},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944714,"byte_end":8944718,"line_start":114,"line_end":114,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943881,"byte_end":8943916,"line_start":87,"line_end":87,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943921,"byte_end":8943924,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943929,"byte_end":8943989,"line_start":89,"line_end":89,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943994,"byte_end":8943997,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944002,"byte_end":8944014,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944019,"byte_end":8944022,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944027,"byte_end":8944085,"line_start":93,"line_end":93,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944090,"byte_end":8944093,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944098,"byte_end":8944146,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944151,"byte_end":8944212,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944217,"byte_end":8944253,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944258,"byte_end":8944261,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944266,"byte_end":8944347,"line_start":99,"line_end":99,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944352,"byte_end":8944355,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944360,"byte_end":8944422,"line_start":101,"line_end":101,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944427,"byte_end":8944430,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944435,"byte_end":8944449,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944454,"byte_end":8944457,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944462,"byte_end":8944475,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944480,"byte_end":8944554,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944559,"byte_end":8944564,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944569,"byte_end":8944597,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944602,"byte_end":8944605,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944610,"byte_end":8944652,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944657,"byte_end":8944662,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944667,"byte_end":8944684,"line_start":112,"line_end":112,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8944689,"byte_end":8944696,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4794},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945971,"byte_end":8945977,"line_start":152,"line_end":152,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945026,"byte_end":8945062,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945067,"byte_end":8945070,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945075,"byte_end":8945166,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945171,"byte_end":8945174,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945179,"byte_end":8945239,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945244,"byte_end":8945247,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945252,"byte_end":8945264,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945269,"byte_end":8945272,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945277,"byte_end":8945335,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945340,"byte_end":8945343,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945348,"byte_end":8945397,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945402,"byte_end":8945467,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945472,"byte_end":8945508,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945513,"byte_end":8945516,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945521,"byte_end":8945602,"line_start":137,"line_end":137,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945607,"byte_end":8945610,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945615,"byte_end":8945677,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945682,"byte_end":8945685,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945690,"byte_end":8945704,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945709,"byte_end":8945712,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945717,"byte_end":8945730,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945735,"byte_end":8945809,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945814,"byte_end":8945819,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945824,"byte_end":8945852,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945857,"byte_end":8945860,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945865,"byte_end":8945909,"line_start":148,"line_end":148,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945914,"byte_end":8945919,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945924,"byte_end":8945941,"line_start":150,"line_end":150,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8945946,"byte_end":8945953,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4800},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947078,"byte_end":8947086,"line_start":183,"line_end":183,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946306,"byte_end":8946374,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946379,"byte_end":8946382,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946387,"byte_end":8946464,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946469,"byte_end":8946472,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946477,"byte_end":8946567,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946572,"byte_end":8946664,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946669,"byte_end":8946672,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946677,"byte_end":8946691,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946696,"byte_end":8946699,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946704,"byte_end":8946717,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946722,"byte_end":8946796,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946801,"byte_end":8946806,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946811,"byte_end":8946839,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946844,"byte_end":8946874,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946879,"byte_end":8946882,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946887,"byte_end":8946935,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946940,"byte_end":8946984,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8946989,"byte_end":8947016,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947021,"byte_end":8947026,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947031,"byte_end":8947048,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947053,"byte_end":8947060,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4805},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948291,"byte_end":8948300,"line_start":219,"line_end":219,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947423,"byte_end":8947478,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947483,"byte_end":8947486,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947491,"byte_end":8947578,"line_start":196,"line_end":196,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947583,"byte_end":8947586,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947591,"byte_end":8947683,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947688,"byte_end":8947736,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947741,"byte_end":8947744,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947749,"byte_end":8947829,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947834,"byte_end":8947837,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947842,"byte_end":8947876,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947881,"byte_end":8947884,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947889,"byte_end":8947903,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947908,"byte_end":8947911,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947916,"byte_end":8947929,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8947934,"byte_end":8948008,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948013,"byte_end":8948018,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948023,"byte_end":8948051,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948056,"byte_end":8948086,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948091,"byte_end":8948094,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948099,"byte_end":8948147,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948152,"byte_end":8948196,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948201,"byte_end":8948229,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948234,"byte_end":8948239,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948244,"byte_end":8948261,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948266,"byte_end":8948273,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4810},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949397,"byte_end":8949404,"line_start":251,"line_end":251,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948639,"byte_end":8948673,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948678,"byte_end":8948681,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948686,"byte_end":8948777,"line_start":232,"line_end":232,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948782,"byte_end":8948875,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948880,"byte_end":8948920,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948925,"byte_end":8948928,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8948933,"byte_end":8949028,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949033,"byte_end":8949070,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949075,"byte_end":8949078,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949083,"byte_end":8949097,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949102,"byte_end":8949105,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949110,"byte_end":8949123,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949128,"byte_end":8949202,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949207,"byte_end":8949212,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949217,"byte_end":8949245,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949250,"byte_end":8949253,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949258,"byte_end":8949302,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949307,"byte_end":8949335,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949340,"byte_end":8949345,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949350,"byte_end":8949367,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949372,"byte_end":8949379,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4815},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950223,"byte_end":8950231,"line_start":277,"line_end":277,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949854,"byte_end":8949884,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949889,"byte_end":8949892,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949897,"byte_end":8949911,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949916,"byte_end":8949919,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949924,"byte_end":8949937,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8949942,"byte_end":8950016,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950021,"byte_end":8950026,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950031,"byte_end":8950059,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950064,"byte_end":8950067,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950072,"byte_end":8950114,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950119,"byte_end":8950161,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950166,"byte_end":8950171,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950176,"byte_end":8950193,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950198,"byte_end":8950205,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4819},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8951077,"byte_end":8951092,"line_start":306,"line_end":306,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950368,"byte_end":8950408,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950413,"byte_end":8950416,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950421,"byte_end":8950433,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950438,"byte_end":8950441,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950446,"byte_end":8950504,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950509,"byte_end":8950512,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950517,"byte_end":8950594,"line_start":288,"line_end":288,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950599,"byte_end":8950635,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950640,"byte_end":8950643,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950648,"byte_end":8950662,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950667,"byte_end":8950670,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950675,"byte_end":8950688,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950693,"byte_end":8950767,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950772,"byte_end":8950777,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950782,"byte_end":8950810,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950815,"byte_end":8950818,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950823,"byte_end":8950867,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950872,"byte_end":8950875,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950880,"byte_end":8950937,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950942,"byte_end":8950971,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8950976,"byte_end":8951015,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8951020,"byte_end":8951025,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8951030,"byte_end":8951047,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8951052,"byte_end":8951059,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":4918},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974589,"byte_end":8974598,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8973825,"byte_end":8973867,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8973868,"byte_end":8973871,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8973872,"byte_end":8973967,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8973968,"byte_end":8974033,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974034,"byte_end":8974037,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974038,"byte_end":8974102,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974103,"byte_end":8974106,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974107,"byte_end":8974185,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974186,"byte_end":8974189,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974190,"byte_end":8974202,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974203,"byte_end":8974206,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974207,"byte_end":8974265,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974266,"byte_end":8974269,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974270,"byte_end":8974317,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974318,"byte_end":8974354,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974355,"byte_end":8974358,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974359,"byte_end":8974373,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974374,"byte_end":8974377,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974378,"byte_end":8974391,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974392,"byte_end":8974466,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974467,"byte_end":8974472,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974473,"byte_end":8974495,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974496,"byte_end":8974499,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974500,"byte_end":8974543,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974544,"byte_end":8974549,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974550,"byte_end":8974567,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/hard_link.rs","byte_start":8974568,"byte_end":8974575,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4929},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8976083,"byte_end":8976091,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975138,"byte_end":8975168,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975169,"byte_end":8975172,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975173,"byte_end":8975270,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975271,"byte_end":8975362,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975363,"byte_end":8975375,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975376,"byte_end":8975379,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975380,"byte_end":8975443,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975444,"byte_end":8975447,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975448,"byte_end":8975498,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975499,"byte_end":8975575,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975576,"byte_end":8975579,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975580,"byte_end":8975592,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975593,"byte_end":8975596,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975597,"byte_end":8975655,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975656,"byte_end":8975659,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975660,"byte_end":8975721,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975722,"byte_end":8975796,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975797,"byte_end":8975833,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975834,"byte_end":8975837,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975838,"byte_end":8975852,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975853,"byte_end":8975856,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975857,"byte_end":8975870,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975871,"byte_end":8975945,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975946,"byte_end":8975951,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975952,"byte_end":8975974,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975975,"byte_end":8975978,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8975979,"byte_end":8976037,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8976038,"byte_end":8976043,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8976044,"byte_end":8976061,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/metadata.rs","byte_start":8976062,"byte_end":8976069,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5685},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983946,"byte_end":8983957,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982401,"byte_end":8982459,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982460,"byte_end":8982463,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982464,"byte_end":8982522,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982523,"byte_end":8982526,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982527,"byte_end":8982624,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982625,"byte_end":8982670,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982671,"byte_end":8982674,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982675,"byte_end":8982771,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982772,"byte_end":8982846,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982847,"byte_end":8982850,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982851,"byte_end":8982913,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982914,"byte_end":8982917,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982918,"byte_end":8982944,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982945,"byte_end":8982973,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8982974,"byte_end":8983004,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983005,"byte_end":8983039,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983040,"byte_end":8983070,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983071,"byte_end":8983109,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983110,"byte_end":8983196,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983197,"byte_end":8983200,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983201,"byte_end":8983215,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983216,"byte_end":8983219,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983220,"byte_end":8983248,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983249,"byte_end":8983252,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983253,"byte_end":8983266,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983267,"byte_end":8983341,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983342,"byte_end":8983347,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983348,"byte_end":8983383,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983384,"byte_end":8983387,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983388,"byte_end":8983421,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983422,"byte_end":8983441,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983442,"byte_end":8983464,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983465,"byte_end":8983481,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983482,"byte_end":8983487,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983488,"byte_end":8983505,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983506,"byte_end":8983513,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983514,"byte_end":8983517,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983518,"byte_end":8983602,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983603,"byte_end":8983606,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983607,"byte_end":8983620,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983621,"byte_end":8983695,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983696,"byte_end":8983701,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983702,"byte_end":8983737,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983738,"byte_end":8983741,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983742,"byte_end":8983775,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983776,"byte_end":8983795,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983796,"byte_end":8983816,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983817,"byte_end":8983838,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983839,"byte_end":8983861,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983862,"byte_end":8983878,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983879,"byte_end":8983884,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983885,"byte_end":8983902,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983903,"byte_end":8983910,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4941},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984454,"byte_end":8984457,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984005,"byte_end":8984040,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984045,"byte_end":8984048,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984053,"byte_end":8984098,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984103,"byte_end":8984106,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984111,"byte_end":8984125,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984130,"byte_end":8984133,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984138,"byte_end":8984151,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984156,"byte_end":8984230,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984235,"byte_end":8984240,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984245,"byte_end":8984280,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984285,"byte_end":8984288,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984293,"byte_end":8984326,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984331,"byte_end":8984350,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984355,"byte_end":8984377,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984382,"byte_end":8984398,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984403,"byte_end":8984408,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984413,"byte_end":8984430,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984435,"byte_end":8984442,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4942},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985028,"byte_end":8985032,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984537,"byte_end":8984577,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984582,"byte_end":8984585,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984590,"byte_end":8984672,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984677,"byte_end":8984680,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984685,"byte_end":8984699,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984704,"byte_end":8984707,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984712,"byte_end":8984725,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984730,"byte_end":8984804,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984809,"byte_end":8984814,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984819,"byte_end":8984854,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984859,"byte_end":8984862,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984867,"byte_end":8984900,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984905,"byte_end":8984924,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984929,"byte_end":8984951,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984956,"byte_end":8984972,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984977,"byte_end":8984982,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8984987,"byte_end":8985004,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985009,"byte_end":8985016,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4943},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985752,"byte_end":8985757,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985129,"byte_end":8985170,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985175,"byte_end":8985178,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985183,"byte_end":8985265,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985270,"byte_end":8985273,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985278,"byte_end":8985372,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985377,"byte_end":8985395,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985400,"byte_end":8985403,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985408,"byte_end":8985422,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985427,"byte_end":8985430,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985435,"byte_end":8985448,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985453,"byte_end":8985527,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985532,"byte_end":8985537,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985542,"byte_end":8985577,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985582,"byte_end":8985585,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985590,"byte_end":8985623,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985628,"byte_end":8985648,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985653,"byte_end":8985675,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985680,"byte_end":8985696,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985701,"byte_end":8985706,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985711,"byte_end":8985728,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985733,"byte_end":8985740,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4944},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986442,"byte_end":8986448,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985857,"byte_end":8985899,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985904,"byte_end":8985907,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8985912,"byte_end":8986006,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986011,"byte_end":8986084,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986089,"byte_end":8986092,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986097,"byte_end":8986111,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986116,"byte_end":8986119,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986124,"byte_end":8986137,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986142,"byte_end":8986216,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986221,"byte_end":8986226,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986231,"byte_end":8986266,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986271,"byte_end":8986274,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986279,"byte_end":8986312,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986317,"byte_end":8986338,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986343,"byte_end":8986365,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986370,"byte_end":8986386,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986391,"byte_end":8986396,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986401,"byte_end":8986418,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986423,"byte_end":8986430,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4945},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987256,"byte_end":8987264,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986551,"byte_end":8986610,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986615,"byte_end":8986618,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986623,"byte_end":8986699,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986704,"byte_end":8986707,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986712,"byte_end":8986795,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986800,"byte_end":8986803,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986808,"byte_end":8986836,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986841,"byte_end":8986871,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986876,"byte_end":8986879,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986884,"byte_end":8986898,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986903,"byte_end":8986906,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986911,"byte_end":8986924,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8986929,"byte_end":8987003,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987008,"byte_end":8987013,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987018,"byte_end":8987053,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987058,"byte_end":8987061,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987066,"byte_end":8987099,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987104,"byte_end":8987124,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987129,"byte_end":8987152,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987157,"byte_end":8987179,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987184,"byte_end":8987200,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987205,"byte_end":8987210,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987215,"byte_end":8987232,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987237,"byte_end":8987244,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4946},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988103,"byte_end":8988109,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987373,"byte_end":8987443,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987448,"byte_end":8987451,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987456,"byte_end":8987545,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987550,"byte_end":8987553,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987558,"byte_end":8987644,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987649,"byte_end":8987652,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987657,"byte_end":8987685,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987690,"byte_end":8987720,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987725,"byte_end":8987728,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987733,"byte_end":8987747,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987752,"byte_end":8987755,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987760,"byte_end":8987773,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987778,"byte_end":8987852,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987857,"byte_end":8987862,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987867,"byte_end":8987902,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987907,"byte_end":8987910,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987915,"byte_end":8987948,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987953,"byte_end":8987973,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8987978,"byte_end":8987999,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988004,"byte_end":8988026,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988031,"byte_end":8988047,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988052,"byte_end":8988057,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988062,"byte_end":8988079,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988084,"byte_end":8988091,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4947},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989006,"byte_end":8989016,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988212,"byte_end":8988294,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988299,"byte_end":8988302,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988307,"byte_end":8988398,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988403,"byte_end":8988444,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988449,"byte_end":8988452,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988457,"byte_end":8988543,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988548,"byte_end":8988551,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988556,"byte_end":8988584,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988589,"byte_end":8988619,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988624,"byte_end":8988627,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988632,"byte_end":8988646,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988651,"byte_end":8988654,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988659,"byte_end":8988672,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988677,"byte_end":8988751,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988756,"byte_end":8988761,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988766,"byte_end":8988801,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988806,"byte_end":8988809,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988814,"byte_end":8988847,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988852,"byte_end":8988872,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988877,"byte_end":8988902,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988907,"byte_end":8988929,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988934,"byte_end":8988950,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988955,"byte_end":8988960,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988965,"byte_end":8988982,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8988987,"byte_end":8988994,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4948},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990454,"byte_end":8990458,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"pub fn open<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989131,"byte_end":8989176,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989181,"byte_end":8989184,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989189,"byte_end":8989201,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989206,"byte_end":8989209,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989214,"byte_end":8989272,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989277,"byte_end":8989280,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989285,"byte_end":8989366,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989371,"byte_end":8989420,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989425,"byte_end":8989509,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989514,"byte_end":8989571,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989576,"byte_end":8989670,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989675,"byte_end":8989742,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989747,"byte_end":8989833,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989838,"byte_end":8989874,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989879,"byte_end":8989882,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989887,"byte_end":8989913,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989918,"byte_end":8989946,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989951,"byte_end":8989981,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8989986,"byte_end":8990020,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990025,"byte_end":8990055,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990060,"byte_end":8990098,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990103,"byte_end":8990106,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990111,"byte_end":8990125,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990130,"byte_end":8990133,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990138,"byte_end":8990151,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990156,"byte_end":8990230,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990235,"byte_end":8990240,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990245,"byte_end":8990280,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990285,"byte_end":8990288,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990293,"byte_end":8990326,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990331,"byte_end":8990350,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990355,"byte_end":8990377,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990382,"byte_end":8990398,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990403,"byte_end":8990408,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990413,"byte_end":8990430,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990435,"byte_end":8990442,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":4961},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994332,"byte_end":8994336,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993327,"byte_end":8993380,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993381,"byte_end":8993384,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993385,"byte_end":8993484,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993485,"byte_end":8993581,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993582,"byte_end":8993594,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993595,"byte_end":8993598,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993599,"byte_end":8993680,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993681,"byte_end":8993684,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993685,"byte_end":8993744,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993745,"byte_end":8993748,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993749,"byte_end":8993795,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993796,"byte_end":8993864,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993865,"byte_end":8993868,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993869,"byte_end":8993881,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993882,"byte_end":8993885,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993886,"byte_end":8993944,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993945,"byte_end":8993948,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993949,"byte_end":8993997,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8993998,"byte_end":8994059,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994060,"byte_end":8994096,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994097,"byte_end":8994100,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994101,"byte_end":8994115,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994116,"byte_end":8994119,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994120,"byte_end":8994133,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994134,"byte_end":8994208,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994209,"byte_end":8994214,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994215,"byte_end":8994237,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994238,"byte_end":8994241,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994242,"byte_end":8994286,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994287,"byte_end":8994292,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994293,"byte_end":8994310,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read.rs","byte_start":8994311,"byte_end":8994318,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4980},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995937,"byte_end":8995945,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8994845,"byte_end":8994892,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8994893,"byte_end":8994896,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8994897,"byte_end":8994991,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8994992,"byte_end":8995032,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995033,"byte_end":8995036,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995037,"byte_end":8995100,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995101,"byte_end":8995104,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995105,"byte_end":8995147,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995148,"byte_end":8995186,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995187,"byte_end":8995263,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995264,"byte_end":8995267,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995268,"byte_end":8995280,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995281,"byte_end":8995284,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995285,"byte_end":8995343,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995344,"byte_end":8995347,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995348,"byte_end":8995401,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995402,"byte_end":8995484,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995485,"byte_end":8995521,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995522,"byte_end":8995525,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995526,"byte_end":8995540,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995541,"byte_end":8995544,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995545,"byte_end":8995558,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995559,"byte_end":8995633,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995634,"byte_end":8995639,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995640,"byte_end":8995662,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995663,"byte_end":8995693,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995694,"byte_end":8995697,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995698,"byte_end":8995745,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995746,"byte_end":8995749,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995750,"byte_end":8995798,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995799,"byte_end":8995824,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995825,"byte_end":8995885,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995886,"byte_end":8995891,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995892,"byte_end":8995897,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995898,"byte_end":8995915,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8995916,"byte_end":8995923,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5697},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996750,"byte_end":8996757,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996225,"byte_end":8996264,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996265,"byte_end":8996268,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996269,"byte_end":8996337,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996338,"byte_end":8996436,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996437,"byte_end":8996458,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996459,"byte_end":8996462,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996463,"byte_end":8996521,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996522,"byte_end":8996525,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996526,"byte_end":8996560,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996561,"byte_end":8996603,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996604,"byte_end":8996642,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8996643,"byte_end":8996721,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":5000},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8999042,"byte_end":8999051,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998423,"byte_end":8998483,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998484,"byte_end":8998487,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998488,"byte_end":8998552,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998553,"byte_end":8998556,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998557,"byte_end":8998635,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998636,"byte_end":8998639,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998640,"byte_end":8998652,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998653,"byte_end":8998656,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998657,"byte_end":8998715,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998716,"byte_end":8998719,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998720,"byte_end":8998768,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998769,"byte_end":8998805,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998806,"byte_end":8998809,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998810,"byte_end":8998824,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998825,"byte_end":8998828,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998829,"byte_end":8998842,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998843,"byte_end":8998917,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998918,"byte_end":8998923,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998924,"byte_end":8998946,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998947,"byte_end":8998950,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998951,"byte_end":8998996,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8998997,"byte_end":8999002,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8999003,"byte_end":8999020,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_link.rs","byte_start":8999021,"byte_end":8999028,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5011},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000555,"byte_end":9000569,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999475,"byte_end":8999527,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999528,"byte_end":8999531,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999532,"byte_end":8999631,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999632,"byte_end":8999728,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999729,"byte_end":8999741,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999742,"byte_end":8999745,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999746,"byte_end":8999818,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999819,"byte_end":8999822,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999823,"byte_end":8999892,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999893,"byte_end":8999896,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999897,"byte_end":8999923,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":8999924,"byte_end":9000012,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000013,"byte_end":9000016,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000017,"byte_end":9000029,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000030,"byte_end":9000033,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000034,"byte_end":9000092,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000093,"byte_end":9000096,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000097,"byte_end":9000145,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000146,"byte_end":9000207,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000208,"byte_end":9000272,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000273,"byte_end":9000309,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000310,"byte_end":9000313,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000314,"byte_end":9000328,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000329,"byte_end":9000332,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000333,"byte_end":9000346,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000347,"byte_end":9000421,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000422,"byte_end":9000427,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000428,"byte_end":9000450,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000451,"byte_end":9000454,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000455,"byte_end":9000509,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000510,"byte_end":9000515,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000516,"byte_end":9000533,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_to_string.rs","byte_start":9000534,"byte_end":9000541,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5022},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001643,"byte_end":9001653,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9000976,"byte_end":9001007,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001008,"byte_end":9001011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001012,"byte_end":9001077,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001078,"byte_end":9001081,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001082,"byte_end":9001162,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001163,"byte_end":9001166,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001167,"byte_end":9001179,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001180,"byte_end":9001183,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001184,"byte_end":9001242,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001243,"byte_end":9001246,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001247,"byte_end":9001299,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001300,"byte_end":9001368,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001369,"byte_end":9001405,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001406,"byte_end":9001409,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001410,"byte_end":9001424,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001425,"byte_end":9001428,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001429,"byte_end":9001442,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001443,"byte_end":9001517,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001518,"byte_end":9001523,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001524,"byte_end":9001546,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001547,"byte_end":9001550,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001551,"byte_end":9001597,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001598,"byte_end":9001603,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001604,"byte_end":9001621,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir.rs","byte_start":9001622,"byte_end":9001629,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5033},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002751,"byte_end":9002765,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002051,"byte_end":9002099,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002100,"byte_end":9002103,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002104,"byte_end":9002173,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002174,"byte_end":9002177,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002178,"byte_end":9002266,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002267,"byte_end":9002270,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002271,"byte_end":9002283,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002284,"byte_end":9002287,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002288,"byte_end":9002346,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002347,"byte_end":9002350,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002351,"byte_end":9002403,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002404,"byte_end":9002472,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002473,"byte_end":9002509,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002510,"byte_end":9002513,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002514,"byte_end":9002528,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002529,"byte_end":9002532,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002533,"byte_end":9002546,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002547,"byte_end":9002621,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002622,"byte_end":9002627,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002628,"byte_end":9002650,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002651,"byte_end":9002654,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002655,"byte_end":9002705,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002706,"byte_end":9002711,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002712,"byte_end":9002729,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_dir_all.rs","byte_start":9002730,"byte_end":9002737,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5044},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003806,"byte_end":9003817,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003167,"byte_end":9003186,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003187,"byte_end":9003190,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003191,"byte_end":9003257,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003258,"byte_end":9003261,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003262,"byte_end":9003344,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003345,"byte_end":9003348,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003349,"byte_end":9003361,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003362,"byte_end":9003365,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003366,"byte_end":9003424,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003425,"byte_end":9003428,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003429,"byte_end":9003477,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003478,"byte_end":9003541,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003542,"byte_end":9003578,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003579,"byte_end":9003582,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003583,"byte_end":9003597,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003598,"byte_end":9003601,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003602,"byte_end":9003615,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003616,"byte_end":9003690,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003691,"byte_end":9003696,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003697,"byte_end":9003719,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003720,"byte_end":9003723,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003724,"byte_end":9003760,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003761,"byte_end":9003766,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003767,"byte_end":9003784,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/remove_file.rs","byte_start":9003785,"byte_end":9003792,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5055},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9005059,"byte_end":9005065,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004211,"byte_end":9004261,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004262,"byte_end":9004265,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004266,"byte_end":9004362,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004363,"byte_end":9004377,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004378,"byte_end":9004381,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004382,"byte_end":9004443,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004444,"byte_end":9004447,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004448,"byte_end":9004520,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004521,"byte_end":9004524,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004525,"byte_end":9004537,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004538,"byte_end":9004541,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004542,"byte_end":9004600,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004601,"byte_end":9004604,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004605,"byte_end":9004666,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004667,"byte_end":9004718,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004719,"byte_end":9004790,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004791,"byte_end":9004827,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004828,"byte_end":9004831,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004832,"byte_end":9004846,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004847,"byte_end":9004850,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004851,"byte_end":9004864,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004865,"byte_end":9004939,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004940,"byte_end":9004945,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004946,"byte_end":9004968,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004969,"byte_end":9004972,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9004973,"byte_end":9005013,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9005014,"byte_end":9005019,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9005020,"byte_end":9005037,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/rename.rs","byte_start":9005038,"byte_end":9005045,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5067},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006440,"byte_end":9006455,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<P: AsRef<Path>>(P, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005615,"byte_end":9005666,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005667,"byte_end":9005670,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005671,"byte_end":9005741,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005742,"byte_end":9005745,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005746,"byte_end":9005836,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005837,"byte_end":9005840,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005841,"byte_end":9005853,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005854,"byte_end":9005857,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005858,"byte_end":9005916,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005917,"byte_end":9005920,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005921,"byte_end":9005982,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9005983,"byte_end":9006073,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006074,"byte_end":9006110,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006111,"byte_end":9006114,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006115,"byte_end":9006129,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006130,"byte_end":9006133,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006134,"byte_end":9006147,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006148,"byte_end":9006222,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006223,"byte_end":9006228,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006229,"byte_end":9006251,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006252,"byte_end":9006255,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006256,"byte_end":9006318,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006319,"byte_end":9006347,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006348,"byte_end":9006394,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006395,"byte_end":9006400,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006401,"byte_end":9006418,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/set_permissions.rs","byte_start":9006419,"byte_end":9006426,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5077},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007687,"byte_end":9007703,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9006768,"byte_end":9006831,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9006832,"byte_end":9006835,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9006836,"byte_end":9006933,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9006934,"byte_end":9006963,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9006964,"byte_end":9006967,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9006968,"byte_end":9007039,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007040,"byte_end":9007043,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007044,"byte_end":9007078,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007079,"byte_end":9007171,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007172,"byte_end":9007175,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007176,"byte_end":9007188,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007189,"byte_end":9007192,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007193,"byte_end":9007251,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007252,"byte_end":9007255,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007256,"byte_end":9007317,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007318,"byte_end":9007392,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007393,"byte_end":9007429,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007430,"byte_end":9007433,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007434,"byte_end":9007448,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007449,"byte_end":9007452,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007453,"byte_end":9007466,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007467,"byte_end":9007541,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007542,"byte_end":9007547,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007548,"byte_end":9007570,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007571,"byte_end":9007574,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007575,"byte_end":9007641,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007642,"byte_end":9007647,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007648,"byte_end":9007665,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/symlink_metadata.rs","byte_start":9007666,"byte_end":9007673,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5087},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008799,"byte_end":9008804,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<P: AsRef<Path>, C: AsRef<[u8]>>(P, C) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008007,"byte_end":9008065,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008066,"byte_end":9008069,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008070,"byte_end":9008167,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008168,"byte_end":9008183,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008184,"byte_end":9008187,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008188,"byte_end":9008248,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008249,"byte_end":9008252,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008253,"byte_end":9008323,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008324,"byte_end":9008327,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008328,"byte_end":9008340,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008341,"byte_end":9008344,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008345,"byte_end":9008403,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008404,"byte_end":9008407,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008408,"byte_end":9008457,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008458,"byte_end":9008523,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008524,"byte_end":9008560,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008561,"byte_end":9008564,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008565,"byte_end":9008579,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008580,"byte_end":9008583,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008584,"byte_end":9008597,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008598,"byte_end":9008672,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008673,"byte_end":9008678,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008679,"byte_end":9008701,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008702,"byte_end":9008705,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008706,"byte_end":9008753,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008754,"byte_end":9008759,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008760,"byte_end":9008777,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/write.rs","byte_start":9008778,"byte_end":9008785,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5094},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","parent":null,"children":[{"krate":0,"index":5095},{"krate":0,"index":5103},{"krate":0,"index":5126},{"krate":0,"index":5157},{"krate":0,"index":5287},{"krate":0,"index":5386},{"krate":0,"index":5387},{"krate":0,"index":5388},{"krate":0,"index":5389},{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":5394},{"krate":0,"index":5395},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5398}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16970,"byte_end":16997,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Cross-platform path manipulation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009182,"byte_end":9009219,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009220,"byte_end":9009223,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::path`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009224,"byte_end":9009277,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009278,"byte_end":9009281,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009282,"byte_end":9009370,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/ and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009371,"byte_end":9009453,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009454,"byte_end":9009537,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ on strings according to the local platform's path syntax.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009538,"byte_end":9009599,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009600,"byte_end":9009603,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009604,"byte_end":9009679,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009680,"byte_end":9009757,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009758,"byte_end":9009836,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009837,"byte_end":9009915,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009916,"byte_end":9009984,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ normalization described in the documentation for the [`components`] method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9009985,"byte_end":9010064,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010065,"byte_end":9010068,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010069,"byte_end":9010133,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010134,"byte_end":9010137,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Simple usage","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010138,"byte_end":9010157,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010158,"byte_end":9010161,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Path manipulation includes both parsing components from slices and building","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010162,"byte_end":9010241,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ new owned paths.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010242,"byte_end":9010262,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010263,"byte_end":9010266,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010267,"byte_end":9010334,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ slice and start asking questions:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010335,"byte_end":9010372,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010373,"byte_end":9010376,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010377,"byte_end":9010384,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010385,"byte_end":9010415,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010416,"byte_end":9010440,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010441,"byte_end":9010444,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010445,"byte_end":9010490,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010491,"byte_end":9010494,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010495,"byte_end":9010526,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010527,"byte_end":9010579,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010580,"byte_end":9010583,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010584,"byte_end":9010621,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010622,"byte_end":9010673,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010674,"byte_end":9010677,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010678,"byte_end":9010715,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010716,"byte_end":9010767,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010768,"byte_end":9010775,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010776,"byte_end":9010779,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ To build or modify paths, use [`PathBuf`]:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010780,"byte_end":9010826,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010827,"byte_end":9010830,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010831,"byte_end":9010838,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010839,"byte_end":9010872,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010873,"byte_end":9010876,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // This way works...","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010877,"byte_end":9010901,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010902,"byte_end":9010943,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010944,"byte_end":9010947,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ path.push(\"windows\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010948,"byte_end":9010973,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ path.push(\"system32\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9010974,"byte_end":9011000,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011001,"byte_end":9011004,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ path.set_extension(\"dll\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011005,"byte_end":9011035,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011036,"byte_end":9011039,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // ... but push is best used if you don't know everything up","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011040,"byte_end":9011104,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ // front. If you do, this way is better:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011105,"byte_end":9011149,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011150,"byte_end":9011227,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011228,"byte_end":9011235,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011236,"byte_end":9011239,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011240,"byte_end":9011278,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011279,"byte_end":9011333,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011334,"byte_end":9011370,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011371,"byte_end":9011401,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011402,"byte_end":9011447,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011448,"byte_end":9011519,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011520,"byte_end":9011523,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011524,"byte_end":9011585,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011586,"byte_end":9011658,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/mod.rs","byte_start":9011659,"byte_end":9011725,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5711},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012693,"byte_end":9012702,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":5713}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012200,"byte_end":9012248,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012249,"byte_end":9012252,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012253,"byte_end":9012322,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012323,"byte_end":9012358,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012359,"byte_end":9012362,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012363,"byte_end":9012377,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012378,"byte_end":9012381,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012382,"byte_end":9012389,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012390,"byte_end":9012420,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012421,"byte_end":9012424,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012425,"byte_end":9012462,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012463,"byte_end":9012466,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012467,"byte_end":9012505,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012506,"byte_end":9012549,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012550,"byte_end":9012555,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012556,"byte_end":9012563,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012564,"byte_end":9012567,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012568,"byte_end":9012620,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012621,"byte_end":9012651,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5722},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013703,"byte_end":9013713,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":5724}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013133,"byte_end":9013187,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013188,"byte_end":9013191,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013192,"byte_end":9013262,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013263,"byte_end":9013298,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013299,"byte_end":9013302,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013303,"byte_end":9013317,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013318,"byte_end":9013321,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013322,"byte_end":9013329,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013330,"byte_end":9013360,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013361,"byte_end":9013364,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013365,"byte_end":9013410,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013411,"byte_end":9013414,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013415,"byte_end":9013455,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013456,"byte_end":9013492,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013493,"byte_end":9013498,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013499,"byte_end":9013506,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013507,"byte_end":9013510,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013511,"byte_end":9013549,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013550,"byte_end":9013604,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013605,"byte_end":9013635,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5111},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014205,"byte_end":9014212,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013802,"byte_end":9013888,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013893,"byte_end":9013896,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013901,"byte_end":9013915,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013920,"byte_end":9013923,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013928,"byte_end":9013935,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013940,"byte_end":9013970,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013975,"byte_end":9013978,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013983,"byte_end":9014051,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014056,"byte_end":9014078,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014083,"byte_end":9014105,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014110,"byte_end":9014113,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014118,"byte_end":9014181,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014186,"byte_end":9014193,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5752},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015522,"byte_end":9015526,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5754}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015149,"byte_end":9015224,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015225,"byte_end":9015228,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015229,"byte_end":9015293,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015294,"byte_end":9015329,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015330,"byte_end":9015333,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015334,"byte_end":9015372,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015373,"byte_end":9015415,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015416,"byte_end":9015462,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015463,"byte_end":9015493,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5136},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015971,"byte_end":9015978,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015598,"byte_end":9015684,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015689,"byte_end":9015692,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015697,"byte_end":9015711,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015716,"byte_end":9015719,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015724,"byte_end":9015731,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015736,"byte_end":9015766,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015771,"byte_end":9015774,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015779,"byte_end":9015835,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015840,"byte_end":9015856,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015861,"byte_end":9015877,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015882,"byte_end":9015885,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015890,"byte_end":9015947,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015952,"byte_end":9015959,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5758},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018691,"byte_end":9018695,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":5759}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017412,"byte_end":9017434,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017435,"byte_end":9017438,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017439,"byte_end":9017498,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017499,"byte_end":9017502,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017503,"byte_end":9017581,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017582,"byte_end":9017663,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017664,"byte_end":9017746,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017747,"byte_end":9017774,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017775,"byte_end":9017778,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017779,"byte_end":9017854,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017855,"byte_end":9017920,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017921,"byte_end":9017941,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017942,"byte_end":9017945,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017946,"byte_end":9017982,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9017983,"byte_end":9018059,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018060,"byte_end":9018063,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018064,"byte_end":9018123,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018124,"byte_end":9018167,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018168,"byte_end":9018171,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018172,"byte_end":9018186,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018187,"byte_end":9018190,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018191,"byte_end":9018198,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018199,"byte_end":9018223,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018224,"byte_end":9018248,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018249,"byte_end":9018252,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018253,"byte_end":9018299,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018300,"byte_end":9018342,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018343,"byte_end":9018346,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018347,"byte_end":9018378,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018379,"byte_end":9018428,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018429,"byte_end":9018432,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018433,"byte_end":9018470,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018471,"byte_end":9018522,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018523,"byte_end":9018526,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018527,"byte_end":9018564,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018565,"byte_end":9018616,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018617,"byte_end":9018624,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5178},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019327,"byte_end":9019330,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<S: AsRef<OsStr> + ?Sized>(&S) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018745,"byte_end":9018797,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018802,"byte_end":9018805,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018810,"byte_end":9018845,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018850,"byte_end":9018853,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018858,"byte_end":9018872,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018877,"byte_end":9018880,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018885,"byte_end":9018892,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018897,"byte_end":9018927,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018932,"byte_end":9018935,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018940,"byte_end":9018965,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018970,"byte_end":9018977,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018982,"byte_end":9018985,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018990,"byte_end":9019055,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019060,"byte_end":9019063,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019068,"byte_end":9019075,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019080,"byte_end":9019110,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019115,"byte_end":9019118,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019123,"byte_end":9019164,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019169,"byte_end":9019210,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019215,"byte_end":9019259,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019264,"byte_end":9019303,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019308,"byte_end":9019315,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5180},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019853,"byte_end":9019862,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"pub fn as_os_str(&Self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019474,"byte_end":9019517,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019522,"byte_end":9019525,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019530,"byte_end":9019596,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019601,"byte_end":9019604,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019609,"byte_end":9019623,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019628,"byte_end":9019631,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019636,"byte_end":9019643,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019648,"byte_end":9019672,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019677,"byte_end":9019680,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019685,"byte_end":9019715,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019720,"byte_end":9019723,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019728,"byte_end":9019778,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019783,"byte_end":9019829,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019834,"byte_end":9019841,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5181},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020452,"byte_end":9020458,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"pub fn to_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019924,"byte_end":9019984,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019989,"byte_end":9019992,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9019997,"byte_end":9020061,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020066,"byte_end":9020133,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020138,"byte_end":9020170,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020175,"byte_end":9020178,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020183,"byte_end":9020245,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020250,"byte_end":9020253,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020258,"byte_end":9020272,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020277,"byte_end":9020280,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020285,"byte_end":9020292,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020297,"byte_end":9020327,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020332,"byte_end":9020335,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020340,"byte_end":9020376,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020381,"byte_end":9020428,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020433,"byte_end":9020440,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5182},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021251,"byte_end":9021266,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020523,"byte_end":9020563,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020568,"byte_end":9020571,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020576,"byte_end":9020623,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020628,"byte_end":9020673,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020678,"byte_end":9020681,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020686,"byte_end":9020754,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020759,"byte_end":9020843,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020848,"byte_end":9020851,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020856,"byte_end":9020870,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020875,"byte_end":9020878,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020883,"byte_end":9020944,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020949,"byte_end":9020952,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020957,"byte_end":9020964,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9020969,"byte_end":9020999,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021004,"byte_end":9021007,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021012,"byte_end":9021048,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021053,"byte_end":9021103,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021108,"byte_end":9021115,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021120,"byte_end":9021123,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021128,"byte_end":9021202,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021207,"byte_end":9021239,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5183},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021675,"byte_end":9021686,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"pub fn to_path_buf(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021340,"byte_end":9021386,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021391,"byte_end":9021394,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021399,"byte_end":9021435,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021440,"byte_end":9021443,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021448,"byte_end":9021462,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021467,"byte_end":9021470,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021475,"byte_end":9021482,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021487,"byte_end":9021528,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021533,"byte_end":9021536,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021541,"byte_end":9021595,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021600,"byte_end":9021651,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021656,"byte_end":9021663,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5184},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022386,"byte_end":9022397,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"pub fn is_absolute(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021766,"byte_end":9021840,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021845,"byte_end":9021871,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021876,"byte_end":9021879,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021884,"byte_end":9021948,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9021953,"byte_end":9022005,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022010,"byte_end":9022013,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022018,"byte_end":9022093,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022098,"byte_end":9022171,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022176,"byte_end":9022179,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022184,"byte_end":9022218,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022223,"byte_end":9022226,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022231,"byte_end":9022245,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022250,"byte_end":9022253,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022258,"byte_end":9022265,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022270,"byte_end":9022300,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022305,"byte_end":9022308,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022313,"byte_end":9022362,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022367,"byte_end":9022374,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5185},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022813,"byte_end":9022824,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"pub fn is_relative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022459,"byte_end":9022523,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022528,"byte_end":9022531,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022536,"byte_end":9022593,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022598,"byte_end":9022601,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022606,"byte_end":9022646,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022651,"byte_end":9022654,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022659,"byte_end":9022673,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022678,"byte_end":9022681,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022686,"byte_end":9022693,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022698,"byte_end":9022728,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022733,"byte_end":9022736,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022741,"byte_end":9022789,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022794,"byte_end":9022801,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5186},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023445,"byte_end":9023453,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"pub fn has_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022886,"byte_end":9022930,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022935,"byte_end":9022938,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9022943,"byte_end":9022998,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023003,"byte_end":9023006,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023011,"byte_end":9023053,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023058,"byte_end":9023126,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023131,"byte_end":9023216,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023221,"byte_end":9023277,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023282,"byte_end":9023285,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023290,"byte_end":9023304,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023309,"byte_end":9023312,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023317,"byte_end":9023324,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023329,"byte_end":9023359,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023364,"byte_end":9023367,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023372,"byte_end":9023421,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023426,"byte_end":9023433,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5187},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024158,"byte_end":9024164,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"pub fn parent(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023512,"byte_end":9023580,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023585,"byte_end":9023588,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023593,"byte_end":9023657,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023662,"byte_end":9023665,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023670,"byte_end":9023750,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023755,"byte_end":9023758,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023763,"byte_end":9023777,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023782,"byte_end":9023785,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023790,"byte_end":9023797,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023802,"byte_end":9023832,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023837,"byte_end":9023840,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023845,"byte_end":9023882,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023887,"byte_end":9023927,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023932,"byte_end":9023974,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023979,"byte_end":9023982,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9023987,"byte_end":9024035,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024040,"byte_end":9024085,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024090,"byte_end":9024134,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024139,"byte_end":9024146,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5189},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025287,"byte_end":9025296,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"pub fn ancestors(&Self) -> Ancestors","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024248,"byte_end":9024303,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024308,"byte_end":9024311,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024316,"byte_end":9024409,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024414,"byte_end":9024504,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024509,"byte_end":9024600,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024605,"byte_end":9024700,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024705,"byte_end":9024724,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024729,"byte_end":9024732,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024737,"byte_end":9024804,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024809,"byte_end":9024855,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024860,"byte_end":9024863,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024868,"byte_end":9024882,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024887,"byte_end":9024890,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024895,"byte_end":9024902,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024907,"byte_end":9024937,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024942,"byte_end":9024945,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9024950,"byte_end":9025008,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025013,"byte_end":9025082,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025087,"byte_end":9025152,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025157,"byte_end":9025219,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025224,"byte_end":9025263,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025268,"byte_end":9025275,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5190},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026341,"byte_end":9026350,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"pub fn file_name(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025374,"byte_end":9025437,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025442,"byte_end":9025445,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025450,"byte_end":9025544,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025549,"byte_end":9025575,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025580,"byte_end":9025583,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025588,"byte_end":9025640,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025645,"byte_end":9025648,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025653,"byte_end":9025733,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025738,"byte_end":9025741,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025746,"byte_end":9025760,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025765,"byte_end":9025768,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025773,"byte_end":9025780,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025785,"byte_end":9025809,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025814,"byte_end":9025817,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025822,"byte_end":9025852,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025857,"byte_end":9025860,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025865,"byte_end":9025941,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9025946,"byte_end":9026028,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026033,"byte_end":9026113,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026118,"byte_end":9026200,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026205,"byte_end":9026263,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026268,"byte_end":9026317,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026322,"byte_end":9026329,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5191},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027604,"byte_end":9027616,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"pub fn strip_prefix<P>(&Self, P) -> Result<&Path, StripPrefixError> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026420,"byte_end":9026483,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026488,"byte_end":9026491,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026496,"byte_end":9026508,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026513,"byte_end":9026516,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026521,"byte_end":9026583,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026588,"byte_end":9026626,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026631,"byte_end":9026634,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026639,"byte_end":9026679,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026684,"byte_end":9026762,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026767,"byte_end":9026770,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026775,"byte_end":9026789,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026794,"byte_end":9026797,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026802,"byte_end":9026809,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026814,"byte_end":9026855,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026860,"byte_end":9026863,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026868,"byte_end":9026915,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026920,"byte_end":9026923,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9026928,"byte_end":9027003,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027008,"byte_end":9027082,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027087,"byte_end":9027162,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027167,"byte_end":9027242,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027247,"byte_end":9027323,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027328,"byte_end":9027385,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027390,"byte_end":9027448,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027453,"byte_end":9027456,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027461,"byte_end":9027502,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027507,"byte_end":9027580,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027585,"byte_end":9027592,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5193},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028301,"byte_end":9028312,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"pub fn starts_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027781,"byte_end":9027833,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027838,"byte_end":9027841,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027846,"byte_end":9027896,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027901,"byte_end":9027904,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027909,"byte_end":9027923,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027928,"byte_end":9027931,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027936,"byte_end":9027943,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027948,"byte_end":9027978,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027983,"byte_end":9027986,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9027991,"byte_end":9028031,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028036,"byte_end":9028039,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028044,"byte_end":9028082,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028087,"byte_end":9028126,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028131,"byte_end":9028176,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028181,"byte_end":9028227,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028232,"byte_end":9028235,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028240,"byte_end":9028277,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028282,"byte_end":9028289,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5195},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028738,"byte_end":9028747,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"pub fn ends_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028412,"byte_end":9028465,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028470,"byte_end":9028473,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028478,"byte_end":9028528,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028533,"byte_end":9028536,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028541,"byte_end":9028555,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028560,"byte_end":9028563,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028568,"byte_end":9028575,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028580,"byte_end":9028610,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028615,"byte_end":9028618,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028623,"byte_end":9028663,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028668,"byte_end":9028671,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028676,"byte_end":9028714,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028719,"byte_end":9028726,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5197},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029589,"byte_end":9029598,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"pub fn file_stem(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028847,"byte_end":9028910,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028915,"byte_end":9028918,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028923,"byte_end":9028975,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028980,"byte_end":9028983,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9028988,"byte_end":9029004,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029009,"byte_end":9029012,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029017,"byte_end":9029057,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029062,"byte_end":9029116,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029121,"byte_end":9029209,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029214,"byte_end":9029280,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029285,"byte_end":9029288,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029293,"byte_end":9029373,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029378,"byte_end":9029381,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029386,"byte_end":9029400,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029405,"byte_end":9029408,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029413,"byte_end":9029420,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029425,"byte_end":9029455,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029460,"byte_end":9029463,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029468,"byte_end":9029503,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029508,"byte_end":9029511,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029516,"byte_end":9029565,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029570,"byte_end":9029577,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030377,"byte_end":9030386,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"pub fn extension(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029668,"byte_end":9029725,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029730,"byte_end":9029733,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029738,"byte_end":9029759,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029764,"byte_end":9029767,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029772,"byte_end":9029812,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029817,"byte_end":9029860,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029865,"byte_end":9029942,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9029947,"byte_end":9030012,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030017,"byte_end":9030020,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030025,"byte_end":9030077,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030082,"byte_end":9030162,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030167,"byte_end":9030170,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030175,"byte_end":9030189,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030194,"byte_end":9030197,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030202,"byte_end":9030209,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030214,"byte_end":9030244,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030249,"byte_end":9030252,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030257,"byte_end":9030292,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030297,"byte_end":9030300,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030305,"byte_end":9030353,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030358,"byte_end":9030365,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5199},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030927,"byte_end":9030931,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"pub fn join<P: AsRef<Path>>(&Self, P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030456,"byte_end":9030520,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030525,"byte_end":9030528,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030533,"byte_end":9030610,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030615,"byte_end":9030618,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030623,"byte_end":9030659,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030664,"byte_end":9030718,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030723,"byte_end":9030726,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030731,"byte_end":9030745,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030750,"byte_end":9030753,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030758,"byte_end":9030765,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030770,"byte_end":9030811,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030816,"byte_end":9030819,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030824,"byte_end":9030903,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9030908,"byte_end":9030915,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5201},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031670,"byte_end":9031684,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"pub fn with_file_name<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031034,"byte_end":9031108,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031113,"byte_end":9031116,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031121,"byte_end":9031173,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031178,"byte_end":9031181,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031186,"byte_end":9031222,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031227,"byte_end":9031299,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031304,"byte_end":9031307,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031312,"byte_end":9031326,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031331,"byte_end":9031334,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031339,"byte_end":9031346,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031351,"byte_end":9031392,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031397,"byte_end":9031400,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031405,"byte_end":9031446,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031451,"byte_end":9031529,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031534,"byte_end":9031537,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031542,"byte_end":9031575,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031580,"byte_end":9031646,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031651,"byte_end":9031658,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5203},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032303,"byte_end":9032317,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"pub fn with_extension<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031799,"byte_end":9031873,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031878,"byte_end":9031881,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031886,"byte_end":9031938,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031943,"byte_end":9031946,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031951,"byte_end":9031987,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9031992,"byte_end":9032064,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032069,"byte_end":9032072,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032077,"byte_end":9032091,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032096,"byte_end":9032099,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032104,"byte_end":9032111,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032116,"byte_end":9032157,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032162,"byte_end":9032165,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032170,"byte_end":9032205,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032210,"byte_end":9032279,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032284,"byte_end":9032291,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5205},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033904,"byte_end":9033914,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"pub fn components(&Self) -> Components","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032432,"byte_end":9032493,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032498,"byte_end":9032501,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032506,"byte_end":9032574,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032579,"byte_end":9032582,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032587,"byte_end":9032655,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032660,"byte_end":9032692,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032697,"byte_end":9032700,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032705,"byte_end":9032776,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032781,"byte_end":9032851,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032856,"byte_end":9032927,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032932,"byte_end":9032973,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032978,"byte_end":9032981,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9032986,"byte_end":9033063,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033068,"byte_end":9033071,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033076,"byte_end":9033146,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033151,"byte_end":9033223,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033228,"byte_end":9033277,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033282,"byte_end":9033285,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033290,"byte_end":9033328,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033333,"byte_end":9033383,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033388,"byte_end":9033391,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033396,"byte_end":9033410,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033415,"byte_end":9033418,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033423,"byte_end":9033430,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033435,"byte_end":9033459,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033464,"byte_end":9033467,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033472,"byte_end":9033515,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033520,"byte_end":9033523,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033528,"byte_end":9033592,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033597,"byte_end":9033600,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033605,"byte_end":9033665,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033670,"byte_end":9033748,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033753,"byte_end":9033835,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033840,"byte_end":9033880,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9033885,"byte_end":9033892,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5206},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034820,"byte_end":9034824,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034028,"byte_end":9034099,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034104,"byte_end":9034115,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034120,"byte_end":9034123,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034128,"byte_end":9034203,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034208,"byte_end":9034248,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034253,"byte_end":9034256,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034261,"byte_end":9034299,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034304,"byte_end":9034370,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034375,"byte_end":9034378,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034383,"byte_end":9034397,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034402,"byte_end":9034405,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034410,"byte_end":9034417,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034422,"byte_end":9034446,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034451,"byte_end":9034454,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034459,"byte_end":9034497,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034502,"byte_end":9034505,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034510,"byte_end":9034560,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034565,"byte_end":9034644,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034649,"byte_end":9034700,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034705,"byte_end":9034760,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034765,"byte_end":9034796,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034801,"byte_end":9034808,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5207},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035327,"byte_end":9035334,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"pub fn display(&Self) -> Display","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9034920,"byte_end":9034995,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035000,"byte_end":9035038,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035043,"byte_end":9035046,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035051,"byte_end":9035120,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035125,"byte_end":9035128,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035133,"byte_end":9035147,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035152,"byte_end":9035155,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035160,"byte_end":9035167,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035172,"byte_end":9035202,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035207,"byte_end":9035210,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035215,"byte_end":9035255,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035260,"byte_end":9035263,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035268,"byte_end":9035303,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035308,"byte_end":9035315,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5208},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036100,"byte_end":9036108,"line_start":588,"line_end":588,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035399,"byte_end":9035445,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035450,"byte_end":9035453,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035458,"byte_end":9035535,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035540,"byte_end":9035561,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035566,"byte_end":9035569,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035574,"byte_end":9035615,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035620,"byte_end":9035623,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035628,"byte_end":9035672,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035677,"byte_end":9035680,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035685,"byte_end":9035699,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035704,"byte_end":9035707,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035712,"byte_end":9035725,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035730,"byte_end":9035804,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035809,"byte_end":9035814,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035819,"byte_end":9035849,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035854,"byte_end":9035857,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035862,"byte_end":9035904,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035909,"byte_end":9035951,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9035956,"byte_end":9035999,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036004,"byte_end":9036009,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036014,"byte_end":9036031,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036036,"byte_end":9036043,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036048,"byte_end":9036082,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5211},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036840,"byte_end":9036856,"line_start":612,"line_end":612,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"pub async fn symlink_metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036190,"byte_end":9036269,"line_start":592,"line_end":592,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036274,"byte_end":9036277,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036282,"byte_end":9036331,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036336,"byte_end":9036339,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036344,"byte_end":9036404,"line_start":596,"line_end":596,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036409,"byte_end":9036412,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036417,"byte_end":9036431,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036436,"byte_end":9036439,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036444,"byte_end":9036457,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036462,"byte_end":9036536,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036541,"byte_end":9036546,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036551,"byte_end":9036581,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036586,"byte_end":9036589,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036594,"byte_end":9036636,"line_start":605,"line_end":605,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036641,"byte_end":9036691,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036696,"byte_end":9036739,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036744,"byte_end":9036749,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036754,"byte_end":9036771,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036776,"byte_end":9036783,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036788,"byte_end":9036822,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5214},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037683,"byte_end":9037695,"line_start":638,"line_end":638,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"pub async fn canonicalize<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036946,"byte_end":9036987,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9036992,"byte_end":9036995,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037000,"byte_end":9037089,"line_start":618,"line_end":618,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037094,"byte_end":9037122,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037127,"byte_end":9037130,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037135,"byte_end":9037180,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037185,"byte_end":9037188,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037193,"byte_end":9037245,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037250,"byte_end":9037253,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037258,"byte_end":9037272,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037277,"byte_end":9037280,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037285,"byte_end":9037298,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037303,"byte_end":9037377,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037382,"byte_end":9037387,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037392,"byte_end":9037433,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037438,"byte_end":9037441,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037446,"byte_end":9037499,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037504,"byte_end":9037582,"line_start":633,"line_end":633,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037587,"byte_end":9037592,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037597,"byte_end":9037614,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037619,"byte_end":9037626,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037631,"byte_end":9037665,"line_start":637,"line_end":637,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5217},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038350,"byte_end":9038359,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"pub async fn read_link<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037776,"byte_end":9037846,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037851,"byte_end":9037854,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037859,"byte_end":9037901,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037906,"byte_end":9037909,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037914,"byte_end":9037960,"line_start":646,"line_end":646,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037965,"byte_end":9037968,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037973,"byte_end":9037987,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9037992,"byte_end":9037995,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038000,"byte_end":9038013,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038018,"byte_end":9038092,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038097,"byte_end":9038102,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038107,"byte_end":9038137,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038142,"byte_end":9038145,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038150,"byte_end":9038200,"line_start":655,"line_end":655,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038205,"byte_end":9038249,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038254,"byte_end":9038259,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038264,"byte_end":9038281,"line_start":658,"line_end":658,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038286,"byte_end":9038293,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038298,"byte_end":9038332,"line_start":660,"line_end":660,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5220},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039469,"byte_end":9039477,"line_start":696,"line_end":696,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"pub async fn read_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038437,"byte_end":9038494,"line_start":665,"line_end":665,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038499,"byte_end":9038502,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038507,"byte_end":9038583,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038588,"byte_end":9038661,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038666,"byte_end":9038669,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038674,"byte_end":9038715,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038720,"byte_end":9038723,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038728,"byte_end":9038770,"line_start":672,"line_end":672,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038775,"byte_end":9038819,"line_start":673,"line_end":673,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038824,"byte_end":9038868,"line_start":674,"line_end":674,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038873,"byte_end":9038876,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038881,"byte_end":9038895,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038900,"byte_end":9038903,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038908,"byte_end":9038921,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9038926,"byte_end":9039000,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039005,"byte_end":9039010,"line_start":680,"line_end":680,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039015,"byte_end":9039037,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039042,"byte_end":9039072,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039077,"byte_end":9039107,"line_start":683,"line_end":683,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039112,"byte_end":9039115,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039120,"byte_end":9039156,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039161,"byte_end":9039206,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039211,"byte_end":9039214,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039219,"byte_end":9039263,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039268,"byte_end":9039293,"line_start":689,"line_end":689,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039298,"byte_end":9039358,"line_start":690,"line_end":690,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039363,"byte_end":9039368,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039373,"byte_end":9039378,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039383,"byte_end":9039400,"line_start":693,"line_end":693,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039405,"byte_end":9039412,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039417,"byte_end":9039451,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040506,"byte_end":9040512,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"pub async fn exists<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039558,"byte_end":9039618,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039623,"byte_end":9039626,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039631,"byte_end":9039708,"line_start":702,"line_end":702,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039713,"byte_end":9039793,"line_start":703,"line_end":703,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039798,"byte_end":9039801,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039806,"byte_end":9039884,"line_start":705,"line_end":705,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039889,"byte_end":9039936,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039941,"byte_end":9039944,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039949,"byte_end":9039963,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039968,"byte_end":9039971,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039976,"byte_end":9039989,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9039994,"byte_end":9040068,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040073,"byte_end":9040078,"line_start":712,"line_end":712,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040083,"byte_end":9040113,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040118,"byte_end":9040188,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040193,"byte_end":9040198,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040203,"byte_end":9040220,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040225,"byte_end":9040232,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040237,"byte_end":9040240,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040245,"byte_end":9040259,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040264,"byte_end":9040267,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040272,"byte_end":9040351,"line_start":721,"line_end":721,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040356,"byte_end":9040394,"line_start":722,"line_end":722,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040399,"byte_end":9040402,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040407,"byte_end":9040449,"line_start":724,"line_end":724,"column_start":5,"column_end":47}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040454,"byte_end":9040488,"line_start":725,"line_end":725,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5226},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041770,"byte_end":9041777,"line_start":759,"line_end":759,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"pub async fn is_file<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040582,"byte_end":9040662,"line_start":730,"line_end":730,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040667,"byte_end":9040670,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040675,"byte_end":9040752,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040757,"byte_end":9040837,"line_start":733,"line_end":733,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040842,"byte_end":9040845,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040850,"byte_end":9040928,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040933,"byte_end":9040980,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040985,"byte_end":9040988,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9040993,"byte_end":9041007,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041012,"byte_end":9041015,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041020,"byte_end":9041033,"line_start":740,"line_end":740,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041038,"byte_end":9041112,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041117,"byte_end":9041122,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041127,"byte_end":9041157,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041162,"byte_end":9041232,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041237,"byte_end":9041299,"line_start":745,"line_end":745,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041304,"byte_end":9041309,"line_start":746,"line_end":746,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041314,"byte_end":9041331,"line_start":747,"line_end":747,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041336,"byte_end":9041343,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041348,"byte_end":9041351,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041356,"byte_end":9041370,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041375,"byte_end":9041378,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041383,"byte_end":9041462,"line_start":752,"line_end":752,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041467,"byte_end":9041537,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041542,"byte_end":9041583,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041588,"byte_end":9041591,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041596,"byte_end":9041638,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041643,"byte_end":9041713,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041718,"byte_end":9041752,"line_start":758,"line_end":758,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043104,"byte_end":9043110,"line_start":796,"line_end":796,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"pub async fn is_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041916,"byte_end":9041993,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9041998,"byte_end":9042001,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042006,"byte_end":9042083,"line_start":768,"line_end":768,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042088,"byte_end":9042168,"line_start":769,"line_end":769,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042173,"byte_end":9042176,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042181,"byte_end":9042259,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042264,"byte_end":9042311,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042316,"byte_end":9042319,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042324,"byte_end":9042338,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042343,"byte_end":9042346,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042351,"byte_end":9042364,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042369,"byte_end":9042443,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042448,"byte_end":9042453,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042458,"byte_end":9042488,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042493,"byte_end":9042496,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042501,"byte_end":9042569,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042574,"byte_end":9042636,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042641,"byte_end":9042646,"line_start":783,"line_end":783,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042651,"byte_end":9042668,"line_start":784,"line_end":784,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042673,"byte_end":9042680,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042685,"byte_end":9042688,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042693,"byte_end":9042707,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042712,"byte_end":9042715,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042720,"byte_end":9042799,"line_start":789,"line_end":789,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042804,"byte_end":9042874,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042879,"byte_end":9042919,"line_start":791,"line_end":791,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042924,"byte_end":9042927,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042932,"byte_end":9042974,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9042979,"byte_end":9043047,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043052,"byte_end":9043086,"line_start":795,"line_end":795,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5234},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043677,"byte_end":9043690,"line_start":817,"line_end":817,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"pub fn into_path_buf(Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043248,"byte_end":9043321,"line_start":803,"line_end":803,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043326,"byte_end":9043341,"line_start":804,"line_end":804,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043346,"byte_end":9043349,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043354,"byte_end":9043418,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043423,"byte_end":9043459,"line_start":807,"line_end":807,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043464,"byte_end":9043467,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043472,"byte_end":9043486,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043491,"byte_end":9043494,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043499,"byte_end":9043506,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043511,"byte_end":9043541,"line_start":812,"line_end":812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043546,"byte_end":9043549,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043554,"byte_end":9043608,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043613,"byte_end":9043653,"line_start":815,"line_end":815,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043658,"byte_end":9043665,"line_start":816,"line_end":816,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6036},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050701,"byte_end":9050708,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":6037}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050472,"byte_end":9050534,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050535,"byte_end":9050538,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050539,"byte_end":9050618,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5309},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050949,"byte_end":9050952,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"pub fn new() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050764,"byte_end":9050797,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050802,"byte_end":9050805,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050810,"byte_end":9050824,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050829,"byte_end":9050832,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050837,"byte_end":9050844,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050849,"byte_end":9050882,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050887,"byte_end":9050890,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050895,"byte_end":9050925,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050930,"byte_end":9050937,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5310},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051313,"byte_end":9051320,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"pub fn as_path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051020,"byte_end":9051052,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051057,"byte_end":9051060,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051065,"byte_end":9051095,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051100,"byte_end":9051103,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051108,"byte_end":9051122,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051127,"byte_end":9051130,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051135,"byte_end":9051142,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051147,"byte_end":9051188,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051193,"byte_end":9051196,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051201,"byte_end":9051236,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051241,"byte_end":9051289,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051294,"byte_end":9051301,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5311},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052314,"byte_end":9052318,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"pub fn push<P: AsRef<Path>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051386,"byte_end":9051417,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051422,"byte_end":9051425,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051430,"byte_end":9051486,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051491,"byte_end":9051494,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051499,"byte_end":9051514,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051519,"byte_end":9051522,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051527,"byte_end":9051590,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051595,"byte_end":9051662,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051667,"byte_end":9051728,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051733,"byte_end":9051736,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051741,"byte_end":9051755,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051760,"byte_end":9051763,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051768,"byte_end":9051822,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051827,"byte_end":9051830,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051835,"byte_end":9051842,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051847,"byte_end":9051880,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051885,"byte_end":9051888,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051893,"byte_end":9051934,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051939,"byte_end":9051964,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9051969,"byte_end":9052021,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052026,"byte_end":9052033,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052038,"byte_end":9052041,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052046,"byte_end":9052102,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052107,"byte_end":9052110,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052115,"byte_end":9052122,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052127,"byte_end":9052160,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052165,"byte_end":9052168,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052173,"byte_end":9052214,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052219,"byte_end":9052241,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052246,"byte_end":9052290,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052295,"byte_end":9052302,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5313},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053016,"byte_end":9053019,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"pub fn pop(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052407,"byte_end":9052447,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052452,"byte_end":9052455,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052460,"byte_end":9052528,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052533,"byte_end":9052563,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052568,"byte_end":9052571,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052576,"byte_end":9052656,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052661,"byte_end":9052715,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052720,"byte_end":9052723,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052728,"byte_end":9052742,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052747,"byte_end":9052750,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052755,"byte_end":9052762,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052767,"byte_end":9052808,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052813,"byte_end":9052816,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052821,"byte_end":9052868,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052873,"byte_end":9052876,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052881,"byte_end":9052893,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052898,"byte_end":9052936,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052941,"byte_end":9052953,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052958,"byte_end":9052992,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9052997,"byte_end":9053004,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5314},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054049,"byte_end":9054062,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"pub fn set_file_name<S: AsRef<OsStr>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053077,"byte_end":9053123,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053128,"byte_end":9053131,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053136,"byte_end":9053205,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053210,"byte_end":9053226,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053231,"byte_end":9053234,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053239,"byte_end":9053305,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053310,"byte_end":9053379,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053384,"byte_end":9053428,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053433,"byte_end":9053436,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053441,"byte_end":9053501,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053506,"byte_end":9053586,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053591,"byte_end":9053634,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053639,"byte_end":9053642,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053647,"byte_end":9053661,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053666,"byte_end":9053669,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053674,"byte_end":9053681,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053686,"byte_end":9053719,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053724,"byte_end":9053727,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053732,"byte_end":9053769,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053774,"byte_end":9053811,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053816,"byte_end":9053845,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053850,"byte_end":9053892,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053897,"byte_end":9053936,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053941,"byte_end":9053974,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9053979,"byte_end":9054025,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054030,"byte_end":9054037,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5316},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055075,"byte_end":9055088,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"pub fn set_extension<S: AsRef<OsStr>>(&mut Self, S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054162,"byte_end":9054208,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054213,"byte_end":9054216,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054221,"byte_end":9054292,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054297,"byte_end":9054352,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054357,"byte_end":9054360,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054365,"byte_end":9054437,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054442,"byte_end":9054461,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054466,"byte_end":9054469,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054474,"byte_end":9054534,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054539,"byte_end":9054599,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054604,"byte_end":9054684,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054689,"byte_end":9054692,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054697,"byte_end":9054711,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054716,"byte_end":9054719,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054724,"byte_end":9054731,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054736,"byte_end":9054777,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054782,"byte_end":9054785,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054790,"byte_end":9054833,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054838,"byte_end":9054841,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054846,"byte_end":9054875,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054880,"byte_end":9054938,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054943,"byte_end":9054946,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054951,"byte_end":9054984,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9054989,"byte_end":9055051,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055056,"byte_end":9055063,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5318},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055555,"byte_end":9055569,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"pub fn into_os_string(Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055196,"byte_end":9055268,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055273,"byte_end":9055276,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055281,"byte_end":9055353,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055358,"byte_end":9055361,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055366,"byte_end":9055380,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055385,"byte_end":9055388,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055393,"byte_end":9055400,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055405,"byte_end":9055438,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055443,"byte_end":9055446,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055451,"byte_end":9055490,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055495,"byte_end":9055531,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055536,"byte_end":9055543,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5319},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055820,"byte_end":9055835,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"pub fn into_boxed_path(Self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055637,"byte_end":9055696,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055701,"byte_end":9055704,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055709,"byte_end":9055773,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9055778,"byte_end":9055808,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":5399},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5409},{"krate":0,"index":5410},{"krate":0,"index":5411},{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415},{"krate":0,"index":5416},{"krate":0,"index":5499},{"krate":0,"index":5591}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":16970,"byte_end":16997,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Networking primitives for TCP/UDP communication.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060341,"byte_end":9060393,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060394,"byte_end":9060397,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides networking functionality for the Transmission Control and User","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060398,"byte_end":9060485,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060486,"byte_end":9060555,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060556,"byte_end":9060559,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::net`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060560,"byte_end":9060612,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060613,"byte_end":9060616,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060617,"byte_end":9060635,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060636,"byte_end":9060639,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060640,"byte_end":9060728,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060729,"byte_end":9060798,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060799,"byte_end":9060880,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060881,"byte_end":9060940,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9060941,"byte_end":9061030,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061031,"byte_end":9061105,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061106,"byte_end":9061198,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061199,"byte_end":9061281,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ * Other types are return or parameter types for various methods in this module","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061282,"byte_end":9061364,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061365,"byte_end":9061368,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061369,"byte_end":9061401,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061402,"byte_end":9061440,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061441,"byte_end":9061479,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061480,"byte_end":9061520,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061521,"byte_end":9061567,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061568,"byte_end":9061614,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061615,"byte_end":9061659,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061660,"byte_end":9061700,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/ [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061701,"byte_end":9061748,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061749,"byte_end":9061789,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061790,"byte_end":9061793,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061794,"byte_end":9061828,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061829,"byte_end":9061832,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061833,"byte_end":9061923,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"/ platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061924,"byte_end":9061989,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061990,"byte_end":9061993,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`async_std::os`]: ../os/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9061994,"byte_end":9062033,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062034,"byte_end":9062096,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062097,"byte_end":9062100,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062101,"byte_end":9062115,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062116,"byte_end":9062119,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ A simple UDP echo server:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062120,"byte_end":9062149,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062150,"byte_end":9062153,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062154,"byte_end":9062167,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062168,"byte_end":9062242,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062243,"byte_end":9062248,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062249,"byte_end":9062283,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062284,"byte_end":9062287,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062288,"byte_end":9062346,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062347,"byte_end":9062381,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062382,"byte_end":9062385,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062386,"byte_end":9062396,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062397,"byte_end":9062455,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062456,"byte_end":9062504,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062505,"byte_end":9062510,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062511,"byte_end":9062516,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062517,"byte_end":9062527,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/mod.rs","byte_start":9062528,"byte_end":9062535,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5435},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064287,"byte_end":9064300,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":5436},{"krate":0,"index":5437}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9063709,"byte_end":9063769,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9063770,"byte_end":9063773,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9063774,"byte_end":9063840,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9063841,"byte_end":9063844,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9063845,"byte_end":9063936,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9063937,"byte_end":9063977,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9063978,"byte_end":9063981,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9063982,"byte_end":9063996,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9063997,"byte_end":9064000,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064001,"byte_end":9064008,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064009,"byte_end":9064083,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064084,"byte_end":9064089,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064090,"byte_end":9064128,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064129,"byte_end":9064132,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064133,"byte_end":9064206,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064207,"byte_end":9064244,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064245,"byte_end":9064250,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064251,"byte_end":9064268,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064269,"byte_end":9064276,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5436},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064395,"byte_end":9064399,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":5435},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064307,"byte_end":9064385,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5437},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064741,"byte_end":9064756,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5435},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064435,"byte_end":9064501,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064506,"byte_end":9064509,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064514,"byte_end":9064605,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064610,"byte_end":9064635,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064640,"byte_end":9064643,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064648,"byte_end":9064733,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5440},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064973,"byte_end":9064982,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":5438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5443},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9065015,"byte_end":9065020,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":5438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5446},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9065041,"byte_end":9065045,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":5438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5438},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064944,"byte_end":9064963,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"pub enum ToSocketAddrsFuture<I> {\n    Resolving(JoinHandle<io::Result<I>>),\n    Ready(io::Result<I>),\n    Done,\n}","parent":null,"children":[{"krate":0,"index":5440},{"krate":0,"index":5443},{"krate":0,"index":5446}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9064895,"byte_end":9064934,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6063},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072923,"byte_end":9072934,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":6064}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9071667,"byte_end":9071718,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9071719,"byte_end":9071722,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9071723,"byte_end":9071820,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9071821,"byte_end":9071909,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9071910,"byte_end":9071939,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9071940,"byte_end":9071943,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9071944,"byte_end":9072000,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072001,"byte_end":9072004,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072005,"byte_end":9072074,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072075,"byte_end":9072078,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072079,"byte_end":9072142,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072143,"byte_end":9072146,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072147,"byte_end":9072173,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072174,"byte_end":9072208,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072209,"byte_end":9072263,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072264,"byte_end":9072352,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072353,"byte_end":9072356,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072357,"byte_end":9072371,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072372,"byte_end":9072375,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072376,"byte_end":9072389,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072390,"byte_end":9072464,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072465,"byte_end":9072470,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072471,"byte_end":9072493,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072494,"byte_end":9072530,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072531,"byte_end":9072561,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072562,"byte_end":9072565,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072566,"byte_end":9072628,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072629,"byte_end":9072672,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072673,"byte_end":9072676,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072677,"byte_end":9072729,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072730,"byte_end":9072759,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072760,"byte_end":9072815,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072816,"byte_end":9072856,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072857,"byte_end":9072862,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072863,"byte_end":9072868,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072869,"byte_end":9072886,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072887,"byte_end":9072894,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5521},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073756,"byte_end":9073760,"line_start":78,"line_end":78,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073006,"byte_end":9073083,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073088,"byte_end":9073091,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073096,"byte_end":9073157,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073162,"byte_end":9073165,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073170,"byte_end":9073263,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073268,"byte_end":9073336,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073341,"byte_end":9073344,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073349,"byte_end":9073363,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073368,"byte_end":9073415,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073420,"byte_end":9073423,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073428,"byte_end":9073441,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073446,"byte_end":9073520,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073525,"byte_end":9073530,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073535,"byte_end":9073571,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073576,"byte_end":9073579,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073584,"byte_end":9073643,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073648,"byte_end":9073653,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073658,"byte_end":9073675,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073680,"byte_end":9073687,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073692,"byte_end":9073695,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9073700,"byte_end":9073738,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5526},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074926,"byte_end":9074932,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074393,"byte_end":9074448,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074453,"byte_end":9074456,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074461,"byte_end":9074553,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074558,"byte_end":9074561,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074566,"byte_end":9074581,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074586,"byte_end":9074589,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074594,"byte_end":9074607,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074612,"byte_end":9074686,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074691,"byte_end":9074696,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074701,"byte_end":9074737,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074742,"byte_end":9074745,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074750,"byte_end":9074809,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074814,"byte_end":9074864,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074869,"byte_end":9074874,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074879,"byte_end":9074896,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9074901,"byte_end":9074908,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5529},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076096,"byte_end":9076104,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075161,"byte_end":9075206,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075211,"byte_end":9075214,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075219,"byte_end":9075310,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075315,"byte_end":9075407,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075412,"byte_end":9075415,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075420,"byte_end":9075450,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075455,"byte_end":9075535,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075540,"byte_end":9075543,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075548,"byte_end":9075563,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075568,"byte_end":9075571,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075576,"byte_end":9075589,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075594,"byte_end":9075668,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075673,"byte_end":9075678,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075683,"byte_end":9075719,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075724,"byte_end":9075754,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075759,"byte_end":9075762,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075767,"byte_end":9075826,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075831,"byte_end":9075874,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075879,"byte_end":9075882,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075887,"byte_end":9075939,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075944,"byte_end":9075977,"line_start":143,"line_end":143,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9075982,"byte_end":9076030,"line_start":144,"line_end":144,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076035,"byte_end":9076040,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076045,"byte_end":9076050,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076055,"byte_end":9076072,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076077,"byte_end":9076084,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5530},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076769,"byte_end":9076779,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076224,"byte_end":9076285,"line_start":156,"line_end":156,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076290,"byte_end":9076293,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076298,"byte_end":9076393,"line_start":158,"line_end":158,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076398,"byte_end":9076412,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076417,"byte_end":9076420,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076425,"byte_end":9076439,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076444,"byte_end":9076447,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076452,"byte_end":9076465,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076470,"byte_end":9076544,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076549,"byte_end":9076554,"line_start":165,"line_end":165,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076559,"byte_end":9076595,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076600,"byte_end":9076603,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076608,"byte_end":9076670,"line_start":168,"line_end":168,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076675,"byte_end":9076713,"line_start":169,"line_end":169,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076718,"byte_end":9076723,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076728,"byte_end":9076745,"line_start":171,"line_end":171,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076750,"byte_end":9076757,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5531},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077419,"byte_end":9077427,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":5533},{"krate":0,"index":5534}],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076868,"byte_end":9076909,"line_start":178,"line_end":178,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076910,"byte_end":9076913,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9076914,"byte_end":9077012,"line_start":180,"line_end":180,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077013,"byte_end":9077071,"line_start":181,"line_end":181,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077072,"byte_end":9077075,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077076,"byte_end":9077136,"line_start":183,"line_end":183,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077137,"byte_end":9077140,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077141,"byte_end":9077221,"line_start":185,"line_end":185,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077222,"byte_end":9077279,"line_start":186,"line_end":186,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077280,"byte_end":9077324,"line_start":187,"line_end":187,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077325,"byte_end":9077407,"line_start":188,"line_end":188,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":6078},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081904,"byte_end":9081913,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":6079}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080346,"byte_end":9080399,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080400,"byte_end":9080403,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080404,"byte_end":9080501,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080502,"byte_end":9080595,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080596,"byte_end":9080679,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080680,"byte_end":9080683,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080684,"byte_end":9080780,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080781,"byte_end":9080864,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080865,"byte_end":9080868,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080869,"byte_end":9080930,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080931,"byte_end":9080934,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080935,"byte_end":9080988,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9080989,"byte_end":9081043,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081044,"byte_end":9081083,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081084,"byte_end":9081162,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081163,"byte_end":9081243,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081244,"byte_end":9081314,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081315,"byte_end":9081370,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081371,"byte_end":9081455,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081456,"byte_end":9081459,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081460,"byte_end":9081475,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081476,"byte_end":9081479,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081480,"byte_end":9081493,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081494,"byte_end":9081568,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081569,"byte_end":9081574,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081575,"byte_end":9081609,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081610,"byte_end":9081640,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081641,"byte_end":9081644,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081645,"byte_end":9081710,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081711,"byte_end":9081755,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081756,"byte_end":9081759,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081760,"byte_end":9081794,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081795,"byte_end":9081836,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081837,"byte_end":9081842,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081843,"byte_end":9081860,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081861,"byte_end":9081868,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5560},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082678,"byte_end":9082685,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081997,"byte_end":9082061,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082066,"byte_end":9082069,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082074,"byte_end":9082158,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082163,"byte_end":9082248,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082253,"byte_end":9082309,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082314,"byte_end":9082317,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082322,"byte_end":9082364,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082369,"byte_end":9082372,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082377,"byte_end":9082391,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082396,"byte_end":9082399,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082404,"byte_end":9082417,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082422,"byte_end":9082496,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082501,"byte_end":9082506,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082511,"byte_end":9082545,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082550,"byte_end":9082553,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082558,"byte_end":9082616,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082621,"byte_end":9082626,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082631,"byte_end":9082648,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9082653,"byte_end":9082660,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5565},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083854,"byte_end":9083864,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083438,"byte_end":9083501,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083506,"byte_end":9083509,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083514,"byte_end":9083529,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083534,"byte_end":9083537,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083542,"byte_end":9083555,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083560,"byte_end":9083634,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083639,"byte_end":9083644,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083649,"byte_end":9083683,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083688,"byte_end":9083691,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083696,"byte_end":9083757,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083762,"byte_end":9083798,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083803,"byte_end":9083808,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083813,"byte_end":9083830,"line_start":111,"line_end":111,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083835,"byte_end":9083842,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5566},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084371,"byte_end":9084380,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9083955,"byte_end":9084019,"line_start":117,"line_end":117,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084024,"byte_end":9084027,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084032,"byte_end":9084047,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084052,"byte_end":9084055,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084060,"byte_end":9084073,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084078,"byte_end":9084152,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084157,"byte_end":9084162,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084167,"byte_end":9084201,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084206,"byte_end":9084209,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084214,"byte_end":9084275,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084280,"byte_end":9084315,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084320,"byte_end":9084325,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084330,"byte_end":9084347,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084352,"byte_end":9084359,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5567},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085035,"byte_end":9085038,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084470,"byte_end":9084528,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084533,"byte_end":9084536,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084541,"byte_end":9084601,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084606,"byte_end":9084609,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084614,"byte_end":9084646,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084651,"byte_end":9084654,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084659,"byte_end":9084673,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084678,"byte_end":9084681,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084686,"byte_end":9084699,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084704,"byte_end":9084778,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084783,"byte_end":9084788,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084793,"byte_end":9084827,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084832,"byte_end":9084835,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084840,"byte_end":9084901,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084906,"byte_end":9084909,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084914,"byte_end":9084939,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084944,"byte_end":9084979,"line_start":151,"line_end":151,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084984,"byte_end":9084989,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9084994,"byte_end":9085011,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085016,"byte_end":9085023,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5568},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085677,"byte_end":9085684,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085115,"byte_end":9085173,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085178,"byte_end":9085181,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085186,"byte_end":9085262,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085267,"byte_end":9085288,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085293,"byte_end":9085296,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085301,"byte_end":9085315,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085320,"byte_end":9085323,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085328,"byte_end":9085341,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085346,"byte_end":9085420,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085425,"byte_end":9085430,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085435,"byte_end":9085469,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085474,"byte_end":9085477,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085482,"byte_end":9085543,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085548,"byte_end":9085551,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085556,"byte_end":9085581,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085586,"byte_end":9085621,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085626,"byte_end":9085631,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085636,"byte_end":9085653,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085658,"byte_end":9085665,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5569},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086535,"byte_end":9086539,"line_start":204,"line_end":204,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085777,"byte_end":9085866,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085871,"byte_end":9085909,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085914,"byte_end":9085917,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085922,"byte_end":9085973,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085978,"byte_end":9085981,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9085986,"byte_end":9086081,"line_start":187,"line_end":187,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086086,"byte_end":9086127,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086132,"byte_end":9086135,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086140,"byte_end":9086154,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086159,"byte_end":9086162,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086167,"byte_end":9086180,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086185,"byte_end":9086259,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086264,"byte_end":9086269,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086274,"byte_end":9086308,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086313,"byte_end":9086316,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086321,"byte_end":9086382,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086387,"byte_end":9086390,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086395,"byte_end":9086427,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086432,"byte_end":9086473,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086478,"byte_end":9086483,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086488,"byte_end":9086505,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086510,"byte_end":9086517,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5572},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087225,"byte_end":9087232,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086634,"byte_end":9086696,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086701,"byte_end":9086704,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086709,"byte_end":9086773,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086778,"byte_end":9086781,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086786,"byte_end":9086826,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086831,"byte_end":9086834,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086839,"byte_end":9086853,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086858,"byte_end":9086861,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086866,"byte_end":9086879,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086884,"byte_end":9086958,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086963,"byte_end":9086968,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9086973,"byte_end":9087007,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087012,"byte_end":9087015,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087020,"byte_end":9087081,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087086,"byte_end":9087089,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087094,"byte_end":9087124,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087129,"byte_end":9087169,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087174,"byte_end":9087179,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087184,"byte_end":9087201,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087206,"byte_end":9087213,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5573},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088116,"byte_end":9088127,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087314,"byte_end":9087376,"line_start":232,"line_end":232,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087381,"byte_end":9087384,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087389,"byte_end":9087458,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087463,"byte_end":9087536,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087541,"byte_end":9087614,"line_start":236,"line_end":236,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087619,"byte_end":9087694,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087699,"byte_end":9087717,"line_start":238,"line_end":238,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087722,"byte_end":9087725,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087730,"byte_end":9087744,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087749,"byte_end":9087752,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087757,"byte_end":9087770,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087775,"byte_end":9087849,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087854,"byte_end":9087859,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087864,"byte_end":9087898,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087903,"byte_end":9087906,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087911,"byte_end":9087972,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087977,"byte_end":9087980,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9087985,"byte_end":9088015,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088020,"byte_end":9088060,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088065,"byte_end":9088070,"line_start":251,"line_end":251,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088075,"byte_end":9088092,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088097,"byte_end":9088104,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5574},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088964,"byte_end":9088972,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088233,"byte_end":9088299,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088304,"byte_end":9088307,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088312,"byte_end":9088401,"line_start":260,"line_end":260,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088406,"byte_end":9088488,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088493,"byte_end":9088496,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088501,"byte_end":9088571,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088576,"byte_end":9088579,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088584,"byte_end":9088598,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088603,"byte_end":9088606,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088611,"byte_end":9088624,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088629,"byte_end":9088703,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088708,"byte_end":9088713,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088718,"byte_end":9088745,"line_start":270,"line_end":270,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088750,"byte_end":9088753,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088758,"byte_end":9088792,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088797,"byte_end":9088800,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088805,"byte_end":9088866,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088871,"byte_end":9088908,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088913,"byte_end":9088918,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088923,"byte_end":9088940,"line_start":277,"line_end":277,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9088945,"byte_end":9088952,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6095},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094792,"byte_end":9094801,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":6096}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093538,"byte_end":9093555,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093556,"byte_end":9093559,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093560,"byte_end":9093657,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093658,"byte_end":9093703,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093704,"byte_end":9093707,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093708,"byte_end":9093807,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093808,"byte_end":9093901,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093902,"byte_end":9093905,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093906,"byte_end":9093967,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093968,"byte_end":9093971,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093972,"byte_end":9093998,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9093999,"byte_end":9094037,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094038,"byte_end":9094068,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094069,"byte_end":9094113,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094114,"byte_end":9094154,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094155,"byte_end":9094217,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094218,"byte_end":9094272,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094273,"byte_end":9094357,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094358,"byte_end":9094361,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094362,"byte_end":9094377,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094378,"byte_end":9094381,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094382,"byte_end":9094395,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094396,"byte_end":9094470,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094471,"byte_end":9094476,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094477,"byte_end":9094511,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094512,"byte_end":9094515,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094516,"byte_end":9094574,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094575,"byte_end":9094609,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094610,"byte_end":9094613,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094614,"byte_end":9094624,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094625,"byte_end":9094683,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094684,"byte_end":9094732,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094733,"byte_end":9094738,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094739,"byte_end":9094744,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094745,"byte_end":9094755,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094756,"byte_end":9094763,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5601},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095456,"byte_end":9095460,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094869,"byte_end":9094917,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094922,"byte_end":9094925,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094930,"byte_end":9095025,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095030,"byte_end":9095094,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095099,"byte_end":9095102,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095107,"byte_end":9095145,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095150,"byte_end":9095153,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095158,"byte_end":9095172,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095177,"byte_end":9095180,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095185,"byte_end":9095198,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095203,"byte_end":9095277,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095282,"byte_end":9095287,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095292,"byte_end":9095326,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095331,"byte_end":9095334,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095339,"byte_end":9095394,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095399,"byte_end":9095404,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095409,"byte_end":9095426,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9095431,"byte_end":9095438,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5606},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096739,"byte_end":9096748,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address that this listener is connected to.","sig":null,"attributes":[{"value":"/ Returns the peer address that this listener is connected to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096083,"byte_end":9096147,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096152,"byte_end":9096155,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when connect to port 0 to figure out which port was","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096160,"byte_end":9096248,"line_start":93,"line_end":93,"column_start":5,"column_end":93}},{"value":"/ actually connected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096253,"byte_end":9096276,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096281,"byte_end":9096284,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096289,"byte_end":9096303,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096308,"byte_end":9096311,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096316,"byte_end":9096329,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096334,"byte_end":9096408,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096413,"byte_end":9096418,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096423,"byte_end":9096457,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096462,"byte_end":9096465,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let socket1 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096470,"byte_end":9096526,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ let socket2 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096531,"byte_end":9096587,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/ socket1.connect(socket2.local_addr()?).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096592,"byte_end":9096642,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ let addr = socket1.peer_addr()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096647,"byte_end":9096683,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096688,"byte_end":9096693,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096698,"byte_end":9096715,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096720,"byte_end":9096727,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5608},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097464,"byte_end":9097474,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096932,"byte_end":9096993,"line_start":117,"line_end":117,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9096998,"byte_end":9097001,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097006,"byte_end":9097094,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097099,"byte_end":9097118,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097123,"byte_end":9097126,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097131,"byte_end":9097145,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097150,"byte_end":9097153,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097158,"byte_end":9097171,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097176,"byte_end":9097250,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097255,"byte_end":9097260,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097265,"byte_end":9097299,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097304,"byte_end":9097307,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097312,"byte_end":9097367,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097372,"byte_end":9097408,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097413,"byte_end":9097418,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097423,"byte_end":9097440,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097445,"byte_end":9097452,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098518,"byte_end":9098525,"line_start":167,"line_end":167,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097660,"byte_end":9097710,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097715,"byte_end":9097718,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097723,"byte_end":9097775,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097780,"byte_end":9097783,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097788,"byte_end":9097802,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097807,"byte_end":9097810,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097815,"byte_end":9097828,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097833,"byte_end":9097907,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097912,"byte_end":9097917,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097922,"byte_end":9097956,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097961,"byte_end":9097964,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9097969,"byte_end":9098013,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098018,"byte_end":9098059,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098064,"byte_end":9098106,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098111,"byte_end":9098151,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098156,"byte_end":9098206,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098211,"byte_end":9098217,"line_start":157,"line_end":157,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098222,"byte_end":9098225,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098230,"byte_end":9098285,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098290,"byte_end":9098293,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098298,"byte_end":9098330,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098335,"byte_end":9098403,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098408,"byte_end":9098456,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098461,"byte_end":9098466,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098471,"byte_end":9098488,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9098493,"byte_end":9098500,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5615},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099640,"byte_end":9099649,"line_start":203,"line_end":203,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099058,"byte_end":9099092,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099097,"byte_end":9099100,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099105,"byte_end":9099169,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099174,"byte_end":9099177,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099182,"byte_end":9099196,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099201,"byte_end":9099204,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099209,"byte_end":9099222,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099227,"byte_end":9099301,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099306,"byte_end":9099311,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099316,"byte_end":9099350,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099355,"byte_end":9099358,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099363,"byte_end":9099418,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099423,"byte_end":9099426,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099431,"byte_end":9099463,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099468,"byte_end":9099522,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099527,"byte_end":9099578,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099583,"byte_end":9099588,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099593,"byte_end":9099610,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099615,"byte_end":9099622,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5618},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100377,"byte_end":9100386,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from socket without removing it from the queue.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099763,"byte_end":9099828,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099833,"byte_end":9099836,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the origin.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099841,"byte_end":9099907,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099912,"byte_end":9099915,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099920,"byte_end":9099934,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099939,"byte_end":9099942,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099947,"byte_end":9099960,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9099965,"byte_end":9100039,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100044,"byte_end":9100049,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100054,"byte_end":9100088,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100093,"byte_end":9100096,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100101,"byte_end":9100156,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100161,"byte_end":9100164,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100169,"byte_end":9100201,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100206,"byte_end":9100260,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ println!(\"Peeked {} bytes from {}\", n, peer);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100265,"byte_end":9100314,"line_start":222,"line_end":222,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100319,"byte_end":9100324,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ # Ok (()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100329,"byte_end":9100347,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100352,"byte_end":9100359,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5621},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9101278,"byte_end":9101285,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100500,"byte_end":9100548,"line_start":230,"line_end":230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100553,"byte_end":9100556,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100561,"byte_end":9100653,"line_start":232,"line_end":232,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100658,"byte_end":9100752,"line_start":233,"line_end":233,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100757,"byte_end":9100807,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100812,"byte_end":9100815,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100820,"byte_end":9100846,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100851,"byte_end":9100877,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100882,"byte_end":9100918,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100923,"byte_end":9100926,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100931,"byte_end":9100945,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100950,"byte_end":9100953,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100958,"byte_end":9100971,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9100976,"byte_end":9101050,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9101055,"byte_end":9101060,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9101065,"byte_end":9101099,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9101104,"byte_end":9101107,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9101112,"byte_end":9101167,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9101172,"byte_end":9101216,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9101221,"byte_end":9101226,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9101231,"byte_end":9101248,"line_start":250,"line_end":250,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9101253,"byte_end":9101260,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5627},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102724,"byte_end":9102728,"line_start":297,"line_end":297,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9101988,"byte_end":9102064,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102069,"byte_end":9102072,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102077,"byte_end":9102149,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102154,"byte_end":9102211,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102216,"byte_end":9102219,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102224,"byte_end":9102256,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102261,"byte_end":9102264,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102269,"byte_end":9102283,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102288,"byte_end":9102291,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102296,"byte_end":9102309,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102314,"byte_end":9102388,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102393,"byte_end":9102398,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102403,"byte_end":9102437,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102442,"byte_end":9102445,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102450,"byte_end":9102509,"line_start":289,"line_end":289,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102514,"byte_end":9102558,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102563,"byte_end":9102612,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102617,"byte_end":9102620,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102625,"byte_end":9102662,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102667,"byte_end":9102672,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102677,"byte_end":9102694,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102699,"byte_end":9102706,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5630},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103408,"byte_end":9103412,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102819,"byte_end":9102853,"line_start":301,"line_end":301,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102858,"byte_end":9102861,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102866,"byte_end":9102915,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102920,"byte_end":9102923,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102928,"byte_end":9102942,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102947,"byte_end":9102950,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102955,"byte_end":9102968,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9102973,"byte_end":9103047,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103052,"byte_end":9103057,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103062,"byte_end":9103096,"line_start":310,"line_end":310,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103101,"byte_end":9103104,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103109,"byte_end":9103164,"line_start":312,"line_end":312,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103169,"byte_end":9103213,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103218,"byte_end":9103221,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103226,"byte_end":9103258,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103263,"byte_end":9103304,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103309,"byte_end":9103346,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103351,"byte_end":9103356,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103361,"byte_end":9103378,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103383,"byte_end":9103390,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5633},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104131,"byte_end":9104135,"line_start":345,"line_end":345,"column_start":18,"column_end":22},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket without removing it from the queue.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103507,"byte_end":9103576,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103581,"byte_end":9103584,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103589,"byte_end":9103640,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103645,"byte_end":9103648,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103653,"byte_end":9103667,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103672,"byte_end":9103675,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103680,"byte_end":9103693,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103698,"byte_end":9103772,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103777,"byte_end":9103782,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103787,"byte_end":9103821,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103826,"byte_end":9103829,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103834,"byte_end":9103889,"line_start":336,"line_end":336,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103894,"byte_end":9103938,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103943,"byte_end":9103946,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103951,"byte_end":9103983,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/ let n = socket.peek(&mut buf).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9103988,"byte_end":9104029,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ println!(\"Peeked {} bytes\", n);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104034,"byte_end":9104069,"line_start":341,"line_end":341,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104074,"byte_end":9104079,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104084,"byte_end":9104101,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104106,"byte_end":9104113,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5636},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104442,"byte_end":9104451,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104230,"byte_end":9104294,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104299,"byte_end":9104302,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104307,"byte_end":9104373,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104378,"byte_end":9104381,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104386,"byte_end":9104430,"line_start":353,"line_end":353,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5637},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104704,"byte_end":9104717,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104535,"byte_end":9104599,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104604,"byte_end":9104607,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104612,"byte_end":9104692,"line_start":360,"line_end":360,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5638},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105056,"byte_end":9105073,"line_start":370,"line_end":370,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104815,"byte_end":9104884,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104889,"byte_end":9104892,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104897,"byte_end":9104971,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104976,"byte_end":9104979,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9104984,"byte_end":9105044,"line_start":369,"line_end":369,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5639},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105418,"byte_end":9105439,"line_start":381,"line_end":381,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105165,"byte_end":9105234,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105239,"byte_end":9105242,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105247,"byte_end":9105321,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105326,"byte_end":9105329,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105334,"byte_end":9105344,"line_start":378,"line_end":378,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105349,"byte_end":9105352,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105357,"byte_end":9105406,"line_start":380,"line_end":380,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5640},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105782,"byte_end":9105798,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105545,"byte_end":9105613,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105618,"byte_end":9105621,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105626,"byte_end":9105699,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105704,"byte_end":9105707,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105712,"byte_end":9105770,"line_start":389,"line_end":389,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5641},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106282,"byte_end":9106302,"line_start":403,"line_end":403,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105888,"byte_end":9105956,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105961,"byte_end":9105964,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9105969,"byte_end":9106064,"line_start":396,"line_end":396,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106069,"byte_end":9106155,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106160,"byte_end":9106185,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106190,"byte_end":9106193,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106198,"byte_end":9106208,"line_start":400,"line_end":400,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106213,"byte_end":9106216,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106221,"byte_end":9106270,"line_start":402,"line_end":402,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5642},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106651,"byte_end":9106668,"line_start":412,"line_end":412,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106408,"byte_end":9106479,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106484,"byte_end":9106487,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106492,"byte_end":9106566,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106571,"byte_end":9106574,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106579,"byte_end":9106639,"line_start":411,"line_end":411,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5643},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107017,"byte_end":9107038,"line_start":423,"line_end":423,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106760,"byte_end":9106831,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106836,"byte_end":9106839,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106844,"byte_end":9106920,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106925,"byte_end":9106928,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106933,"byte_end":9106943,"line_start":420,"line_end":420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106948,"byte_end":9106951,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9106956,"byte_end":9107005,"line_start":422,"line_end":422,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5644},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107332,"byte_end":9107335,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107144,"byte_end":9107202,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107207,"byte_end":9107210,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107215,"byte_end":9107275,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107280,"byte_end":9107283,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107288,"byte_end":9107320,"line_start":431,"line_end":431,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5645},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107597,"byte_end":9107604,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107412,"byte_end":9107470,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107475,"byte_end":9107478,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107483,"byte_end":9107559,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107564,"byte_end":9107585,"line_start":439,"line_end":439,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5646},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108621,"byte_end":9108638,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107697,"byte_end":9107755,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107760,"byte_end":9107763,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107768,"byte_end":9107860,"line_start":446,"line_end":446,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107865,"byte_end":9107960,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9107965,"byte_end":9108050,"line_start":448,"line_end":448,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108055,"byte_end":9108105,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108110,"byte_end":9108113,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108118,"byte_end":9108132,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108137,"byte_end":9108140,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108145,"byte_end":9108158,"line_start":453,"line_end":453,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108163,"byte_end":9108237,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108242,"byte_end":9108247,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108252,"byte_end":9108279,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108284,"byte_end":9108287,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108292,"byte_end":9108326,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108331,"byte_end":9108334,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108339,"byte_end":9108385,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108390,"byte_end":9108440,"line_start":461,"line_end":461,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108445,"byte_end":9108448,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108453,"byte_end":9108508,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108513,"byte_end":9108565,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108570,"byte_end":9108575,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108580,"byte_end":9108597,"line_start":466,"line_end":466,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108602,"byte_end":9108609,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5647},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109701,"byte_end":9109718,"line_start":497,"line_end":497,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108818,"byte_end":9108878,"line_start":474,"line_end":474,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108883,"byte_end":9108886,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108891,"byte_end":9108983,"line_start":476,"line_end":476,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9108988,"byte_end":9109082,"line_start":477,"line_end":477,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109087,"byte_end":9109120,"line_start":478,"line_end":478,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109125,"byte_end":9109128,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109133,"byte_end":9109147,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109152,"byte_end":9109155,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109160,"byte_end":9109173,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109178,"byte_end":9109252,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109257,"byte_end":9109262,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109267,"byte_end":9109308,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109313,"byte_end":9109316,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109321,"byte_end":9109355,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109360,"byte_end":9109363,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109368,"byte_end":9109455,"line_start":489,"line_end":489,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109460,"byte_end":9109528,"line_start":490,"line_end":490,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109533,"byte_end":9109587,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109592,"byte_end":9109595,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109600,"byte_end":9109645,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109650,"byte_end":9109655,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109660,"byte_end":9109677,"line_start":495,"line_end":495,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109682,"byte_end":9109689,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5648},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110111,"byte_end":9110129,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109892,"byte_end":9109951,"line_start":503,"line_end":503,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109956,"byte_end":9109959,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9109964,"byte_end":9110034,"line_start":505,"line_end":505,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110039,"byte_end":9110042,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110047,"byte_end":9110099,"line_start":507,"line_end":507,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5649},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110531,"byte_end":9110549,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110310,"byte_end":9110371,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110376,"byte_end":9110379,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110384,"byte_end":9110454,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110459,"byte_end":9110462,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110467,"byte_end":9110519,"line_start":518,"line_end":518,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":6110},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/pin/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pin","qualname":"::pin","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/pin/mod.rs","parent":null,"children":[{"krate":0,"index":6111}],"decl_id":null,"docs":" Types that pin data to its location in memory.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":14968,"byte_end":14996,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"/ Types that pin data to its location in memory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/pin/mod.rs","byte_start":9116935,"byte_end":9116985,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/pin/mod.rs","byte_start":9116986,"byte_end":9116989,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For more documentation see [`std::pin`](https://doc.rust-lang.org/std/pin/index.html).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/pin/mod.rs","byte_start":9116990,"byte_end":9117080,"line_start":3,"line_end":3,"column_start":1,"column_end":91}}]},{"kind":"Mod","id":{"krate":0,"index":6112},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","parent":null,"children":[{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6115},{"krate":0,"index":6116},{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6119},{"krate":0,"index":6120},{"krate":0,"index":6121},{"krate":0,"index":6122},{"krate":0,"index":6123},{"krate":0,"index":6124}],"decl_id":null,"docs":" A module for working with processes.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":14968,"byte_end":14996,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"std\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":11085,"byte_end":11141,"line_start":316,"line_end":316,"column_start":5,"column_end":61}},{"value":"/ A module for working with processes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117127,"byte_end":9117167,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117168,"byte_end":9117171,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is mostly concerned with spawning and interacting with child processes, but it also","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117172,"byte_end":9117271,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ provides abort and exit for terminating the current process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117272,"byte_end":9117336,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117337,"byte_end":9117340,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::process`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117341,"byte_end":9117390,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117391,"byte_end":9117394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`std::process`]: https://doc.rust-lang.org/std/process/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/process.rs","byte_start":9117395,"byte_end":9117465,"line_start":8,"line_end":8,"column_start":1,"column_end":71}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":11951,"byte_end":11955,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404964,"byte_end":8404972,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8406966,"byte_end":8406973,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8412330,"byte_end":8412347,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414251,"byte_end":8414261,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8415334,"byte_end":8415344,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8415493,"byte_end":8415503,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8418883,"byte_end":8418887,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419497,"byte_end":8419501,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8420104,"byte_end":8420110,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8420521,"byte_end":8420527,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421153,"byte_end":8421161,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8425013,"byte_end":8425024,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8425168,"byte_end":8425179,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8425344,"byte_end":8425355,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8425723,"byte_end":8425732,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_locals_wrapper.rs","byte_start":8427797,"byte_end":8427814,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_locals_wrapper.rs","byte_start":8429227,"byte_end":8429244,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/delay.rs","byte_start":8562132,"byte_end":8562143,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/delay.rs","byte_start":8562323,"byte_end":8562334,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/flatten.rs","byte_start":8563406,"byte_end":8563419,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/flatten.rs","byte_start":8563606,"byte_end":8563619,"line_start":41,"line_end":41,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/race.rs","byte_start":8564949,"byte_end":8564953,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/race.rs","byte_start":8565207,"byte_end":8565211,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/try_race.rs","byte_start":8566261,"byte_end":8566268,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/try_race.rs","byte_start":8566528,"byte_end":8566535,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/join.rs","byte_start":8568073,"byte_end":8568077,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/join.rs","byte_start":8568311,"byte_end":8568315,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/try_join.rs","byte_start":8569553,"byte_end":8569560,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/try_join.rs","byte_start":8569803,"byte_end":8569810,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571812,"byte_end":8571819,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572756,"byte_end":8572762,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572792,"byte_end":8572798,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251854,"byte_end":8251867,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8252094,"byte_end":8252107,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8252743,"byte_end":8252755,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8252782,"byte_end":8252794,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574518,"byte_end":8574519,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/maybe_done.rs","byte_start":8575385,"byte_end":8575394,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/maybe_done.rs","byte_start":8576647,"byte_end":8576656,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/all.rs","byte_start":8338093,"byte_end":8338102,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/all.rs","byte_start":8338309,"byte_end":8338318,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/all.rs","byte_start":8338358,"byte_end":8338367,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/any.rs","byte_start":8339501,"byte_end":8339510,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/any.rs","byte_start":8339717,"byte_end":8339726,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/any.rs","byte_start":8339766,"byte_end":8339775,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/chain.rs","byte_start":8341198,"byte_end":8341203,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/chain.rs","byte_start":8341421,"byte_end":8341426,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cloned.rs","byte_start":8342525,"byte_end":8342531,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cloned.rs","byte_start":8342643,"byte_end":8342649,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cmp.rs","byte_start":8343633,"byte_end":8343642,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cmp.rs","byte_start":8343871,"byte_end":8343880,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/copied.rs","byte_start":8346272,"byte_end":8346278,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/copied.rs","byte_start":8346390,"byte_end":8346396,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cycle.rs","byte_start":8347086,"byte_end":8347091,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cycle.rs","byte_start":8347276,"byte_end":8347281,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/enumerate.rs","byte_start":8348022,"byte_end":8348031,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/enumerate.rs","byte_start":8348138,"byte_end":8348147,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/eq.rs","byte_start":8349205,"byte_end":8349213,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/eq.rs","byte_start":8349427,"byte_end":8349435,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/filter.rs","byte_start":8350767,"byte_end":8350773,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/filter.rs","byte_start":8350938,"byte_end":8350944,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/filter_map.rs","byte_start":8351794,"byte_end":8351803,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/filter_map.rs","byte_start":8351922,"byte_end":8351931,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find.rs","byte_start":8352814,"byte_end":8352824,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find.rs","byte_start":8352958,"byte_end":8352968,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find.rs","byte_start":8353009,"byte_end":8353019,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find_map.rs","byte_start":8353854,"byte_end":8353867,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find_map.rs","byte_start":8354001,"byte_end":8354014,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find_map.rs","byte_start":8354058,"byte_end":8354071,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/fold.rs","byte_start":8355027,"byte_end":8355037,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/fold.rs","byte_start":8355230,"byte_end":8355240,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/for_each.rs","byte_start":8356251,"byte_end":8356264,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/for_each.rs","byte_start":8356413,"byte_end":8356426,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/fuse.rs","byte_start":8357503,"byte_end":8357507,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/fuse.rs","byte_start":8357662,"byte_end":8357666,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/ge.rs","byte_start":8358737,"byte_end":8358745,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/ge.rs","byte_start":8358953,"byte_end":8358961,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/gt.rs","byte_start":8360020,"byte_end":8360028,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/gt.rs","byte_start":8360236,"byte_end":8360244,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/inspect.rs","byte_start":8361262,"byte_end":8361269,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/inspect.rs","byte_start":8361418,"byte_end":8361425,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/last.rs","byte_start":8362194,"byte_end":8362204,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/last.rs","byte_start":8362320,"byte_end":8362330,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/le.rs","byte_start":8363493,"byte_end":8363501,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/le.rs","byte_start":8363709,"byte_end":8363717,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/lt.rs","byte_start":8364786,"byte_end":8364794,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/lt.rs","byte_start":8365002,"byte_end":8365010,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/map.rs","byte_start":8365793,"byte_end":8365796,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/map.rs","byte_start":8365948,"byte_end":8365951,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max.rs","byte_start":8366675,"byte_end":8366684,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max.rs","byte_start":8366799,"byte_end":8366808,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max_by.rs","byte_start":8368033,"byte_end":8368044,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max_by.rs","byte_start":8368231,"byte_end":8368242,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max_by_key.rs","byte_start":8369521,"byte_end":8369535,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max_by_key.rs","byte_start":8369720,"byte_end":8369734,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min.rs","byte_start":8371205,"byte_end":8371214,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min.rs","byte_start":8371329,"byte_end":8371338,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min_by.rs","byte_start":8372560,"byte_end":8372571,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min_by.rs","byte_start":8372758,"byte_end":8372769,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min_by_key.rs","byte_start":8374075,"byte_end":8374089,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min_by_key.rs","byte_start":8374274,"byte_end":8374288,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/ne.rs","byte_start":8375922,"byte_end":8375930,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/ne.rs","byte_start":8376144,"byte_end":8376152,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/next.rs","byte_start":8377273,"byte_end":8377283,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/nth.rs","byte_start":8377749,"byte_end":8377758,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/nth.rs","byte_start":8377782,"byte_end":8377791,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/nth.rs","byte_start":8377921,"byte_end":8377930,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/partial_cmp.rs","byte_start":8379185,"byte_end":8379201,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/partial_cmp.rs","byte_start":8379430,"byte_end":8379446,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/position.rs","byte_start":8381923,"byte_end":8381937,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/position.rs","byte_start":8381967,"byte_end":8381981,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/position.rs","byte_start":8382184,"byte_end":8382198,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/scan.rs","byte_start":8383446,"byte_end":8383450,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/scan.rs","byte_start":8383655,"byte_end":8383659,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/skip.rs","byte_start":8384694,"byte_end":8384698,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/skip.rs","byte_start":8384812,"byte_end":8384816,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/skip_while.rs","byte_start":8385986,"byte_end":8385995,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/skip_while.rs","byte_start":8386177,"byte_end":8386186,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/step_by.rs","byte_start":8387588,"byte_end":8387594,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/step_by.rs","byte_start":8387795,"byte_end":8387801,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/take.rs","byte_start":8389062,"byte_end":8389066,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/take.rs","byte_start":8389237,"byte_end":8389241,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/take_while.rs","byte_start":8390335,"byte_end":8390344,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/take_while.rs","byte_start":8390509,"byte_end":8390518,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_fold.rs","byte_start":8391427,"byte_end":8391440,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_fold.rs","byte_start":8391476,"byte_end":8391489,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_fold.rs","byte_start":8391701,"byte_end":8391714,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_for_each.rs","byte_start":8392796,"byte_end":8392812,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_for_each.rs","byte_start":8392842,"byte_end":8392858,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_for_each.rs","byte_start":8392993,"byte_end":8393009,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/zip.rs","byte_start":8394315,"byte_end":8394318,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/zip.rs","byte_start":8394558,"byte_end":8394561,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/zip.rs","byte_start":8394763,"byte_end":8394766,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/count.rs","byte_start":8607808,"byte_end":8607819,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/count.rs","byte_start":8607930,"byte_end":8607941,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/merge.rs","byte_start":8609204,"byte_end":8609209,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/merge.rs","byte_start":8609392,"byte_end":8609397,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flatten.rs","byte_start":8611099,"byte_end":8611106,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flatten.rs","byte_start":8611309,"byte_end":8611316,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flatten.rs","byte_start":8612161,"byte_end":8612168,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flat_map.rs","byte_start":8613248,"byte_end":8613255,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flat_map.rs","byte_start":8613510,"byte_end":8613517,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/partition.rs","byte_start":8614824,"byte_end":8614839,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/partition.rs","byte_start":8615047,"byte_end":8615062,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8616367,"byte_end":8616374,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8616559,"byte_end":8616566,"line_start":33,"line_end":33,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8617488,"byte_end":8617500,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8617527,"byte_end":8617539,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/throttle.rs","byte_start":8618491,"byte_end":8618499,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/throttle.rs","byte_start":8618752,"byte_end":8618760,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/delay.rs","byte_start":8620019,"byte_end":8620024,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/delay.rs","byte_start":8620230,"byte_end":8620235,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1832},{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/unzip.rs","byte_start":8621072,"byte_end":8621083,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/unzip.rs","byte_start":8621353,"byte_end":8621364,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396365,"byte_end":8396370,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8396921,"byte_end":8396927,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397856,"byte_end":8397862,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8399284,"byte_end":8399292,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8399547,"byte_end":8399555,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400661,"byte_end":8400665,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400890,"byte_end":8400894,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401892,"byte_end":8401898,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402514,"byte_end":8402524,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403716,"byte_end":8403726,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/next_back.rs","byte_start":8629695,"byte_end":8629709,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/nth_back.rs","byte_start":8630182,"byte_end":8630195,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/nth_back.rs","byte_start":8630334,"byte_end":8630347,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfind.rs","byte_start":8631245,"byte_end":8631256,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfind.rs","byte_start":8631397,"byte_end":8631408,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfind.rs","byte_start":8631449,"byte_end":8631460,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfold.rs","byte_start":8632426,"byte_end":8632437,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfold.rs","byte_start":8632637,"byte_end":8632648,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":8633719,"byte_end":8633733,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":8633939,"byte_end":8633953,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647838,"byte_end":8647846,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2210},{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8649144,"byte_end":8649145,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650342,"byte_end":8650349,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650517,"byte_end":8650524,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650671,"byte_end":8650678,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650714,"byte_end":8650721,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8655020,"byte_end":8655030,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2276},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/lines.rs","byte_start":8713004,"byte_end":8713009,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3149},{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/read_line.rs","byte_start":8715010,"byte_end":8715024,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/read_until.rs","byte_start":8716534,"byte_end":8716549,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3197},{"krate":0,"index":3198}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/split.rs","byte_start":8717778,"byte_end":8717783,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/bytes.rs","byte_start":8735256,"byte_end":8735261,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3239},{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737136,"byte_end":8737141,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8739300,"byte_end":8739305,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8739547,"byte_end":8739552,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":3267}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8740697,"byte_end":8740702,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3271},{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read.rs","byte_start":8742593,"byte_end":8742603,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_exact.rs","byte_start":8743199,"byte_end":8743214,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3308},{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_to_end.rs","byte_start":8744169,"byte_end":8744184,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3327},{"krate":0,"index":3328}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_to_end.rs","byte_start":8745334,"byte_end":8745339,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3336}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_to_string.rs","byte_start":8746741,"byte_end":8746759,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3358},{"krate":0,"index":3359}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_vectored.rs","byte_start":8748163,"byte_end":8748181,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3378},{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749022,"byte_end":8749026,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752698,"byte_end":8752702,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3400}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8753620,"byte_end":8753624,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3405},{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/seek/seek.rs","byte_start":8759111,"byte_end":8759121,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3439},{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/flush.rs","byte_start":8770762,"byte_end":8770773,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3459},{"krate":0,"index":3460}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write.rs","byte_start":8771304,"byte_end":8771315,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3477},{"krate":0,"index":3478}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_all.rs","byte_start":8771901,"byte_end":8771915,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":3497}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_fmt.rs","byte_start":8772917,"byte_end":8772931,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3516},{"krate":0,"index":3517}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_vectored.rs","byte_start":8774472,"byte_end":8774491,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3535},{"krate":0,"index":3536}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/utils.rs","byte_start":8774979,"byte_end":8774985,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/utils.rs","byte_start":8775238,"byte_end":8775250,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/utils.rs","byte_start":8775537,"byte_end":8775549,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3560}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/utils.rs","byte_start":8775680,"byte_end":8775692,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3562}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777715,"byte_end":8777724,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778952,"byte_end":8778961,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3592},{"krate":0,"index":3593}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781701,"byte_end":8781710,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3596},{"krate":0,"index":3597}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8783164,"byte_end":8783173,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3601},{"krate":0,"index":3603}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8784095,"byte_end":8784104,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8784442,"byte_end":8784451,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791616,"byte_end":8791625,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3635},{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8797457,"byte_end":8797466,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8798364,"byte_end":8798373,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3644}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8798619,"byte_end":8798628,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3647}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803775,"byte_end":8803785,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3670},{"krate":0,"index":3671}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806030,"byte_end":8806036,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3694}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809337,"byte_end":8809343,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3697}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809609,"byte_end":8809615,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3700},{"krate":0,"index":3701}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8810131,"byte_end":8810137,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3704},{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8810487,"byte_end":8810493,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3710}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8811252,"byte_end":8811258,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3714}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8811782,"byte_end":8811788,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813327,"byte_end":8813332,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3733}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813451,"byte_end":8813456,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3735}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813660,"byte_end":8813665,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3737},{"krate":0,"index":3739}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814917,"byte_end":8814923,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3753}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8815042,"byte_end":8815048,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8816091,"byte_end":8816095,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3769}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8816214,"byte_end":8816218,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8818027,"byte_end":8818034,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3931},{"krate":0,"index":3932}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8821105,"byte_end":8821111,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3947},{"krate":0,"index":3949},{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8824592,"byte_end":8824598,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4041}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827646,"byte_end":8827651,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3968}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8829667,"byte_end":8829672,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3975}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8831810,"byte_end":8831815,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4076}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8835386,"byte_end":8835392,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4003},{"krate":0,"index":4005},{"krate":0,"index":4007}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8838873,"byte_end":8838879,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4110}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848585,"byte_end":8848597,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4151},{"krate":0,"index":4152},{"krate":0,"index":4156},{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4167},{"krate":0,"index":4170},{"krate":0,"index":4174},{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855949,"byte_end":8855961,"line_start":288,"line_end":288,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4179}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8856397,"byte_end":8856409,"line_start":305,"line_end":305,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4181}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8856702,"byte_end":8856714,"line_start":314,"line_end":314,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4183}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8856813,"byte_end":8856825,"line_start":320,"line_end":320,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4185}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8857099,"byte_end":8857111,"line_start":328,"line_end":328,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4187}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859120,"byte_end":8859132,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4212},{"krate":0,"index":4216},{"krate":0,"index":4219},{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862164,"byte_end":8862176,"line_start":156,"line_end":156,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8863270,"byte_end":8863278,"line_start":187,"line_end":187,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4228},{"krate":0,"index":4229}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8863825,"byte_end":8863833,"line_start":205,"line_end":205,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4232}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8864046,"byte_end":8864058,"line_start":213,"line_end":213,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4234}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8864351,"byte_end":8864363,"line_start":222,"line_end":222,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4236}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8864462,"byte_end":8864474,"line_start":228,"line_end":228,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4238}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8864658,"byte_end":8864670,"line_start":235,"line_end":235,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4240}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866134,"byte_end":8866144,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4263},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4270}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869356,"byte_end":8869366,"line_start":151,"line_end":151,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4272}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869810,"byte_end":8869820,"line_start":171,"line_end":171,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4278}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8870842,"byte_end":8870852,"line_start":207,"line_end":207,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4284}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8871284,"byte_end":8871294,"line_start":224,"line_end":224,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4286}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8871612,"byte_end":8871622,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4288}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8871721,"byte_end":8871731,"line_start":240,"line_end":240,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4290}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8871907,"byte_end":8871917,"line_start":247,"line_end":247,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679090,"byte_end":8679096,"line_start":59,"line_end":59,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679149,"byte_end":8679155,"line_start":60,"line_end":60,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679171,"byte_end":8679177,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679616,"byte_end":8679622,"line_start":82,"line_end":82,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2953},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8680288,"byte_end":8680298,"line_start":109,"line_end":109,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2964},{"krate":0,"index":2965}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8681408,"byte_end":8681418,"line_start":136,"line_end":136,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8684259,"byte_end":8684270,"line_start":234,"line_end":234,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8685383,"byte_end":8685394,"line_start":261,"line_end":261,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687823,"byte_end":8687829,"line_start":348,"line_end":348,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687949,"byte_end":8687955,"line_start":351,"line_end":351,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688329,"byte_end":8688335,"line_start":364,"line_end":364,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688448,"byte_end":8688454,"line_start":370,"line_end":370,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3001}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688693,"byte_end":8688708,"line_start":379,"line_end":379,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688758,"byte_end":8688773,"line_start":380,"line_end":380,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688810,"byte_end":8688825,"line_start":382,"line_end":382,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689186,"byte_end":8689201,"line_start":393,"line_end":393,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689367,"byte_end":8689382,"line_start":399,"line_end":399,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689514,"byte_end":8689529,"line_start":405,"line_end":405,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3022},{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689792,"byte_end":8689808,"line_start":416,"line_end":416,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689858,"byte_end":8689874,"line_start":417,"line_end":417,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689911,"byte_end":8689927,"line_start":419,"line_end":419,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8690325,"byte_end":8690341,"line_start":432,"line_end":432,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8690507,"byte_end":8690523,"line_start":438,"line_end":438,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3041}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8690655,"byte_end":8690671,"line_start":444,"line_end":444,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3044},{"krate":0,"index":3045}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8690809,"byte_end":8690825,"line_start":452,"line_end":452,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873899,"byte_end":8873906,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4334}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876556,"byte_end":8876573,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4338}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879545,"byte_end":8879562,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880725,"byte_end":8880732,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880757,"byte_end":8880764,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880786,"byte_end":8880793,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880860,"byte_end":8880867,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4366},{"krate":0,"index":4369},{"krate":0,"index":4375},{"krate":0,"index":4380},{"krate":0,"index":4386},{"krate":0,"index":4387}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889641,"byte_end":8889648,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4389}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8890440,"byte_end":8890451,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4401},{"krate":0,"index":4402}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8891359,"byte_end":8891370,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4407}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894912,"byte_end":8894918,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4440},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4462}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895875,"byte_end":8895885,"line_start":152,"line_end":152,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895924,"byte_end":8895934,"line_start":154,"line_end":154,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4453},{"krate":0,"index":4454}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8897351,"byte_end":8897361,"line_start":189,"line_end":189,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4457}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900162,"byte_end":8900168,"line_start":312,"line_end":312,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4465}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900441,"byte_end":8900447,"line_start":321,"line_end":321,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4468}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900842,"byte_end":8900848,"line_start":336,"line_end":336,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4471}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902250,"byte_end":8902258,"line_start":388,"line_end":388,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4478},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4497}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903349,"byte_end":8903359,"line_start":426,"line_end":426,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4488},{"krate":0,"index":4489}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903750,"byte_end":8903760,"line_start":439,"line_end":439,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4492}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906514,"byte_end":8906522,"line_start":563,"line_end":563,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4500}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8907001,"byte_end":8907009,"line_start":577,"line_end":577,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4503}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8907435,"byte_end":8907443,"line_start":593,"line_end":593,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4506},{"krate":0,"index":4507}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8907834,"byte_end":8907842,"line_start":608,"line_end":608,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4510}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8911038,"byte_end":8911045,"line_start":708,"line_end":708,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8911082,"byte_end":8911089,"line_start":709,"line_end":709,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8911114,"byte_end":8911121,"line_start":710,"line_end":710,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8911137,"byte_end":8911144,"line_start":712,"line_end":712,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541},{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8921463,"byte_end":8921470,"line_start":986,"line_end":986,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4549}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922587,"byte_end":8922599,"line_start":1025,"line_end":1025,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922625,"byte_end":8922637,"line_start":1027,"line_end":1027,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4554}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922892,"byte_end":8922904,"line_start":1036,"line_end":1036,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4557}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923565,"byte_end":8923577,"line_start":1058,"line_end":1058,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923599,"byte_end":8923611,"line_start":1060,"line_end":1060,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4560}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8924130,"byte_end":8924139,"line_start":1076,"line_end":1076,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8924161,"byte_end":8924170,"line_start":1078,"line_end":1078,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4563}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","byte_start":8692888,"byte_end":8692896,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","byte_start":8697746,"byte_end":8697750,"line_start":215,"line_end":215,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","byte_start":8698316,"byte_end":8698320,"line_start":235,"line_end":235,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","byte_start":8698474,"byte_end":8698478,"line_start":244,"line_end":244,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933581,"byte_end":8933591,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4713}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8936170,"byte_end":8936180,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5668}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936938,"byte_end":8936946,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4732},{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4738},{"krate":0,"index":4742}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940909,"byte_end":8940917,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4744}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8941070,"byte_end":8941078,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8941233,"byte_end":8941241,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5671}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943415,"byte_end":8943419,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4787},{"krate":0,"index":4788},{"krate":0,"index":4794},{"krate":0,"index":4800},{"krate":0,"index":4805},{"krate":0,"index":4810},{"krate":0,"index":4815},{"krate":0,"index":4819}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8951265,"byte_end":8951269,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4824}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8951764,"byte_end":8951768,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4826}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8951882,"byte_end":8951886,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4828}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8952367,"byte_end":8952371,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8953535,"byte_end":8953539,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4841}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8954028,"byte_end":8954032,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4845}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8954221,"byte_end":8954225,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5678}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8954341,"byte_end":8954345,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5680}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8954489,"byte_end":8954493,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5682}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8955613,"byte_end":8955617,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8955654,"byte_end":8955658,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8955925,"byte_end":8955929,"line_start":485,"line_end":485,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4861},{"krate":0,"index":4862}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8957164,"byte_end":8957173,"line_start":522,"line_end":522,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8957210,"byte_end":8957219,"line_start":523,"line_end":523,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8957235,"byte_end":8957244,"line_start":525,"line_end":525,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4874}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8957635,"byte_end":8957644,"line_start":538,"line_end":538,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4878}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8957952,"byte_end":8957961,"line_start":550,"line_end":550,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4881},{"krate":0,"index":4882}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8958087,"byte_end":8958096,"line_start":558,"line_end":558,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4885}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8959657,"byte_end":8959666,"line_start":611,"line_end":611,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4902},{"krate":0,"index":4903},{"krate":0,"index":4905},{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4909},{"krate":0,"index":4911}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983987,"byte_end":8983998,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4941},{"krate":0,"index":4942},{"krate":0,"index":4943},{"krate":0,"index":4944},{"krate":0,"index":4945},{"krate":0,"index":4946},{"krate":0,"index":4947},{"krate":0,"index":4948}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990787,"byte_end":8990798,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4954}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990943,"byte_end":8990954,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5694},{"krate":0,"index":5695}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8997053,"byte_end":8997060,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4987}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8997259,"byte_end":8997266,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4989},{"krate":0,"index":4990}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012773,"byte_end":9012782,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5100},{"krate":0,"index":5101}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012987,"byte_end":9012996,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013781,"byte_end":9013791,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5111}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014300,"byte_end":9014310,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5113}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014403,"byte_end":9014413,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014519,"byte_end":9014529,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5118},{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014686,"byte_end":9014696,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5122}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014821,"byte_end":9014831,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014861,"byte_end":9014870,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5125}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015583,"byte_end":9015587,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5136}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016060,"byte_end":9016064,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5139},{"krate":0,"index":5140}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016226,"byte_end":9016230,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5142}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016371,"byte_end":9016382,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5148}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016679,"byte_end":9016683,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5150}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016776,"byte_end":9016780,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016897,"byte_end":9016901,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5155}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9017048,"byte_end":9017052,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018734,"byte_end":9018738,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5178},{"krate":0,"index":5180},{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5184},{"krate":0,"index":5185},{"krate":0,"index":5186},{"krate":0,"index":5187},{"krate":0,"index":5189},{"krate":0,"index":5190},{"krate":0,"index":5191},{"krate":0,"index":5193},{"krate":0,"index":5195},{"krate":0,"index":5197},{"krate":0,"index":5198},{"krate":0,"index":5199},{"krate":0,"index":5201},{"krate":0,"index":5203},{"krate":0,"index":5205},{"krate":0,"index":5206},{"krate":0,"index":5207},{"krate":0,"index":5208},{"krate":0,"index":5211},{"krate":0,"index":5214},{"krate":0,"index":5217},{"krate":0,"index":5220},{"krate":0,"index":5223},{"krate":0,"index":5226},{"krate":0,"index":5230},{"krate":0,"index":5234}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043900,"byte_end":9043903,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044132,"byte_end":9044135,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5238}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044430,"byte_end":9044432,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5240}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044635,"byte_end":9044639,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5242},{"krate":0,"index":5243}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044763,"byte_end":9044767,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5245}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044861,"byte_end":9044865,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5247}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044943,"byte_end":9044948,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5249}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9045044,"byte_end":9045047,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9045173,"byte_end":9045176,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5254}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9045276,"byte_end":9045284,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5256}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9045465,"byte_end":9045471,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9045560,"byte_end":9045567,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5262}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9048715,"byte_end":9048719,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9048826,"byte_end":9048830,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9048926,"byte_end":9048933,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5286}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050750,"byte_end":9050757,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5316},{"krate":0,"index":5318},{"krate":0,"index":5319}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056003,"byte_end":9056010,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5321}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056118,"byte_end":9056121,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5323}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056221,"byte_end":9056224,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5325}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056375,"byte_end":9056382,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5328}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056499,"byte_end":9056506,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5330}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056615,"byte_end":9056623,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5332}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056732,"byte_end":9056739,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5334}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056845,"byte_end":9056852,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5336},{"krate":0,"index":5337}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057031,"byte_end":9057038,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5340}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057233,"byte_end":9057240,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5344}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057397,"byte_end":9057404,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5348},{"krate":0,"index":5349}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057525,"byte_end":9057532,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5351}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057624,"byte_end":9057627,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5354}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057759,"byte_end":9057762,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5357}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057913,"byte_end":9057920,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5360}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9058032,"byte_end":9058035,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5362}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9058258,"byte_end":9058260,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9058475,"byte_end":9058482,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5366}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9058627,"byte_end":9058634,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5369}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9059176,"byte_end":9059183,"line_start":343,"line_end":343,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5376}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9059626,"byte_end":9059633,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5381}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9059762,"byte_end":9059769,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5383}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9059874,"byte_end":9059881,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5385}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9065162,"byte_end":9065181,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9065349,"byte_end":9065368,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5452}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9065640,"byte_end":9065659,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":5456},{"krate":0,"index":5457}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9066362,"byte_end":9066372,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5459},{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9066667,"byte_end":9066679,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5462},{"krate":0,"index":5463}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9067044,"byte_end":9067056,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5466},{"krate":0,"index":5467}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9070775,"byte_end":9070781,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5497},{"krate":0,"index":5498}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072988,"byte_end":9072999,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5521},{"krate":0,"index":5526},{"krate":0,"index":5529},{"krate":0,"index":5530}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077606,"byte_end":9077614,"line_start":196,"line_end":196,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5536},{"krate":0,"index":5537}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9078160,"byte_end":9078168,"line_start":214,"line_end":214,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5540}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9078387,"byte_end":9078398,"line_start":222,"line_end":222,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5542}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9078769,"byte_end":9078780,"line_start":234,"line_end":234,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6073}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9078909,"byte_end":9078920,"line_start":240,"line_end":240,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6075}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9079079,"byte_end":9079090,"line_start":246,"line_end":246,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6077}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081981,"byte_end":9081990,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5560},{"krate":0,"index":5565},{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9089098,"byte_end":9089107,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5576},{"krate":0,"index":5577}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9089775,"byte_end":9089784,"line_start":312,"line_end":312,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5581},{"krate":0,"index":5582},{"krate":0,"index":5583},{"krate":0,"index":5584}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9091040,"byte_end":9091049,"line_start":356,"line_end":356,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5590}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9091416,"byte_end":9091425,"line_start":368,"line_end":368,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6090}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9091554,"byte_end":9091563,"line_start":374,"line_end":374,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6092}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9091718,"byte_end":9091727,"line_start":380,"line_end":380,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6094}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094853,"byte_end":9094862,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5601},{"krate":0,"index":5606},{"krate":0,"index":5608},{"krate":0,"index":5610},{"krate":0,"index":5615},{"krate":0,"index":5618},{"krate":0,"index":5621},{"krate":0,"index":5627},{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5641},{"krate":0,"index":5642},{"krate":0,"index":5643},{"krate":0,"index":5644},{"krate":0,"index":5645},{"krate":0,"index":5646},{"krate":0,"index":5647},{"krate":0,"index":5648},{"krate":0,"index":5649}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110757,"byte_end":9110766,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5651}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9111123,"byte_end":9111132,"line_start":538,"line_end":538,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6105}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9111261,"byte_end":9111270,"line_start":544,"line_end":544,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6107}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9111425,"byte_end":9111434,"line_start":550,"line_end":550,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6109}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/extend.rs","byte_start":9119880,"byte_end":9119883,"line_start":6,"line_end":6,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6156}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/from_stream.rs","byte_start":9120462,"byte_end":9120465,"line_start":9,"line_end":9,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6172}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/from_stream.rs","byte_start":9120916,"byte_end":9120919,"line_start":27,"line_end":27,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6179}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/from_stream.rs","byte_start":9121324,"byte_end":9121327,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6185}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/from_stream.rs","byte_start":9121728,"byte_end":9121730,"line_start":59,"line_end":59,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6191}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/from_stream.rs","byte_start":9122119,"byte_end":9122122,"line_start":75,"line_end":75,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6197}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/result/from_stream.rs","byte_start":9122960,"byte_end":9122966,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6213}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/result/product.rs","byte_start":9143878,"byte_end":9143884,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6551}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/result/sum.rs","byte_start":9146222,"byte_end":9146228,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6567}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/option/from_stream.rs","byte_start":9125508,"byte_end":9125514,"line_start":7,"line_end":7,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6231}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/option/product.rs","byte_start":9148562,"byte_end":9148568,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6583}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/option/sum.rs","byte_start":9150432,"byte_end":9150438,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6598}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/extend.rs","byte_start":9127016,"byte_end":9127022,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6246}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/extend.rs","byte_start":9127557,"byte_end":9127563,"line_start":28,"line_end":28,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6252}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/extend.rs","byte_start":9128058,"byte_end":9128064,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6258}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/extend.rs","byte_start":9128556,"byte_end":9128562,"line_start":68,"line_end":68,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6263}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/extend.rs","byte_start":9129063,"byte_end":9129069,"line_start":88,"line_end":88,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6269}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/from_stream.rs","byte_start":9129783,"byte_end":9129789,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6282}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/from_stream.rs","byte_start":9130238,"byte_end":9130244,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6288}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/from_stream.rs","byte_start":9130696,"byte_end":9130702,"line_start":43,"line_end":43,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6294}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/from_stream.rs","byte_start":9131148,"byte_end":9131154,"line_start":61,"line_end":61,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6299}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/from_stream.rs","byte_start":9131609,"byte_end":9131615,"line_start":79,"line_end":79,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6305}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/binary_heap/extend.rs","byte_start":9132966,"byte_end":9132976,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6321}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/binary_heap/from_stream.rs","byte_start":9133537,"byte_end":9133547,"line_start":7,"line_end":7,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6335}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/btree_map/extend.rs","byte_start":9134273,"byte_end":9134281,"line_start":7,"line_end":7,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6351}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/btree_map/from_stream.rs","byte_start":9134814,"byte_end":9134822,"line_start":7,"line_end":7,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6366}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/btree_set/extend.rs","byte_start":9135541,"byte_end":9135549,"line_start":7,"line_end":7,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6381}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/btree_set/from_stream.rs","byte_start":9136058,"byte_end":9136066,"line_start":7,"line_end":7,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6395}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/hash_map/extend.rs","byte_start":9136861,"byte_end":9136868,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6415}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/hash_map/from_stream.rs","byte_start":9138196,"byte_end":9138203,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6434}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/hash_set/extend.rs","byte_start":9139113,"byte_end":9139120,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6453}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/hash_set/from_stream.rs","byte_start":9140612,"byte_end":9140619,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6471}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/linked_list/extend.rs","byte_start":9141454,"byte_end":9141464,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6486}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/linked_list/from_stream.rs","byte_start":9141975,"byte_end":9141985,"line_start":7,"line_end":7,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6500}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/vec_deque/extend.rs","byte_start":9142742,"byte_end":9142750,"line_start":7,"line_end":7,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/vec_deque/from_stream.rs","byte_start":9143308,"byte_end":9143316,"line_start":7,"line_end":7,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6529}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10723,"byte_end":10727,"line_start":292,"line_end":292,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":45}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10741,"byte_end":10747,"line_start":293,"line_end":293,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":46}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10761,"byte_end":10767,"line_start":294,"line_end":294,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":78}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10795,"byte_end":10797,"line_start":298,"line_end":298,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2903}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/mod.rs","byte_start":8667561,"byte_end":8667568,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3124}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10811,"byte_end":10813,"line_start":299,"line_end":299,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2905}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/mod.rs","byte_start":8668849,"byte_end":8668853,"line_start":4,"line_end":4,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4111}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","byte_start":8839472,"byte_end":8839474,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4113}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","byte_start":8839506,"byte_end":8839508,"line_start":8,"line_end":8,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4119}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/mod.rs","byte_start":8839522,"byte_end":8839525,"line_start":9,"line_end":9,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":4129}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10827,"byte_end":10834,"line_start":300,"line_end":300,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2906}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10848,"byte_end":10852,"line_start":301,"line_end":301,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2907}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10866,"byte_end":10873,"line_start":302,"line_end":302,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3093}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10944,"byte_end":10946,"line_start":307,"line_end":307,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4632}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10960,"byte_end":10964,"line_start":308,"line_end":308,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5094}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":10978,"byte_end":10981,"line_start":309,"line_end":309,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":5399}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":11076,"byte_end":11079,"line_start":315,"line_end":315,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":6110}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/lib.rs","byte_start":11154,"byte_end":11161,"line_start":317,"line_end":317,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":6112}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/utils.rs","byte_start":11951,"byte_end":11955,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":9},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/yield_now.rs","byte_start":8404964,"byte_end":8404972,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1113},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8406966,"byte_end":8406973,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/builder.rs","byte_start":8412330,"byte_end":8412347,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":9614},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8414251,"byte_end":8414261,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8415334,"byte_end":8415344,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/join_handle.rs","byte_start":8415493,"byte_end":8415503,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8418883,"byte_end":8418887,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task.rs","byte_start":8419497,"byte_end":8419501,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8420104,"byte_end":8420110,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_id.rs","byte_start":8420521,"byte_end":8420527,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1336},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8421153,"byte_end":8421161,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8425013,"byte_end":8425024,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8425168,"byte_end":8425179,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8425344,"byte_end":8425355,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1361},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_local.rs","byte_start":8425723,"byte_end":8425732,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_locals_wrapper.rs","byte_start":8427797,"byte_end":8427814,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/task/task_locals_wrapper.rs","byte_start":8429227,"byte_end":8429244,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/delay.rs","byte_start":8562132,"byte_end":8562143,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":9577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/delay.rs","byte_start":8562323,"byte_end":8562334,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":9577},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/flatten.rs","byte_start":8563406,"byte_end":8563419,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":9536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/flatten.rs","byte_start":8563606,"byte_end":8563619,"line_start":41,"line_end":41,"column_start":23,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":9536},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/race.rs","byte_start":8564949,"byte_end":8564953,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":9444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/race.rs","byte_start":8565207,"byte_end":8565211,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":9444},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/try_race.rs","byte_start":8566261,"byte_end":8566268,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":9399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/try_race.rs","byte_start":8566528,"byte_end":8566535,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":9399},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/join.rs","byte_start":8568073,"byte_end":8568077,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":9354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/join.rs","byte_start":8568311,"byte_end":8568315,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":9354},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/try_join.rs","byte_start":8569553,"byte_end":8569560,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":9309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/try_join.rs","byte_start":8569803,"byte_end":8569810,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":9309},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/future/mod.rs","byte_start":8547937,"byte_end":8547943,"line_start":61,"line_end":61,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":9062},"to":{"krate":0,"index":1526}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/pending.rs","byte_start":8571812,"byte_end":8571819,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1559},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572756,"byte_end":8572762,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1577},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/poll_fn.rs","byte_start":8572792,"byte_end":8572798,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1577},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8251854,"byte_end":8251867,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8252094,"byte_end":8252107,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":9272},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8252743,"byte_end":8252755,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1592},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/timeout.rs","byte_start":8252782,"byte_end":8252794,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1592},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/into_future.rs","byte_start":8574518,"byte_end":8574519,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1615},"to":{"krate":0,"index":1610}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/maybe_done.rs","byte_start":8575385,"byte_end":8575394,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/future/maybe_done.rs","byte_start":8576647,"byte_end":8576656,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1636},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/all.rs","byte_start":8338093,"byte_end":8338102,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/all.rs","byte_start":8338309,"byte_end":8338318,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/all.rs","byte_start":8338358,"byte_end":8338367,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/any.rs","byte_start":8339501,"byte_end":8339510,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/any.rs","byte_start":8339717,"byte_end":8339726,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/any.rs","byte_start":8339766,"byte_end":8339775,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/chain.rs","byte_start":8341198,"byte_end":8341203,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":9230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/chain.rs","byte_start":8341421,"byte_end":8341426,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":9230},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cloned.rs","byte_start":8342525,"byte_end":8342531,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":9192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cloned.rs","byte_start":8342643,"byte_end":8342649,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":9192},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cmp.rs","byte_start":8343633,"byte_end":8343642,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":9134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cmp.rs","byte_start":8343871,"byte_end":8343880,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":9134},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/copied.rs","byte_start":8346272,"byte_end":8346278,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":9103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/copied.rs","byte_start":8346390,"byte_end":8346396,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":9103},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cycle.rs","byte_start":8347086,"byte_end":8347091,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":9063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/cycle.rs","byte_start":8347276,"byte_end":8347281,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":9063},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/enumerate.rs","byte_start":8348022,"byte_end":8348031,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":9023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/enumerate.rs","byte_start":8348138,"byte_end":8348147,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":9023},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/eq.rs","byte_start":8349205,"byte_end":8349213,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":8973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/eq.rs","byte_start":8349427,"byte_end":8349435,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":8973},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/filter.rs","byte_start":8350767,"byte_end":8350773,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":8931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/filter.rs","byte_start":8350938,"byte_end":8350944,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":8931},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/filter_map.rs","byte_start":8351794,"byte_end":8351803,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":8882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/filter_map.rs","byte_start":8351922,"byte_end":8351931,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":8882},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find.rs","byte_start":8352814,"byte_end":8352824,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find.rs","byte_start":8352958,"byte_end":8352968,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find.rs","byte_start":8353009,"byte_end":8353019,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find_map.rs","byte_start":8353854,"byte_end":8353867,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find_map.rs","byte_start":8354001,"byte_end":8354014,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/find_map.rs","byte_start":8354058,"byte_end":8354071,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/fold.rs","byte_start":8355027,"byte_end":8355037,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":8822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/fold.rs","byte_start":8355230,"byte_end":8355240,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":8822},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/for_each.rs","byte_start":8356251,"byte_end":8356264,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":8768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/for_each.rs","byte_start":8356413,"byte_end":8356426,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":8768},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/fuse.rs","byte_start":8357503,"byte_end":8357507,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":8730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/fuse.rs","byte_start":8357662,"byte_end":8357666,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":8730},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/ge.rs","byte_start":8358737,"byte_end":8358745,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":8684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/ge.rs","byte_start":8358953,"byte_end":8358961,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":8684},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/gt.rs","byte_start":8360020,"byte_end":8360028,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":8643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/gt.rs","byte_start":8360236,"byte_end":8360244,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":8643},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/inspect.rs","byte_start":8361262,"byte_end":8361269,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":8601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/inspect.rs","byte_start":8361418,"byte_end":8361425,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":8601},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/last.rs","byte_start":8362194,"byte_end":8362204,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":8549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/last.rs","byte_start":8362320,"byte_end":8362330,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":8549},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/le.rs","byte_start":8363493,"byte_end":8363501,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":8508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/le.rs","byte_start":8363709,"byte_end":8363717,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":8508},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/lt.rs","byte_start":8364786,"byte_end":8364794,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":8467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/lt.rs","byte_start":8365002,"byte_end":8365010,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":8467},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/map.rs","byte_start":8365793,"byte_end":8365796,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":8425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/map.rs","byte_start":8365948,"byte_end":8365951,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":8425},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max.rs","byte_start":8366675,"byte_end":8366684,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":8373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max.rs","byte_start":8366799,"byte_end":8366808,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":8373},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max_by.rs","byte_start":8368033,"byte_end":8368044,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":8316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max_by.rs","byte_start":8368231,"byte_end":8368242,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":8316},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max_by_key.rs","byte_start":8369521,"byte_end":8369535,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":8259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/max_by_key.rs","byte_start":8369720,"byte_end":8369734,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":8259},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min.rs","byte_start":8371205,"byte_end":8371214,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":8214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min.rs","byte_start":8371329,"byte_end":8371338,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":8214},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min_by.rs","byte_start":8372560,"byte_end":8372571,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":8157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min_by.rs","byte_start":8372758,"byte_end":8372769,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":8157},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min_by_key.rs","byte_start":8374075,"byte_end":8374089,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":8100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/min_by_key.rs","byte_start":8374274,"byte_end":8374288,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":8100},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/ne.rs","byte_start":8375922,"byte_end":8375930,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":8055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/ne.rs","byte_start":8376144,"byte_end":8376152,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":8055},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/next.rs","byte_start":8377273,"byte_end":8377283,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":701},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/nth.rs","byte_start":8377749,"byte_end":8377758,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/nth.rs","byte_start":8377782,"byte_end":8377791,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/nth.rs","byte_start":8377921,"byte_end":8377930,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/partial_cmp.rs","byte_start":8379185,"byte_end":8379201,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":8002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/partial_cmp.rs","byte_start":8379430,"byte_end":8379446,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":8002},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/position.rs","byte_start":8381923,"byte_end":8381937,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/position.rs","byte_start":8381967,"byte_end":8381981,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/position.rs","byte_start":8382184,"byte_end":8382198,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/scan.rs","byte_start":8383446,"byte_end":8383450,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/scan.rs","byte_start":8383655,"byte_end":8383659,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7953},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/skip.rs","byte_start":8384694,"byte_end":8384698,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/skip.rs","byte_start":8384812,"byte_end":8384816,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7909},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/skip_while.rs","byte_start":8385986,"byte_end":8385995,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/skip_while.rs","byte_start":8386177,"byte_end":8386186,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7862},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/step_by.rs","byte_start":8387588,"byte_end":8387594,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/step_by.rs","byte_start":8387795,"byte_end":8387801,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7816},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/take.rs","byte_start":8389062,"byte_end":8389066,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/take.rs","byte_start":8389237,"byte_end":8389241,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":7773},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/take_while.rs","byte_start":8390335,"byte_end":8390344,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":7726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/take_while.rs","byte_start":8390509,"byte_end":8390518,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7726},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_fold.rs","byte_start":8391427,"byte_end":8391440,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":883},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_fold.rs","byte_start":8391476,"byte_end":8391489,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_fold.rs","byte_start":8391701,"byte_end":8391714,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":883},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_for_each.rs","byte_start":8392796,"byte_end":8392812,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":917},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_for_each.rs","byte_start":8392842,"byte_end":8392858,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/try_for_each.rs","byte_start":8392993,"byte_end":8393009,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":917},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/zip.rs","byte_start":8394315,"byte_end":8394318,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":7670},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/zip.rs","byte_start":8394558,"byte_end":8394561,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":7670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/zip.rs","byte_start":8394763,"byte_end":8394766,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":7670},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/count.rs","byte_start":8607808,"byte_end":8607819,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":7633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/count.rs","byte_start":8607930,"byte_end":8607941,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":7633},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/merge.rs","byte_start":8609204,"byte_end":8609209,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":7591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/merge.rs","byte_start":8609392,"byte_end":8609397,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":7591},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flatten.rs","byte_start":8611099,"byte_end":8611106,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":7547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flatten.rs","byte_start":8611309,"byte_end":8611316,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":7547},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flatten.rs","byte_start":8612161,"byte_end":8612168,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7547},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flat_map.rs","byte_start":8613248,"byte_end":8613255,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/flat_map.rs","byte_start":8613510,"byte_end":8613517,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7494},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/partition.rs","byte_start":8614824,"byte_end":8614839,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/partition.rs","byte_start":8615047,"byte_end":8615062,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":7441},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8616367,"byte_end":8616374,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":7393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8616559,"byte_end":8616566,"line_start":33,"line_end":33,"column_start":28,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":7393},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8617488,"byte_end":8617500,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1855},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/timeout.rs","byte_start":8617527,"byte_end":8617539,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1855},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/throttle.rs","byte_start":8618491,"byte_end":8618499,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":7343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/throttle.rs","byte_start":8618752,"byte_end":8618760,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":7343},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/delay.rs","byte_start":8620019,"byte_end":8620024,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":7302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/delay.rs","byte_start":8620230,"byte_end":8620235,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":7302},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/unzip.rs","byte_start":8621072,"byte_end":8621083,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":7248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/unzip.rs","byte_start":8621353,"byte_end":8621364,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":7248},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/stream/mod.rs","byte_start":8268179,"byte_end":8268185,"line_start":172,"line_end":172,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":21,"index":68},"to":{"krate":0,"index":1881}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/empty.rs","byte_start":8396365,"byte_end":8396370,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2001},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8396921,"byte_end":8396927,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2007},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_fn.rs","byte_start":8397856,"byte_end":8397862,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2007},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8399284,"byte_end":8399292,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":7205},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/from_iter.rs","byte_start":8399547,"byte_end":8399555,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":7205},"to":{"krate":0,"index":2147}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400661,"byte_end":8400665,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7166},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/once.rs","byte_start":8400890,"byte_end":8400894,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7166},"to":{"krate":0,"index":2147}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat.rs","byte_start":8401892,"byte_end":8401898,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2016},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8402514,"byte_end":8402524,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2025},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/repeat_with.rs","byte_start":8403716,"byte_end":8403726,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2025},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/next_back.rs","byte_start":8629695,"byte_end":8629709,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2047},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/nth_back.rs","byte_start":8630182,"byte_end":8630195,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/nth_back.rs","byte_start":8630334,"byte_end":8630347,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2062},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfind.rs","byte_start":8631245,"byte_end":8631256,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfind.rs","byte_start":8631397,"byte_end":8631408,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2083},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfind.rs","byte_start":8631449,"byte_end":8631460,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2083},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfold.rs","byte_start":8632426,"byte_end":8632437,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":7104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/rfold.rs","byte_start":8632637,"byte_end":8632648,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7104},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":8633719,"byte_end":8633733,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":8633939,"byte_end":8633953,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7047},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/double_ended_stream/mod.rs","byte_start":8622802,"byte_end":8622808,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":"SuperTrait","from":{"krate":21,"index":68},"to":{"krate":0,"index":2147}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/exact_size_stream.rs","byte_start":8637255,"byte_end":8637261,"line_start":81,"line_end":81,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":21,"index":68},"to":{"krate":0,"index":2162}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/fused_stream.rs","byte_start":8645929,"byte_end":8645935,"line_start":19,"line_end":19,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":21,"index":68},"to":{"krate":0,"index":2194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/interval.rs","byte_start":8647838,"byte_end":8647846,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2312},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/into_stream.rs","byte_start":8649144,"byte_end":8649145,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2219},"to":{"krate":0,"index":2214}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650342,"byte_end":8650349,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2317},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650517,"byte_end":8650524,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2317},"to":{"krate":0,"index":2147}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650671,"byte_end":8650678,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2317},"to":{"krate":0,"index":2194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/pending.rs","byte_start":8650714,"byte_end":8650721,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2317},"to":{"krate":0,"index":2162}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/product.rs","byte_start":8651557,"byte_end":8651562,"line_start":18,"line_end":18,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":2252}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/successors.rs","byte_start":8655020,"byte_end":8655030,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":7005},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/stream/sum.rs","byte_start":8656304,"byte_end":8656309,"line_start":18,"line_end":18,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":2282}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/lines.rs","byte_start":8713004,"byte_end":8713009,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":6955},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/read_line.rs","byte_start":8715010,"byte_end":8715024,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3166},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/read_until.rs","byte_start":8716534,"byte_end":8716549,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3188},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/split.rs","byte_start":8717778,"byte_end":8717783,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":6907},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_read/mod.rs","byte_start":8701018,"byte_end":8701025,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"kind":"SuperTrait","from":{"krate":33,"index":27},"to":{"krate":0,"index":3786}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/bytes.rs","byte_start":8735256,"byte_end":8735261,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3795},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8737136,"byte_end":8737141,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":6853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8739300,"byte_end":8739305,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6853},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8739547,"byte_end":8739552,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6853},"to":{"krate":33,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/chain.rs","byte_start":8740697,"byte_end":8740702,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":6853},"to":{"krate":33,"index":27}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read.rs","byte_start":8742593,"byte_end":8742603,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3282},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_exact.rs","byte_start":8743199,"byte_end":8743214,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3301},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_to_end.rs","byte_start":8744169,"byte_end":8744184,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3319},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_to_end.rs","byte_start":8745334,"byte_end":8745339,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3331},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_to_string.rs","byte_start":8746741,"byte_end":8746759,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3349},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/read_vectored.rs","byte_start":8748163,"byte_end":8748181,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3371},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8749022,"byte_end":8749026,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8752698,"byte_end":8752702,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":6818},"to":{"krate":33,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/take.rs","byte_start":8753620,"byte_end":8753624,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6818},"to":{"krate":33,"index":27}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/read/mod.rs","byte_start":8719862,"byte_end":8719866,"line_start":53,"line_end":53,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":33,"index":17},"to":{"krate":0,"index":3813}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/seek/seek.rs","byte_start":8759111,"byte_end":8759121,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3432},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/seek/mod.rs","byte_start":8756348,"byte_end":8756352,"line_start":35,"line_end":35,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":33,"index":25},"to":{"krate":0,"index":3843}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/flush.rs","byte_start":8770762,"byte_end":8770773,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3453},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write.rs","byte_start":8771304,"byte_end":8771315,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3470},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_all.rs","byte_start":8771901,"byte_end":8771915,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3489},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_fmt.rs","byte_start":8772917,"byte_end":8772931,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3507},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/write_vectored.rs","byte_start":8774472,"byte_end":8774491,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3528},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/write/mod.rs","byte_start":8760751,"byte_end":8760756,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"kind":"SuperTrait","from":{"krate":33,"index":20},"to":{"krate":0,"index":3859}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/utils.rs","byte_start":8774979,"byte_end":8774985,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":262}},"from":{"krate":2,"index":32017},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/utils.rs","byte_start":8775238,"byte_end":8775250,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/utils.rs","byte_start":8775537,"byte_end":8775549,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3873},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/utils.rs","byte_start":8775680,"byte_end":8775692,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3873},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8777715,"byte_end":8777724,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":6768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8778952,"byte_end":8778961,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":6768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8781701,"byte_end":8781710,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":6768},"to":{"krate":33,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8783164,"byte_end":8783173,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":6768},"to":{"krate":33,"index":27}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8784095,"byte_end":8784104,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":6768},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_reader.rs","byte_start":8784442,"byte_end":8784451,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6768},"to":{"krate":33,"index":25}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8791616,"byte_end":8791625,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":6727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8797457,"byte_end":8797466,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":6727},"to":{"krate":33,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8798364,"byte_end":8798373,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":6727},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/buf_writer.rs","byte_start":8798619,"byte_end":8798628,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":6727},"to":{"krate":33,"index":25}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/copy.rs","byte_start":8803775,"byte_end":8803785,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6678},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8806030,"byte_end":8806036,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809337,"byte_end":8809343,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3886},"to":{"krate":33,"index":25}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8809609,"byte_end":8809615,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3886},"to":{"krate":33,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8810131,"byte_end":8810137,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3886},"to":{"krate":33,"index":27}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8810487,"byte_end":8810493,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3886},"to":{"krate":33,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8811252,"byte_end":8811258,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3886},"to":{"krate":33,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/cursor.rs","byte_start":8811782,"byte_end":8811788,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3886},"to":{"krate":33,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813327,"byte_end":8813332,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3730},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813451,"byte_end":8813456,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3730},"to":{"krate":33,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/empty.rs","byte_start":8813660,"byte_end":8813665,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3730},"to":{"krate":33,"index":27}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8814917,"byte_end":8814923,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/repeat.rs","byte_start":8815042,"byte_end":8815048,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3750},"to":{"krate":33,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8816091,"byte_end":8816095,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3766},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/sink.rs","byte_start":8816214,"byte_end":8816218,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3766},"to":{"krate":33,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/timeout.rs","byte_start":8818027,"byte_end":8818034,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6636},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8821105,"byte_end":8821111,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4008},"to":{"krate":33,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stderr.rs","byte_start":8824592,"byte_end":8824598,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4008},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8827646,"byte_end":8827651,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8829667,"byte_end":8829672,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4042},"to":{"krate":33,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdin.rs","byte_start":8831810,"byte_end":8831815,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4042},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8835386,"byte_end":8835392,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4077},"to":{"krate":33,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/io/stdout.rs","byte_start":8838873,"byte_end":8838879,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4077},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8848585,"byte_end":8848597,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8855949,"byte_end":8855961,"line_start":288,"line_end":288,"column_start":21,"column_end":33},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4148},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8856397,"byte_end":8856409,"line_start":305,"line_end":305,"column_start":32,"column_end":44},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4148},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8856702,"byte_end":8856714,"line_start":314,"line_end":314,"column_start":18,"column_end":30},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4148},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8856813,"byte_end":8856825,"line_start":320,"line_end":320,"column_start":20,"column_end":32},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4148},"to":{"krate":1,"index":8771}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/datagram.rs","byte_start":8857099,"byte_end":8857111,"line_start":328,"line_end":328,"column_start":20,"column_end":32},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4148},"to":{"krate":1,"index":8773}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8859120,"byte_end":8859132,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8862164,"byte_end":8862176,"line_start":156,"line_end":156,"column_start":21,"column_end":33},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4209},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8863270,"byte_end":8863278,"line_start":187,"line_end":187,"column_start":17,"column_end":25},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4223},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8863825,"byte_end":8863833,"line_start":205,"line_end":205,"column_start":21,"column_end":29},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4223},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8864046,"byte_end":8864058,"line_start":213,"line_end":213,"column_start":32,"column_end":44},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4209},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8864351,"byte_end":8864363,"line_start":222,"line_end":222,"column_start":18,"column_end":30},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4209},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8864462,"byte_end":8864474,"line_start":228,"line_end":228,"column_start":20,"column_end":32},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4209},"to":{"krate":1,"index":8771}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/listener.rs","byte_start":8864658,"byte_end":8864670,"line_start":235,"line_end":235,"column_start":20,"column_end":32},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4209},"to":{"krate":1,"index":8773}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8866134,"byte_end":8866144,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869356,"byte_end":8869366,"line_start":151,"line_end":151,"column_start":15,"column_end":25},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4297},"to":{"krate":33,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8869810,"byte_end":8869820,"line_start":171,"line_end":171,"column_start":16,"column_end":26},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4297},"to":{"krate":33,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8870842,"byte_end":8870852,"line_start":207,"line_end":207,"column_start":21,"column_end":31},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4297},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8871284,"byte_end":8871294,"line_start":224,"line_end":224,"column_start":30,"column_end":40},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4297},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8871612,"byte_end":8871622,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4297},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8871721,"byte_end":8871731,"line_start":240,"line_end":240,"column_start":20,"column_end":30},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4297},"to":{"krate":1,"index":8771}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/os/unix/net/stream.rs","byte_start":8871907,"byte_end":8871917,"line_start":247,"line_end":247,"column_start":20,"column_end":30},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4297},"to":{"krate":1,"index":8773}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679090,"byte_end":8679096,"line_start":59,"line_end":59,"column_start":40,"column_end":46},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2938},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679149,"byte_end":8679155,"line_start":60,"line_end":60,"column_start":47,"column_end":53},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2938},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679171,"byte_end":8679177,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8679616,"byte_end":8679622,"line_start":82,"line_end":82,"column_start":17,"column_end":23},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8680288,"byte_end":8680298,"line_start":109,"line_end":109,"column_start":40,"column_end":50},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2956},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8681408,"byte_end":8681418,"line_start":136,"line_end":136,"column_start":34,"column_end":44},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":2956},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8684259,"byte_end":8684270,"line_start":234,"line_end":234,"column_start":40,"column_end":51},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2973},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8685383,"byte_end":8685394,"line_start":261,"line_end":261,"column_start":34,"column_end":45},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2973},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687823,"byte_end":8687829,"line_start":348,"line_end":348,"column_start":45,"column_end":51},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2938},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8687949,"byte_end":8687955,"line_start":351,"line_end":351,"column_start":29,"column_end":35},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688329,"byte_end":8688335,"line_start":364,"line_end":364,"column_start":21,"column_end":27},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2938},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688448,"byte_end":8688454,"line_start":370,"line_end":370,"column_start":39,"column_end":45},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":2938},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688693,"byte_end":8688708,"line_start":379,"line_end":379,"column_start":40,"column_end":55},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3002},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688758,"byte_end":8688773,"line_start":380,"line_end":380,"column_start":40,"column_end":55},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3002},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8688810,"byte_end":8688825,"line_start":382,"line_end":382,"column_start":26,"column_end":41},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":3002},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689186,"byte_end":8689201,"line_start":393,"line_end":393,"column_start":45,"column_end":60},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":3002},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689367,"byte_end":8689382,"line_start":399,"line_end":399,"column_start":49,"column_end":64},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":3002},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689514,"byte_end":8689529,"line_start":405,"line_end":405,"column_start":27,"column_end":42},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":3002},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689792,"byte_end":8689808,"line_start":416,"line_end":416,"column_start":40,"column_end":56},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689858,"byte_end":8689874,"line_start":417,"line_end":417,"column_start":40,"column_end":56},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8689911,"byte_end":8689927,"line_start":419,"line_end":419,"column_start":26,"column_end":42},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8690325,"byte_end":8690341,"line_start":432,"line_end":432,"column_start":45,"column_end":61},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8690507,"byte_end":8690523,"line_start":438,"line_end":438,"column_start":49,"column_end":65},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8690655,"byte_end":8690671,"line_start":444,"line_end":444,"column_start":27,"column_end":43},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/rwlock.rs","byte_start":8690809,"byte_end":8690825,"line_start":452,"line_end":452,"column_start":30,"column_end":46},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8873899,"byte_end":8873906,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/barrier.rs","byte_start":8876556,"byte_end":8876573,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8879545,"byte_end":8879562,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880725,"byte_end":8880732,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4353},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880757,"byte_end":8880764,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4353},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880786,"byte_end":8880793,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4353},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8880860,"byte_end":8880867,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8889641,"byte_end":8889648,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4353},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8890440,"byte_end":8890451,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4390},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/condvar.rs","byte_start":8891359,"byte_end":8891370,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4390},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8894912,"byte_end":8894918,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895875,"byte_end":8895885,"line_start":152,"line_end":152,"column_start":27,"column_end":37},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4443},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8895924,"byte_end":8895934,"line_start":154,"line_end":154,"column_start":28,"column_end":38},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4443},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8897351,"byte_end":8897361,"line_start":189,"line_end":189,"column_start":26,"column_end":36},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4443},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900162,"byte_end":8900168,"line_start":312,"line_end":312,"column_start":18,"column_end":24},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4435},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900441,"byte_end":8900447,"line_start":321,"line_end":321,"column_start":19,"column_end":25},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4435},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8900842,"byte_end":8900848,"line_start":336,"line_end":336,"column_start":24,"column_end":30},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4435},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8902250,"byte_end":8902258,"line_start":388,"line_end":388,"column_start":9,"column_end":17},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903349,"byte_end":8903359,"line_start":426,"line_end":426,"column_start":28,"column_end":38},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8903750,"byte_end":8903760,"line_start":439,"line_end":439,"column_start":26,"column_end":36},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8906514,"byte_end":8906522,"line_start":563,"line_end":563,"column_start":18,"column_end":26},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4472},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8907001,"byte_end":8907009,"line_start":577,"line_end":577,"column_start":19,"column_end":27},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4472},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8907435,"byte_end":8907443,"line_start":593,"line_end":593,"column_start":20,"column_end":28},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4472},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8907834,"byte_end":8907842,"line_start":608,"line_end":608,"column_start":24,"column_end":32},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4472},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8911038,"byte_end":8911045,"line_start":708,"line_end":708,"column_start":31,"column_end":38},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4517},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8911082,"byte_end":8911089,"line_start":709,"line_end":709,"column_start":31,"column_end":38},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4517},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8911114,"byte_end":8911121,"line_start":710,"line_end":710,"column_start":19,"column_end":26},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4517},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8911137,"byte_end":8911144,"line_start":712,"line_end":712,"column_start":9,"column_end":16},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":4517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8921463,"byte_end":8921470,"line_start":986,"line_end":986,"column_start":18,"column_end":25},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4517},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922587,"byte_end":8922599,"line_start":1025,"line_end":1025,"column_start":19,"column_end":31},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4597},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922625,"byte_end":8922637,"line_start":1027,"line_end":1027,"column_start":19,"column_end":31},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4597},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8922892,"byte_end":8922904,"line_start":1036,"line_end":1036,"column_start":21,"column_end":33},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4597},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923565,"byte_end":8923577,"line_start":1058,"line_end":1058,"column_start":16,"column_end":28},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6616},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8923599,"byte_end":8923611,"line_start":1060,"line_end":1060,"column_start":18,"column_end":30},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6616},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8924130,"byte_end":8924139,"line_start":1076,"line_end":1076,"column_start":16,"column_end":25},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6606},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/channel.rs","byte_start":8924161,"byte_end":8924170,"line_start":1078,"line_end":1078,"column_start":18,"column_end":27},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":6606},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","byte_start":8692888,"byte_end":8692896,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":3068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","byte_start":8697746,"byte_end":8697750,"line_start":215,"line_end":215,"column_start":15,"column_end":19},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","byte_start":8698316,"byte_end":8698320,"line_start":235,"line_end":235,"column_start":16,"column_end":20},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/sync/waker_set.rs","byte_start":8698474,"byte_end":8698478,"line_start":244,"line_end":244,"column_start":19,"column_end":23},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8933581,"byte_end":8933591,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_builder.rs","byte_start":8936170,"byte_end":8936180,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5659},"to":{"krate":1,"index":8755}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8936938,"byte_end":8936946,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8940909,"byte_end":8940917,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4728},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8941070,"byte_end":8941078,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4728},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/dir_entry.rs","byte_start":8941233,"byte_end":8941241,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4728},"to":{"krate":1,"index":8748}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8943415,"byte_end":8943419,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8951265,"byte_end":8951269,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4783},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8951764,"byte_end":8951768,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":4783},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8951882,"byte_end":8951886,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":4783},"to":{"krate":33,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8952367,"byte_end":8952371,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":4783},"to":{"krate":33,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8953535,"byte_end":8953539,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4783},"to":{"krate":33,"index":25}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8954028,"byte_end":8954032,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4783},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8954221,"byte_end":8954225,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4783},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8954341,"byte_end":8954345,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4783},"to":{"krate":1,"index":8771}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8954489,"byte_end":8954493,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4783},"to":{"krate":1,"index":8773}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8955613,"byte_end":8955617,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":4846},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8955654,"byte_end":8955658,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4846},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8955925,"byte_end":8955929,"line_start":485,"line_end":485,"column_start":9,"column_end":13},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8957164,"byte_end":8957173,"line_start":522,"line_end":522,"column_start":31,"column_end":40},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":4864},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8957210,"byte_end":8957219,"line_start":523,"line_end":523,"column_start":31,"column_end":40},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":4864},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8957235,"byte_end":8957244,"line_start":525,"line_end":525,"column_start":9,"column_end":18},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8957635,"byte_end":8957644,"line_start":538,"line_end":538,"column_start":18,"column_end":27},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4864},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8957952,"byte_end":8957961,"line_start":550,"line_end":550,"column_start":19,"column_end":28},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4864},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8958087,"byte_end":8958096,"line_start":558,"line_end":558,"column_start":22,"column_end":31},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4864},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/file.rs","byte_start":8959657,"byte_end":8959666,"line_start":611,"line_end":611,"column_start":6,"column_end":15},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8983987,"byte_end":8983998,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990787,"byte_end":8990798,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5685},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/open_options.rs","byte_start":8990943,"byte_end":8990954,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5685},"to":{"krate":1,"index":8698}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8997053,"byte_end":8997060,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/fs/read_dir.rs","byte_start":8997259,"byte_end":8997266,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5697},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012773,"byte_end":9012782,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5711},"to":{"krate":2,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/ancestors.rs","byte_start":9012987,"byte_end":9012996,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5711},"to":{"krate":2,"index":5546}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9013781,"byte_end":9013791,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014300,"byte_end":9014310,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5722},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014403,"byte_end":9014413,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5722},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014519,"byte_end":9014529,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5722},"to":{"krate":2,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014686,"byte_end":9014696,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5722},"to":{"krate":2,"index":5212}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014821,"byte_end":9014831,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5722},"to":{"krate":2,"index":5546}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/components.rs","byte_start":9014861,"byte_end":9014870,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":425}},"from":{"krate":1,"index":7523},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9015583,"byte_end":9015587,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016060,"byte_end":9016064,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5752},"to":{"krate":2,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016226,"byte_end":9016230,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5752},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016371,"byte_end":9016382,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5143},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016679,"byte_end":9016683,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5752},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016776,"byte_end":9016780,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5752},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9016897,"byte_end":9016901,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5752},"to":{"krate":2,"index":5212}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/iter.rs","byte_start":9017048,"byte_end":9017052,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5752},"to":{"krate":2,"index":5546}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9018734,"byte_end":9018738,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9043900,"byte_end":9043903,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":435}},"from":{"krate":5,"index":90},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044132,"byte_end":9044135,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"kind":{"Impl":{"id":436}},"from":{"krate":5,"index":4219},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044430,"byte_end":9044432,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"kind":{"Impl":{"id":437}},"from":{"krate":5,"index":3329},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044635,"byte_end":9044639,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5758},"to":{"krate":5,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044763,"byte_end":9044767,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5758},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044861,"byte_end":9044865,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5758},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9044943,"byte_end":9044948,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"kind":{"Impl":{"id":441}},"from":{"krate":1,"index":2039},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9045044,"byte_end":9045047,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"kind":{"Impl":{"id":442}},"from":{"krate":5,"index":345},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9045173,"byte_end":9045176,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"kind":{"Impl":{"id":443}},"from":{"krate":5,"index":345},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9045276,"byte_end":9045284,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"kind":{"Impl":{"id":444}},"from":{"krate":1,"index":6882},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9045465,"byte_end":9045471,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"kind":{"Impl":{"id":446}},"from":{"krate":5,"index":5316},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9045560,"byte_end":9045567,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9048715,"byte_end":9048719,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":5758},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9048826,"byte_end":9048830,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"kind":{"Impl":{"id":499}},"from":{"krate":1,"index":4201},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/path.rs","byte_start":9048926,"byte_end":9048933,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"kind":{"Impl":{"id":500}},"from":{"krate":1,"index":7597},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9050750,"byte_end":9050757,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056003,"byte_end":9056010,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056118,"byte_end":9056121,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":503}},"from":{"krate":5,"index":90},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056221,"byte_end":9056224,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":504}},"from":{"krate":5,"index":90},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056375,"byte_end":9056382,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056499,"byte_end":9056506,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056615,"byte_end":9056623,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":507}},"from":{"krate":1,"index":6882},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056732,"byte_end":9056739,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9056845,"byte_end":9056852,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":8501}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057031,"byte_end":9057038,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":5185}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057233,"byte_end":9057240,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":5198}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057397,"byte_end":9057404,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057525,"byte_end":9057532,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1714}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057624,"byte_end":9057627,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":514}},"from":{"krate":5,"index":345},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057759,"byte_end":9057762,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":515}},"from":{"krate":5,"index":345},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9057913,"byte_end":9057920,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9058032,"byte_end":9058035,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":517}},"from":{"krate":5,"index":4219},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9058258,"byte_end":9058260,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":518}},"from":{"krate":5,"index":3329},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9058475,"byte_end":9058482,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9058627,"byte_end":9058634,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6036},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9059176,"byte_end":9059183,"line_start":343,"line_end":343,"column_start":56,"column_end":63},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6036},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9059626,"byte_end":9059633,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9059762,"byte_end":9059769,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/path/pathbuf.rs","byte_start":9059874,"byte_end":9059881,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9065162,"byte_end":9065181,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":5438},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9065349,"byte_end":9065368,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":5438},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9065640,"byte_end":9065659,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":5438},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9066362,"byte_end":9066372,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"kind":{"Impl":{"id":528}},"from":{"krate":1,"index":7190},"to":{"krate":0,"index":5435}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9066667,"byte_end":9066679,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"kind":{"Impl":{"id":529}},"from":{"krate":1,"index":7218},"to":{"krate":0,"index":5435}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9067044,"byte_end":9067056,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"kind":{"Impl":{"id":530}},"from":{"krate":1,"index":7221},"to":{"krate":0,"index":5435}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/addr.rs","byte_start":9070775,"byte_end":9070781,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"kind":{"Impl":{"id":532}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":5435}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9072988,"byte_end":9072999,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9077606,"byte_end":9077614,"line_start":196,"line_end":196,"column_start":17,"column_end":25},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":5531},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9078160,"byte_end":9078168,"line_start":214,"line_end":214,"column_start":21,"column_end":29},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":5531},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9078387,"byte_end":9078398,"line_start":222,"line_end":222,"column_start":38,"column_end":49},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6063},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9078769,"byte_end":9078780,"line_start":234,"line_end":234,"column_start":22,"column_end":33},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6063},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9078909,"byte_end":9078920,"line_start":240,"line_end":240,"column_start":24,"column_end":35},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6063},"to":{"krate":1,"index":8771}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/listener.rs","byte_start":9079079,"byte_end":9079090,"line_start":246,"line_end":246,"column_start":24,"column_end":35},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6063},"to":{"krate":1,"index":8773}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9081981,"byte_end":9081990,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9089098,"byte_end":9089107,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6078},"to":{"krate":33,"index":17}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9089775,"byte_end":9089784,"line_start":312,"line_end":312,"column_start":16,"column_end":25},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6078},"to":{"krate":33,"index":20}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9091040,"byte_end":9091049,"line_start":356,"line_end":356,"column_start":36,"column_end":45},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6078},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9091416,"byte_end":9091425,"line_start":368,"line_end":368,"column_start":22,"column_end":31},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6078},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9091554,"byte_end":9091563,"line_start":374,"line_end":374,"column_start":24,"column_end":33},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6078},"to":{"krate":1,"index":8771}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/tcp/stream.rs","byte_start":9091718,"byte_end":9091727,"line_start":380,"line_end":380,"column_start":24,"column_end":33},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6078},"to":{"krate":1,"index":8773}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9094853,"byte_end":9094862,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9110757,"byte_end":9110766,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6095},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9111123,"byte_end":9111132,"line_start":538,"line_end":538,"column_start":22,"column_end":31},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6095},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9111261,"byte_end":9111270,"line_start":544,"line_end":544,"column_start":24,"column_end":33},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6095},"to":{"krate":1,"index":8771}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/net/udp/mod.rs","byte_start":9111425,"byte_end":9111434,"line_start":550,"line_end":550,"column_start":24,"column_end":33},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6095},"to":{"krate":1,"index":8773}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/extend.rs","byte_start":9119880,"byte_end":9119883,"line_start":6,"line_end":6,"column_start":37,"column_end":40},"kind":{"Impl":{"id":552}},"from":{"krate":5,"index":4556},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/from_stream.rs","byte_start":9120462,"byte_end":9120465,"line_start":9,"line_end":9,"column_start":33,"column_end":36},"kind":{"Impl":{"id":553}},"from":{"krate":5,"index":4556},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/from_stream.rs","byte_start":9120916,"byte_end":9120919,"line_start":27,"line_end":27,"column_start":45,"column_end":48},"kind":{"Impl":{"id":554}},"from":{"krate":5,"index":345},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/from_stream.rs","byte_start":9121324,"byte_end":9121327,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"kind":{"Impl":{"id":555}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/from_stream.rs","byte_start":9121728,"byte_end":9121730,"line_start":59,"line_end":59,"column_start":33,"column_end":35},"kind":{"Impl":{"id":556}},"from":{"krate":5,"index":3329},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/vec/from_stream.rs","byte_start":9122119,"byte_end":9122122,"line_start":75,"line_end":75,"column_start":33,"column_end":36},"kind":{"Impl":{"id":557}},"from":{"krate":5,"index":4219},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/result/from_stream.rs","byte_start":9122960,"byte_end":9122966,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"kind":{"Impl":{"id":558}},"from":{"krate":2,"index":32017},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/result/product.rs","byte_start":9143878,"byte_end":9143884,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"kind":{"Impl":{"id":559}},"from":{"krate":2,"index":32017},"to":{"krate":0,"index":2252}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/result/sum.rs","byte_start":9146222,"byte_end":9146228,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"kind":{"Impl":{"id":560}},"from":{"krate":2,"index":32017},"to":{"krate":0,"index":2282}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/option/from_stream.rs","byte_start":9125508,"byte_end":9125514,"line_start":7,"line_end":7,"column_start":44,"column_end":50},"kind":{"Impl":{"id":561}},"from":{"krate":2,"index":31858},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/option/product.rs","byte_start":9148562,"byte_end":9148568,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"kind":{"Impl":{"id":562}},"from":{"krate":2,"index":31858},"to":{"krate":0,"index":2252}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/option/sum.rs","byte_start":9150432,"byte_end":9150438,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":563}},"from":{"krate":2,"index":31858},"to":{"krate":0,"index":2282}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/extend.rs","byte_start":9127016,"byte_end":9127022,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":564}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/extend.rs","byte_start":9127557,"byte_end":9127563,"line_start":28,"line_end":28,"column_start":39,"column_end":45},"kind":{"Impl":{"id":565}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/extend.rs","byte_start":9128058,"byte_end":9128064,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"kind":{"Impl":{"id":566}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/extend.rs","byte_start":9128556,"byte_end":9128562,"line_start":68,"line_end":68,"column_start":33,"column_end":39},"kind":{"Impl":{"id":567}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/extend.rs","byte_start":9129063,"byte_end":9129069,"line_start":88,"line_end":88,"column_start":43,"column_end":49},"kind":{"Impl":{"id":568}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/from_stream.rs","byte_start":9129783,"byte_end":9129789,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"kind":{"Impl":{"id":569}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/from_stream.rs","byte_start":9130238,"byte_end":9130244,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"kind":{"Impl":{"id":570}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/from_stream.rs","byte_start":9130696,"byte_end":9130702,"line_start":43,"line_end":43,"column_start":34,"column_end":40},"kind":{"Impl":{"id":571}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/from_stream.rs","byte_start":9131148,"byte_end":9131154,"line_start":61,"line_end":61,"column_start":29,"column_end":35},"kind":{"Impl":{"id":572}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/string/from_stream.rs","byte_start":9131609,"byte_end":9131615,"line_start":79,"line_end":79,"column_start":39,"column_end":45},"kind":{"Impl":{"id":573}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/binary_heap/extend.rs","byte_start":9132966,"byte_end":9132976,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":{"Impl":{"id":574}},"from":{"krate":5,"index":436},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/binary_heap/from_stream.rs","byte_start":9133537,"byte_end":9133547,"line_start":7,"line_end":7,"column_start":39,"column_end":49},"kind":{"Impl":{"id":575}},"from":{"krate":5,"index":436},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/btree_map/extend.rs","byte_start":9134273,"byte_end":9134281,"line_start":7,"line_end":7,"column_start":57,"column_end":65},"kind":{"Impl":{"id":576}},"from":{"krate":5,"index":726},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/btree_map/from_stream.rs","byte_start":9134814,"byte_end":9134822,"line_start":7,"line_end":7,"column_start":53,"column_end":61},"kind":{"Impl":{"id":577}},"from":{"krate":5,"index":726},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/btree_set/extend.rs","byte_start":9135541,"byte_end":9135549,"line_start":7,"line_end":7,"column_start":43,"column_end":51},"kind":{"Impl":{"id":578}},"from":{"krate":5,"index":5146},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/btree_set/from_stream.rs","byte_start":9136058,"byte_end":9136066,"line_start":7,"line_end":7,"column_start":39,"column_end":47},"kind":{"Impl":{"id":579}},"from":{"krate":5,"index":5146},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/hash_map/extend.rs","byte_start":9136861,"byte_end":9136868,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"kind":{"Impl":{"id":580}},"from":{"krate":1,"index":6714},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/hash_map/from_stream.rs","byte_start":9138196,"byte_end":9138203,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"kind":{"Impl":{"id":581}},"from":{"krate":1,"index":6714},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/hash_set/extend.rs","byte_start":9139113,"byte_end":9139120,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"kind":{"Impl":{"id":582}},"from":{"krate":1,"index":6740},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/hash_set/from_stream.rs","byte_start":9140612,"byte_end":9140619,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"kind":{"Impl":{"id":583}},"from":{"krate":1,"index":6740},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/linked_list/extend.rs","byte_start":9141454,"byte_end":9141464,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"kind":{"Impl":{"id":584}},"from":{"krate":5,"index":2404},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/linked_list/from_stream.rs","byte_start":9141975,"byte_end":9141985,"line_start":7,"line_end":7,"column_start":33,"column_end":43},"kind":{"Impl":{"id":585}},"from":{"krate":5,"index":2404},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/vec_deque/extend.rs","byte_start":9142742,"byte_end":9142750,"line_start":7,"line_end":7,"column_start":37,"column_end":45},"kind":{"Impl":{"id":586}},"from":{"krate":5,"index":2830},"to":{"krate":0,"index":2171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.8.0/src/collections/vec_deque/from_stream.rs","byte_start":9143308,"byte_end":9143316,"line_start":7,"line_end":7,"column_start":33,"column_end":41},"kind":{"Impl":{"id":587}},"from":{"krate":5,"index":2830},"to":{"krate":0,"index":2187}}]}