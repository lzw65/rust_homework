{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","multihash","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9c4e866fccae9154","-C","extra-filename=-9c4e866fccae9154","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--extern","blake2b_simd=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libblake2b_simd-78414c5383f31f8d.rmeta","--extern","blake2s_simd=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libblake2s_simd-c4ec3459c19919bb.rmeta","--extern","digest=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libdigest-a8a7234f9d625b65.rmeta","--extern","sha1=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libsha1-7c7247352a6a7aec.rmeta","--extern","sha2=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libsha2-7ba58f5e739a8467.rmeta","--extern","sha3=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libsha3-df395d028bb70f21.rmeta","--extern","unsigned_varint=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libunsigned_varint-fb9adf870b0df7f3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libmultihash-9c4e866fccae9154.rmeta"},"prelude":{"crate_id":{"name":"multihash","disambiguator":[2563940273511181391,2145599386484304867]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","num":18,"id":{"name":"unsigned_varint","disambiguator":[15050758532175817785,15773287988082815838]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":19,"id":{"name":"blake2b_simd","disambiguator":[16346167933737849615,1180688883178938227]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":20,"id":{"name":"arrayref","disambiguator":[12864533597306545026,8294063698849415262]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":21,"id":{"name":"arrayvec","disambiguator":[9711399210076819589,6533224003713073282]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":22,"id":{"name":"constant_time_eq","disambiguator":[4123012020743147552,17233470839404695501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":23,"id":{"name":"blake2s_simd","disambiguator":[5563710040198093256,3719349110481957167]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":24,"id":{"name":"sha1","disambiguator":[12612042681792079063,16742669209945415581]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":25,"id":{"name":"digest","disambiguator":[7153347457544459114,4850652739674458903]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":26,"id":{"name":"generic_array","disambiguator":[785913366860281496,3566111910551851268]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":27,"id":{"name":"typenum","disambiguator":[2877625186163250866,4188862493781366168]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":28,"id":{"name":"block_buffer","disambiguator":[11982380359334884818,10724970865856558599]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":29,"id":{"name":"block_padding","disambiguator":[8921324626424372814,6858420319058578685]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":30,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":31,"id":{"name":"cpuid_bool","disambiguator":[3944863459372053080,10012978824416111698]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":32,"id":{"name":"opaque_debug","disambiguator":[5955724391880543345,12225655711726523850]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":33,"id":{"name":"sha2","disambiguator":[13080494411688160082,149958801492828378]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":34,"id":{"name":"sha3","disambiguator":[11788229514457262392,376506758293940117]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","num":35,"id":{"name":"keccak","disambiguator":[7922441978553466502,10628234470639316489]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":0,"byte_end":643,"line_start":1,"line_end":23,"column_start":1,"column_end":19}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":434,"byte_end":438,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"alias_span":null,"name":"wrap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":440,"byte_end":460,"line_start":19,"line_end":19,"column_start":11,"column_end":31},"alias_span":null,"name":"BoxedMultihashDigest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":462,"byte_end":471,"line_start":19,"line_end":19,"column_start":33,"column_end":42},"alias_span":null,"name":"Multihash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":473,"byte_end":488,"line_start":19,"line_end":19,"column_start":44,"column_end":59},"alias_span":null,"name":"MultihashDigest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":490,"byte_end":506,"line_start":19,"line_end":19,"column_start":61,"column_end":77},"alias_span":null,"name":"MultihashGeneric","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":23},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":508,"byte_end":520,"line_start":19,"line_end":19,"column_start":79,"column_end":91},"alias_span":null,"name":"MultihashRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":192},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":526,"byte_end":545,"line_start":20,"line_end":20,"column_start":5,"column_end":24},"alias_span":null,"name":"MultihashRefGeneric","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":547,"byte_end":558,"line_start":20,"line_end":20,"column_start":26,"column_end":37},"alias_span":null,"name":"Multihasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":580,"byte_end":591,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":593,"byte_end":609,"line_start":22,"line_end":22,"column_start":31,"column_end":47},"alias_span":null,"name":"DecodeOwnedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":611,"byte_end":622,"line_start":22,"line_end":22,"column_start":49,"column_end":60},"alias_span":null,"name":"EncodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":641,"byte_end":642,"line_start":23,"line_end":23,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":0,"byte_end":643,"line_start":1,"line_end":23,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":114},{"krate":0,"index":127},{"krate":0,"index":159},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" # Multihash","sig":null,"attributes":[{"value":"/ # Multihash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":0,"byte_end":15,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":16,"byte_end":19,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Implementation of [multihash](https://github.com/multiformats/multihash) in Rust.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":20,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":106,"byte_end":109,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A `Multihash` is a structure that contains a hashing algorithm, plus some hashed data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":110,"byte_end":200,"line_start":5,"line_end":5,"column_start":1,"column_end":91}},{"value":"/ A `MultihashRef` is the same as a `Multihash`, except that it doesn't own its data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":201,"byte_end":288,"line_start":6,"line_end":6,"column_start":1,"column_end":88}},{"value":"deny(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/lib.rs","byte_start":290,"byte_end":312,"line_start":8,"line_end":8,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1163,"byte_end":1172,"line_start":15,"line_end":15,"column_start":10,"column_end":19},"name":"Multihash","qualname":"::digests::Multihash","value":"MultihashGeneric<Code>","parent":null,"children":[],"decl_id":null,"docs":" This type is using the default Multihash code table\n","sig":null,"attributes":[{"value":"/ This type is using the default Multihash code table","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1098,"byte_end":1153,"line_start":14,"line_end":14,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1265,"byte_end":1277,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"MultihashRef","qualname":"::digests::MultihashRef","value":"MultihashRefGeneric","parent":null,"children":[],"decl_id":null,"docs":" This type is using the default Multihash code table\n","sig":null,"attributes":[{"value":"/ This type is using the default Multihash code table","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1200,"byte_end":1255,"line_start":17,"line_end":17,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1559,"byte_end":1579,"line_start":28,"line_end":28,"column_start":10,"column_end":30},"name":"BoxedMultihashDigest","qualname":"::digests::BoxedMultihashDigest","value":"Box<MultihashDigest<T>>","parent":null,"children":[],"decl_id":null,"docs":" This type makes it easier to interact with hashers","sig":null,"attributes":[{"value":"/ This type makes it easier to interact with hashers","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1316,"byte_end":1370,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1371,"byte_end":1374,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1375,"byte_end":1388,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1389,"byte_end":1392,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1393,"byte_end":1406,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ let hasher1: BoxedMultihashDigest = Code::Sha3_512.into();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1407,"byte_end":1469,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ let hasher2: BoxedMultihashDigest<_> = MyCodecTable::MyHash.into();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1470,"byte_end":1541,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1542,"byte_end":1549,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4829,"byte_end":4845,"line_start":144,"line_end":144,"column_start":12,"column_end":28},"name":"MultihashGeneric","qualname":"::digests::MultihashGeneric","value":"MultihashGeneric {  }","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Representation of a valid multihash. This enforces validity on construction,\n so it can be assumed this is always a valid multihash.","sig":null,"attributes":[{"value":"/ Representation of a valid multihash. This enforces validity on construction,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1622,"byte_end":1702,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ so it can be assumed this is always a valid multihash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1703,"byte_end":1761,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1762,"byte_end":1765,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This generic type can be used with your own code table.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1766,"byte_end":1825,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1826,"byte_end":1829,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1830,"byte_end":1843,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1844,"byte_end":1847,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1848,"byte_end":1855,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use multihash::{wrap, MultihashGeneric};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1856,"byte_end":1900,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ use std::convert::TryFrom;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1901,"byte_end":1931,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1932,"byte_end":1935,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1936,"byte_end":1956,"line_start":41,"line_end":41,"column_start":1,"column_end":21}},{"value":"/ pub enum MyCodeTable {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1957,"byte_end":1983,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/     Foo = 0x01,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":1984,"byte_end":2003,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/     Bar = 0x02,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2004,"byte_end":2023,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2024,"byte_end":2029,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2030,"byte_end":2033,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl TryFrom<u64> for MyCodeTable {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2034,"byte_end":2073,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/     type Error = String;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2074,"byte_end":2102,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2103,"byte_end":2106,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     fn try_from(raw: u64) -> Result<Self, Self::Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2107,"byte_end":2167,"line_start":50,"line_end":50,"column_start":1,"column_end":61}},{"value":"/         match raw {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2168,"byte_end":2191,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/             0x01 => Ok(Self::Foo),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2192,"byte_end":2230,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/             0x02 => Ok(Self::Bar),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2231,"byte_end":2269,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/             _ => Err(\"invalid code\".to_string()),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2270,"byte_end":2323,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2324,"byte_end":2337,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2338,"byte_end":2347,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2348,"byte_end":2353,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2354,"byte_end":2357,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ impl From<MyCodeTable> for u64 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2358,"byte_end":2394,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/     fn from(code: MyCodeTable) -> Self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2395,"byte_end":2439,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/         code as u64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2440,"byte_end":2463,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2464,"byte_end":2473,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2474,"byte_end":2479,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2480,"byte_end":2483,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2484,"byte_end":2511,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ struct SameHash;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2512,"byte_end":2532,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/ impl SameHash {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2533,"byte_end":2552,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/     pub const CODE: MyCodeTable = MyCodeTable::Foo;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2553,"byte_end":2608,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/     /// Hash some input and return the sha1 digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2609,"byte_end":2664,"line_start":69,"line_end":69,"column_start":1,"column_end":56}},{"value":"/     pub fn digest(_data: &[u8]) -> MultihashGeneric<MyCodeTable> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2665,"byte_end":2735,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/         let digest = b\"alwaysthesame\";","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2736,"byte_end":2778,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/         wrap(Self::CODE, digest)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2779,"byte_end":2815,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2816,"byte_end":2825,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2826,"byte_end":2831,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2832,"byte_end":2835,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let my_hash = SameHash::digest(b\"abc\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2836,"byte_end":2879,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(my_hash.digest(), b\"alwaysthesame\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2880,"byte_end":2931,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2932,"byte_end":2939,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2940,"byte_end":2943,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ This mechanism can also be used if you want to extend the existing code table","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":2944,"byte_end":3025,"line_start":80,"line_end":80,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3026,"byte_end":3029,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3030,"byte_end":3043,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3044,"byte_end":3047,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3048,"byte_end":3055,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ use multihash::Code;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3056,"byte_end":3080,"line_start":85,"line_end":85,"column_start":1,"column_end":25}},{"value":"/ use std::convert::TryFrom;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3081,"byte_end":3111,"line_start":86,"line_end":86,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3112,"byte_end":3115,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3116,"byte_end":3147,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"/ enum ExtendedCode {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3148,"byte_end":3171,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/     Foo,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3172,"byte_end":3184,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/     Bar,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3185,"byte_end":3197,"line_start":91,"line_end":91,"column_start":1,"column_end":13}},{"value":"/     NormalCode(Code),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3198,"byte_end":3223,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3224,"byte_end":3229,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3230,"byte_end":3233,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ impl TryFrom<u64> for ExtendedCode {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3234,"byte_end":3274,"line_start":95,"line_end":95,"column_start":1,"column_end":41}},{"value":"/     type Error = String;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3275,"byte_end":3303,"line_start":96,"line_end":96,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3304,"byte_end":3307,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     /// Return the `Code` based on the integer value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3308,"byte_end":3364,"line_start":98,"line_end":98,"column_start":1,"column_end":57}},{"value":"/     fn try_from(raw: u64) -> Result<Self, Self::Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3365,"byte_end":3425,"line_start":99,"line_end":99,"column_start":1,"column_end":61}},{"value":"/         match raw {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3426,"byte_end":3449,"line_start":100,"line_end":100,"column_start":1,"column_end":24}},{"value":"/             0x01 => Ok(Self::Foo),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3450,"byte_end":3488,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/             0x02 => Ok(Self::Bar),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3489,"byte_end":3527,"line_start":102,"line_end":102,"column_start":1,"column_end":39}},{"value":"/             // Fallback to the default values","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3528,"byte_end":3577,"line_start":103,"line_end":103,"column_start":1,"column_end":50}},{"value":"/             _ => match Code::try_from(raw) {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3578,"byte_end":3626,"line_start":104,"line_end":104,"column_start":1,"column_end":49}},{"value":"/                 Ok(code) => Ok(Self::NormalCode(code)),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3627,"byte_end":3686,"line_start":105,"line_end":105,"column_start":1,"column_end":60}},{"value":"/                 Err(_) => Err(\"invalid code\".to_string()),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3687,"byte_end":3749,"line_start":106,"line_end":106,"column_start":1,"column_end":63}},{"value":"/             }, //_ => Err(\"invalid code\".to_string()),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3750,"byte_end":3808,"line_start":107,"line_end":107,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3809,"byte_end":3822,"line_start":108,"line_end":108,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3823,"byte_end":3832,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3833,"byte_end":3838,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3839,"byte_end":3842,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ impl From<ExtendedCode> for u64 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3843,"byte_end":3880,"line_start":112,"line_end":112,"column_start":1,"column_end":38}},{"value":"/     fn from(code: ExtendedCode) -> Self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3881,"byte_end":3926,"line_start":113,"line_end":113,"column_start":1,"column_end":46}},{"value":"/         match code {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3927,"byte_end":3951,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/             ExtendedCode::Foo => 0x01,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3952,"byte_end":3994,"line_start":115,"line_end":115,"column_start":1,"column_end":43}},{"value":"/             ExtendedCode::Bar => 0x02,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":3995,"byte_end":4037,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/             ExtendedCode::NormalCode(normal_code) => normal_code.into(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4038,"byte_end":4114,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4115,"byte_end":4128,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4129,"byte_end":4138,"line_start":119,"line_end":119,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4139,"byte_end":4144,"line_start":120,"line_end":120,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4145,"byte_end":4148,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ impl TryFrom<ExtendedCode> for Code {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4149,"byte_end":4190,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/     type Error = String;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4191,"byte_end":4219,"line_start":123,"line_end":123,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4220,"byte_end":4223,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/     fn try_from(extended: ExtendedCode) -> Result<Self, Self::Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4224,"byte_end":4298,"line_start":125,"line_end":125,"column_start":1,"column_end":75}},{"value":"/         match extended {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4299,"byte_end":4327,"line_start":126,"line_end":126,"column_start":1,"column_end":29}},{"value":"/             ExtendedCode::NormalCode(code) => Ok(code),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4328,"byte_end":4387,"line_start":127,"line_end":127,"column_start":1,"column_end":60}},{"value":"/             _ => Err(\"Not a default code\".to_string()),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4388,"byte_end":4447,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4448,"byte_end":4461,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4462,"byte_end":4471,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4472,"byte_end":4477,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4478,"byte_end":4481,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(ExtendedCode::try_from(0x02).unwrap(), ExtendedCode::Bar);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4482,"byte_end":4555,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4556,"byte_end":4571,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/     ExtendedCode::try_from(0x12).unwrap(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4572,"byte_end":4618,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/     ExtendedCode::NormalCode(Code::Sha2_256)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4619,"byte_end":4667,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/ );","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4668,"byte_end":4674,"line_start":137,"line_end":137,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4675,"byte_end":4690,"line_start":138,"line_end":138,"column_start":1,"column_end":16}},{"value":"/     Code::try_from(ExtendedCode::try_from(0x12).unwrap()).unwrap(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4691,"byte_end":4762,"line_start":139,"line_end":139,"column_start":1,"column_end":72}},{"value":"/     Code::Sha2_256","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4763,"byte_end":4785,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/ );","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4786,"byte_end":4792,"line_start":141,"line_end":141,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":4793,"byte_end":4800,"line_start":142,"line_end":142,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6145,"byte_end":6155,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MultihashGeneric<T>>::from_bytes","value":"pub fn from_bytes(Vec<u8>) -> Result<MultihashGeneric<T>, DecodeOwnedError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Multihash` from a `Vec<u8>`, consuming it.\n If the input data is not a valid multihash an error is returned.","sig":null,"attributes":[{"value":"/ Creates a new `Multihash` from a `Vec<u8>`, consuming it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5633,"byte_end":5694,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/ If the input data is not a valid multihash an error is returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5699,"byte_end":5767,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5772,"byte_end":5775,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5780,"byte_end":5793,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5798,"byte_end":5801,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5806,"byte_end":5813,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ use multihash::{Multihash, Sha2_256};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5818,"byte_end":5859,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5864,"byte_end":5867,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5872,"byte_end":5918,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5923,"byte_end":5926,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ // valid multihash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5931,"byte_end":5953,"line_start":181,"line_end":181,"column_start":5,"column_end":27}},{"value":"/ let mh2 = Multihash::from_bytes(mh.into_bytes()).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5958,"byte_end":6020,"line_start":182,"line_end":182,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6025,"byte_end":6028,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ // invalid multihash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6033,"byte_end":6057,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/ assert!(Multihash::from_bytes(vec![1, 2, 3]).is_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6062,"byte_end":6121,"line_start":185,"line_end":185,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6126,"byte_end":6133,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6609,"byte_end":6619,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<MultihashGeneric<T>>::into_bytes","value":"pub fn into_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of the multihash.\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of the multihash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6543,"byte_end":6597,"line_start":200,"line_end":200,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6738,"byte_end":6744,"line_start":206,"line_end":206,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<MultihashGeneric<T>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of the multihash.\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of the multihash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6672,"byte_end":6726,"line_start":205,"line_end":205,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6878,"byte_end":6886,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MultihashGeneric<T>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of this multihash.\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of this multihash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6811,"byte_end":6866,"line_start":210,"line_end":210,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7019,"byte_end":7025,"line_start":216,"line_end":216,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<MultihashGeneric<T>>::as_ref","value":"pub fn as_ref(&Self) -> MultihashRefGeneric<, T>","parent":null,"children":[],"decl_id":null,"docs":" Builds a `MultihashRef` corresponding to this `Multihash`.\n","sig":null,"attributes":[{"value":"/ Builds a `MultihashRef` corresponding to this `Multihash`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":6945,"byte_end":7007,"line_start":215,"line_end":215,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7451,"byte_end":7460,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<MultihashGeneric<T>>::algorithm","value":"pub fn algorithm(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the algorithm used in this multihash.","sig":null,"attributes":[{"value":"/ Returns the algorithm used in this multihash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7180,"byte_end":7229,"line_start":223,"line_end":223,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7234,"byte_end":7237,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7242,"byte_end":7255,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7260,"byte_end":7263,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7268,"byte_end":7275,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use multihash::{Code, Sha2_256};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7280,"byte_end":7316,"line_start":228,"line_end":228,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7321,"byte_end":7324,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7329,"byte_end":7375,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(mh.algorithm(), Code::Sha2_256);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7380,"byte_end":7427,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7432,"byte_end":7439,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7560,"byte_end":7566,"line_start":238,"line_end":238,"column_start":12,"column_end":18},"name":"digest","qualname":"<MultihashGeneric<T>>::digest","value":"pub fn digest(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the hashed data.\n","sig":null,"attributes":[{"value":"/ Returns the hashed data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7520,"byte_end":7548,"line_start":237,"line_end":237,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":192},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9015,"byte_end":9034,"line_start":297,"line_end":297,"column_start":12,"column_end":31},"name":"MultihashRefGeneric","qualname":"::digests::MultihashRefGeneric","value":"MultihashRefGeneric {  }","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" Represents a valid multihash.\n","sig":null,"attributes":[{"value":"/ Represents a valid multihash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8902,"byte_end":8935,"line_start":295,"line_end":295,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9651,"byte_end":9661,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<MultihashRefGeneric>::from_slice","value":"pub fn from_slice(&'a [u8]) -> Result<Self, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MultihashRef` from a `&[u8]`.\n If the input data is not a valid multihash an error is returned.","sig":null,"attributes":[{"value":"/ Creates a new `MultihashRef` from a `&[u8]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9154,"byte_end":9202,"line_start":303,"line_end":303,"column_start":5,"column_end":53}},{"value":"/ If the input data is not a valid multihash an error is returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9207,"byte_end":9275,"line_start":304,"line_end":304,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9280,"byte_end":9283,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9288,"byte_end":9301,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9306,"byte_end":9309,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9314,"byte_end":9321,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use multihash::{MultihashRef, Sha2_256};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9326,"byte_end":9370,"line_start":309,"line_end":309,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9375,"byte_end":9378,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9383,"byte_end":9429,"line_start":311,"line_end":311,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9434,"byte_end":9437,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ // valid multihash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9442,"byte_end":9464,"line_start":313,"line_end":313,"column_start":5,"column_end":27}},{"value":"/ let mh2 = MultihashRef::from_slice(&mh).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9469,"byte_end":9522,"line_start":314,"line_end":314,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9527,"byte_end":9530,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ // invalid multihash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9535,"byte_end":9559,"line_start":316,"line_end":316,"column_start":5,"column_end":29}},{"value":"/ assert!(MultihashRef::from_slice(&vec![1, 2, 3]).is_err());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9564,"byte_end":9627,"line_start":317,"line_end":317,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9632,"byte_end":9639,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10735,"byte_end":10744,"line_start":353,"line_end":353,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<MultihashRefGeneric>::algorithm","value":"pub fn algorithm(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the algorithm used in this multihash.","sig":null,"attributes":[{"value":"/ Returns the algorithm used in this multihash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10356,"byte_end":10405,"line_start":340,"line_end":340,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10410,"byte_end":10413,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10418,"byte_end":10431,"line_start":342,"line_end":342,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10436,"byte_end":10439,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10444,"byte_end":10451,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use multihash::{Code, MultihashRef, Sha2_256};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10456,"byte_end":10506,"line_start":345,"line_end":345,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10511,"byte_end":10514,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10519,"byte_end":10565,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10570,"byte_end":10573,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ // valid multihash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10578,"byte_end":10600,"line_start":349,"line_end":349,"column_start":5,"column_end":27}},{"value":"/ let mh2 = MultihashRef::from_slice(&mh).unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10605,"byte_end":10658,"line_start":350,"line_end":350,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(mh2.algorithm(), Code::Sha2_256);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10663,"byte_end":10711,"line_start":351,"line_end":351,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":10716,"byte_end":10723,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11380,"byte_end":11386,"line_start":372,"line_end":372,"column_start":12,"column_end":18},"name":"digest","qualname":"<MultihashRefGeneric>::digest","value":"pub fn digest(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the hash digest.","sig":null,"attributes":[{"value":"/ Returns the hash digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11021,"byte_end":11049,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11054,"byte_end":11057,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11062,"byte_end":11075,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11080,"byte_end":11083,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11088,"byte_end":11095,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use multihash::{wrap, Code, Multihash, Sha2_256};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11100,"byte_end":11153,"line_start":365,"line_end":365,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11158,"byte_end":11161,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11166,"byte_end":11212,"line_start":367,"line_end":367,"column_start":5,"column_end":51}},{"value":"/ let digest = mh.digest();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11217,"byte_end":11246,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/ let wrapped: Multihash = wrap(Code::Sha2_256, &digest);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11251,"byte_end":11310,"line_start":369,"line_end":369,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(wrapped.digest(), digest);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11315,"byte_end":11356,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11361,"byte_end":11368,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11781,"byte_end":11789,"line_start":383,"line_end":383,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<MultihashRefGeneric>::to_owned","value":"pub fn to_owned(&Self) -> MultihashGeneric<T>","parent":null,"children":[],"decl_id":null,"docs":" Builds a `Multihash` that owns the data.","sig":null,"attributes":[{"value":"/ Builds a `Multihash` that owns the data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11683,"byte_end":11727,"line_start":380,"line_end":380,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11732,"byte_end":11735,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This operation allocates.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11740,"byte_end":11769,"line_start":382,"line_end":382,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12023,"byte_end":12031,"line_start":391,"line_end":391,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MultihashRefGeneric>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of this multihash.\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of this multihash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":11956,"byte_end":12011,"line_start":390,"line_end":390,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12751,"byte_end":12762,"line_start":418,"line_end":418,"column_start":11,"column_end":22},"name":"Multihasher","qualname":"::digests::Multihasher","value":"Multihasher<T: TryFrom<u64> + Copy>","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"decl_id":null,"docs":" The `Multihasher` trait specifies an interface common for all multihash functions\n that does not require allocating a `Box<dyn MultihashDigest<T>>`.\n","sig":null,"attributes":[{"value":"/ The `Multihasher` trait specifies an interface common for all multihash functions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12585,"byte_end":12670,"line_start":416,"line_end":416,"column_start":1,"column_end":86}},{"value":"/ that does not require allocating a `Box<dyn MultihashDigest<T>>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12671,"byte_end":12740,"line_start":417,"line_end":417,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":102},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12827,"byte_end":12831,"line_start":420,"line_end":420,"column_start":11,"column_end":15},"name":"CODE","qualname":"::digests::Multihasher::CODE","value":"T","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The multihash code.\n","sig":null,"attributes":[{"value":"/ The multihash code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12793,"byte_end":12816,"line_start":419,"line_end":419,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12891,"byte_end":12897,"line_start":423,"line_end":423,"column_start":8,"column_end":14},"name":"digest","qualname":"::digests::Multihasher::digest","value":"pub fn digest(&[u8]) -> MultihashGeneric<T>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Hash some input and return the digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12841,"byte_end":12883,"line_start":422,"line_end":422,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13039,"byte_end":13054,"line_start":427,"line_end":427,"column_start":11,"column_end":26},"name":"MultihashDigest","qualname":"::digests::MultihashDigest","value":"MultihashDigest<T: TryFrom<u64>>","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"decl_id":null,"docs":" The `MultihashDigest` trait specifies an interface common for all multihash functions.\n","sig":null,"attributes":[{"value":"/ The `MultihashDigest` trait specifies an interface common for all multihash functions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12938,"byte_end":13028,"line_start":426,"line_end":426,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13115,"byte_end":13119,"line_start":429,"line_end":429,"column_start":8,"column_end":12},"name":"code","qualname":"::digests::MultihashDigest::code","value":"pub fn code(&Self) -> T","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" The Mutlihash byte value.\n","sig":null,"attributes":[{"value":"/ The Mutlihash byte value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13078,"byte_end":13107,"line_start":428,"line_end":428,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13317,"byte_end":13323,"line_start":436,"line_end":436,"column_start":8,"column_end":14},"name":"digest","qualname":"::digests::MultihashDigest::digest","value":"pub fn digest(&Self, &[u8]) -> MultihashGeneric<T>","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Hash some input and return the digest.","sig":null,"attributes":[{"value":"/ Hash some input and return the digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13138,"byte_end":13180,"line_start":431,"line_end":431,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13185,"byte_end":13188,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13193,"byte_end":13205,"line_start":433,"line_end":433,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13210,"byte_end":13213,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Panics if the digest length is bigger than 2^32. This only happens for identity hasing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13218,"byte_end":13309,"line_start":435,"line_end":435,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13642,"byte_end":13647,"line_start":445,"line_end":445,"column_start":8,"column_end":13},"name":"input","qualname":"::digests::MultihashDigest::input","value":"pub fn input(&mut Self, &[u8])","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Digest data, updating the internal state.","sig":null,"attributes":[{"value":"/ Digest data, updating the internal state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13373,"byte_end":13418,"line_start":438,"line_end":438,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13423,"byte_end":13426,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ This method can be called repeatedly for use with streaming messages.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13431,"byte_end":13504,"line_start":440,"line_end":440,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13509,"byte_end":13512,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13517,"byte_end":13529,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13534,"byte_end":13537,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Panics if the digest length is bigger than 2^32. This only happens for identity hashing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13542,"byte_end":13634,"line_start":444,"line_end":444,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13753,"byte_end":13759,"line_start":448,"line_end":448,"column_start":8,"column_end":14},"name":"result","qualname":"::digests::MultihashDigest::result","value":"pub fn result(Self) -> MultihashGeneric<T>","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Retrieve the computed `MultihashGeneric`, consuming the hasher.\n","sig":null,"attributes":[{"value":"/ Retrieve the computed `MultihashGeneric`, consuming the hasher.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13678,"byte_end":13745,"line_start":447,"line_end":447,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13941,"byte_end":13953,"line_start":453,"line_end":453,"column_start":8,"column_end":20},"name":"result_reset","qualname":"::digests::MultihashDigest::result_reset","value":"pub fn result_reset(&mut Self) -> MultihashGeneric<T>","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Retrieve result and reset hasher instance.","sig":null,"attributes":[{"value":"/ Retrieve result and reset hasher instance.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13795,"byte_end":13841,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13846,"byte_end":13849,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ This method sometimes can be more efficient compared to hasher re-creation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13854,"byte_end":13933,"line_start":452,"line_end":452,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14049,"byte_end":14054,"line_start":456,"line_end":456,"column_start":8,"column_end":13},"name":"reset","qualname":"::digests::MultihashDigest::reset","value":"pub fn reset(&mut Self)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Reset hasher instance to its initial state.\n","sig":null,"attributes":[{"value":"/ Reset hasher instance to its initial state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":13994,"byte_end":14041,"line_start":455,"line_end":455,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14575,"byte_end":14579,"line_start":474,"line_end":474,"column_start":8,"column_end":12},"name":"wrap","qualname":"::digests::wrap","value":"pub fn wrap<T: Into<u64> + TryFrom<u64>>(T, &[u8]) -> MultihashGeneric<T>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a hash digest in Multihash with the given Mutlihash code.","sig":null,"attributes":[{"value":"/ Wraps a hash digest in Multihash with the given Mutlihash code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14070,"byte_end":14137,"line_start":459,"line_end":459,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14138,"byte_end":14141,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ The size of the hash is determoned by the size of the input hash. If it should be truncated","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14142,"byte_end":14237,"line_start":461,"line_end":461,"column_start":1,"column_end":96}},{"value":"/ the input data must already be the truncated hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14238,"byte_end":14292,"line_start":462,"line_end":462,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14293,"byte_end":14296,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14297,"byte_end":14310,"line_start":464,"line_end":464,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14311,"byte_end":14314,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14315,"byte_end":14322,"line_start":466,"line_end":466,"column_start":1,"column_end":8}},{"value":"/ use multihash::{wrap, Code, Multihash, Sha2_256};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14323,"byte_end":14376,"line_start":467,"line_end":467,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14377,"byte_end":14380,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14381,"byte_end":14427,"line_start":469,"line_end":469,"column_start":1,"column_end":47}},{"value":"/ let digest = mh.digest();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14428,"byte_end":14457,"line_start":470,"line_end":470,"column_start":1,"column_end":30}},{"value":"/ let wrapped: Multihash = wrap(Code::Sha2_256, &digest);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14458,"byte_end":14517,"line_start":471,"line_end":471,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(wrapped.digest(), digest);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14518,"byte_end":14559,"line_start":472,"line_end":472,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":14560,"byte_end":14567,"line_start":473,"line_end":473,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15251,"byte_end":15266,"line_start":7,"line_end":7,"column_start":5,"column_end":20},"name":"UnsupportedType","qualname":"::errors::EncodeError::UnsupportedType","value":"EncodeError::UnsupportedType","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" The requested hash algorithm isn't supported by this library.\n","sig":null,"attributes":[{"value":"/ The requested hash algorithm isn't supported by this library.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15181,"byte_end":15246,"line_start":6,"line_end":6,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":247},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15334,"byte_end":15356,"line_start":9,"line_end":9,"column_start":5,"column_end":27},"name":"UnsupportedInputLength","qualname":"::errors::EncodeError::UnsupportedInputLength","value":"EncodeError::UnsupportedInputLength","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" The input length is too large for the hash algorithm.\n","sig":null,"attributes":[{"value":"/ The input length is too large for the hash algorithm.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15272,"byte_end":15329,"line_start":8,"line_end":8,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":244},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15163,"byte_end":15174,"line_start":5,"line_end":5,"column_start":10,"column_end":21},"name":"EncodeError","qualname":"::errors::EncodeError","value":"pub enum EncodeError {\n\n    /// The requested hash algorithm isn't supported by this library.\n    UnsupportedType,\n\n    /// The input length is too large for the hash algorithm.\n    UnsupportedInputLength,\n}","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":247}],"decl_id":null,"docs":" Error that can happen when encoding some bytes into a multihash.\n","sig":null,"attributes":[{"value":"/ Error that can happen when encoding some bytes into a multihash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15040,"byte_end":15108,"line_start":3,"line_end":3,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15986,"byte_end":16000,"line_start":31,"line_end":31,"column_start":5,"column_end":19},"name":"BadInputLength","qualname":"::errors::DecodeError::BadInputLength","value":"DecodeError::BadInputLength","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" The input doesn't have a correct length.\n","sig":null,"attributes":[{"value":"/ The input doesn't have a correct length.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15937,"byte_end":15981,"line_start":30,"line_end":30,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":263},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16062,"byte_end":16073,"line_start":33,"line_end":33,"column_start":5,"column_end":16},"name":"UnknownCode","qualname":"::errors::DecodeError::UnknownCode","value":"DecodeError::UnknownCode","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" The code of the hashing algorithm is incorrect.\n","sig":null,"attributes":[{"value":"/ The code of the hashing algorithm is incorrect.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16006,"byte_end":16057,"line_start":32,"line_end":32,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":260},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15919,"byte_end":15930,"line_start":29,"line_end":29,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::errors::DecodeError","value":"pub enum DecodeError {\n\n    /// The input doesn't have a correct length.\n    BadInputLength,\n\n    /// The code of the hashing algorithm is incorrect.\n    UnknownCode,\n}","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":263}],"decl_id":null,"docs":" Error that can happen when decoding some bytes.\n","sig":null,"attributes":[{"value":"/ Error that can happen when decoding some bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15813,"byte_end":15864,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":276},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16616,"byte_end":16632,"line_start":52,"line_end":52,"column_start":12,"column_end":28},"name":"DecodeOwnedError","qualname":"::errors::DecodeOwnedError","value":"DecodeOwnedError { error, data }","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"decl_id":null,"docs":" Error that can happen when decoding some bytes.","sig":null,"attributes":[{"value":"/ Error that can happen when decoding some bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16422,"byte_end":16473,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16474,"byte_end":16477,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Same as `DecodeError`, but allows retreiving the data whose decoding was attempted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16478,"byte_end":16565,"line_start":50,"line_end":50,"column_start":1,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":277},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16662,"byte_end":16667,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"error","qualname":"::errors::DecodeOwnedError::error","value":"errors::DecodeError","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The error.\n","sig":null,"attributes":[{"value":"/ The error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16639,"byte_end":16653,"line_start":53,"line_end":53,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":278},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16737,"byte_end":16741,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"name":"data","qualname":"::errors::DecodeOwnedError::data","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The data whose decoding was attempted.\n","sig":null,"attributes":[{"value":"/ The data whose decoding was attempted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16686,"byte_end":16728,"line_start":55,"line_end":55,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":28425,"byte_end":28433,"line_start":353,"line_end":353,"column_start":12,"column_end":20},"name":"Identity","qualname":"::hashes::Identity","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Identity hasher.\n","sig":null,"attributes":[{"value":"/ The Identity hasher.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":28356,"byte_end":28380,"line_start":351,"line_end":351,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":144},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":28521,"byte_end":28525,"line_start":356,"line_end":356,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Identity::CODE","value":"Code","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" The code of the Identity hasher, 0x00.\n","sig":null,"attributes":[{"value":"/ The code of the Identity hasher, 0x00.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":28464,"byte_end":28506,"line_start":355,"line_end":355,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":28619,"byte_end":28625,"line_start":358,"line_end":358,"column_start":12,"column_end":18},"name":"digest","qualname":"<Identity>::digest","value":"pub fn digest(&[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the raw binary digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the raw binary digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":28554,"byte_end":28607,"line_start":357,"line_end":357,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":535},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":30197,"byte_end":30201,"line_start":417,"line_end":417,"column_start":26,"column_end":30},"name":"Sha1","qualname":"::hashes::Sha1","value":"","parent":null,"children":[],"decl_id":null,"docs":" The SHA-1 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":30316,"byte_end":30324,"line_start":420,"line_end":420,"column_start":28,"column_end":36},"name":"Sha2_256","qualname":"::hashes::Sha2_256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The SHA2-256 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":553},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":30442,"byte_end":30450,"line_start":423,"line_end":423,"column_start":28,"column_end":36},"name":"Sha2_512","qualname":"::hashes::Sha2_512","value":"","parent":null,"children":[],"decl_id":null,"docs":" The SHA2-512 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":30570,"byte_end":30578,"line_start":426,"line_end":426,"column_start":30,"column_end":38},"name":"Sha3_224","qualname":"::hashes::Sha3_224","value":"","parent":null,"children":[],"decl_id":null,"docs":" The SHA3-224 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":571},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":30698,"byte_end":30706,"line_start":429,"line_end":429,"column_start":30,"column_end":38},"name":"Sha3_256","qualname":"::hashes::Sha3_256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The SHA3-256 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":580},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":30826,"byte_end":30834,"line_start":432,"line_end":432,"column_start":30,"column_end":38},"name":"Sha3_384","qualname":"::hashes::Sha3_384","value":"","parent":null,"children":[],"decl_id":null,"docs":" The SHA3-384 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":589},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":30954,"byte_end":30962,"line_start":435,"line_end":435,"column_start":30,"column_end":38},"name":"Sha3_512","qualname":"::hashes::Sha3_512","value":"","parent":null,"children":[],"decl_id":null,"docs":" The SHA3-512 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":598},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":31085,"byte_end":31094,"line_start":438,"line_end":438,"column_start":31,"column_end":40},"name":"Keccak224","qualname":"::hashes::Keccak224","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Keccak-224 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":31219,"byte_end":31228,"line_start":441,"line_end":441,"column_start":31,"column_end":40},"name":"Keccak256","qualname":"::hashes::Keccak256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Keccak-256 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":616},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":31353,"byte_end":31362,"line_start":444,"line_end":444,"column_start":31,"column_end":40},"name":"Keccak384","qualname":"::hashes::Keccak384","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Keccak-384 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":625},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":31487,"byte_end":31496,"line_start":447,"line_end":447,"column_start":31,"column_end":40},"name":"Keccak512","qualname":"::hashes::Keccak512","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Keccak-512 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":706},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":31649,"byte_end":31659,"line_start":452,"line_end":452,"column_start":39,"column_end":49},"name":"Blake2b256","qualname":"::hashes::Blake2b256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Blake2b-256 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":713},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":31798,"byte_end":31808,"line_start":455,"line_end":455,"column_start":39,"column_end":49},"name":"Blake2b512","qualname":"::hashes::Blake2b512","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Blake2b-512 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":720},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":31947,"byte_end":31957,"line_start":458,"line_end":458,"column_start":39,"column_end":49},"name":"Blake2s128","qualname":"::hashes::Blake2s128","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Blake2s-128 hasher.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":727},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":32096,"byte_end":32106,"line_start":461,"line_end":461,"column_start":39,"column_end":49},"name":"Blake2s256","qualname":"::hashes::Blake2s256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Blake2s-256 hasher.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5045,"byte_end":5061,"line_start":150,"line_end":150,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5243,"byte_end":5259,"line_start":156,"line_end":156,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5398,"byte_end":5414,"line_start":162,"line_end":162,"column_start":30,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5459,"byte_end":5475,"line_start":164,"line_end":164,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5607,"byte_end":5623,"line_start":170,"line_end":170,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7663,"byte_end":7679,"line_start":243,"line_end":243,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7787,"byte_end":7803,"line_start":249,"line_end":249,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7946,"byte_end":7962,"line_start":257,"line_end":257,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8101,"byte_end":8117,"line_start":263,"line_end":263,"column_start":69,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8284,"byte_end":8300,"line_start":269,"line_end":269,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8498,"byte_end":8514,"line_start":277,"line_end":277,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8619,"byte_end":8635,"line_start":283,"line_end":283,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8777,"byte_end":8793,"line_start":289,"line_end":289,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9121,"byte_end":9140,"line_start":302,"line_end":302,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12143,"byte_end":12162,"line_start":396,"line_end":396,"column_start":62,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12324,"byte_end":12343,"line_start":402,"line_end":402,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12494,"byte_end":12513,"line_start":410,"line_end":410,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15383,"byte_end":15394,"line_start":12,"line_end":12,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15797,"byte_end":15808,"line_start":25,"line_end":25,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16100,"byte_end":16111,"line_start":36,"line_end":36,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16406,"byte_end":16417,"line_start":46,"line_end":46,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16777,"byte_end":16793,"line_start":59,"line_end":59,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16936,"byte_end":16952,"line_start":66,"line_end":66,"column_start":23,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":28449,"byte_end":28457,"line_start":354,"line_end":354,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":28887,"byte_end":28895,"line_start":365,"line_end":365,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":29059,"byte_end":29067,"line_start":372,"line_end":372,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":29858,"byte_end":29866,"line_start":403,"line_end":403,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/storage.rs","byte_start":33206,"byte_end":33213,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5045,"byte_end":5061,"line_start":150,"line_end":150,"column_start":38,"column_end":54},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5243,"byte_end":5259,"line_start":156,"line_end":156,"column_start":37,"column_end":53},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5398,"byte_end":5414,"line_start":162,"line_end":162,"column_start":30,"column_end":46},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5459,"byte_end":5475,"line_start":164,"line_end":164,"column_start":38,"column_end":54},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":5607,"byte_end":5623,"line_start":170,"line_end":170,"column_start":23,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7663,"byte_end":7679,"line_start":243,"line_end":243,"column_start":39,"column_end":55},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7787,"byte_end":7803,"line_start":249,"line_end":249,"column_start":38,"column_end":54},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":7946,"byte_end":7962,"line_start":257,"line_end":257,"column_start":40,"column_end":56},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":1714}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8101,"byte_end":8117,"line_start":263,"line_end":263,"column_start":69,"column_end":85},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8284,"byte_end":8300,"line_start":269,"line_end":269,"column_start":44,"column_end":60},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8498,"byte_end":8514,"line_start":277,"line_end":277,"column_start":41,"column_end":57},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8619,"byte_end":8635,"line_start":283,"line_end":283,"column_start":38,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":8777,"byte_end":8793,"line_start":289,"line_end":289,"column_start":31,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":9121,"byte_end":9140,"line_start":302,"line_end":302,"column_start":27,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12143,"byte_end":12162,"line_start":396,"line_end":396,"column_start":62,"column_end":81},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12324,"byte_end":12343,"line_start":402,"line_end":402,"column_start":42,"column_end":61},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/digests.rs","byte_start":12494,"byte_end":12513,"line_start":410,"line_end":410,"column_start":45,"column_end":64},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15383,"byte_end":15394,"line_start":12,"line_end":12,"column_start":23,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":244},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":15797,"byte_end":15808,"line_start":25,"line_end":25,"column_start":23,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16100,"byte_end":16111,"line_start":36,"line_end":36,"column_start":23,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":260},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16406,"byte_end":16417,"line_start":46,"line_end":46,"column_start":23,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":260},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16777,"byte_end":16793,"line_start":59,"line_end":59,"column_start":23,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/errors.rs","byte_start":16936,"byte_end":16952,"line_start":66,"line_end":66,"column_start":23,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":276},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":28449,"byte_end":28457,"line_start":354,"line_end":354,"column_start":6,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":28887,"byte_end":28895,"line_start":365,"line_end":365,"column_start":28,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":350},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":29059,"byte_end":29067,"line_start":372,"line_end":372,"column_start":32,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":350},"to":{"krate":0,"index":104}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/hashes.rs","byte_start":29858,"byte_end":29866,"line_start":403,"line_end":403,"column_start":27,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":350},"to":{"krate":1,"index":3124}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.11.4/src/storage.rs","byte_start":33206,"byte_end":33213,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}}]}