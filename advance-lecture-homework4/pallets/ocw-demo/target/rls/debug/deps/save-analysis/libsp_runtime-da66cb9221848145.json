{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_runtime","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"log\"","--cfg","feature=\"rand\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=da66cb9221848145","-C","extra-filename=-da66cb9221848145","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps","--extern","either=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libeither-29f9e124a512cc1c.rmeta","--extern","hash256_std_hasher=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libhash256_std_hasher-b4c02c38fb84c46f.rmeta","--extern","impl_trait_for_tuples=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libimpl_trait_for_tuples-bcee771c5d5cb357.so","--extern","log=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/liblog-e2edfe49f297c73c.rmeta","--extern","codec=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libparity_scale_codec-c2a3c300da64cba4.rmeta","--extern","parity_util_mem=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libparity_util_mem-0982b16c8cc415a5.rmeta","--extern","paste=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libpaste-3ccd0f35efce1279.rmeta","--extern","rand=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/librand-228073a7435082b8.rmeta","--extern","serde=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libserde-80263e68ba500d78.rmeta","--extern","sp_application_crypto=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_application_crypto-e69913061353277f.rmeta","--extern","sp_arithmetic=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_arithmetic-48f462f38cdb6ff2.rmeta","--extern","sp_core=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_core-717447d3c8b452e7.rmeta","--extern","sp_inherents=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_inherents-f7701fab689c3bfe.rmeta","--extern","sp_io=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_io-6d638056bcc5e815.rmeta","--extern","sp_std=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_std-e8e779e008c5c2c6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_runtime-da66cb9221848145.rmeta"},"prelude":{"crate_id":{"name":"sp_runtime","disambiguator":[16022351216222556352,16416952812497401383]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":18,"id":{"name":"parity_scale_codec","disambiguator":[16439007312830197035,13769093477079864056]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[15916895702609288415,13390909414312069258]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":20,"id":{"name":"arrayvec","disambiguator":[9711399210076819589,6533224003713073282]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[7351640255773626293,2315590138104183949]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":22,"id":{"name":"serde","disambiguator":[18094986483354249175,15403000118412511765]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":23,"id":{"name":"serde_derive","disambiguator":[2422799003874411447,4301428410593763920]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":24,"id":{"name":"sp_std","disambiguator":[7356154292131214206,15539128417196248828]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":25,"id":{"name":"paste","disambiguator":[15401685209398254990,873450930854060675]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":26,"id":{"name":"proc_macro_hack","disambiguator":[16105205298844134494,461428951662562663]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":27,"id":{"name":"paste_impl","disambiguator":[11772883914023517439,10129306859390362089]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","num":28,"id":{"name":"sp_application_crypto","disambiguator":[12835149352766628184,13192684411583912951]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":29,"id":{"name":"sp_core","disambiguator":[11528989304794749901,4991667551486174003]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":30,"id":{"name":"sp_runtime_interface","disambiguator":[12255499159526350672,1465949469223168246]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":31,"id":{"name":"sp_wasm_interface","disambiguator":[1572342640069422977,5885890102663370953]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","num":32,"id":{"name":"impl_trait_for_tuples","disambiguator":[13508714756144950212,10399417239549626737]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":33,"id":{"name":"wasmi","disambiguator":[14702682962039512728,8205603541115655459]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":34,"id":{"name":"memory_units","disambiguator":[2681920765984350785,12479645465886095865]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":35,"id":{"name":"parity_wasm","disambiguator":[3627318675752641491,16087573038623804516]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":36,"id":{"name":"wasmi_validation","disambiguator":[10122444132145811748,13686239439309676495]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":37,"id":{"name":"num_rational","disambiguator":[14874358685442605711,14454857550384661125]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":38,"id":{"name":"num_bigint","disambiguator":[10424519725353920175,15970225686228915190]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":39,"id":{"name":"num_integer","disambiguator":[7545622164281545846,2648898713402766561]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":40,"id":{"name":"num_traits","disambiguator":[215404550585587115,5285806180049352428]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":41,"id":{"name":"libc","disambiguator":[6571333170903906260,2103687221578517612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":42,"id":{"name":"sp_tracing","disambiguator":[126940985002760439,9833769351350342315]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":43,"id":{"name":"tracing_core","disambiguator":[11099356479621910520,18239274797054692367]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":44,"id":{"name":"lazy_static","disambiguator":[16863586403248268720,14388819080293591203]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":45,"id":{"name":"tracing","disambiguator":[3149344748273194146,14186679869154291241]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":46,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":47,"id":{"name":"tracing_attributes","disambiguator":[7168521433842290992,2127477278266717051]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":48,"id":{"name":"pin_project_lite","disambiguator":[11050117765846224188,12097442257352640106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":49,"id":{"name":"tracing_subscriber","disambiguator":[9358978854053975941,10302906392016292032]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":50,"id":{"name":"regex","disambiguator":[14166398965641423822,8934033390557199130]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":51,"id":{"name":"aho_corasick","disambiguator":[15910827016742496248,14514165624868714725]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":52,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":53,"id":{"name":"regex_syntax","disambiguator":[10387838999179421385,14884883596696298333]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":54,"id":{"name":"thread_local","disambiguator":[972737615355812521,3494330021733074280]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":55,"id":{"name":"matchers","disambiguator":[16148120748263327968,10793795200785214139]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":56,"id":{"name":"regex_automata","disambiguator":[6713063222348330078,15962450321991702012]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":57,"id":{"name":"byteorder","disambiguator":[14496735423178217807,13585885797689701047]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":58,"id":{"name":"ansi_term","disambiguator":[18134670208497847193,6469936381989789516]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":59,"id":{"name":"tracing_log","disambiguator":[12555983769818244310,6947546561298633655]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","num":60,"id":{"name":"log","disambiguator":[7636163145545913312,4986669806278621293]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":61,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":62,"id":{"name":"serde_json","disambiguator":[13564730519325168607,8931654559015479844]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":63,"id":{"name":"itoa","disambiguator":[708245801620839046,10644891861074126777]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":64,"id":{"name":"ryu","disambiguator":[2595139073293063990,3633285781182786758]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":65,"id":{"name":"tracing_serde","disambiguator":[11704797471514300989,6477851010748340264]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":66,"id":{"name":"sharded_slab","disambiguator":[1434945501934548753,1609764728048645911]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":67,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":68,"id":{"name":"chrono","disambiguator":[1398100316059925436,10467824243359959529]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":69,"id":{"name":"time","disambiguator":[8823501580382950712,2504982711049837973]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":70,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[13822519134176450310,2862860596345121761]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":71,"id":{"name":"sp_externalities","disambiguator":[18150108195161110747,13250564693672382873]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":72,"id":{"name":"sp_storage","disambiguator":[12878955236357233593,16822974782930621063]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":73,"id":{"name":"sp_debug_derive","disambiguator":[11752057424767612336,6988741196861483299]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":74,"id":{"name":"ref_cast","disambiguator":[17238424032127906489,14681179534522775997]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":75,"id":{"name":"ref_cast_impl","disambiguator":[4857299677253861727,8902270623010207562]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":76,"id":{"name":"impl_serde","disambiguator":[6223019066819668752,3300984703168818873]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":77,"id":{"name":"environmental","disambiguator":[17937490940284361027,13093274495722560157]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":78,"id":{"name":"primitive_types","disambiguator":[6962691650698255454,13234617421742094078]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":79,"id":{"name":"fixed_hash","disambiguator":[10245915055372472413,1069574987168551768]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":80,"id":{"name":"static_assertions","disambiguator":[3780011359165158122,3262507017755003872]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":81,"id":{"name":"rustc_hex","disambiguator":[10677294477045725496,7865879812543119472]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","num":82,"id":{"name":"rand","disambiguator":[7383846236653092870,5177629652404358757]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":83,"id":{"name":"rand_core","disambiguator":[7787386706198440185,12678578198977233203]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":84,"id":{"name":"getrandom","disambiguator":[12258613803940040387,911838537080231532]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":85,"id":{"name":"rand_chacha","disambiguator":[4434170198255513034,5056478396886919284]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":86,"id":{"name":"ppv_lite86","disambiguator":[4955318928114684575,7768061473571892432]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":87,"id":{"name":"rand_pcg","disambiguator":[16660534335728405525,7074470424998610614]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":88,"id":{"name":"uint","disambiguator":[16896315795860882296,16425098083545408739]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":89,"id":{"name":"crunchy","disambiguator":[8074030940710953961,6579732958665489341]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":90,"id":{"name":"impl_codec","disambiguator":[11443448416482552248,8414137674207687421]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":91,"id":{"name":"blake2_rfc","disambiguator":[16318291045264156809,15238637185383600405]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":92,"id":{"name":"arrayvec","disambiguator":[13122490319398419543,2245831403817998155]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":93,"id":{"name":"nodrop","disambiguator":[15847319047609925228,7892947817709334700]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":94,"id":{"name":"constant_time_eq","disambiguator":[4123012020743147552,17233470839404695501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":95,"id":{"name":"sha2","disambiguator":[2453755181374717418,14347587692546718153]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":96,"id":{"name":"block_buffer","disambiguator":[16942864271414254883,5806726910624965455]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":97,"id":{"name":"block_padding","disambiguator":[6536457226507187524,13096456614147870598]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":98,"id":{"name":"byte_tools","disambiguator":[4563776192090798664,13975107662144777646]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":99,"id":{"name":"generic_array","disambiguator":[10217328049382864786,4581712530308178966]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":100,"id":{"name":"typenum","disambiguator":[2877625186163250866,4188862493781366168]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":101,"id":{"name":"fake_simd","disambiguator":[8529024942259881634,1036883736573479363]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":102,"id":{"name":"opaque_debug","disambiguator":[14296233586290889095,7185983566499738172]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":103,"id":{"name":"digest","disambiguator":[10339741361097660047,3253664700456863542]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":104,"id":{"name":"tiny_keccak","disambiguator":[8951611112105442366,1965224039660394079]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":105,"id":{"name":"twox_hash","disambiguator":[7304964477320420634,14353450951517215289]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":106,"id":{"name":"parking_lot","disambiguator":[4673953683555930918,2566291569203134280]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":107,"id":{"name":"lock_api","disambiguator":[12216129644845520116,17168985521050561292]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":108,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":109,"id":{"name":"parking_lot_core","disambiguator":[9723357634030298779,6709165033563235635]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":110,"id":{"name":"base58","disambiguator":[1021050924381740148,14694021983045483675]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":111,"id":{"name":"zeroize","disambiguator":[12293724131559688162,14607591128595310952]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":112,"id":{"name":"zeroize_derive","disambiguator":[2502408763374724958,13277304647653553031]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":113,"id":{"name":"secrecy","disambiguator":[17095926779506074658,7537668124013333220]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":114,"id":{"name":"ed25519_dalek","disambiguator":[15558391115965967113,3378155016804440964]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":115,"id":{"name":"ed25519","disambiguator":[17902604484033039668,17597880322881036383]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":116,"id":{"name":"signature","disambiguator":[11156352833949250189,12745597200273491384]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":117,"id":{"name":"curve25519_dalek","disambiguator":[2809248406966777197,8813816561018099626]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":118,"id":{"name":"digest","disambiguator":[7153347457544459114,4850652739674458903]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":119,"id":{"name":"generic_array","disambiguator":[785913366860281496,3566111910551851268]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":120,"id":{"name":"subtle","disambiguator":[17342818449220861691,9110388592586064331]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":121,"id":{"name":"sha2","disambiguator":[1377922229528131517,491842461206503580]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":122,"id":{"name":"block_buffer","disambiguator":[5863490318768043264,9384554601350983024]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":123,"id":{"name":"opaque_debug","disambiguator":[5955724391880543345,12225655711726523850]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":124,"id":{"name":"cpuid_bool","disambiguator":[3944863459372053080,10012978824416111698]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":125,"id":{"name":"substrate_bip39","disambiguator":[17869869569785452858,17634889153902495303]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":126,"id":{"name":"hmac","disambiguator":[13299399138808770209,8486335613303949460]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":127,"id":{"name":"crypto_mac","disambiguator":[5021103083656845048,9272942338553678022]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":128,"id":{"name":"subtle","disambiguator":[2461963045928777698,9783036260425898804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":129,"id":{"name":"pbkdf2","disambiguator":[1585251910033992458,4658055053388768448]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":130,"id":{"name":"schnorrkel","disambiguator":[16756806575561678970,14458639493351552668]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":131,"id":{"name":"arrayref","disambiguator":[12864533597306545026,8294063698849415262]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":132,"id":{"name":"curve25519_dalek","disambiguator":[6977723647751213875,9340163827551043317]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":133,"id":{"name":"merlin","disambiguator":[9377376087280658574,8799116673561925753]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":134,"id":{"name":"keccak","disambiguator":[7922441978553466502,10628234470639316489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":135,"id":{"name":"bip39","disambiguator":[1314823592052820078,5424826910968609762]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":136,"id":{"name":"failure","disambiguator":[14582756781862167549,11010751447158768529]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":137,"id":{"name":"failure_derive","disambiguator":[16915148327015633678,6325708317200431250]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":138,"id":{"name":"backtrace","disambiguator":[9482193228311631792,18299589283485015896]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":139,"id":{"name":"rustc_demangle","disambiguator":[4050923033623787977,6585868120045361612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":140,"id":{"name":"addr2line","disambiguator":[3660529096934478798,18165035533582110625]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":141,"id":{"name":"gimli","disambiguator":[467126543121056434,10447895090847301584]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":142,"id":{"name":"object","disambiguator":[12217760478832808573,5860930654909093820]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":143,"id":{"name":"miniz_oxide","disambiguator":[17514238117289429065,16538556448136967903]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":144,"id":{"name":"adler","disambiguator":[10300648466069169448,3652155315817441043]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":145,"id":{"name":"rustc_hash","disambiguator":[2899680881299965521,3351650253772854689]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":146,"id":{"name":"once_cell","disambiguator":[14043164444755290385,2267165041750352920]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":147,"id":{"name":"parking_lot","disambiguator":[13413556939081280175,6595608378640516759]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":148,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":149,"id":{"name":"lock_api","disambiguator":[1370039747192521928,13370481355962836312]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":150,"id":{"name":"parking_lot_core","disambiguator":[6910326554005380636,13334944336695677100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":151,"id":{"name":"unicode_normalization","disambiguator":[5195362221549747439,14521615614827495836]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":152,"id":{"name":"tinyvec","disambiguator":[14392653114268736918,7149426386502746538]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":153,"id":{"name":"tinyvec_macros","disambiguator":[12069190721701906036,1989476166457901195]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":154,"id":{"name":"secp256k1","disambiguator":[7408403086072926232,10619138547561338344]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":155,"id":{"name":"hmac_drbg","disambiguator":[2354928866440715200,11965278983472350123]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":156,"id":{"name":"hash_db","disambiguator":[1694494872242499477,7973777796579231756]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","num":157,"id":{"name":"hash256_std_hasher","disambiguator":[6334138255241792746,1846295599312392070]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","num":158,"id":{"name":"parity_util_mem","disambiguator":[3040824742387538142,13160465756699134223]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":159,"id":{"name":"parity_util_mem_derive","disambiguator":[18323117741153977268,3575845138050348775]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":160,"id":{"name":"hashbrown","disambiguator":[8514644902414888020,14821523315265927041]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":161,"id":{"name":"ahash","disambiguator":[11645240038511292298,1901198331339866248]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":162,"id":{"name":"derive_more","disambiguator":[2698756104843969994,14444477136067550206]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":163,"id":{"name":"dyn_clonable","disambiguator":[8242438631393957323,14003146638030063325]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":164,"id":{"name":"dyn_clone","disambiguator":[4691791614177411806,10864154608713969261]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":165,"id":{"name":"dyn_clonable_impl","disambiguator":[4615130658418671392,6958782800412037695]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":166,"id":{"name":"hex","disambiguator":[1554532179233287652,7706981720287221831]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":167,"id":{"name":"futures","disambiguator":[7191882713553373375,5784363091584244339]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":168,"id":{"name":"futures_core","disambiguator":[18128997065636809979,13049398925650811592]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":169,"id":{"name":"futures_util","disambiguator":[6826120639398116430,15849646236374289672]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":170,"id":{"name":"pin_utils","disambiguator":[14006933666536538846,10325894616585527374]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":171,"id":{"name":"futures_task","disambiguator":[17591182617236407828,908714568475142235]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":172,"id":{"name":"futures_sink","disambiguator":[18304585830995575034,16327236895633893015]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":173,"id":{"name":"futures_channel","disambiguator":[6517228745129513001,1111405895964483599]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":174,"id":{"name":"slab","disambiguator":[7754159738850082191,972067075306833933]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":175,"id":{"name":"futures_io","disambiguator":[8909187937396878977,2922841661346725167]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":176,"id":{"name":"futures_macro","disambiguator":[7362818316734880593,477739355724548135]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":177,"id":{"name":"futures_executor","disambiguator":[2718974542857099553,14805374385779778428]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":178,"id":{"name":"num_cpus","disambiguator":[17237370829952825392,8933627738761765040]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","num":179,"id":{"name":"sp_io","disambiguator":[8095273759518359470,284860053986169440]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","num":180,"id":{"name":"sp_trie","disambiguator":[11252105861350862833,1708726736418102481]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","num":181,"id":{"name":"trie_db","disambiguator":[18271978803945158697,17262652499401197515]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","num":182,"id":{"name":"hashbrown","disambiguator":[5245551859052833817,6349580907210778731]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","num":183,"id":{"name":"ahash","disambiguator":[2391589251574575903,4260304121454177733]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","num":184,"id":{"name":"trie_root","disambiguator":[1580444581320396263,11318692011956243941]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","num":185,"id":{"name":"memory_db","disambiguator":[1774147319952519439,6218163937387775773]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","num":186,"id":{"name":"sp_state_machine","disambiguator":[16871039762670672788,2893481927570229250]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","num":187,"id":{"name":"sp_panic_handler","disambiguator":[1493573841702380073,2894375925513246248]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","num":188,"id":{"name":"sp_arithmetic","disambiguator":[11188263385090241613,11050410231310448845]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","num":189,"id":{"name":"integer_sqrt","disambiguator":[6159326418223766355,11569997483938519441]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","num":190,"id":{"name":"either","disambiguator":[11907231751799516344,6556694577995769697]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":686,"byte_end":26445,"line_start":18,"line_end":905,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":939,"byte_end":944,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"alias_span":null,"name":"codec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":993,"byte_end":998,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1023,"byte_end":1029,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"alias_span":null,"name":"sp_std","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1055,"byte_end":1060,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"alias_span":null,"name":"paste","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1086,"byte_end":1107,"line_start":39,"line_end":39,"column_start":9,"column_end":30},"alias_span":null,"name":"app_crypto","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":72,"index":324},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1175,"byte_end":1182,"line_start":42,"line_end":42,"column_start":28,"column_end":35},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":72,"index":310},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1184,"byte_end":1196,"line_start":42,"line_end":42,"column_start":37,"column_end":49},"alias_span":null,"name":"StorageChild","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1539},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32666,"byte_end":32684,"line_start":31,"line_end":31,"column_start":37,"column_end":55},"alias_span":null,"name":"UncheckedExtrinsic","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32686,"byte_end":32699,"line_start":31,"line_end":31,"column_start":57,"column_end":70},"alias_span":null,"name":"SignedPayload","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1576},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32722,"byte_end":32725,"line_start":32,"line_end":32,"column_start":21,"column_end":24},"alias_span":null,"name":"Era","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32727,"byte_end":32732,"line_start":32,"line_end":32,"column_start":26,"column_end":31},"alias_span":null,"name":"Phase","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1650},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32768,"byte_end":32784,"line_start":33,"line_end":33,"column_start":34,"column_end":50},"alias_span":null,"name":"CheckedExtrinsic","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32808,"byte_end":32814,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1848},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32838,"byte_end":32843,"line_start":35,"line_end":35,"column_start":23,"column_end":28},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1952},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32845,"byte_end":32856,"line_start":35,"line_end":35,"column_start":30,"column_end":41},"alias_span":null,"name":"SignedBlock","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1816},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32858,"byte_end":32865,"line_start":35,"line_end":35,"column_start":43,"column_end":50},"alias_span":null,"name":"BlockId","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2038},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32893,"byte_end":32899,"line_start":37,"line_end":37,"column_start":2,"column_end":8},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2130},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32901,"byte_end":32911,"line_start":37,"line_end":37,"column_start":10,"column_end":20},"alias_span":null,"name":"DigestItem","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2201},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32913,"byte_end":32926,"line_start":37,"line_end":37,"column_start":22,"column_end":35},"alias_span":null,"name":"DigestItemRef","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2278},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32928,"byte_end":32946,"line_start":37,"line_end":37,"column_start":37,"column_end":55},"alias_span":null,"name":"OpaqueDigestItemId","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2173},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32948,"byte_end":32965,"line_start":37,"line_end":37,"column_start":57,"column_end":74},"alias_span":null,"name":"ChangesTrieSignal","value":"","parent":{"krate":0,"index":44}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/mod.rs","byte_start":82427,"byte_end":82428,"line_start":24,"line_end":24,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":451}},{"kind":"Use","ref_id":{"krate":78,"index":1887},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":122769,"byte_end":122773,"line_start":29,"line_end":29,"column_start":19,"column_end":23},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":658}},{"kind":"Use","ref_id":{"krate":78,"index":1888},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":122769,"byte_end":122773,"line_start":29,"line_end":29,"column_start":19,"column_end":23},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":29,"index":991},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":122775,"byte_end":122782,"line_start":29,"line_end":29,"column_start":25,"column_end":32},"alias_span":null,"name":"sr25519","value":"","parent":{"krate":0,"index":658}},{"kind":"Use","ref_id":{"krate":188,"index":126},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":132899,"byte_end":132911,"line_start":37,"line_end":37,"column_start":2,"column_end":14},"alias_span":null,"name":"AtLeast32Bit","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":188,"index":129},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":132913,"byte_end":132933,"line_start":37,"line_end":37,"column_start":16,"column_end":36},"alias_span":null,"name":"AtLeast32BitUnsigned","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":188,"index":135},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":132935,"byte_end":132954,"line_start":37,"line_end":37,"column_start":38,"column_end":57},"alias_span":null,"name":"UniqueSaturatedInto","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":188,"index":132},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":132956,"byte_end":132975,"line_start":37,"line_end":37,"column_start":59,"column_end":78},"alias_span":null,"name":"UniqueSaturatedFrom","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":188,"index":148},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":132977,"byte_end":132987,"line_start":37,"line_end":37,"column_start":80,"column_end":90},"alias_span":null,"name":"Saturating","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":188,"index":161},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":132990,"byte_end":133009,"line_start":38,"line_end":38,"column_start":2,"column_end":21},"alias_span":null,"name":"SaturatedConversion","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":40,"index":301},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133011,"byte_end":133015,"line_start":38,"line_end":38,"column_start":23,"column_end":27},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":40,"index":311},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133017,"byte_end":133020,"line_start":38,"line_end":38,"column_start":29,"column_end":32},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":40,"index":92},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133022,"byte_end":133029,"line_start":38,"line_end":38,"column_start":34,"column_end":41},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":40,"index":366},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133031,"byte_end":133041,"line_start":38,"line_end":38,"column_start":43,"column_end":53},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":40,"index":369},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133043,"byte_end":133053,"line_start":38,"line_end":38,"column_start":55,"column_end":65},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":40,"index":371},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133055,"byte_end":133065,"line_start":38,"line_end":38,"column_start":67,"column_end":77},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":40,"index":373},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133067,"byte_end":133077,"line_start":38,"line_end":38,"column_start":79,"column_end":89},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":40,"index":380},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133080,"byte_end":133090,"line_start":39,"line_end":39,"column_start":2,"column_end":12},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":40,"index":383},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133092,"byte_end":133102,"line_start":39,"line_end":39,"column_start":14,"column_end":24},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":189,"index":4},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133104,"byte_end":133121,"line_start":39,"line_end":39,"column_start":26,"column_end":43},"alias_span":null,"name":"IntegerSquareRoot","value":"","parent":{"krate":0,"index":825}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1591,"byte_end":1592,"line_start":60,"line_end":60,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2130},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1671,"byte_end":1681,"line_start":63,"line_end":63,"column_start":19,"column_end":29},"alias_span":null,"name":"DigestItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2038},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1683,"byte_end":1689,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":1960},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1772,"byte_end":1778,"line_start":66,"line_end":66,"column_start":19,"column_end":25},"alias_span":null,"name":"TypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":348},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1789,"byte_end":1798,"line_start":66,"line_end":66,"column_start":36,"column_end":45},"alias_span":null,"name":"key_types","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":2322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1800,"byte_end":1809,"line_start":66,"line_end":66,"column_start":47,"column_end":56},"alias_span":null,"name":"KeyTypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":2323},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1800,"byte_end":1809,"line_start":66,"line_end":66,"column_start":47,"column_end":56},"alias_span":null,"name":"KeyTypeId","value":"","parent":{"krate":0,"index":1322}},{"kind":"Use","ref_id":{"krate":29,"index":336},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1811,"byte_end":1821,"line_start":66,"line_end":66,"column_start":58,"column_end":68},"alias_span":null,"name":"CryptoType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":2379},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1823,"byte_end":1835,"line_start":66,"line_end":66,"column_start":70,"column_end":82},"alias_span":null,"name":"CryptoTypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":2380},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1823,"byte_end":1835,"line_start":66,"line_end":66,"column_start":70,"column_end":82},"alias_span":null,"name":"CryptoTypeId","value":"","parent":{"krate":0,"index":1324}},{"kind":"Use","ref_id":{"krate":29,"index":2265},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1837,"byte_end":1848,"line_start":66,"line_end":66,"column_start":84,"column_end":95},"alias_span":null,"name":"AccountId32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":134},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1884,"byte_end":1900,"line_start":67,"line_end":67,"column_start":33,"column_end":49},"alias_span":null,"name":"RuntimeAppPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":145},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1902,"byte_end":1925,"line_start":67,"line_end":67,"column_start":51,"column_end":74},"alias_span":null,"name":"BoundToRuntimeAppPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":43},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2005,"byte_end":2017,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"alias_span":null,"name":"RuntimeDebug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":193},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2088,"byte_end":2096,"line_start":74,"line_end":74,"column_start":2,"column_end":10},"alias_span":null,"name":"PerThing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":161},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2106,"byte_end":2125,"line_start":74,"line_end":74,"column_start":20,"column_end":39},"alias_span":null,"name":"SaturatedConversion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":990},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2127,"byte_end":2138,"line_start":74,"line_end":74,"column_start":41,"column_end":52},"alias_span":null,"name":"Perquintill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":870},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2140,"byte_end":2147,"line_start":74,"line_end":74,"column_start":54,"column_end":61},"alias_span":null,"name":"Perbill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":750},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2149,"byte_end":2156,"line_start":74,"line_end":74,"column_start":63,"column_end":70},"alias_span":null,"name":"Permill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":510},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2158,"byte_end":2165,"line_start":74,"line_end":74,"column_start":72,"column_end":79},"alias_span":null,"name":"Percent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":630},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2167,"byte_end":2173,"line_start":74,"line_end":74,"column_start":81,"column_end":87},"alias_span":null,"name":"PerU16","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":189},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2175,"byte_end":2182,"line_start":74,"line_end":74,"column_start":89,"column_end":96},"alias_span":null,"name":"InnerOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":1378},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2185,"byte_end":2196,"line_start":75,"line_end":75,"column_start":2,"column_end":13},"alias_span":null,"name":"Rational128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":1120},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2198,"byte_end":2206,"line_start":75,"line_end":75,"column_start":15,"column_end":23},"alias_span":null,"name":"FixedI64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":1230},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2208,"byte_end":2217,"line_start":75,"line_end":75,"column_start":25,"column_end":34},"alias_span":null,"name":"FixedI128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":1340},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2219,"byte_end":2228,"line_start":75,"line_end":75,"column_start":36,"column_end":45},"alias_span":null,"name":"FixedU128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":284},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2230,"byte_end":2246,"line_start":75,"line_end":75,"column_start":47,"column_end":63},"alias_span":null,"name":"FixedPointNumber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":273},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2248,"byte_end":2265,"line_start":75,"line_end":75,"column_start":65,"column_end":82},"alias_span":null,"name":"FixedPointOperand","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":74},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2324,"byte_end":2338,"line_start":78,"line_end":78,"column_start":24,"column_end":38},"alias_span":null,"name":"helpers_128bit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":188,"index":4},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2393,"byte_end":2400,"line_start":80,"line_end":80,"column_start":24,"column_end":31},"alias_span":null,"name":"biguint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3505},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2436,"byte_end":2457,"line_start":82,"line_end":82,"column_start":34,"column_end":55},"alias_span":null,"name":"RandomNumberGenerator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":190,"index":190},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2476,"byte_end":2482,"line_start":84,"line_end":84,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1680},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3292,"byte_end":3301,"line_start":106,"line_end":106,"column_start":17,"column_end":26},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":860},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3292,"byte_end":3301,"line_start":106,"line_end":106,"column_start":17,"column_end":26},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":1357}},{"kind":"Use","ref_id":{"krate":22,"index":1192},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3303,"byte_end":3314,"line_start":106,"line_end":106,"column_start":28,"column_end":39},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":861},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3303,"byte_end":3314,"line_start":106,"line_end":106,"column_start":28,"column_end":39},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":1358}},{"kind":"Use","ref_id":{"krate":22,"index":1198},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3320,"byte_end":3336,"line_start":106,"line_end":106,"column_start":45,"column_end":61},"alias_span":null,"name":"DeserializeOwned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":686,"byte_end":26445,"line_start":18,"line_end":905,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":3923},{"krate":0,"index":22},{"krate":0,"index":3925},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":3927},{"krate":0,"index":25},{"krate":0,"index":3929},{"krate":0,"index":26},{"krate":0,"index":44},{"krate":0,"index":451},{"krate":0,"index":658},{"krate":0,"index":825},{"krate":0,"index":1218},{"krate":0,"index":1267},{"krate":0,"index":1283},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":4371},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":4375},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":3537},{"krate":0,"index":3565},{"krate":0,"index":3564},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3556},{"krate":0,"index":3557},{"krate":0,"index":3546},{"krate":0,"index":3541},{"krate":0,"index":1353},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":4425},{"krate":0,"index":1358},{"krate":0,"index":4427},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1368},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":3568},{"krate":0,"index":3641},{"krate":0,"index":3600},{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3591},{"krate":0,"index":3585},{"krate":0,"index":3580},{"krate":0,"index":3578},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":3647},{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3725},{"krate":0,"index":3719},{"krate":0,"index":3717},{"krate":0,"index":3711},{"krate":0,"index":3706},{"krate":0,"index":3704},{"krate":0,"index":3698},{"krate":0,"index":3657},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":3734},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3781},{"krate":0,"index":3779},{"krate":0,"index":3769},{"krate":0,"index":3764},{"krate":0,"index":3762},{"krate":0,"index":3756},{"krate":0,"index":3737},{"krate":0,"index":1427},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":3790},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3822},{"krate":0,"index":3821},{"krate":0,"index":3815},{"krate":0,"index":3810},{"krate":0,"index":3808},{"krate":0,"index":3802},{"krate":0,"index":3831},{"krate":0,"index":3863},{"krate":0,"index":3865},{"krate":0,"index":3857},{"krate":0,"index":3859},{"krate":0,"index":3854},{"krate":0,"index":3852},{"krate":0,"index":3844},{"krate":0,"index":3838},{"krate":0,"index":3835},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":3868},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3888},{"krate":0,"index":3886},{"krate":0,"index":3876},{"krate":0,"index":3871},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1492},{"krate":0,"index":1497},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1518}],"decl_id":null,"docs":" Runtime Modules shared primitive types.\n","sig":null,"attributes":[{"value":"/ Runtime Modules shared primitive types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":686,"byte_end":729,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"warn(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":731,"byte_end":753,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"curve","qualname":"::curve","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":1521},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1525},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":42}],"decl_id":null,"docs":" Provides some utilities to define a piecewise linear function.\n","sig":null,"attributes":[{"value":"/ Provides some utilities to define a piecewise linear function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27133,"byte_end":27199,"line_start":18,"line_end":18,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1521},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27407,"byte_end":27422,"line_start":25,"line_end":25,"column_start":12,"column_end":27},"name":"PiecewiseLinear","qualname":"::curve::PiecewiseLinear","value":"PiecewiseLinear { points, maximum }","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524}],"decl_id":null,"docs":" Piecewise Linear function in [0, 1] -> [0, 1].\n","sig":null,"attributes":[{"value":"/ Piecewise Linear function in [0, 1] -> [0, 1].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27297,"byte_end":27347,"line_start":23,"line_end":23,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1523},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27515,"byte_end":27521,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"name":"points","qualname":"::curve::PiecewiseLinear::points","value":"&'a [(sp_arithmetic::Perbill, sp_arithmetic::Perbill)]","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":" Array of points. Must be in order from the lowest abscissas to the highest.\n","sig":null,"attributes":[{"value":"/ Array of points. Must be in order from the lowest abscissas to the highest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27430,"byte_end":27509,"line_start":26,"line_end":26,"column_start":2,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1524},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27599,"byte_end":27606,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"name":"maximum","qualname":"::curve::PiecewiseLinear::maximum","value":"sp_arithmetic::Perbill","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":" The maximum value that can be returned.\n","sig":null,"attributes":[{"value":"/ The maximum value that can be returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27550,"byte_end":27593,"line_start":28,"line_end":28,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27849,"byte_end":27889,"line_start":38,"line_end":38,"column_start":9,"column_end":49},"name":"calculate_for_fraction_times_denominator","qualname":"<PiecewiseLinear>::calculate_for_fraction_times_denominator","value":"pub fn calculate_for_fraction_times_denominator<N>(&Self, N, N) -> N where\nN: AtLeast32BitUnsigned + Clone","parent":null,"children":[],"decl_id":null,"docs":" Compute `f(n/d)*d` with `n <= d`. This is useful to avoid loss of precision.\n","sig":null,"attributes":[{"value":"/ Compute `f(n/d)*d` with `n <= d`. This is useful to avoid loss of precision.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27760,"byte_end":27840,"line_start":37,"line_end":37,"column_start":2,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"generic","qualname":"::generic","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":180},{"krate":0,"index":205},{"krate":0,"index":230},{"krate":0,"index":304},{"krate":0,"index":344},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":4133},{"krate":0,"index":446},{"krate":0,"index":447}],"decl_id":null,"docs":" Generic implementations of Extrinsic/Header/Block.\n","sig":null,"attributes":[{"value":"/ Generic implementations of Extrinsic/Header/Block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/mod.rs","byte_start":32435,"byte_end":32489,"line_start":19,"line_end":19,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1539},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":34903,"byte_end":34921,"line_start":38,"line_end":38,"column_start":12,"column_end":30},"name":"UncheckedExtrinsic","qualname":"::generic::unchecked_extrinsic::UncheckedExtrinsic","value":"UncheckedExtrinsic { signature, function }","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545}],"decl_id":null,"docs":" A extrinsic right from the external world. This is unchecked and so\n can contain a signature.\n","sig":null,"attributes":[{"value":"/ A extrinsic right from the external world. This is unchecked and so","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":34759,"byte_end":34830,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ can contain a signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":34831,"byte_end":34859,"line_start":36,"line_end":36,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1544},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35178,"byte_end":35187,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"name":"signature","qualname":"::generic::unchecked_extrinsic::UncheckedExtrinsic::signature","value":"std::option::Option<(Address, Signature, Extra)>","parent":{"krate":0,"index":1539},"children":[],"decl_id":null,"docs":" The signature, address, number of extrinsics have come before from\n the same signer and an era describing the longevity of this transaction,\n if this is a signed extrinsic.\n","sig":null,"attributes":[{"value":"/ The signature, address, number of extrinsics have come before from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":34988,"byte_end":35058,"line_start":42,"line_end":42,"column_start":2,"column_end":72}},{"value":"/ the same signer and an era describing the longevity of this transaction,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35060,"byte_end":35136,"line_start":43,"line_end":43,"column_start":2,"column_end":78}},{"value":"/ if this is a signed extrinsic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35138,"byte_end":35172,"line_start":44,"line_end":44,"column_start":2,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1545},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35272,"byte_end":35280,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"name":"function","qualname":"::generic::unchecked_extrinsic::UncheckedExtrinsic::function","value":"Call","parent":{"krate":0,"index":1539},"children":[],"decl_id":null,"docs":" The function that should be called.\n","sig":null,"attributes":[{"value":"/ The function that should be called.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35227,"byte_end":35266,"line_start":46,"line_end":46,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35769,"byte_end":35779,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"name":"new_signed","qualname":"<UncheckedExtrinsic<Address, Call, Signature, Extra>>::new_signed","value":"pub fn new_signed(Call, Address, Signature, Extra) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New instance of a signed extrinsic aka \"transaction\".\n","sig":null,"attributes":[{"value":"/ New instance of a signed extrinsic aka \"transaction\".","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35703,"byte_end":35760,"line_start":65,"line_end":65,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":36029,"byte_end":36041,"line_start":79,"line_end":79,"column_start":9,"column_end":21},"name":"new_unsigned","qualname":"<UncheckedExtrinsic<Address, Call, Signature, Extra>>::new_unsigned","value":"pub fn new_unsigned(Call) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New instance of an unsigned extrinsic aka \"inherent\".\n","sig":null,"attributes":[{"value":"/ New instance of an unsigned extrinsic aka \"inherent\".","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35963,"byte_end":36020,"line_start":78,"line_end":78,"column_start":2,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38356,"byte_end":38369,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"SignedPayload","qualname":"::generic::unchecked_extrinsic::SignedPayload","value":"","parent":null,"children":[],"decl_id":null,"docs":" A payload that has been signed for an unchecked extrinsics.","sig":null,"attributes":[{"value":"/ A payload that has been signed for an unchecked extrinsics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38088,"byte_end":38151,"line_start":158,"line_end":158,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38152,"byte_end":38155,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Note that the payload that we sign to produce unchecked extrinsic signature","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38156,"byte_end":38235,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ is going to be different than the `SignaturePayload` - so the thing the extrinsic","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38236,"byte_end":38321,"line_start":161,"line_end":161,"column_start":1,"column_end":86}},{"value":"/ actually contains.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38322,"byte_end":38344,"line_start":162,"line_end":162,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38667,"byte_end":38670,"line_start":176,"line_end":176,"column_start":9,"column_end":12},"name":"new","qualname":"<SignedPayload<Call, Extra>>::new","value":"pub fn new(Call, Extra) -> Result<Self, TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" Create new `SignedPayload`.","sig":null,"attributes":[{"value":"/ Create new `SignedPayload`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38542,"byte_end":38573,"line_start":173,"line_end":173,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38575,"byte_end":38578,"line_start":174,"line_end":174,"column_start":2,"column_end":5}},{"value":"/ This function may fail if `additional_signed` of `Extra` is not available.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38580,"byte_end":38658,"line_start":175,"line_end":175,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38938,"byte_end":38946,"line_start":183,"line_end":183,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<SignedPayload<Call, Extra>>::from_raw","value":"pub fn from_raw(Call, Extra, Extra::AdditionalSigned) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `SignedPayload` from raw components.\n","sig":null,"attributes":[{"value":"/ Create new `SignedPayload` from raw components.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38878,"byte_end":38929,"line_start":182,"line_end":182,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":39131,"byte_end":39142,"line_start":188,"line_end":188,"column_start":9,"column_end":20},"name":"deconstruct","qualname":"<SignedPayload<Call, Extra>>::deconstruct","value":"pub fn deconstruct(Self) -> (Call, Extra, Extra::AdditionalSigned)","parent":null,"children":[],"decl_id":null,"docs":" Deconstruct the payload into it's components.\n","sig":null,"attributes":[{"value":"/ Deconstruct the payload into it's components.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":39073,"byte_end":39122,"line_start":187,"line_end":187,"column_start":2,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":191},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47200,"byte_end":47205,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"name":"Phase","qualname":"::generic::era::Phase","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Era phase\n","sig":null,"attributes":[{"value":"/ Era phase","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47177,"byte_end":47190,"line_start":28,"line_end":28,"column_start":1,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1577},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47502,"byte_end":47510,"line_start":36,"line_end":36,"column_start":2,"column_end":10},"name":"Immortal","qualname":"::generic::era::Era::Immortal","value":"Era::Immortal","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" The transaction is valid forever. The genesis hash must be present in the signed content.\n","sig":null,"attributes":[{"value":"/ The transaction is valid forever. The genesis hash must be present in the signed content.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47407,"byte_end":47500,"line_start":35,"line_end":35,"column_start":2,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1579},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48038,"byte_end":48044,"line_start":47,"line_end":47,"column_start":2,"column_end":8},"name":"Mortal","qualname":"::generic::era::Era::Mortal","value":"Era::Mortal(Period, Phase)","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Period and phase are encoded:\n - The period of validity from the block hash found in the signing material.\n - The phase in the period that this transaction's lifetime begins (and, importantly,\n implies which block hash is included in the signature material). If the `period` is\n greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that\n `period` is.","sig":null,"attributes":[{"value":"/ Period and phase are encoded:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47514,"byte_end":47547,"line_start":38,"line_end":38,"column_start":2,"column_end":35}},{"value":"/ - The period of validity from the block hash found in the signing material.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47549,"byte_end":47628,"line_start":39,"line_end":39,"column_start":2,"column_end":81}},{"value":"/ - The phase in the period that this transaction's lifetime begins (and, importantly,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47630,"byte_end":47718,"line_start":40,"line_end":40,"column_start":2,"column_end":90}},{"value":"/ implies which block hash is included in the signature material). If the `period` is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47720,"byte_end":47807,"line_start":41,"line_end":41,"column_start":2,"column_end":89}},{"value":"/ greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47809,"byte_end":47896,"line_start":42,"line_end":42,"column_start":2,"column_end":89}},{"value":"/ `period` is.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47898,"byte_end":47914,"line_start":43,"line_end":43,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47916,"byte_end":47919,"line_start":44,"line_end":44,"column_start":2,"column_end":5}},{"value":"/ When used on `FRAME`-based runtimes, `period` cannot exceed `BlockHashCount` parameter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47921,"byte_end":48011,"line_start":45,"line_end":45,"column_start":2,"column_end":92}},{"value":"/ of `system` module.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48013,"byte_end":48036,"line_start":46,"line_end":46,"column_start":2,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":1576},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47400,"byte_end":47403,"line_start":34,"line_end":34,"column_start":10,"column_end":13},"name":"Era","qualname":"::generic::era::Era","value":"pub enum Era {\n\n    /// The transaction is valid forever. The genesis hash must be present in the signed content.\n    Immortal,\n\n    /// Period and phase are encoded:\n    /// - The period of validity from the block hash found in the signing material.\n    /// - The phase in the period that this transaction's lifetime begins (and, importantly,\n    /// implies which block hash is included in the signature material). If the `period` is\n    /// greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that\n    /// `period` is.\n    ///\n    /// When used on `FRAME`-based runtimes, `period` cannot exceed `BlockHashCount` parameter\n    /// of `system` module.\n    Mortal(Period, Phase),\n}","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1579}],"decl_id":null,"docs":" An era to describe the longevity of a transaction.\n","sig":null,"attributes":[{"value":"/ An era to describe the longevity of a transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":47214,"byte_end":47268,"line_start":31,"line_end":31,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48759,"byte_end":48765,"line_start":66,"line_end":66,"column_start":9,"column_end":15},"name":"mortal","qualname":"<Era>::mortal","value":"pub fn mortal(u64, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new era based on a period (which should be a power of two between 4 and 65536 inclusive)\n and a block number on which it should start (or, for long periods, be shortly after the start).","sig":null,"attributes":[{"value":"/ Create a new era based on a period (which should be a power of two between 4 and 65536 inclusive)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48309,"byte_end":48410,"line_start":60,"line_end":60,"column_start":2,"column_end":103}},{"value":"/ and a block number on which it should start (or, for long periods, be shortly after the start).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48412,"byte_end":48511,"line_start":61,"line_end":61,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48513,"byte_end":48516,"line_start":62,"line_end":62,"column_start":2,"column_end":5}},{"value":"/ If using `Era` in the context of `FRAME` runtime, make sure that `period`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48518,"byte_end":48595,"line_start":63,"line_end":63,"column_start":2,"column_end":79}},{"value":"/ does not exceed `BlockHashCount` parameter passed to `system` module, since that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48597,"byte_end":48681,"line_start":64,"line_end":64,"column_start":2,"column_end":86}},{"value":"/ prunes old blocks and renders transactions immediately invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48683,"byte_end":48750,"line_start":65,"line_end":65,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49142,"byte_end":49150,"line_start":79,"line_end":79,"column_start":9,"column_end":17},"name":"immortal","qualname":"<Era>::immortal","value":"pub fn immortal() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an \"immortal\" transaction.\n","sig":null,"attributes":[{"value":"/ Create an \"immortal\" transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49096,"byte_end":49133,"line_start":78,"line_end":78,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49239,"byte_end":49250,"line_start":84,"line_end":84,"column_start":9,"column_end":20},"name":"is_immortal","qualname":"<Era>::is_immortal","value":"pub fn is_immortal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" `true` if this is an immortal transaction.\n","sig":null,"attributes":[{"value":"/ `true` if this is an immortal transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49184,"byte_end":49230,"line_start":83,"line_end":83,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49461,"byte_end":49466,"line_start":93,"line_end":93,"column_start":9,"column_end":14},"name":"birth","qualname":"<Era>::birth","value":"pub fn birth(Self, u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the block number of the start of the era whose properties this object\n describes that `current` belongs to.\n","sig":null,"attributes":[{"value":"/ Get the block number of the start of the era whose properties this object","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49333,"byte_end":49410,"line_start":91,"line_end":91,"column_start":2,"column_end":79}},{"value":"/ describes that `current` belongs to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49412,"byte_end":49452,"line_start":92,"line_end":92,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49712,"byte_end":49717,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"name":"death","qualname":"<Era>::death","value":"pub fn death(Self, u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the block number of the first block at which the era has ended.\n","sig":null,"attributes":[{"value":"/ Get the block number of the first block at which the era has ended.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49632,"byte_end":49703,"line_start":100,"line_end":100,"column_start":2,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1650},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":53958,"byte_end":53974,"line_start":31,"line_end":31,"column_start":12,"column_end":28},"name":"CheckedExtrinsic","qualname":"::generic::checked_extrinsic::CheckedExtrinsic","value":"CheckedExtrinsic { signed, function }","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1655}],"decl_id":null,"docs":" Definition of something that the external world might want to say; its\n existence implies that it has been checked and is good, particularly with\n regards to the signature.\n","sig":null,"attributes":[{"value":"/ Definition of something that the external world might want to say; its","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":53709,"byte_end":53783,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ existence implies that it has been checked and is good, particularly with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":53784,"byte_end":53861,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ regards to the signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":53862,"byte_end":53891,"line_start":29,"line_end":29,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1654},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":54155,"byte_end":54161,"line_start":34,"line_end":34,"column_start":6,"column_end":12},"name":"signed","qualname":"::generic::checked_extrinsic::CheckedExtrinsic::signed","value":"std::option::Option<(AccountId, Extra)>","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" Who this purports to be from and the number of extrinsics have come before\n from the same signer, if anyone (note this is not a signature).\n","sig":null,"attributes":[{"value":"/ Who this purports to be from and the number of extrinsics have come before","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":54002,"byte_end":54080,"line_start":32,"line_end":32,"column_start":2,"column_end":80}},{"value":"/ from the same signer, if anyone (note this is not a signature).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":54082,"byte_end":54149,"line_start":33,"line_end":33,"column_start":2,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1655},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":54238,"byte_end":54246,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"name":"function","qualname":"::generic::checked_extrinsic::CheckedExtrinsic::function","value":"Call","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" The function that should be called.\n","sig":null,"attributes":[{"value":"/ The function that should be called.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":54193,"byte_end":54232,"line_start":36,"line_end":36,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1685},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57371,"byte_end":57377,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"Header","qualname":"::generic::header::Header","value":"Header { parent_hash, number, state_root, extrinsics_root, digest }","parent":null,"children":[{"krate":0,"index":1688},{"krate":0,"index":1692},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691}],"decl_id":null,"docs":" Abstraction over a block header for a substrate chain.\n","sig":null,"attributes":[{"value":"/ Abstraction over a block header for a substrate chain.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57066,"byte_end":57124,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57269,"byte_end":57300,"line_start":38,"line_end":38,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57331,"byte_end":57357,"line_start":39,"line_end":39,"column_start":29,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1688},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57463,"byte_end":57474,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"name":"parent_hash","qualname":"::generic::header::Header::parent_hash","value":"<Hash as traits::Hash>::Output","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" The parent hash.\n","sig":null,"attributes":[{"value":"/ The parent hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57437,"byte_end":57457,"line_start":41,"line_end":41,"column_start":2,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1692},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57638,"byte_end":57644,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"name":"number","qualname":"::generic::header::Header::number","value":"Number","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" The block number.\n","sig":null,"attributes":[{"value":"/ The block number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57491,"byte_end":57512,"line_start":43,"line_end":43,"column_start":2,"column_end":23}},{"value":"serde(serialize_with = \"serialize_number\", deserialize_with =\n        \"deserialize_number\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57542,"byte_end":57630,"line_start":44,"line_end":46,"column_start":30,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1689},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57691,"byte_end":57701,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"name":"state_root","qualname":"::generic::header::Header::state_root","value":"<Hash as traits::Hash>::Output","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" The state trie merkle root\n","sig":null,"attributes":[{"value":"/ The state trie merkle root","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57655,"byte_end":57685,"line_start":48,"line_end":48,"column_start":2,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1690},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57762,"byte_end":57777,"line_start":51,"line_end":51,"column_start":6,"column_end":21},"name":"extrinsics_root","qualname":"::generic::header::Header::extrinsics_root","value":"<Hash as traits::Hash>::Output","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" The merkle root of the extrinsics.\n","sig":null,"attributes":[{"value":"/ The merkle root of the extrinsics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57718,"byte_end":57756,"line_start":50,"line_end":50,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1691},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57891,"byte_end":57897,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"name":"digest","qualname":"::generic::header::Header::digest","value":"generic::digest::Digest<<Hash as traits::Hash>::Output>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" A chain-specific digest of data useful for light clients or referencing auxiliary data.\n","sig":null,"attributes":[{"value":"/ A chain-specific digest of data useful for light clients or referencing auxiliary data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":57794,"byte_end":57885,"line_start":52,"line_end":52,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":61962,"byte_end":61966,"line_start":181,"line_end":181,"column_start":9,"column_end":13},"name":"hash","qualname":"<Header<Number, Hash>>::hash","value":"pub fn hash(&Self) -> Hash::Output","parent":null,"children":[],"decl_id":null,"docs":" Convenience helper for computing the hash of the header without having\n to import the trait.\n","sig":null,"attributes":[{"value":"/ Convenience helper for computing the hash of the header without having","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":61853,"byte_end":61927,"line_start":179,"line_end":179,"column_start":2,"column_end":76}},{"value":"/ to import the trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":61929,"byte_end":61953,"line_start":180,"line_end":180,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1818},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64514,"byte_end":64518,"line_start":42,"line_end":42,"column_start":2,"column_end":6},"name":"Hash","qualname":"::generic::block::BlockId::Hash","value":"BlockId::Hash(Block::Hash)","parent":{"krate":0,"index":1816},"children":[],"decl_id":null,"docs":" Identify by block header hash.\n","sig":null,"attributes":[{"value":"/ Identify by block header hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64478,"byte_end":64512,"line_start":41,"line_end":41,"column_start":2,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1821},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64565,"byte_end":64571,"line_start":44,"line_end":44,"column_start":2,"column_end":8},"name":"Number","qualname":"::generic::block::BlockId::Number","value":"BlockId::Number(NumberFor<Block>)","parent":{"krate":0,"index":1816},"children":[],"decl_id":null,"docs":" Identify by block number.\n","sig":null,"attributes":[{"value":"/ Identify by block number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64534,"byte_end":64563,"line_start":43,"line_end":43,"column_start":2,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1816},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64452,"byte_end":64459,"line_start":40,"line_end":40,"column_start":10,"column_end":17},"name":"BlockId","qualname":"::generic::block::BlockId","value":"pub enum BlockId<Block: BlockT> {\n\n    /// Identify by block header hash.\n    Hash(Block::Hash),\n\n    /// Identify by block number.\n    Number(NumberFor<Block>),\n}","parent":null,"children":[{"krate":0,"index":1818},{"krate":0,"index":1821}],"decl_id":null,"docs":" Something to identify a block.\n","sig":null,"attributes":[{"value":"/ Something to identify a block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64195,"byte_end":64229,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64352,"byte_end":64383,"line_start":38,"line_end":38,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64414,"byte_end":64440,"line_start":39,"line_end":39,"column_start":29,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64675,"byte_end":64679,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"hash","qualname":"<BlockId<Block>>::hash","value":"pub fn hash(Block::Hash) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a block ID from a hash.\n","sig":null,"attributes":[{"value":"/ Create a block ID from a hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64632,"byte_end":64666,"line_start":48,"line_end":48,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64781,"byte_end":64787,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"number","qualname":"<BlockId<Block>>::number","value":"pub fn number(NumberFor<Block>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a block ID from a number.\n","sig":null,"attributes":[{"value":"/ Create a block ID from a number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64736,"byte_end":64772,"line_start":53,"line_end":53,"column_start":2,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1848},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":65394,"byte_end":65399,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"Block","qualname":"::generic::block::Block","value":"Block { header, extrinsics }","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1852}],"decl_id":null,"docs":" Abstraction over a substrate block.\n","sig":null,"attributes":[{"value":"/ Abstraction over a substrate block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":65070,"byte_end":65109,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":65292,"byte_end":65323,"line_start":71,"line_end":71,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":65354,"byte_end":65380,"line_start":72,"line_end":72,"column_start":29,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1851},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":65465,"byte_end":65471,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"name":"header","qualname":"::generic::block::Block::header","value":"Header","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" The block header.\n","sig":null,"attributes":[{"value":"/ The block header.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":65438,"byte_end":65459,"line_start":74,"line_end":74,"column_start":2,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1852},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":65520,"byte_end":65530,"line_start":77,"line_end":77,"column_start":6,"column_end":16},"name":"extrinsics","qualname":"::generic::block::Block::extrinsics","value":"sp_application_crypto::Vec<Extrinsic>","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" The accompanying extrinsics.\n","sig":null,"attributes":[{"value":"/ The accompanying extrinsics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":65482,"byte_end":65514,"line_start":76,"line_end":76,"column_start":2,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1952},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":66602,"byte_end":66613,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"SignedBlock","qualname":"::generic::block::SignedBlock","value":"SignedBlock { block, justification }","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955}],"decl_id":null,"docs":" Abstraction over a substrate block and justification.\n","sig":null,"attributes":[{"value":"/ Abstraction over a substrate block and justification.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":66291,"byte_end":66348,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":66500,"byte_end":66531,"line_start":109,"line_end":109,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":66562,"byte_end":66588,"line_start":110,"line_end":110,"column_start":29,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1954},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":66645,"byte_end":66650,"line_start":113,"line_end":113,"column_start":6,"column_end":11},"name":"block","qualname":"::generic::block::SignedBlock::block","value":"Block","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" Full block.\n","sig":null,"attributes":[{"value":"/ Full block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":66624,"byte_end":66639,"line_start":112,"line_end":112,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":1955},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":66690,"byte_end":66703,"line_start":115,"line_end":115,"column_start":6,"column_end":19},"name":"justification","qualname":"::generic::block::SignedBlock::justification","value":"std::option::Option<sp_application_crypto::Vec<u8>>","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" Block justification.\n","sig":null,"attributes":[{"value":"/ Block justification.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":66660,"byte_end":66684,"line_start":114,"line_end":114,"column_start":2,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2038},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":67873,"byte_end":67879,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Digest","qualname":"::generic::digest::Digest","value":"Digest { logs }","parent":null,"children":[{"krate":0,"index":2040}],"decl_id":null,"docs":" Generic header digest.\n","sig":null,"attributes":[{"value":"/ Generic header digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":67681,"byte_end":67707,"line_start":29,"line_end":29,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2040},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68049,"byte_end":68053,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"name":"logs","qualname":"::generic::digest::Digest::logs","value":"sp_application_crypto::Vec<generic::digest::DigestItem<Hash>>","parent":{"krate":0,"index":2038},"children":[],"decl_id":null,"docs":" A list of logs in the digest.\n","sig":null,"attributes":[{"value":"/ A list of logs in the digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":67889,"byte_end":67922,"line_start":33,"line_end":33,"column_start":2,"column_end":35}},{"value":"serde(bound(serialize = \"Hash: codec::Codec\", deserialize =\n              \"Hash: codec::Codec\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":67957,"byte_end":68039,"line_start":36,"line_end":36,"column_start":3,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68254,"byte_end":68258,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"logs","qualname":"<Digest<Hash>>::logs","value":"pub fn logs(&Self) -> &[DigestItem<Hash>]","parent":null,"children":[],"decl_id":null,"docs":" Get reference to all digest items.\n","sig":null,"attributes":[{"value":"/ Get reference to all digest items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68207,"byte_end":68245,"line_start":48,"line_end":48,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68343,"byte_end":68347,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"push","qualname":"<Digest<Hash>>::push","value":"pub fn push(&mut Self, DigestItem<Hash>)","parent":null,"children":[],"decl_id":null,"docs":" Push new digest item.\n","sig":null,"attributes":[{"value":"/ Push new digest item.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68309,"byte_end":68334,"line_start":53,"line_end":53,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68445,"byte_end":68448,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"name":"pop","qualname":"<Digest<Hash>>::pop","value":"pub fn pop(&mut Self) -> Option<DigestItem<Hash>>","parent":null,"children":[],"decl_id":null,"docs":" Pop a digest item.\n","sig":null,"attributes":[{"value":"/ Pop a digest item.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68414,"byte_end":68436,"line_start":58,"line_end":58,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68599,"byte_end":68602,"line_start":64,"line_end":64,"column_start":9,"column_end":12},"name":"log","qualname":"<Digest<Hash>>::log","value":"pub fn log<T: ?Sized, F: Fn(&DigestItem<Hash>) -> Option<&T>>(&Self, F)\n-> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get reference to the first digest item that matches the passed predicate.\n","sig":null,"attributes":[{"value":"/ Get reference to the first digest item that matches the passed predicate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68513,"byte_end":68590,"line_start":63,"line_end":63,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68855,"byte_end":68868,"line_start":71,"line_end":71,"column_start":9,"column_end":22},"name":"convert_first","qualname":"<Digest<Hash>>::convert_first","value":"pub fn convert_first<T, F: Fn(&DigestItem<Hash>) -> Option<T>>(&Self, F)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Get a conversion of the first digest item that successfully converts using the function.\n","sig":null,"attributes":[{"value":"/ Get a conversion of the first digest item that successfully converts using the function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68754,"byte_end":68846,"line_start":70,"line_end":70,"column_start":2,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2132},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69432,"byte_end":69447,"line_start":87,"line_end":87,"column_start":2,"column_end":17},"name":"ChangesTrieRoot","qualname":"::generic::digest::DigestItem::ChangesTrieRoot","value":"DigestItem::ChangesTrieRoot(Hash)","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":" System digest item that contains the root of changes trie at given\n block. It is created for every block iff runtime supports changes\n trie creation.\n","sig":null,"attributes":[{"value":"/ System digest item that contains the root of changes trie at given","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69269,"byte_end":69339,"line_start":84,"line_end":84,"column_start":2,"column_end":72}},{"value":"/ block. It is created for every block iff runtime supports changes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69341,"byte_end":69410,"line_start":85,"line_end":85,"column_start":2,"column_end":71}},{"value":"/ trie creation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69412,"byte_end":69430,"line_start":86,"line_end":86,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2135},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70103,"byte_end":70113,"line_start":101,"line_end":101,"column_start":2,"column_end":12},"name":"PreRuntime","qualname":"::generic::digest::DigestItem::PreRuntime","value":"DigestItem::PreRuntime(ConsensusEngineId, Vec<u8>)","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":" A pre-runtime digest.","sig":null,"attributes":[{"value":"/ A pre-runtime digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69457,"byte_end":69482,"line_start":89,"line_end":89,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69484,"byte_end":69487,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ These are messages from the consensus engine to the runtime, although","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69489,"byte_end":69562,"line_start":91,"line_end":91,"column_start":2,"column_end":75}},{"value":"/ the consensus engine can (and should) read them itself to avoid","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69564,"byte_end":69631,"line_start":92,"line_end":92,"column_start":2,"column_end":69}},{"value":"/ code and state duplication. It is erroneous for a runtime to produce","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69633,"byte_end":69705,"line_start":93,"line_end":93,"column_start":2,"column_end":74}},{"value":"/ these, but this is not (yet) checked.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69707,"byte_end":69748,"line_start":94,"line_end":94,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69750,"byte_end":69753,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ NOTE: the runtime is not allowed to panic or fail in an `on_initialize`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69755,"byte_end":69830,"line_start":96,"line_end":96,"column_start":2,"column_end":77}},{"value":"/ call if an expected `PreRuntime` digest is not present. It is the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69832,"byte_end":69901,"line_start":97,"line_end":97,"column_start":2,"column_end":71}},{"value":"/ responsibility of a external block verifier to check this. Runtime API calls","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69903,"byte_end":69983,"line_start":98,"line_end":98,"column_start":2,"column_end":82}},{"value":"/ will initialize the block without pre-runtime digests, so initialization","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69985,"byte_end":70061,"line_start":99,"line_end":99,"column_start":2,"column_end":78}},{"value":"/ cannot fail when they are missing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70063,"byte_end":70101,"line_start":100,"line_end":100,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2139},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70320,"byte_end":70329,"line_start":106,"line_end":106,"column_start":2,"column_end":11},"name":"Consensus","qualname":"::generic::digest::DigestItem::Consensus","value":"DigestItem::Consensus(ConsensusEngineId, Vec<u8>)","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":" A message from the runtime to the consensus engine. This should *never*\n be generated by the native code of any consensus engine, but this is not\n checked (yet).\n","sig":null,"attributes":[{"value":"/ A message from the runtime to the consensus engine. This should *never*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70145,"byte_end":70220,"line_start":103,"line_end":103,"column_start":2,"column_end":77}},{"value":"/ be generated by the native code of any consensus engine, but this is not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70222,"byte_end":70298,"line_start":104,"line_end":104,"column_start":2,"column_end":78}},{"value":"/ checked (yet).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70300,"byte_end":70318,"line_start":105,"line_end":105,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2143},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70454,"byte_end":70458,"line_start":110,"line_end":110,"column_start":2,"column_end":6},"name":"Seal","qualname":"::generic::digest::DigestItem::Seal","value":"DigestItem::Seal(ConsensusEngineId, Vec<u8>)","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":" Put a Seal on it. This is only used by native code, and is never seen\n by runtimes.\n","sig":null,"attributes":[{"value":"/ Put a Seal on it. This is only used by native code, and is never seen","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70361,"byte_end":70434,"line_start":108,"line_end":108,"column_start":2,"column_end":75}},{"value":"/ by runtimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70436,"byte_end":70452,"line_start":109,"line_end":109,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2147},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70580,"byte_end":70597,"line_start":114,"line_end":114,"column_start":2,"column_end":19},"name":"ChangesTrieSignal","qualname":"::generic::digest::DigestItem::ChangesTrieSignal","value":"DigestItem::ChangesTrieSignal(ChangesTrieSignal)","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":" Digest item that contains signal from changes tries manager to the\n native code.\n","sig":null,"attributes":[{"value":"/ Digest item that contains signal from changes tries manager to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70490,"byte_end":70560,"line_start":112,"line_end":112,"column_start":2,"column_end":72}},{"value":"/ native code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70562,"byte_end":70578,"line_start":113,"line_end":113,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2150},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70673,"byte_end":70678,"line_start":117,"line_end":117,"column_start":2,"column_end":7},"name":"Other","qualname":"::generic::digest::DigestItem::Other","value":"DigestItem::Other(Vec<u8>)","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":" Some other thing. Unsupported and experimental.\n","sig":null,"attributes":[{"value":"/ Some other thing. Unsupported and experimental.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70620,"byte_end":70671,"line_start":116,"line_end":116,"column_start":2,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2130},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69249,"byte_end":69259,"line_start":83,"line_end":83,"column_start":10,"column_end":20},"name":"DigestItem","qualname":"::generic::digest::DigestItem","value":"pub enum DigestItem<Hash> {\n\n    /// System digest item that contains the root of changes trie at given\n    /// block. It is created for every block iff runtime supports changes\n    /// trie creation.\n    ChangesTrieRoot(Hash),\n\n    /// A pre-runtime digest.\n    ///\n    /// These are messages from the consensus engine to the runtime, although\n    /// the consensus engine can (and should) read them itself to avoid\n    /// code and state duplication. It is erroneous for a runtime to produce\n    /// these, but this is not (yet) checked.\n    ///\n    /// NOTE: the runtime is not allowed to panic or fail in an `on_initialize`\n    /// call if an expected `PreRuntime` digest is not present. It is the\n    /// responsibility of a external block verifier to check this. Runtime API calls\n    /// will initialize the block without pre-runtime digests, so initialization\n    /// cannot fail when they are missing.\n    PreRuntime(ConsensusEngineId, Vec<u8>),\n\n    /// A message from the runtime to the consensus engine. This should *never*\n    /// be generated by the native code of any consensus engine, but this is not\n    /// checked (yet).\n    Consensus(ConsensusEngineId, Vec<u8>),\n\n    /// Put a Seal on it. This is only used by native code, and is never seen\n    /// by runtimes.\n    Seal(ConsensusEngineId, Vec<u8>),\n\n    /// Digest item that contains signal from changes tries manager to the\n    /// native code.\n    ChangesTrieSignal(ChangesTrieSignal),\n\n    /// Some other thing. Unsupported and experimental.\n    Other(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2139},{"krate":0,"index":2143},{"krate":0,"index":2147},{"krate":0,"index":2150}],"decl_id":null,"docs":" Digest item that is able to encode/decode 'system' digest items and\n provide opaque access to other items.\n","sig":null,"attributes":[{"value":"/ Digest item that is able to encode/decode 'system' digest items and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69012,"byte_end":69083,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ provide opaque access to other items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":69084,"byte_end":69125,"line_start":80,"line_end":80,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2174},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71540,"byte_end":71556,"line_start":135,"line_end":135,"column_start":2,"column_end":18},"name":"NewConfiguration","qualname":"::generic::digest::ChangesTrieSignal::NewConfiguration","value":"ChangesTrieSignal::NewConfiguration(Option<ChangesTrieConfiguration>)","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" New changes trie configuration is enacted, starting from **next block**.","sig":null,"attributes":[{"value":"/ New changes trie configuration is enacted, starting from **next block**.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70881,"byte_end":70957,"line_start":124,"line_end":124,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70959,"byte_end":70962,"line_start":125,"line_end":125,"column_start":2,"column_end":5}},{"value":"/ The block that emits this signal will contain changes trie (CT) that covers","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70964,"byte_end":71043,"line_start":126,"line_end":126,"column_start":2,"column_end":81}},{"value":"/ blocks range [BEGIN; current block], where BEGIN is (order matters):","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71045,"byte_end":71117,"line_start":127,"line_end":127,"column_start":2,"column_end":74}},{"value":"/ - LAST_TOP_LEVEL_DIGEST_BLOCK+1 if top level digest CT has ever been created","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71119,"byte_end":71199,"line_start":128,"line_end":128,"column_start":2,"column_end":82}},{"value":"/   using current configuration AND the last top level digest CT has been created","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71201,"byte_end":71284,"line_start":129,"line_end":129,"column_start":2,"column_end":85}},{"value":"/   at block LAST_TOP_LEVEL_DIGEST_BLOCK;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71286,"byte_end":71329,"line_start":130,"line_end":130,"column_start":2,"column_end":45}},{"value":"/ - LAST_CONFIGURATION_CHANGE_BLOCK+1 if there has been CT configuration change","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71331,"byte_end":71412,"line_start":131,"line_end":131,"column_start":2,"column_end":83}},{"value":"/   before and the last configuration change happened at block","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71414,"byte_end":71478,"line_start":132,"line_end":132,"column_start":2,"column_end":66}},{"value":"/   LAST_CONFIGURATION_CHANGE_BLOCK;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71480,"byte_end":71518,"line_start":133,"line_end":133,"column_start":2,"column_end":40}},{"value":"/ - 1 otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71520,"byte_end":71538,"line_start":134,"line_end":134,"column_start":2,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2173},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70860,"byte_end":70877,"line_start":123,"line_end":123,"column_start":10,"column_end":27},"name":"ChangesTrieSignal","qualname":"::generic::digest::ChangesTrieSignal","value":"pub enum ChangesTrieSignal {\n\n    /// New changes trie configuration is enacted, starting from **next block**.\n    ///\n    /// The block that emits this signal will contain changes trie (CT) that covers\n    /// blocks range [BEGIN; current block], where BEGIN is (order matters):\n    /// - LAST_TOP_LEVEL_DIGEST_BLOCK+1 if top level digest CT has ever been created\n    ///   using current configuration AND the last top level digest CT has been created\n    ///   at block LAST_TOP_LEVEL_DIGEST_BLOCK;\n    /// - LAST_CONFIGURATION_CHANGE_BLOCK+1 if there has been CT configuration change\n    ///   before and the last configuration change happened at block\n    ///   LAST_CONFIGURATION_CHANGE_BLOCK;\n    /// - 1 otherwise.\n    NewConfiguration(Option<ChangesTrieConfiguration>),\n}","parent":null,"children":[{"krate":0,"index":2174}],"decl_id":null,"docs":" Available changes trie signals.\n","sig":null,"attributes":[{"value":"/ Available changes trie signals.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":70692,"byte_end":70727,"line_start":120,"line_end":120,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2204},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72470,"byte_end":72485,"line_start":163,"line_end":163,"column_start":2,"column_end":17},"name":"ChangesTrieRoot","qualname":"::generic::digest::DigestItemRef::ChangesTrieRoot","value":"DigestItemRef::ChangesTrieRoot(&'a Hash)","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" Reference to `DigestItem::ChangesTrieRoot`.\n","sig":null,"attributes":[{"value":"/ Reference to `DigestItem::ChangesTrieRoot`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72421,"byte_end":72468,"line_start":162,"line_end":162,"column_start":2,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2207},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72792,"byte_end":72802,"line_start":170,"line_end":170,"column_start":2,"column_end":12},"name":"PreRuntime","qualname":"::generic::digest::DigestItemRef::PreRuntime","value":"DigestItemRef::PreRuntime(&'a ConsensusEngineId, &'a Vec<u8>)","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" A pre-runtime digest.","sig":null,"attributes":[{"value":"/ A pre-runtime digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72498,"byte_end":72523,"line_start":164,"line_end":164,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72525,"byte_end":72528,"line_start":165,"line_end":165,"column_start":2,"column_end":5}},{"value":"/ These are messages from the consensus engine to the runtime, although","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72530,"byte_end":72603,"line_start":166,"line_end":166,"column_start":2,"column_end":75}},{"value":"/ the consensus engine can (and should) read them itself to avoid","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72605,"byte_end":72672,"line_start":167,"line_end":167,"column_start":2,"column_end":69}},{"value":"/ code and state duplication.  It is erroneous for a runtime to produce","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72674,"byte_end":72747,"line_start":168,"line_end":168,"column_start":2,"column_end":75}},{"value":"/ these, but this is not (yet) checked.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72749,"byte_end":72790,"line_start":169,"line_end":169,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2211},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73016,"byte_end":73025,"line_start":174,"line_end":174,"column_start":2,"column_end":11},"name":"Consensus","qualname":"::generic::digest::DigestItemRef::Consensus","value":"DigestItemRef::Consensus(&'a ConsensusEngineId, &'a Vec<u8>)","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" A message from the runtime to the consensus engine. This should *never*\n be generated by the native code of any consensus engine, but this is not\n checked (yet).\n","sig":null,"attributes":[{"value":"/ A message from the runtime to the consensus engine. This should *never*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72841,"byte_end":72916,"line_start":171,"line_end":171,"column_start":2,"column_end":77}},{"value":"/ be generated by the native code of any consensus engine, but this is not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72918,"byte_end":72994,"line_start":172,"line_end":172,"column_start":2,"column_end":78}},{"value":"/ checked (yet).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72996,"byte_end":73014,"line_start":173,"line_end":173,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2215},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73157,"byte_end":73161,"line_start":177,"line_end":177,"column_start":2,"column_end":6},"name":"Seal","qualname":"::generic::digest::DigestItemRef::Seal","value":"DigestItemRef::Seal(&'a ConsensusEngineId, &'a Vec<u8>)","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" Put a Seal on it. This is only used by native code, and is never seen\n by runtimes.\n","sig":null,"attributes":[{"value":"/ Put a Seal on it. This is only used by native code, and is never seen","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73064,"byte_end":73137,"line_start":175,"line_end":175,"column_start":2,"column_end":75}},{"value":"/ by runtimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73139,"byte_end":73155,"line_start":176,"line_end":176,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2219},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73290,"byte_end":73307,"line_start":180,"line_end":180,"column_start":2,"column_end":19},"name":"ChangesTrieSignal","qualname":"::generic::digest::DigestItemRef::ChangesTrieSignal","value":"DigestItemRef::ChangesTrieSignal(&'a ChangesTrieSignal)","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" Digest item that contains signal from changes tries manager to the\n native code.\n","sig":null,"attributes":[{"value":"/ Digest item that contains signal from changes tries manager to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73200,"byte_end":73270,"line_start":178,"line_end":178,"column_start":2,"column_end":72}},{"value":"/ native code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73272,"byte_end":73288,"line_start":179,"line_end":179,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2222},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73395,"byte_end":73400,"line_start":182,"line_end":182,"column_start":2,"column_end":7},"name":"Other","qualname":"::generic::digest::DigestItemRef::Other","value":"DigestItemRef::Other(&'a Vec<u8>)","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" Any 'non-system' digest item, opaque to the native code.\n","sig":null,"attributes":[{"value":"/ Any 'non-system' digest item, opaque to the native code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73333,"byte_end":73393,"line_start":181,"line_end":181,"column_start":2,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":2201},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72390,"byte_end":72403,"line_start":161,"line_end":161,"column_start":10,"column_end":23},"name":"DigestItemRef","qualname":"::generic::digest::DigestItemRef","value":"pub enum DigestItemRef<'a, Hash: 'a> {\n\n    /// Reference to `DigestItem::ChangesTrieRoot`.\n    ChangesTrieRoot(&'a Hash),\n\n    /// A pre-runtime digest.\n    ///\n    /// These are messages from the consensus engine to the runtime, although\n    /// the consensus engine can (and should) read them itself to avoid\n    /// code and state duplication.  It is erroneous for a runtime to produce\n    /// these, but this is not (yet) checked.\n    PreRuntime(&'a ConsensusEngineId, &'a Vec<u8>),\n\n    /// A message from the runtime to the consensus engine. This should *never*\n    /// be generated by the native code of any consensus engine, but this is not\n    /// checked (yet).\n    Consensus(&'a ConsensusEngineId, &'a Vec<u8>),\n\n    /// Put a Seal on it. This is only used by native code, and is never seen\n    /// by runtimes.\n    Seal(&'a ConsensusEngineId, &'a Vec<u8>),\n\n    /// Digest item that contains signal from changes tries manager to the\n    /// native code.\n    ChangesTrieSignal(&'a ChangesTrieSignal),\n\n    /// Any 'non-system' digest item, opaque to the native code.\n    Other(&'a Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2207},{"krate":0,"index":2211},{"krate":0,"index":2215},{"krate":0,"index":2219},{"krate":0,"index":2222}],"decl_id":null,"docs":" A 'referencing view' for digest item. Does not own its contents. Used by\n final runtime implementations for encoding/decoding its log items.\n","sig":null,"attributes":[{"value":"/ A 'referencing view' for digest item. Does not own its contents. Used by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72187,"byte_end":72263,"line_start":158,"line_end":158,"column_start":1,"column_end":77}},{"value":"/ final runtime implementations for encoding/decoding its log items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":72264,"byte_end":72334,"line_start":159,"line_end":159,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2280},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74179,"byte_end":74189,"line_start":205,"line_end":205,"column_start":2,"column_end":12},"name":"PreRuntime","qualname":"::generic::digest::OpaqueDigestItemId::PreRuntime","value":"OpaqueDigestItemId::PreRuntime(&'a ConsensusEngineId)","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":" Type corresponding to DigestItem::PreRuntime.\n","sig":null,"attributes":[{"value":"/ Type corresponding to DigestItem::PreRuntime.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74128,"byte_end":74177,"line_start":204,"line_end":204,"column_start":2,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2283},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74265,"byte_end":74274,"line_start":207,"line_end":207,"column_start":2,"column_end":11},"name":"Consensus","qualname":"::generic::digest::OpaqueDigestItemId::Consensus","value":"OpaqueDigestItemId::Consensus(&'a ConsensusEngineId)","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":" Type corresponding to DigestItem::Consensus.\n","sig":null,"attributes":[{"value":"/ Type corresponding to DigestItem::Consensus.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74215,"byte_end":74263,"line_start":206,"line_end":206,"column_start":2,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2286},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74345,"byte_end":74349,"line_start":209,"line_end":209,"column_start":2,"column_end":6},"name":"Seal","qualname":"::generic::digest::OpaqueDigestItemId::Seal","value":"OpaqueDigestItemId::Seal(&'a ConsensusEngineId)","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":" Type corresponding to DigestItem::Seal.\n","sig":null,"attributes":[{"value":"/ Type corresponding to DigestItem::Seal.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74300,"byte_end":74343,"line_start":208,"line_end":208,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2289},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74414,"byte_end":74419,"line_start":211,"line_end":211,"column_start":2,"column_end":7},"name":"Other","qualname":"::generic::digest::OpaqueDigestItemId::Other","value":"OpaqueDigestItemId::Other","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":" Some other (non-prescribed) type.\n","sig":null,"attributes":[{"value":"/ Some other (non-prescribed) type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74375,"byte_end":74412,"line_start":210,"line_end":210,"column_start":2,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":2278},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74102,"byte_end":74120,"line_start":203,"line_end":203,"column_start":10,"column_end":28},"name":"OpaqueDigestItemId","qualname":"::generic::digest::OpaqueDigestItemId","value":"pub enum OpaqueDigestItemId<'a> {\n\n    /// Type corresponding to DigestItem::PreRuntime.\n    PreRuntime(&'a ConsensusEngineId),\n\n    /// Type corresponding to DigestItem::Consensus.\n    Consensus(&'a ConsensusEngineId),\n\n    /// Type corresponding to DigestItem::Seal.\n    Seal(&'a ConsensusEngineId),\n\n    /// Some other (non-prescribed) type.\n    Other,\n}","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":2283},{"krate":0,"index":2286},{"krate":0,"index":2289}],"decl_id":null,"docs":" Type of a digest item that contains raw data; this also names the consensus engine ID where\n applicable. Used to identify one or more digest items of interest.\n","sig":null,"attributes":[{"value":"/ Type of a digest item that contains raw data; this also names the consensus engine ID where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73871,"byte_end":73966,"line_start":200,"line_end":200,"column_start":1,"column_end":96}},{"value":"/ applicable. Used to identify one or more digest items of interest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":73967,"byte_end":74037,"line_start":201,"line_end":201,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74518,"byte_end":74522,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"name":"dref","qualname":"<DigestItem<Hash>>::dref","value":"pub fn dref<'a>(&'a Self) -> DigestItemRef","parent":null,"children":[],"decl_id":null,"docs":" Returns a 'referencing view' for this digest item.\n","sig":null,"attributes":[{"value":"/ Returns a 'referencing view' for this digest item.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74455,"byte_end":74509,"line_start":215,"line_end":215,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75089,"byte_end":75109,"line_start":228,"line_end":228,"column_start":9,"column_end":29},"name":"as_changes_trie_root","qualname":"<DigestItem<Hash>>::as_changes_trie_root","value":"pub fn as_changes_trie_root(&Self) -> Option<&Hash>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if the entry is the `ChangesTrieRoot` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if the entry is the `ChangesTrieRoot` entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75017,"byte_end":75080,"line_start":227,"line_end":227,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75246,"byte_end":75260,"line_start":233,"line_end":233,"column_start":9,"column_end":23},"name":"as_pre_runtime","qualname":"<DigestItem<Hash>>::as_pre_runtime","value":"pub fn as_pre_runtime(&Self) -> Option<(ConsensusEngineId, &[u8])>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if this entry is the `PreRuntime` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if this entry is the `PreRuntime` entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75178,"byte_end":75237,"line_start":232,"line_end":232,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75411,"byte_end":75423,"line_start":238,"line_end":238,"column_start":9,"column_end":21},"name":"as_consensus","qualname":"<DigestItem<Hash>>::as_consensus","value":"pub fn as_consensus(&Self) -> Option<(ConsensusEngineId, &[u8])>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if this entry is the `Consensus` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if this entry is the `Consensus` entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75344,"byte_end":75402,"line_start":237,"line_end":237,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75567,"byte_end":75574,"line_start":243,"line_end":243,"column_start":9,"column_end":16},"name":"as_seal","qualname":"<DigestItem<Hash>>::as_seal","value":"pub fn as_seal(&Self) -> Option<(ConsensusEngineId, &[u8])>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if this entry is the `Seal` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if this entry is the `Seal` entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75505,"byte_end":75558,"line_start":242,"line_end":242,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75725,"byte_end":75747,"line_start":248,"line_end":248,"column_start":9,"column_end":31},"name":"as_changes_trie_signal","qualname":"<DigestItem<Hash>>::as_changes_trie_signal","value":"pub fn as_changes_trie_signal(&Self) -> Option<&ChangesTrieSignal>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if the entry is the `ChangesTrieSignal` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if the entry is the `ChangesTrieSignal` entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75651,"byte_end":75716,"line_start":247,"line_end":247,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75892,"byte_end":75900,"line_start":253,"line_end":253,"column_start":9,"column_end":17},"name":"as_other","qualname":"<DigestItem<Hash>>::as_other","value":"pub fn as_other(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns Some if `self` is a `DigestItem::Other`.\n","sig":null,"attributes":[{"value":"/ Returns Some if `self` is a `DigestItem::Other`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":75831,"byte_end":75883,"line_start":252,"line_end":252,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76111,"byte_end":76121,"line_start":261,"line_end":261,"column_start":9,"column_end":19},"name":"try_as_raw","qualname":"<DigestItem<Hash>>::try_as_raw","value":"pub fn try_as_raw(&Self, OpaqueDigestItemId) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the opaque data contained in the item if `Some` if this entry has the id given.\n","sig":null,"attributes":[{"value":"/ Returns the opaque data contained in the item if `Some` if this entry has the id given.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76011,"byte_end":76102,"line_start":260,"line_end":260,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76338,"byte_end":76344,"line_start":267,"line_end":267,"column_start":9,"column_end":15},"name":"try_to","qualname":"<DigestItem<Hash>>::try_to","value":"pub fn try_to<T: Decode>(&Self, OpaqueDigestItemId) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the data contained in the item if `Some` if this entry has the id given, decoded\n to the type provided `T`.\n","sig":null,"attributes":[{"value":"/ Returns the data contained in the item if `Some` if this entry has the id given, decoded","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76206,"byte_end":76298,"line_start":265,"line_end":265,"column_start":2,"column_end":94}},{"value":"/ to the type provided `T`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76300,"byte_end":76329,"line_start":266,"line_end":266,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":77684,"byte_end":77704,"line_start":312,"line_end":312,"column_start":9,"column_end":29},"name":"as_changes_trie_root","qualname":"<DigestItemRef>::as_changes_trie_root","value":"pub fn as_changes_trie_root(&Self) -> Option<&'a Hash>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `ChangesTrieRoot`.\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `ChangesTrieRoot`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":77626,"byte_end":77675,"line_start":311,"line_end":311,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":77910,"byte_end":77924,"line_start":320,"line_end":320,"column_start":9,"column_end":23},"name":"as_pre_runtime","qualname":"<DigestItemRef>::as_pre_runtime","value":"pub fn as_pre_runtime(&Self) -> Option<(ConsensusEngineId, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `PreRuntime`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `PreRuntime`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":77858,"byte_end":77901,"line_start":319,"line_end":319,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":78164,"byte_end":78176,"line_start":328,"line_end":328,"column_start":9,"column_end":21},"name":"as_consensus","qualname":"<DigestItemRef>::as_consensus","value":"pub fn as_consensus(&Self) -> Option<(ConsensusEngineId, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `Consensus`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `Consensus`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":78113,"byte_end":78155,"line_start":327,"line_end":327,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":78410,"byte_end":78417,"line_start":336,"line_end":336,"column_start":9,"column_end":16},"name":"as_seal","qualname":"<DigestItemRef>::as_seal","value":"pub fn as_seal(&Self) -> Option<(ConsensusEngineId, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `Seal`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `Seal`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":78364,"byte_end":78401,"line_start":335,"line_end":335,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":78660,"byte_end":78682,"line_start":344,"line_end":344,"column_start":9,"column_end":31},"name":"as_changes_trie_signal","qualname":"<DigestItemRef>::as_changes_trie_signal","value":"pub fn as_changes_trie_signal(&Self) -> Option<&'a ChangesTrieSignal>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `ChangesTrieSignal`.\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `ChangesTrieSignal`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":78600,"byte_end":78651,"line_start":343,"line_end":343,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":78907,"byte_end":78915,"line_start":352,"line_end":352,"column_start":9,"column_end":17},"name":"as_other","qualname":"<DigestItemRef>::as_other","value":"pub fn as_other(&Self) -> Option<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `PreRuntime`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `PreRuntime`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":78855,"byte_end":78898,"line_start":351,"line_end":351,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":79173,"byte_end":79183,"line_start":361,"line_end":361,"column_start":9,"column_end":19},"name":"try_as_raw","qualname":"<DigestItemRef>::try_as_raw","value":"pub fn try_as_raw(&Self, OpaqueDigestItemId) -> Option<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Try to match this digest item to the given opaque item identifier; if it matches, then\n return the opaque data it contains.\n","sig":null,"attributes":[{"value":"/ Try to match this digest item to the given opaque item identifier; if it matches, then","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":79033,"byte_end":79123,"line_start":359,"line_end":359,"column_start":2,"column_end":92}},{"value":"/ return the opaque data it contains.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":79125,"byte_end":79164,"line_start":360,"line_end":360,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":79763,"byte_end":79769,"line_start":374,"line_end":374,"column_start":9,"column_end":15},"name":"try_to","qualname":"<DigestItemRef>::try_to","value":"pub fn try_to<T: Decode>(&Self, OpaqueDigestItemId) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Try to match this digest item to the given opaque item identifier; if it matches, then\n try to cast to the given data type; if that works, return it.\n","sig":null,"attributes":[{"value":"/ Try to match this digest item to the given opaque item identifier; if it matches, then","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":79597,"byte_end":79687,"line_start":372,"line_end":372,"column_start":2,"column_end":92}},{"value":"/ try to cast to the given data type; if that works, return it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":79689,"byte_end":79754,"line_start":373,"line_end":373,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":80965,"byte_end":80985,"line_start":416,"line_end":416,"column_start":9,"column_end":29},"name":"as_new_configuration","qualname":"<ChangesTrieSignal>::as_new_configuration","value":"pub fn as_new_configuration(&Self)\n-> Option<&Option<ChangesTrieConfiguration>>","parent":null,"children":[],"decl_id":null,"docs":" Try to cast this signal to NewConfiguration.\n","sig":null,"attributes":[{"value":"/ Try to cast this signal to NewConfiguration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":80908,"byte_end":80956,"line_start":415,"line_end":415,"column_start":2,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":451},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offchain","qualname":"::offchain","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/mod.rs","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":530},{"krate":0,"index":554},{"krate":0,"index":657}],"decl_id":null,"docs":" A collection of higher lever helpers for offchain calls.\n","sig":null,"attributes":[{"value":"/ A collection of higher lever helpers for offchain calls.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/mod.rs","byte_start":82284,"byte_end":82344,"line_start":18,"line_end":18,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":452},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"http","qualname":"::offchain::http","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":4143},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":2317},{"krate":0,"index":2340},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2331},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":2356},{"krate":0,"index":2383},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2368},{"krate":0,"index":2371},{"krate":0,"index":2364},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":479},{"krate":0,"index":488},{"krate":0,"index":2387},{"krate":0,"index":2402},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2394},{"krate":0,"index":2404},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2406},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":2415},{"krate":0,"index":2419},{"krate":0,"index":506},{"krate":0,"index":2421},{"krate":0,"index":2429},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":518},{"krate":0,"index":2431},{"krate":0,"index":2442},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2433},{"krate":0,"index":521},{"krate":0,"index":2444},{"krate":0,"index":2451},{"krate":0,"index":2448},{"krate":0,"index":524}],"decl_id":null,"docs":" A high-level helpers for making HTTP requests from Offchain Workers.","sig":null,"attributes":[{"value":"/ A high-level helpers for making HTTP requests from Offchain Workers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83117,"byte_end":83189,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83190,"byte_end":83193,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `sp-io` crate exposes a low level methods to make and control HTTP requests","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83194,"byte_end":83273,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ available only for Offchain Workers. Those might be hard to use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83274,"byte_end":83341,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ and usually that level of control is not really necessary.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83342,"byte_end":83404,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/ This module aims to provide high-level wrappers for those APIs","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83405,"byte_end":83471,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ to simplify making HTTP requests.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83472,"byte_end":83509,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83510,"byte_end":83513,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83514,"byte_end":83517,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83518,"byte_end":83530,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83531,"byte_end":83549,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ use sp_runtime::offchain::http::Request;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83550,"byte_end":83594,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83595,"byte_end":83598,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // initiate a GET request to localhost:1234","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83599,"byte_end":83646,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/ let request: Request = Request::get(\"http://localhost:1234\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83647,"byte_end":83712,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/ let pending = request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83713,"byte_end":83738,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ \t.add_header(\"X-Auth\", \"hunter2\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83739,"byte_end":83776,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ \t.send()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83777,"byte_end":83789,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/ \t.unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83790,"byte_end":83805,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83806,"byte_end":83809,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // wait for the response indefinitely","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83810,"byte_end":83851,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ let mut response = pending.wait().unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83852,"byte_end":83899,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83900,"byte_end":83903,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // then check the headers","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83904,"byte_end":83933,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/ let mut headers = response.headers().into_iter();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83934,"byte_end":83987,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(headers.current(), None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":83988,"byte_end":84028,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84029,"byte_end":84032,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // and collect the body","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84033,"byte_end":84060,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ let body = response.body();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84061,"byte_end":84092,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(body.clone().collect::<Vec<_>>(), b\"1234\".to_vec());","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84093,"byte_end":84160,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(body.error(), &None);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84161,"byte_end":84197,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84198,"byte_end":84205,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2318},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84564,"byte_end":84567,"line_start":67,"line_end":67,"column_start":2,"column_end":5},"name":"Get","qualname":"::offchain::http::Method::Get","value":"Method::Get","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":" GET request\n","sig":null,"attributes":[{"value":"/ GET request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84547,"byte_end":84562,"line_start":66,"line_end":66,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2320},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84588,"byte_end":84592,"line_start":69,"line_end":69,"column_start":2,"column_end":6},"name":"Post","qualname":"::offchain::http::Method::Post","value":"Method::Post","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":" POST request\n","sig":null,"attributes":[{"value":"/ POST request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84570,"byte_end":84586,"line_start":68,"line_end":68,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84612,"byte_end":84615,"line_start":71,"line_end":71,"column_start":2,"column_end":5},"name":"Put","qualname":"::offchain::http::Method::Put","value":"Method::Put","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":" PUT request\n","sig":null,"attributes":[{"value":"/ PUT request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84595,"byte_end":84610,"line_start":70,"line_end":70,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2324},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84637,"byte_end":84642,"line_start":73,"line_end":73,"column_start":2,"column_end":7},"name":"Patch","qualname":"::offchain::http::Method::Patch","value":"Method::Patch","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":" PATCH request\n","sig":null,"attributes":[{"value":"/ PATCH request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84618,"byte_end":84635,"line_start":72,"line_end":72,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2326},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84665,"byte_end":84671,"line_start":75,"line_end":75,"column_start":2,"column_end":8},"name":"Delete","qualname":"::offchain::http::Method::Delete","value":"Method::Delete","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":" DELETE request\n","sig":null,"attributes":[{"value":"/ DELETE request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84645,"byte_end":84663,"line_start":74,"line_end":74,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2328},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84691,"byte_end":84696,"line_start":77,"line_end":77,"column_start":2,"column_end":7},"name":"Other","qualname":"::offchain::http::Method::Other","value":"Method::Other(&'static str)","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":" Custom verb\n","sig":null,"attributes":[{"value":"/ Custom verb","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84674,"byte_end":84689,"line_start":76,"line_end":76,"column_start":2,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":2317},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84537,"byte_end":84543,"line_start":65,"line_end":65,"column_start":10,"column_end":16},"name":"Method","qualname":"::offchain::http::Method","value":"pub enum Method {\n\n    /// GET request\n    Get,\n\n    /// POST request\n    Post,\n\n    /// PUT request\n    Put,\n\n    /// PATCH request\n    Patch,\n\n    /// DELETE request\n    Delete,\n\n    /// Custom verb\n    Other(&'static str),\n}","parent":null,"children":[{"krate":0,"index":2318},{"krate":0,"index":2320},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2326},{"krate":0,"index":2328}],"decl_id":null,"docs":" Request method (HTTP verb)\n","sig":null,"attributes":[{"value":"/ Request method (HTTP verb)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84451,"byte_end":84481,"line_start":63,"line_end":63,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2356},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86006,"byte_end":86013,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"Request","qualname":"::offchain::http::Request","value":"Request { method, url, body, deadline }","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363}],"decl_id":null,"docs":" An HTTP request builder.\n","sig":null,"attributes":[{"value":"/ An HTTP request builder.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":85920,"byte_end":85948,"line_start":130,"line_end":130,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2359},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86069,"byte_end":86075,"line_start":134,"line_end":134,"column_start":6,"column_end":12},"name":"method","qualname":"::offchain::http::Request::method","value":"offchain::http::Method","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" Request method\n","sig":null,"attributes":[{"value":"/ Request method","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86045,"byte_end":86063,"line_start":133,"line_end":133,"column_start":2,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2360},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86107,"byte_end":86110,"line_start":136,"line_end":136,"column_start":6,"column_end":9},"name":"url","qualname":"::offchain::http::Request::url","value":"&'a str","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" Request URL\n","sig":null,"attributes":[{"value":"/ Request URL","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86086,"byte_end":86101,"line_start":135,"line_end":135,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2361},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86151,"byte_end":86155,"line_start":138,"line_end":138,"column_start":6,"column_end":10},"name":"body","qualname":"::offchain::http::Request::body","value":"T","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" Body of the request\n","sig":null,"attributes":[{"value":"/ Body of the request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86122,"byte_end":86145,"line_start":137,"line_end":137,"column_start":2,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2362},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86209,"byte_end":86217,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"name":"deadline","qualname":"::offchain::http::Request::deadline","value":"std::option::Option<sp_core::offchain::Timestamp>","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" Deadline to finish sending the request\n","sig":null,"attributes":[{"value":"/ Deadline to finish sending the request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86161,"byte_end":86203,"line_start":139,"line_end":139,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86586,"byte_end":86589,"line_start":159,"line_end":159,"column_start":9,"column_end":12},"name":"get","qualname":"<Request>::get","value":"pub fn get(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start a simple GET request\n","sig":null,"attributes":[{"value":"/ Start a simple GET request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86547,"byte_end":86577,"line_start":158,"line_end":158,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86720,"byte_end":86724,"line_start":166,"line_end":166,"column_start":9,"column_end":13},"name":"post","qualname":"<Request>::post","value":"pub fn post(&'a str, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new POST request with given body.\n","sig":null,"attributes":[{"value":"/ Create new POST request with given body.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86667,"byte_end":86711,"line_start":165,"line_end":165,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87016,"byte_end":87019,"line_start":181,"line_end":181,"column_start":9,"column_end":12},"name":"new","qualname":"<Request>::new","value":"pub fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Request builder with the given URL.\n","sig":null,"attributes":[{"value":"/ Create a new Request builder with the given URL.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86955,"byte_end":87007,"line_start":180,"line_end":180,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87124,"byte_end":87130,"line_start":186,"line_end":186,"column_start":9,"column_end":15},"name":"method","qualname":"<Request>::method","value":"pub fn method(Self, Method) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change the method of the request\n","sig":null,"attributes":[{"value":"/ Change the method of the request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87079,"byte_end":87115,"line_start":185,"line_end":185,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87246,"byte_end":87249,"line_start":192,"line_end":192,"column_start":9,"column_end":12},"name":"url","qualname":"<Request>::url","value":"pub fn url(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change the URL of the request.\n","sig":null,"attributes":[{"value":"/ Change the URL of the request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87203,"byte_end":87237,"line_start":191,"line_end":191,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87355,"byte_end":87359,"line_start":198,"line_end":198,"column_start":9,"column_end":13},"name":"body","qualname":"<Request>::body","value":"pub fn body(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the body of the request.\n","sig":null,"attributes":[{"value":"/ Set the body of the request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87314,"byte_end":87346,"line_start":197,"line_end":197,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87447,"byte_end":87457,"line_start":204,"line_end":204,"column_start":9,"column_end":19},"name":"add_header","qualname":"<Request>::add_header","value":"pub fn add_header(Self, &str, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a header.\n","sig":null,"attributes":[{"value":"/ Add a header.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87421,"byte_end":87438,"line_start":203,"line_end":203,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87615,"byte_end":87623,"line_start":210,"line_end":210,"column_start":9,"column_end":17},"name":"deadline","qualname":"<Request>::deadline","value":"pub fn deadline(Self, Timestamp) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the deadline of the request.\n","sig":null,"attributes":[{"value":"/ Set the deadline of the request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87570,"byte_end":87606,"line_start":209,"line_end":209,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87918,"byte_end":87922,"line_start":221,"line_end":221,"column_start":9,"column_end":13},"name":"send","qualname":"<Request>::send","value":"pub fn send(Self) -> Result<PendingRequest, HttpError>","parent":null,"children":[],"decl_id":null,"docs":" Send the request and return a handle.","sig":null,"attributes":[{"value":"/ Send the request and return a handle.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87780,"byte_end":87821,"line_start":217,"line_end":217,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87823,"byte_end":87826,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ Err is returned in case the deadline is reached","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87828,"byte_end":87879,"line_start":219,"line_end":219,"column_start":2,"column_end":53}},{"value":"/ or the request timeouts.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87881,"byte_end":87909,"line_start":220,"line_end":220,"column_start":2,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2388},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88721,"byte_end":88736,"line_start":258,"line_end":258,"column_start":2,"column_end":17},"name":"DeadlineReached","qualname":"::offchain::http::Error::DeadlineReached","value":"Error::DeadlineReached","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":" Deadline has been reached.\n","sig":null,"attributes":[{"value":"/ Deadline has been reached.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88689,"byte_end":88719,"line_start":257,"line_end":257,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2390},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88767,"byte_end":88774,"line_start":260,"line_end":260,"column_start":2,"column_end":9},"name":"IoError","qualname":"::offchain::http::Error::IoError","value":"Error::IoError","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":" Request had timed out.\n","sig":null,"attributes":[{"value":"/ Request had timed out.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88739,"byte_end":88765,"line_start":259,"line_end":259,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2392},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88818,"byte_end":88825,"line_start":262,"line_end":262,"column_start":2,"column_end":9},"name":"Unknown","qualname":"::offchain::http::Error::Unknown","value":"Error::Unknown","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":" Unknown error has been encountered.\n","sig":null,"attributes":[{"value":"/ Unknown error has been encountered.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88777,"byte_end":88816,"line_start":261,"line_end":261,"column_start":2,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2387},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88680,"byte_end":88685,"line_start":256,"line_end":256,"column_start":10,"column_end":15},"name":"Error","qualname":"::offchain::http::Error","value":"pub enum Error {\n\n    /// Deadline has been reached.\n    DeadlineReached,\n\n    /// Request had timed out.\n    IoError,\n\n    /// Unknown error has been encountered.\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2392}],"decl_id":null,"docs":" A request error\n","sig":null,"attributes":[{"value":"/ A request error","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88605,"byte_end":88624,"line_start":254,"line_end":254,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2404},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88935,"byte_end":88949,"line_start":267,"line_end":267,"column_start":12,"column_end":26},"name":"PendingRequest","qualname":"::offchain::http::PendingRequest","value":"PendingRequest { id }","parent":null,"children":[{"krate":0,"index":2405}],"decl_id":null,"docs":" A struct representing an uncompleted http request.\n","sig":null,"attributes":[{"value":"/ A struct representing an uncompleted http request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88830,"byte_end":88884,"line_start":265,"line_end":265,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2405},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88973,"byte_end":88975,"line_start":269,"line_end":269,"column_start":6,"column_end":8},"name":"id","qualname":"::offchain::http::PendingRequest::id","value":"sp_core::offchain::HttpRequestId","parent":{"krate":0,"index":2404},"children":[],"decl_id":null,"docs":" Request ID\n","sig":null,"attributes":[{"value":"/ Request ID","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88953,"byte_end":88967,"line_start":268,"line_end":268,"column_start":2,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":495},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89047,"byte_end":89057,"line_start":273,"line_end":273,"column_start":10,"column_end":20},"name":"HttpResult","qualname":"::offchain::http::HttpResult","value":"Result<Response, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result of waiting for a pending request.\n","sig":null,"attributes":[{"value":"/ A result of waiting for a pending request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":88991,"byte_end":89037,"line_start":272,"line_end":272,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89211,"byte_end":89215,"line_start":279,"line_end":279,"column_start":9,"column_end":13},"name":"wait","qualname":"<PendingRequest>::wait","value":"pub fn wait(Self) -> HttpResult","parent":null,"children":[],"decl_id":null,"docs":" Wait for the request to complete.","sig":null,"attributes":[{"value":"/ Wait for the request to complete.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89109,"byte_end":89146,"line_start":276,"line_end":276,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89148,"byte_end":89151,"line_start":277,"line_end":277,"column_start":2,"column_end":5}},{"value":"/ NOTE this waits for the request indefinitely.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89153,"byte_end":89202,"line_start":278,"line_end":278,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89499,"byte_end":89507,"line_start":288,"line_end":288,"column_start":9,"column_end":17},"name":"try_wait","qualname":"<PendingRequest>::try_wait","value":"pub fn try_wait<impl Into<Option<Timestamp>>: Into<Option<Timestamp>>>(Self,\n                                                                       impl Into<Option<Timestamp>>)\n-> Result<HttpResult, PendingRequest>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to wait for the request to finish,\n but will return `Err` in case the deadline is reached.\n","sig":null,"attributes":[{"value":"/ Attempts to wait for the request to finish,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89383,"byte_end":89430,"line_start":286,"line_end":286,"column_start":2,"column_end":49}},{"value":"/ but will return `Err` in case the deadline is reached.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89432,"byte_end":89490,"line_start":287,"line_end":287,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89747,"byte_end":89755,"line_start":293,"line_end":293,"column_start":9,"column_end":17},"name":"wait_all","qualname":"<PendingRequest>::wait_all","value":"pub fn wait_all(Vec<PendingRequest>) -> Vec<HttpResult>","parent":null,"children":[],"decl_id":null,"docs":" Wait for all provided requests.\n","sig":null,"attributes":[{"value":"/ Wait for all provided requests.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89703,"byte_end":89738,"line_start":292,"line_end":292,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":90200,"byte_end":90212,"line_start":306,"line_end":306,"column_start":9,"column_end":21},"name":"try_wait_all","qualname":"<PendingRequest>::try_wait_all","value":"pub fn try_wait_all<impl Into<Option<Timestamp>>: Into<Option<Timestamp>>>(Vec<PendingRequest>,\n                                                                           impl Into<Option<Timestamp>>)\n-> Vec<Result<HttpResult, PendingRequest>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to wait for all provided requests, but up to given deadline.","sig":null,"attributes":[{"value":"/ Attempt to wait for all provided requests, but up to given deadline.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":90012,"byte_end":90084,"line_start":303,"line_end":303,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":90086,"byte_end":90089,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ Requests that are complete will resolve to an `Ok` others will return a `DeadlineReached` error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":90091,"byte_end":90191,"line_start":305,"line_end":305,"column_start":2,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":2415},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":90887,"byte_end":90895,"line_start":328,"line_end":328,"column_start":12,"column_end":20},"name":"Response","qualname":"::offchain::http::Response","value":"Response { id, code }","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418}],"decl_id":null,"docs":" A HTTP response.\n","sig":null,"attributes":[{"value":"/ A HTTP response.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":90831,"byte_end":90851,"line_start":326,"line_end":326,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2416},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":90919,"byte_end":90921,"line_start":330,"line_end":330,"column_start":6,"column_end":8},"name":"id","qualname":"::offchain::http::Response::id","value":"sp_core::offchain::HttpRequestId","parent":{"krate":0,"index":2415},"children":[],"decl_id":null,"docs":" Request id\n","sig":null,"attributes":[{"value":"/ Request id","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":90899,"byte_end":90913,"line_start":329,"line_end":329,"column_start":2,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":2417},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":90965,"byte_end":90969,"line_start":332,"line_end":332,"column_start":6,"column_end":10},"name":"code","qualname":"::offchain::http::Response::code","value":"u16","parent":{"krate":0,"index":2415},"children":[],"decl_id":null,"docs":" Response status code\n","sig":null,"attributes":[{"value":"/ Response status code","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":90935,"byte_end":90959,"line_start":331,"line_end":331,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91200,"byte_end":91207,"line_start":347,"line_end":347,"column_start":9,"column_end":16},"name":"headers","qualname":"<Response>::headers","value":"pub fn headers(&mut Self) -> &Headers","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the headers for this response.\n","sig":null,"attributes":[{"value":"/ Retrieve the headers for this response.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91148,"byte_end":91191,"line_start":346,"line_end":346,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91481,"byte_end":91485,"line_start":357,"line_end":357,"column_start":9,"column_end":13},"name":"body","qualname":"<Response>::body","value":"pub fn body(&Self) -> ResponseBody","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the body of this response.\n","sig":null,"attributes":[{"value":"/ Retrieve the body of this response.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91433,"byte_end":91472,"line_start":356,"line_end":356,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2421},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":92023,"byte_end":92035,"line_start":371,"line_end":371,"column_start":12,"column_end":24},"name":"ResponseBody","qualname":"::offchain::http::ResponseBody","value":"ResponseBody {  }","parent":null,"children":[{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428}],"decl_id":null,"docs":" A buffered byte iterator over response body.","sig":null,"attributes":[{"value":"/ A buffered byte iterator over response body.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91546,"byte_end":91594,"line_start":362,"line_end":362,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91595,"byte_end":91598,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ Note that reading the body may return `None` in following cases:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91599,"byte_end":91667,"line_start":364,"line_end":364,"column_start":1,"column_end":69}},{"value":"/ 1. Either the deadline you've set is reached (check via `#error`;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91668,"byte_end":91737,"line_start":365,"line_end":365,"column_start":1,"column_end":70}},{"value":"/\t   In such case you can resume the reader by setting a new deadline)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91738,"byte_end":91810,"line_start":366,"line_end":366,"column_start":1,"column_end":73}},{"value":"/ 2. Or because of IOError. In such case the reader is not resumable and will keep","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91811,"byte_end":91895,"line_start":367,"line_end":367,"column_start":1,"column_end":85}},{"value":"/    returning `None`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91896,"byte_end":91920,"line_start":368,"line_end":368,"column_start":1,"column_end":25}},{"value":"/ 3. The body has been returned. The reader will keep returning `None`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91921,"byte_end":91994,"line_start":369,"line_end":369,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":92825,"byte_end":92833,"line_start":407,"line_end":407,"column_start":9,"column_end":17},"name":"deadline","qualname":"<ResponseBody>::deadline","value":"pub fn deadline<impl Into<Option<Timestamp>>: Into<Option<Timestamp>>>(&mut Self,\n                                                                       impl Into<Option<Timestamp>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the deadline for reading the body.\n","sig":null,"attributes":[{"value":"/ Set the deadline for reading the body.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":92774,"byte_end":92816,"line_start":406,"line_end":406,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":93123,"byte_end":93128,"line_start":416,"line_end":416,"column_start":9,"column_end":14},"name":"error","qualname":"<ResponseBody>::error","value":"pub fn error(&Self) -> &Option<HttpError>","parent":null,"children":[],"decl_id":null,"docs":" Return an error that caused the iterator to return `None`.","sig":null,"attributes":[{"value":"/ Return an error that caused the iterator to return `None`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":92948,"byte_end":93010,"line_start":412,"line_end":412,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":93012,"byte_end":93015,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ If the error is `DeadlineReached` you can resume the iterator by setting","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":93017,"byte_end":93093,"line_start":414,"line_end":414,"column_start":2,"column_end":78}},{"value":"/ a new deadline.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":93095,"byte_end":93114,"line_start":415,"line_end":415,"column_start":2,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2431},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":93993,"byte_end":94000,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"Headers","qualname":"::offchain::http::Headers","value":"Headers { raw }","parent":null,"children":[{"krate":0,"index":2432}],"decl_id":null,"docs":" A collection of Headers in the response.\n","sig":null,"attributes":[{"value":"/ A collection of Headers in the response.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":93891,"byte_end":93935,"line_start":460,"line_end":460,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2432},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94025,"byte_end":94028,"line_start":464,"line_end":464,"column_start":6,"column_end":9},"name":"raw","qualname":"::offchain::http::Headers::raw","value":"sp_application_crypto::Vec<(sp_application_crypto::Vec<u8>, sp_application_crypto::Vec<u8>)>","parent":{"krate":0,"index":2431},"children":[],"decl_id":null,"docs":" Raw headers\n","sig":null,"attributes":[{"value":"/ Raw headers","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94004,"byte_end":94019,"line_start":463,"line_end":463,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94358,"byte_end":94362,"line_start":474,"line_end":474,"column_start":9,"column_end":13},"name":"find","qualname":"<Headers>::find","value":"pub fn find(&Self, &str) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a single header from the list of headers.","sig":null,"attributes":[{"value":"/ Retrieve a single header from the list of headers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94074,"byte_end":94128,"line_start":468,"line_end":468,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94130,"byte_end":94133,"line_start":469,"line_end":469,"column_start":2,"column_end":5}},{"value":"/ Note this method is linearly looking from all the headers","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94135,"byte_end":94196,"line_start":470,"line_end":470,"column_start":2,"column_end":63}},{"value":"/ comparing them with the needle byte-by-byte.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94198,"byte_end":94246,"line_start":471,"line_end":471,"column_start":2,"column_end":50}},{"value":"/ If you want to consume multiple headers it's better to iterate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94248,"byte_end":94314,"line_start":472,"line_end":472,"column_start":2,"column_end":68}},{"value":"/ and collect them on your own.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94316,"byte_end":94349,"line_start":473,"line_end":473,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94601,"byte_end":94610,"line_start":485,"line_end":485,"column_start":9,"column_end":18},"name":"into_iter","qualname":"<Headers>::into_iter","value":"pub fn into_iter(&Self) -> HeadersIterator","parent":null,"children":[],"decl_id":null,"docs":" Convert this headers into an iterator.\n","sig":null,"attributes":[{"value":"/ Convert this headers into an iterator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94550,"byte_end":94592,"line_start":484,"line_end":484,"column_start":2,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2444},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94794,"byte_end":94809,"line_start":492,"line_end":492,"column_start":12,"column_end":27},"name":"HeadersIterator","qualname":"::offchain::http::HeadersIterator","value":"HeadersIterator {  }","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"decl_id":null,"docs":" A custom iterator traversing all the headers.\n","sig":null,"attributes":[{"value":"/ A custom iterator traversing all the headers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94702,"byte_end":94751,"line_start":490,"line_end":490,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":95030,"byte_end":95034,"line_start":501,"line_end":501,"column_start":9,"column_end":13},"name":"next","qualname":"<HeadersIterator>::next","value":"pub fn next(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Move the iterator to the next position.","sig":null,"attributes":[{"value":"/ Move the iterator to the next position.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94913,"byte_end":94956,"line_start":498,"line_end":498,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94958,"byte_end":94961,"line_start":499,"line_end":499,"column_start":2,"column_end":5}},{"value":"/ Returns `true` is `current` has been set by this call.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94963,"byte_end":95021,"line_start":500,"line_end":500,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":95287,"byte_end":95294,"line_start":510,"line_end":510,"column_start":9,"column_end":16},"name":"current","qualname":"<HeadersIterator>::current","value":"pub fn current(&Self) -> Option<(&str, &str)>","parent":null,"children":[],"decl_id":null,"docs":" Returns current element (if any).","sig":null,"attributes":[{"value":"/ Returns current element (if any).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":95175,"byte_end":95212,"line_start":507,"line_end":507,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":95214,"byte_end":95217,"line_start":508,"line_end":508,"column_start":2,"column_end":5}},{"value":"/ Note that you have to call `next` prior to calling this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":95219,"byte_end":95278,"line_start":509,"line_end":509,"column_start":2,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":530},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::offchain::storage","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":537}],"decl_id":null,"docs":" A set of storage helpers for offchain workers.\n","sig":null,"attributes":[{"value":"/ A set of storage helpers for offchain workers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":98538,"byte_end":98588,"line_start":18,"line_end":18,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":532},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":98675,"byte_end":98687,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"StorageValue","qualname":"::offchain::storage::StorageValue","value":"StorageValueRef","parent":null,"children":[],"decl_id":null,"docs":" A storage value with a static key.\n","sig":null,"attributes":[{"value":"/ A storage value with a static key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":98627,"byte_end":98665,"line_start":22,"line_end":22,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":533},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":98773,"byte_end":98788,"line_start":26,"line_end":26,"column_start":12,"column_end":27},"name":"StorageValueRef","qualname":"::offchain::storage::StorageValueRef","value":"StorageValueRef {  }","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" An abstraction over local storage value.\n","sig":null,"attributes":[{"value":"/ An abstraction over local storage value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":98717,"byte_end":98761,"line_start":25,"line_end":25,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":98945,"byte_end":98955,"line_start":33,"line_end":33,"column_start":9,"column_end":19},"name":"persistent","qualname":"<StorageValueRef>::persistent","value":"pub fn persistent(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new reference to a value in the persistent local storage.\n","sig":null,"attributes":[{"value":"/ Create a new reference to a value in the persistent local storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":98866,"byte_end":98936,"line_start":32,"line_end":32,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99111,"byte_end":99116,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"local","qualname":"<StorageValueRef>::local","value":"pub fn local(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new reference to a value in the fork-aware local storage.\n","sig":null,"attributes":[{"value":"/ Create a new reference to a value in the fork-aware local storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99032,"byte_end":99102,"line_start":37,"line_end":37,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99451,"byte_end":99454,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"set","qualname":"<StorageValueRef>::set","value":"pub fn set<impl codec::Encode: codec::Encode>(&Self, &impl codec::Encode)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the storage to encoding of given parameter.","sig":null,"attributes":[{"value":"/ Set the value of the storage to encoding of given parameter.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99188,"byte_end":99252,"line_start":42,"line_end":42,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99254,"byte_end":99257,"line_start":43,"line_end":43,"column_start":2,"column_end":5}},{"value":"/ Note that the storage may be accessed by workers running concurrently,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99259,"byte_end":99333,"line_start":44,"line_end":44,"column_start":2,"column_end":76}},{"value":"/ if you happen to write a `get-check-set` pattern you should most likely","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99335,"byte_end":99410,"line_start":45,"line_end":45,"column_start":2,"column_end":77}},{"value":"/ be using `mutate` instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99412,"byte_end":99442,"line_start":46,"line_end":46,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99654,"byte_end":99659,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"clear","qualname":"<StorageValueRef>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the associated value from the storage.\n","sig":null,"attributes":[{"value":"/ Remove the associated value from the storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99596,"byte_end":99645,"line_start":53,"line_end":53,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100067,"byte_end":100070,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"get","qualname":"<StorageValueRef>::get","value":"pub fn get<T: codec::Decode>(&Self) -> Option<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve & decode the value from storage.","sig":null,"attributes":[{"value":"/ Retrieve & decode the value from storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99738,"byte_end":99783,"line_start":58,"line_end":58,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99785,"byte_end":99788,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ Note that if you want to do some checks based on the value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99790,"byte_end":99852,"line_start":60,"line_end":60,"column_start":2,"column_end":64}},{"value":"/ and write changes after that you should rather be using `mutate`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99854,"byte_end":99923,"line_start":61,"line_end":61,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99925,"byte_end":99928,"line_start":62,"line_end":62,"column_start":2,"column_end":5}},{"value":"/ The function returns `None` if the value was not found in storage,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":99930,"byte_end":100000,"line_start":63,"line_end":63,"column_start":2,"column_end":72}},{"value":"/ otherwise a decoding of the value to requested type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100002,"byte_end":100058,"line_start":64,"line_end":64,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100650,"byte_end":100656,"line_start":78,"line_end":78,"column_start":9,"column_end":15},"name":"mutate","qualname":"<StorageValueRef>::mutate","value":"pub fn mutate<T, E, F>(&Self, F) -> Result<Result<T, T>, E> where\nT: codec::Codec, F: FnOnce(Option<Option<T>>) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve & decode the value and set it to a new one atomically.","sig":null,"attributes":[{"value":"/ Retrieve & decode the value and set it to a new one atomically.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100224,"byte_end":100291,"line_start":70,"line_end":70,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100293,"byte_end":100296,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ Function `f` should return a new value that we should attempt to write to storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100298,"byte_end":100384,"line_start":72,"line_end":72,"column_start":2,"column_end":88}},{"value":"/ This function returns:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100386,"byte_end":100412,"line_start":73,"line_end":73,"column_start":2,"column_end":28}},{"value":"/ 1. `Ok(Ok(T))` in case the value has been successfully set.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100414,"byte_end":100477,"line_start":74,"line_end":74,"column_start":2,"column_end":65}},{"value":"/ 2. `Ok(Err(T))` in case the value was calculated by the passed closure `f`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100479,"byte_end":100558,"line_start":75,"line_end":75,"column_start":2,"column_end":81}},{"value":"/    but it could not be stored.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100560,"byte_end":100594,"line_start":76,"line_end":76,"column_start":2,"column_end":36}},{"value":"/ 3. `Err(_)` in case `f` returns an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":100596,"byte_end":100641,"line_start":77,"line_end":77,"column_start":2,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":554},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage_lock","qualname":"::offchain::storage_lock","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":4157},{"krate":0,"index":560},{"krate":0,"index":4159},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":2454},{"krate":0,"index":2461},{"krate":0,"index":2456},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":2471},{"krate":0,"index":2492},{"krate":0,"index":2486},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2475},{"krate":0,"index":2477},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":610},{"krate":0,"index":615},{"krate":0,"index":619},{"krate":0,"index":630},{"krate":0,"index":635},{"krate":0,"index":641},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":654}],"decl_id":null,"docs":" # Off-chain Storage Lock","sig":null,"attributes":[{"value":"/ # Off-chain Storage Lock","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103342,"byte_end":103370,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103371,"byte_end":103374,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A storage-based lock with a defined expiry time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103375,"byte_end":103427,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103428,"byte_end":103431,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The lock is using Local Storage and allows synchronizing access to critical","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103432,"byte_end":103511,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ section of your code for concurrently running Off-chain Workers. Usage of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103512,"byte_end":103589,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ `PERSISTENT` variant of the storage persists the lock value across a full node","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103590,"byte_end":103672,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/ restart or re-orgs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103673,"byte_end":103696,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103697,"byte_end":103700,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A use case for the lock is to make sure that a particular section of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103701,"byte_end":103777,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ code is only run by one Off-chain Worker at a time. This may include","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103778,"byte_end":103850,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ performing a side-effect (i.e. an HTTP call) or alteration of single or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103851,"byte_end":103926,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ multiple Local Storage entries.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103927,"byte_end":103962,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103963,"byte_end":103966,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ One use case would be collective updates of multiple data items or append /","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":103967,"byte_end":104046,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ remove of i.e. sets, vectors which are stored in the off-chain storage DB.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104047,"byte_end":104125,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104126,"byte_end":104129,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ## Example:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104130,"byte_end":104145,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104146,"byte_end":104149,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104150,"byte_end":104161,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ # use codec::{Decode, Encode, Codec};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104162,"byte_end":104203,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/ // in your off-chain worker code","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104204,"byte_end":104240,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ use sp_runtime::offchain::{","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104241,"byte_end":104272,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/\t\tstorage::StorageValueRef,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104273,"byte_end":104303,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/\t\tstorage_lock::{StorageLock, Time},","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104304,"byte_end":104343,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ };","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104344,"byte_end":104350,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104351,"byte_end":104354,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ fn append_to_in_storage_vec<'a, T>(key: &'a [u8], _: T) where T: Codec {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104355,"byte_end":104431,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/    // `access::lock` defines the storage entry which is used for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104432,"byte_end":104500,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/    // persisting the lock in the underlying database.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104501,"byte_end":104558,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/    // The entry name _must_ be unique and can be interpreted as a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104559,"byte_end":104628,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/    // unique mutex instance reference tag.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104629,"byte_end":104675,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/    let mut lock = StorageLock::<Time>::new(b\"access::lock\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104676,"byte_end":104740,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/    {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104741,"byte_end":104749,"line_start":50,"line_end":50,"column_start":1,"column_end":9}},{"value":"/         let _guard = lock.lock();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104750,"byte_end":104787,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         let acc = StorageValueRef::persistent(key);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104788,"byte_end":104843,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/         let v: Vec<T> = acc.get::<Vec<T>>().unwrap().unwrap();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104844,"byte_end":104910,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/         // modify `v` as desired","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104911,"byte_end":104947,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/         // i.e. perform some heavy computation with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":104948,"byte_end":105003,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/         // side effects that should only be done once.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":105004,"byte_end":105062,"line_start":56,"line_end":56,"column_start":1,"column_end":59}},{"value":"/         acc.set(&v);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":105063,"byte_end":105087,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/         // drop `_guard` implicitly at end of scope","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":105088,"byte_end":105143,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/    }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":105144,"byte_end":105152,"line_start":59,"line_end":59,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":105153,"byte_end":105158,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":105159,"byte_end":105166,"line_start":61,"line_end":61,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":569},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106065,"byte_end":106073,"line_start":83,"line_end":83,"column_start":11,"column_end":19},"name":"Lockable","qualname":"::offchain::storage_lock::Lockable","value":"Lockable: Sized","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" Lockable item for use with a persisted storage lock.","sig":null,"attributes":[{"value":"/ Lockable item for use with a persisted storage lock.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":105879,"byte_end":105935,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":105936,"byte_end":105939,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Bound for an item that has a stateful ordered meaning","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":105940,"byte_end":105997,"line_start":81,"line_end":81,"column_start":1,"column_end":58}},{"value":"/ without explicitly requiring `Ord` trait in general.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":105998,"byte_end":106054,"line_start":82,"line_end":82,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":570},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106143,"byte_end":106151,"line_start":85,"line_end":85,"column_start":7,"column_end":15},"name":"Deadline","qualname":"::offchain::storage_lock::Lockable::Deadline","value":"type Deadline: Sized + Codec + Clone;","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" An instant type specifying i.e. a point in time.\n","sig":null,"attributes":[{"value":"/ An instant type specifying i.e. a point in time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106084,"byte_end":106136,"line_start":84,"line_end":84,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106294,"byte_end":106302,"line_start":89,"line_end":89,"column_start":5,"column_end":13},"name":"deadline","qualname":"::offchain::storage_lock::Lockable::deadline","value":"pub fn deadline(&Self) -> Self::Deadline","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Calculate the deadline based on a current state\n such as time or block number and derives the deadline.\n","sig":null,"attributes":[{"value":"/ Calculate the deadline based on a current state","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106178,"byte_end":106229,"line_start":87,"line_end":87,"column_start":2,"column_end":53}},{"value":"/ such as time or block number and derives the deadline.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106231,"byte_end":106289,"line_start":88,"line_end":88,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106438,"byte_end":106449,"line_start":93,"line_end":93,"column_start":5,"column_end":16},"name":"has_expired","qualname":"::offchain::storage_lock::Lockable::has_expired","value":"pub fn has_expired(&Self::Deadline) -> bool","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Verify the deadline has not expired compared to the\n current state, i.e. time or block number.\n","sig":null,"attributes":[{"value":"/ Verify the deadline has not expired compared to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106331,"byte_end":106386,"line_start":91,"line_end":91,"column_start":2,"column_end":57}},{"value":"/ current state, i.e. time or block number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106388,"byte_end":106433,"line_start":92,"line_end":92,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106666,"byte_end":106672,"line_start":99,"line_end":99,"column_start":5,"column_end":11},"name":"snooze","qualname":"::offchain::storage_lock::Lockable::snooze","value":"pub fn snooze(&Self::Deadline)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Snooze at least until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Snooze at least until `deadline` is reached.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106488,"byte_end":106536,"line_start":95,"line_end":95,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106538,"byte_end":106541,"line_start":96,"line_end":96,"column_start":2,"column_end":5}},{"value":"/ Note that `deadline` is only passed to allow optimizations","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106543,"byte_end":106605,"line_start":97,"line_end":97,"column_start":2,"column_end":64}},{"value":"/ for `Lockables` which have a time based component.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106607,"byte_end":106661,"line_start":98,"line_end":98,"column_start":2,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2454},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106939,"byte_end":106943,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"Time","qualname":"::offchain::storage_lock::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":2455}],"decl_id":null,"docs":" Lockable based on the current timestamp with a configurable expiration time.\n","sig":null,"attributes":[{"value":"/ Lockable based on the current timestamp with a configurable expiration time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106821,"byte_end":106901,"line_start":106,"line_end":106,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":2471},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108024,"byte_end":108044,"line_start":149,"line_end":149,"column_start":12,"column_end":32},"name":"BlockAndTimeDeadline","qualname":"::offchain::storage_lock::BlockAndTimeDeadline","value":"BlockAndTimeDeadline { block_number, timestamp }","parent":null,"children":[{"krate":0,"index":2473},{"krate":0,"index":2474}],"decl_id":null,"docs":" A deadline based on block number and time.\n","sig":null,"attributes":[{"value":"/ A deadline based on block number and time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":107925,"byte_end":107971,"line_start":147,"line_end":147,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2473},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108146,"byte_end":108158,"line_start":151,"line_end":151,"column_start":6,"column_end":18},"name":"block_number","qualname":"::offchain::storage_lock::BlockAndTimeDeadline::block_number","value":"<B as offchain::storage_lock::BlockNumberProvider>::BlockNumber","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" The block number until which the lock is still valid _at least_.\n","sig":null,"attributes":[{"value":"/ The block number until which the lock is still valid _at least_.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108072,"byte_end":108140,"line_start":150,"line_end":150,"column_start":2,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2474},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108273,"byte_end":108282,"line_start":153,"line_end":153,"column_start":6,"column_end":15},"name":"timestamp","qualname":"::offchain::storage_lock::BlockAndTimeDeadline::timestamp","value":"sp_core::offchain::Timestamp","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" The timestamp until which the lock is still valid _at least_.\n","sig":null,"attributes":[{"value":"/ The timestamp until which the lock is still valid _at least_.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108202,"byte_end":108267,"line_start":152,"line_end":152,"column_start":2,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":590},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108966,"byte_end":108978,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"BlockAndTime","qualname":"::offchain::storage_lock::BlockAndTime","value":"BlockAndTime {  }","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"decl_id":null,"docs":" Lockable based on block number and timestamp.","sig":null,"attributes":[{"value":"/ Lockable based on block number and timestamp.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108825,"byte_end":108874,"line_start":175,"line_end":175,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108875,"byte_end":108878,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Expiration is defined if both, block number _and_ timestamp","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108879,"byte_end":108942,"line_start":177,"line_end":177,"column_start":1,"column_end":64}},{"value":"/ expire.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108943,"byte_end":108954,"line_start":178,"line_end":178,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":610},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":111127,"byte_end":111138,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"StorageLock","qualname":"::offchain::storage_lock::StorageLock","value":"StorageLock {  }","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" Storage based lock.","sig":null,"attributes":[{"value":"/ Storage based lock.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":110865,"byte_end":110888,"line_start":240,"line_end":240,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":110889,"byte_end":110892,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ A lock that is persisted in the DB and provides the ability to guard against","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":110893,"byte_end":110973,"line_start":242,"line_end":242,"column_start":1,"column_end":81}},{"value":"/ concurrent access in an off-chain worker, with a defined expiry deadline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":110974,"byte_end":111050,"line_start":243,"line_end":243,"column_start":1,"column_end":77}},{"value":"/ based on the concrete [`Lockable`](Lockable) implementation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":111051,"byte_end":111115,"line_start":244,"line_end":244,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":111412,"byte_end":111415,"line_start":253,"line_end":253,"column_start":9,"column_end":12},"name":"new","qualname":"<StorageLock>::new","value":"pub fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new storage lock with a `default()` instance of type `L`.\n","sig":null,"attributes":[{"value":"/ Create a new storage lock with a `default()` instance of type `L`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":111333,"byte_end":111403,"line_start":252,"line_end":252,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":111621,"byte_end":111634,"line_start":260,"line_end":260,"column_start":9,"column_end":22},"name":"with_lockable","qualname":"<StorageLock>::with_lockable","value":"pub fn with_lockable(&'a [u8], L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new storage lock with an explicit instance of a lockable `L`.\n","sig":null,"attributes":[{"value":"/ Create a new storage lock with an explicit instance of a lockable `L`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":111538,"byte_end":111612,"line_start":259,"line_end":259,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113416,"byte_end":113424,"line_start":318,"line_end":318,"column_start":9,"column_end":17},"name":"try_lock","qualname":"<StorageLock>::try_lock","value":"pub fn try_lock(&mut Self)\n-> Result<StorageLockGuard, <L as Lockable>::Deadline>","parent":null,"children":[],"decl_id":null,"docs":" A single attempt to lock using the storage entry.","sig":null,"attributes":[{"value":"/ A single attempt to lock using the storage entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113155,"byte_end":113208,"line_start":313,"line_end":313,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113210,"byte_end":113213,"line_start":314,"line_end":314,"column_start":2,"column_end":5}},{"value":"/ Returns a lock guard on success, otherwise an error containing the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113215,"byte_end":113285,"line_start":315,"line_end":315,"column_start":2,"column_end":72}},{"value":"/ `<Self::Lockable>::Deadline` in for the currently active lock","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113287,"byte_end":113352,"line_start":316,"line_end":316,"column_start":2,"column_end":67}},{"value":"/ by another task `Err(<L as Lockable>::Deadline)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113354,"byte_end":113407,"line_start":317,"line_end":317,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113958,"byte_end":113962,"line_start":329,"line_end":329,"column_start":9,"column_end":13},"name":"lock","qualname":"<StorageLock>::lock","value":"pub fn lock(&mut Self) -> StorageLockGuard","parent":null,"children":[],"decl_id":null,"docs":" Repeated lock attempts until the lock is successfully acquired.","sig":null,"attributes":[{"value":"/ Repeated lock attempts until the lock is successfully acquired.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113613,"byte_end":113680,"line_start":323,"line_end":323,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113682,"byte_end":113685,"line_start":324,"line_end":324,"column_start":2,"column_end":5}},{"value":"/ If one uses `fn forget(..)`, it is highly likely `fn try_lock(..)`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113687,"byte_end":113757,"line_start":325,"line_end":325,"column_start":2,"column_end":72}},{"value":"/ is the correct API to use instead of `fn lock(..)`, since that might","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113759,"byte_end":113831,"line_start":326,"line_end":326,"column_start":2,"column_end":74}},{"value":"/ never unlock in the anticipated span i.e. when used with `BlockAndTime`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113833,"byte_end":113908,"line_start":327,"line_end":327,"column_start":2,"column_end":77}},{"value":"/ during a certain block number span.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":113910,"byte_end":113949,"line_start":328,"line_end":328,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114302,"byte_end":114318,"line_start":343,"line_end":343,"column_start":12,"column_end":28},"name":"StorageLockGuard","qualname":"::offchain::storage_lock::StorageLockGuard","value":"StorageLockGuard {  }","parent":null,"children":[{"krate":0,"index":634}],"decl_id":null,"docs":" RAII style guard for a lock.\n","sig":null,"attributes":[{"value":"/ RAII style guard for a lock.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114258,"byte_end":114290,"line_start":342,"line_end":342,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114805,"byte_end":114811,"line_start":355,"line_end":355,"column_start":9,"column_end":15},"name":"forget","qualname":"<StorageLockGuard>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Consume the guard but **do not** unlock the underlying lock.","sig":null,"attributes":[{"value":"/ Consume the guard but **do not** unlock the underlying lock.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114445,"byte_end":114509,"line_start":348,"line_end":348,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114511,"byte_end":114514,"line_start":349,"line_end":349,"column_start":2,"column_end":5}},{"value":"/ Can be used to implement a grace period after doing some","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114516,"byte_end":114576,"line_start":350,"line_end":350,"column_start":2,"column_end":62}},{"value":"/ heavy computations and sending a transaction to be included","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114578,"byte_end":114641,"line_start":351,"line_end":351,"column_start":2,"column_end":65}},{"value":"/ on-chain. By forgetting the lock, it will stay locked until","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114643,"byte_end":114706,"line_start":352,"line_end":352,"column_start":2,"column_end":65}},{"value":"/ its expiration deadline is reached while the off-chain worker","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114708,"byte_end":114773,"line_start":353,"line_end":353,"column_start":2,"column_end":67}},{"value":"/ can already exit.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114775,"byte_end":114796,"line_start":354,"line_end":354,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115104,"byte_end":115115,"line_start":364,"line_end":364,"column_start":9,"column_end":20},"name":"extend_lock","qualname":"<StorageLockGuard>::extend_lock","value":"pub fn extend_lock(&mut Self) -> Result<<L as Lockable>::Deadline, ()>","parent":null,"children":[],"decl_id":null,"docs":" Extend the lock by guard deadline if it already exists.","sig":null,"attributes":[{"value":"/ Extend the lock by guard deadline if it already exists.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114857,"byte_end":114916,"line_start":359,"line_end":359,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114918,"byte_end":114921,"line_start":360,"line_end":360,"column_start":2,"column_end":5}},{"value":"/ i.e. large sets of items for which it is hard to calculate a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114923,"byte_end":114987,"line_start":361,"line_end":361,"column_start":2,"column_end":66}},{"value":"/ meaning full conservative deadline which does not block for a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114989,"byte_end":115054,"line_start":362,"line_end":362,"column_start":2,"column_end":67}},{"value":"/ very long time on node termination.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115056,"byte_end":115095,"line_start":363,"line_end":363,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115563,"byte_end":115576,"line_start":384,"line_end":384,"column_start":9,"column_end":22},"name":"with_deadline","qualname":"<StorageLock>::with_deadline","value":"pub fn with_deadline(&'a [u8], Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Explicitly create a time based storage lock with a non-default\n expiration timeout.\n","sig":null,"attributes":[{"value":"/ Explicitly create a time based storage lock with a non-default","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115463,"byte_end":115529,"line_start":382,"line_end":382,"column_start":2,"column_end":68}},{"value":"/ expiration timeout.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115531,"byte_end":115554,"line_start":383,"line_end":383,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115999,"byte_end":116027,"line_start":400,"line_end":400,"column_start":9,"column_end":37},"name":"with_block_and_time_deadline","qualname":"<StorageLock>::with_block_and_time_deadline","value":"pub fn with_block_and_time_deadline(&'a [u8], u32, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Explicitly create a time and block number based storage lock with\n a non-default expiration duration and block number offset.\n","sig":null,"attributes":[{"value":"/ Explicitly create a time and block number based storage lock with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115857,"byte_end":115926,"line_start":398,"line_end":398,"column_start":2,"column_end":71}},{"value":"/ a non-default expiration duration and block number offset.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115928,"byte_end":115990,"line_start":399,"line_end":399,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":116498,"byte_end":116517,"line_start":417,"line_end":417,"column_start":9,"column_end":28},"name":"with_block_deadline","qualname":"<StorageLock>::with_block_deadline","value":"pub fn with_block_deadline(&'a [u8], u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Explicitly create a time and block number based storage lock with\n the default expiration duration and a non-default block number offset.\n","sig":null,"attributes":[{"value":"/ Explicitly create a time and block number based storage lock with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":116344,"byte_end":116413,"line_start":415,"line_end":415,"column_start":2,"column_end":71}},{"value":"/ the default expiration duration and a non-default block number offset.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":116415,"byte_end":116489,"line_start":416,"line_end":416,"column_start":2,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":654},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":116945,"byte_end":116964,"line_start":431,"line_end":431,"column_start":11,"column_end":30},"name":"BlockNumberProvider","qualname":"::offchain::storage_lock::BlockNumberProvider","value":"BlockNumberProvider","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656}],"decl_id":null,"docs":" Bound for a block number source\n used with [`BlockAndTime<BlockNumberProvider>`](BlockAndTime).\n","sig":null,"attributes":[{"value":"/ Bound for a block number source","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":116832,"byte_end":116867,"line_start":429,"line_end":429,"column_start":1,"column_end":36}},{"value":"/ used with [`BlockAndTime<BlockNumberProvider>`](BlockAndTime).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":116868,"byte_end":116934,"line_start":430,"line_end":430,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":655},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117012,"byte_end":117023,"line_start":433,"line_end":433,"column_start":7,"column_end":18},"name":"BlockNumber","qualname":"::offchain::storage_lock::BlockNumberProvider::BlockNumber","value":"type BlockNumber: Codec + Clone + Ord + Eq + AtLeast32BitUnsigned;","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Type of `BlockNumber` to provide.\n","sig":null,"attributes":[{"value":"/ Type of `BlockNumber` to provide.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":116968,"byte_end":117005,"line_start":432,"line_end":432,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117511,"byte_end":117531,"line_start":449,"line_end":449,"column_start":5,"column_end":25},"name":"current_block_number","qualname":"::offchain::storage_lock::BlockNumberProvider::current_block_number","value":"pub fn current_block_number() -> Self::BlockNumber","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Returns the current block number.","sig":null,"attributes":[{"value":"/ Returns the current block number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117075,"byte_end":117112,"line_start":434,"line_end":434,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117114,"byte_end":117117,"line_start":435,"line_end":435,"column_start":2,"column_end":5}},{"value":"/ Provides an abstraction over an arbitrary way of providing the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117119,"byte_end":117185,"line_start":436,"line_end":436,"column_start":2,"column_end":68}},{"value":"/ current block number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117187,"byte_end":117212,"line_start":437,"line_end":437,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117214,"byte_end":117217,"line_start":438,"line_end":438,"column_start":2,"column_end":5}},{"value":"/ In case of using crate `sp_runtime` without the crate `frame`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117219,"byte_end":117284,"line_start":439,"line_end":439,"column_start":2,"column_end":67}},{"value":"/ system, it is already implemented for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117286,"byte_end":117327,"line_start":440,"line_end":440,"column_start":2,"column_end":43}},{"value":"/ `frame_system::Module<T: Trait>` as:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117329,"byte_end":117369,"line_start":441,"line_end":441,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117371,"byte_end":117374,"line_start":442,"line_end":442,"column_start":2,"column_end":5}},{"value":"/ ```ignore","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117376,"byte_end":117389,"line_start":443,"line_end":443,"column_start":2,"column_end":15}},{"value":"/ fn current_block_number() -> Self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117391,"byte_end":117430,"line_start":444,"line_end":444,"column_start":2,"column_end":41}},{"value":"/     frame_system::Module<Trait>::block_number()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117432,"byte_end":117483,"line_start":445,"line_end":445,"column_start":2,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117485,"byte_end":117490,"line_start":446,"line_end":446,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117492,"byte_end":117499,"line_start":447,"line_end":447,"column_start":2,"column_end":9}},{"value":"/ .","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":117501,"byte_end":117506,"line_start":448,"line_end":448,"column_start":2,"column_end":7}}]},{"kind":"Mod","id":{"krate":0,"index":658},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::testing","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":4175},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":4179},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":4187},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":4195},{"krate":0,"index":674},{"krate":0,"index":4197},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":4205},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":4221},{"krate":0,"index":689},{"krate":0,"index":4223},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":4227},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":4233},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":4239},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":2500},{"krate":0,"index":2565},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2556},{"krate":0,"index":2546},{"krate":0,"index":2541},{"krate":0,"index":2539},{"krate":0,"index":2536},{"krate":0,"index":2530},{"krate":0,"index":2511},{"krate":0,"index":2505},{"krate":0,"index":2503},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":2567},{"krate":0,"index":717},{"krate":0,"index":722},{"krate":0,"index":735},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":2571},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2614},{"krate":0,"index":2612},{"krate":0,"index":2609},{"krate":0,"index":2603},{"krate":0,"index":2586},{"krate":0,"index":2580},{"krate":0,"index":2575},{"krate":0,"index":747},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":2623},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2651},{"krate":0,"index":2648},{"krate":0,"index":2636},{"krate":0,"index":2630},{"krate":0,"index":2627},{"krate":0,"index":756},{"krate":0,"index":761},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":2665},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2699},{"krate":0,"index":2701},{"krate":0,"index":2696},{"krate":0,"index":2689},{"krate":0,"index":2686},{"krate":0,"index":2678},{"krate":0,"index":2672},{"krate":0,"index":2669},{"krate":0,"index":773},{"krate":0,"index":783},{"krate":0,"index":2710},{"krate":0,"index":2743},{"krate":0,"index":2746},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":2732},{"krate":0,"index":2722},{"krate":0,"index":2715},{"krate":0,"index":789},{"krate":0,"index":2751},{"krate":0,"index":793},{"krate":0,"index":799},{"krate":0,"index":803},{"krate":0,"index":809},{"krate":0,"index":816}],"decl_id":null,"docs":" Testing utilities.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1419,"byte_end":1442,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/ Testing utilities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":122281,"byte_end":122303,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2500},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123384,"byte_end":123399,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"UintAuthorityId","qualname":"::testing::UintAuthorityId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A dummy type which can be used instead of regular cryptographic primitives.","sig":null,"attributes":[{"value":"/ A dummy type which can be used instead of regular cryptographic primitives.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":122956,"byte_end":123035,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123036,"byte_end":123039,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ 1. Wraps a `u64` `AccountId` and is able to `IdentifyAccount`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123040,"byte_end":123106,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/ 2. Can be converted to any `Public` key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123107,"byte_end":123151,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/ 3. Implements `RuntimeAppPublic` so it can be used instead of regular application-specific","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123152,"byte_end":123246,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/    crypto.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123247,"byte_end":123261,"line_start":38,"line_end":38,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2502},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123400,"byte_end":123407,"line_start":40,"line_end":40,"column_start":28,"column_end":35},"name":"0","qualname":"::testing::UintAuthorityId::0","value":"u64","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123674,"byte_end":123687,"line_start":56,"line_end":56,"column_start":9,"column_end":22},"name":"to_public_key","qualname":"<UintAuthorityId>::to_public_key","value":"pub fn to_public_key<T: Public>(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Convert this authority id into a public key.\n","sig":null,"attributes":[{"value":"/ Convert this authority id into a public key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123617,"byte_end":123665,"line_start":55,"line_end":55,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":124453,"byte_end":124465,"line_start":83,"line_end":83,"column_start":9,"column_end":21},"name":"set_all_keys","qualname":"<UintAuthorityId>::set_all_keys","value":"pub fn set_all_keys<T: Into<UintAuthorityId>,\n                    impl IntoIterator<Item = T>: IntoIterator<Item =\n                    T>>(impl IntoIterator<Item = T>)","parent":null,"children":[],"decl_id":null,"docs":" Set the list of keys returned by the runtime call for all keys of that type.\n","sig":null,"attributes":[{"value":"/ Set the list of keys returned by the runtime call for all keys of that type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":124364,"byte_end":124444,"line_start":82,"line_end":82,"column_start":2,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2571},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126040,"byte_end":126053,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"TestSignature","qualname":"::testing::TestSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A dummy signature type, to match `UintAuthorityId`.\n","sig":null,"attributes":[{"value":"/ A dummy signature type, to match `UintAuthorityId`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":125888,"byte_end":125943,"line_start":144,"line_end":144,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2573},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126054,"byte_end":126061,"line_start":146,"line_end":146,"column_start":26,"column_end":33},"name":"0","qualname":"::testing::TestSignature::0","value":"u64","parent":{"krate":0,"index":2571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2574},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126063,"byte_end":126074,"line_start":146,"line_end":146,"column_start":35,"column_end":46},"name":"1","qualname":"::testing::TestSignature::1","value":"sp_application_crypto::Vec<u8>","parent":{"krate":0,"index":2571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":751},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126307,"byte_end":126317,"line_start":157,"line_end":157,"column_start":10,"column_end":20},"name":"DigestItem","qualname":"::testing::DigestItem","value":"generic::DigestItem<H256>","parent":null,"children":[],"decl_id":null,"docs":" Digest item\n","sig":null,"attributes":[{"value":"/ Digest item","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126282,"byte_end":126297,"line_start":156,"line_end":156,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":752},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126375,"byte_end":126381,"line_start":160,"line_end":160,"column_start":10,"column_end":16},"name":"Digest","qualname":"::testing::Digest","value":"generic::Digest<H256>","parent":null,"children":[],"decl_id":null,"docs":" Header Digest\n","sig":null,"attributes":[{"value":"/ Header Digest","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126348,"byte_end":126365,"line_start":159,"line_end":159,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":753},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126434,"byte_end":126440,"line_start":163,"line_end":163,"column_start":10,"column_end":16},"name":"Header","qualname":"::testing::Header","value":"generic::Header<u64, BlakeTwo256>","parent":null,"children":[],"decl_id":null,"docs":" Block Header\n","sig":null,"attributes":[{"value":"/ Block Header","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126408,"byte_end":126424,"line_start":162,"line_end":162,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126580,"byte_end":126595,"line_start":167,"line_end":167,"column_start":9,"column_end":24},"name":"new_from_number","qualname":"<Header>::new_from_number","value":"pub fn new_from_number(<Self as traits::Header>::Number) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new header with the given number and default hash for all other fields.\n","sig":null,"attributes":[{"value":"/ A new header with the given number and default hash for all other fields.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126494,"byte_end":126571,"line_start":166,"line_end":166,"column_start":2,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2623},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126955,"byte_end":126971,"line_start":180,"line_end":180,"column_start":12,"column_end":28},"name":"ExtrinsicWrapper","qualname":"::testing::ExtrinsicWrapper","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque extrinsic wrapper type.\n","sig":null,"attributes":[{"value":"/ An opaque extrinsic wrapper type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126820,"byte_end":126857,"line_start":178,"line_end":178,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2665},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127730,"byte_end":127735,"line_start":215,"line_end":215,"column_start":12,"column_end":17},"name":"Block","qualname":"::testing::Block","value":"Block { header, extrinsics }","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668}],"decl_id":null,"docs":" Testing block\n","sig":null,"attributes":[{"value":"/ Testing block","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127604,"byte_end":127621,"line_start":213,"line_end":213,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2667},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127765,"byte_end":127771,"line_start":217,"line_end":217,"column_start":6,"column_end":12},"name":"header","qualname":"::testing::Block::header","value":"generic::header::Header<u64, traits::BlakeTwo256>","parent":{"krate":0,"index":2665},"children":[],"decl_id":null,"docs":" Block header\n","sig":null,"attributes":[{"value":"/ Block header","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127743,"byte_end":127759,"line_start":216,"line_end":216,"column_start":2,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2668},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127810,"byte_end":127820,"line_start":219,"line_end":219,"column_start":6,"column_end":16},"name":"extrinsics","qualname":"::testing::Block::extrinsics","value":"sp_application_crypto::Vec<Xt>","parent":{"krate":0,"index":2665},"children":[],"decl_id":null,"docs":" List of extrinsics\n","sig":null,"attributes":[{"value":"/ List of extrinsics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127782,"byte_end":127804,"line_start":218,"line_end":218,"column_start":2,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2710},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129070,"byte_end":129076,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"TestXt","qualname":"::testing::TestXt","value":"TestXt { signature, call }","parent":null,"children":[{"krate":0,"index":2713},{"krate":0,"index":2714}],"decl_id":null,"docs":" Test transaction, tuple of (sender, call, signed_extra)\n with index only used if sender is some.","sig":null,"attributes":[{"value":"/ Test transaction, tuple of (sender, call, signed_extra)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":128824,"byte_end":128883,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/ with index only used if sender is some.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":128884,"byte_end":128927,"line_start":255,"line_end":255,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":128928,"byte_end":128931,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ If sender is some then the transaction is signed otherwise it is unsigned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":128932,"byte_end":129010,"line_start":257,"line_end":257,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2713},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129130,"byte_end":129139,"line_start":261,"line_end":261,"column_start":6,"column_end":15},"name":"signature","qualname":"::testing::TestXt::signature","value":"std::option::Option<(u64, Extra)>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Signature of the extrinsic.\n","sig":null,"attributes":[{"value":"/ Signature of the extrinsic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129093,"byte_end":129124,"line_start":260,"line_end":260,"column_start":2,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2714},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129196,"byte_end":129200,"line_start":263,"line_end":263,"column_start":6,"column_end":10},"name":"call","qualname":"::testing::TestXt::call","value":"Call","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Call of the extrinsic.\n","sig":null,"attributes":[{"value":"/ Call of the extrinsic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129164,"byte_end":129190,"line_start":262,"line_end":262,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129287,"byte_end":129290,"line_start":268,"line_end":268,"column_start":9,"column_end":12},"name":"new","qualname":"<TestXt<Call, Extra>>::new","value":"pub fn new(Call, Option<(u64, Extra)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TextXt`.\n","sig":null,"attributes":[{"value":"/ Create a new `TextXt`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129252,"byte_end":129278,"line_start":267,"line_end":267,"column_start":2,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":825},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":4251},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":4257},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":4265},{"krate":0,"index":839},{"krate":0,"index":4267},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":4281},{"krate":0,"index":849},{"krate":0,"index":4283},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":901},{"krate":0,"index":905},{"krate":0,"index":909},{"krate":0,"index":913},{"krate":0,"index":917},{"krate":0,"index":2757},{"krate":0,"index":2766},{"krate":0,"index":2761},{"krate":0,"index":2759},{"krate":0,"index":924},{"krate":0,"index":2772},{"krate":0,"index":2781},{"krate":0,"index":2776},{"krate":0,"index":2774},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":934},{"krate":0,"index":2787},{"krate":0,"index":2791},{"krate":0,"index":939},{"krate":0,"index":945},{"krate":0,"index":950},{"krate":0,"index":954},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":969},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":2794},{"krate":0,"index":2799},{"krate":0,"index":2804},{"krate":0,"index":2809},{"krate":0,"index":2814},{"krate":0,"index":2819},{"krate":0,"index":2824},{"krate":0,"index":2829},{"krate":0,"index":2834},{"krate":0,"index":2839},{"krate":0,"index":2844},{"krate":0,"index":2849},{"krate":0,"index":2854},{"krate":0,"index":2859},{"krate":0,"index":2864},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":2869},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2894},{"krate":0,"index":2892},{"krate":0,"index":2886},{"krate":0,"index":2871},{"krate":0,"index":1000},{"krate":0,"index":1005},{"krate":0,"index":2902},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2927},{"krate":0,"index":2925},{"krate":0,"index":2919},{"krate":0,"index":2904},{"krate":0,"index":1009},{"krate":0,"index":1014},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1048},{"krate":0,"index":1058},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1086},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1102},{"krate":0,"index":2953},{"krate":0,"index":2969},{"krate":0,"index":2986},{"krate":0,"index":3004},{"krate":0,"index":3023},{"krate":0,"index":3043},{"krate":0,"index":3064},{"krate":0,"index":3086},{"krate":0,"index":3109},{"krate":0,"index":3133},{"krate":0,"index":3158},{"krate":0,"index":3184},{"krate":0,"index":1117},{"krate":0,"index":1124},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1139},{"krate":0,"index":1146},{"krate":0,"index":1151},{"krate":0,"index":1155},{"krate":0,"index":1160},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1171},{"krate":0,"index":1180},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":3211},{"krate":0,"index":3214},{"krate":0,"index":3218},{"krate":0,"index":3223},{"krate":0,"index":3229},{"krate":0,"index":3236},{"krate":0,"index":3244},{"krate":0,"index":3253},{"krate":0,"index":3263},{"krate":0,"index":3274},{"krate":0,"index":3286},{"krate":0,"index":3299},{"krate":0,"index":1213}],"decl_id":null,"docs":" Primitives for the runtime modules.\n","sig":null,"attributes":[{"value":"/ Primitives for the runtime modules.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":132250,"byte_end":132289,"line_start":18,"line_end":18,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":879},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133260,"byte_end":133264,"line_start":46,"line_end":46,"column_start":11,"column_end":15},"name":"Lazy","qualname":"::traits::Lazy","value":"Lazy<T: ?Sized>","parent":null,"children":[{"krate":0,"index":881}],"decl_id":null,"docs":" A lazy value.\n","sig":null,"attributes":[{"value":"/ A lazy value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133232,"byte_end":133249,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133413,"byte_end":133416,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"get","qualname":"::traits::Lazy::get","value":"pub fn get(&mut Self) -> &T","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":" Get a reference to the underlying value.","sig":null,"attributes":[{"value":"/ Get a reference to the underlying value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133279,"byte_end":133323,"line_start":47,"line_end":47,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133325,"byte_end":133328,"line_start":48,"line_end":48,"column_start":2,"column_end":5}},{"value":"/ This will compute the value if the function is invoked for the first time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133330,"byte_end":133408,"line_start":49,"line_end":49,"column_start":2,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":885},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133664,"byte_end":133679,"line_start":59,"line_end":59,"column_start":11,"column_end":26},"name":"IdentifyAccount","qualname":"::traits::IdentifyAccount","value":"IdentifyAccount","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887}],"decl_id":null,"docs":" Some type that is able to be collapsed into an account ID. It is not possible to recreate the\n original value from the account ID.\n","sig":null,"attributes":[{"value":"/ Some type that is able to be collapsed into an account ID. It is not possible to recreate the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133516,"byte_end":133613,"line_start":57,"line_end":57,"column_start":1,"column_end":98}},{"value":"/ original value from the account ID.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133614,"byte_end":133653,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":886},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133743,"byte_end":133752,"line_start":61,"line_end":61,"column_start":7,"column_end":16},"name":"AccountId","qualname":"::traits::IdentifyAccount::AccountId","value":"type AccountId;","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" The account ID that this can be transformed into.\n","sig":null,"attributes":[{"value":"/ The account ID that this can be transformed into.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133683,"byte_end":133736,"line_start":60,"line_end":60,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133790,"byte_end":133802,"line_start":63,"line_end":63,"column_start":5,"column_end":17},"name":"into_account","qualname":"::traits::IdentifyAccount::into_account","value":"pub fn into_account(Self) -> Self::AccountId","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" Transform into an account.\n","sig":null,"attributes":[{"value":"/ Transform into an account.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133755,"byte_end":133785,"line_start":62,"line_end":62,"column_start":2,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":897},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134234,"byte_end":134240,"line_start":82,"line_end":82,"column_start":11,"column_end":17},"name":"Verify","qualname":"::traits::Verify","value":"Verify","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"decl_id":null,"docs":" Means of signature verification.\n","sig":null,"attributes":[{"value":"/ Means of signature verification.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134187,"byte_end":134223,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":898},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134274,"byte_end":134280,"line_start":84,"line_end":84,"column_start":7,"column_end":13},"name":"Signer","qualname":"::traits::Verify::Signer","value":"type Signer: IdentifyAccount;","parent":{"krate":0,"index":897},"children":[],"decl_id":null,"docs":" Type of the signer.\n","sig":null,"attributes":[{"value":"/ Type of the signer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134244,"byte_end":134267,"line_start":83,"line_end":83,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134389,"byte_end":134395,"line_start":88,"line_end":88,"column_start":5,"column_end":11},"name":"verify","qualname":"::traits::Verify::verify","value":"pub fn verify<L: Lazy<[u8]>>(&Self, L,\n                             &<Self::Signer as IdentifyAccount>::AccountId)\n-> bool","parent":{"krate":0,"index":897},"children":[],"decl_id":null,"docs":" Verify a signature.","sig":null,"attributes":[{"value":"/ Verify a signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134300,"byte_end":134323,"line_start":85,"line_end":85,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134325,"byte_end":134328,"line_start":86,"line_end":86,"column_start":2,"column_end":5}},{"value":"/ Return `true` if signature is valid for the value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134330,"byte_end":134384,"line_start":87,"line_end":87,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":913},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":135420,"byte_end":135429,"line_start":121,"line_end":121,"column_start":11,"column_end":20},"name":"AppVerify","qualname":"::traits::AppVerify","value":"AppVerify","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915}],"decl_id":null,"docs":" Means of signature verification of an application key.\n","sig":null,"attributes":[{"value":"/ Means of signature verification of an application key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":135351,"byte_end":135409,"line_start":120,"line_end":120,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":914},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":135463,"byte_end":135472,"line_start":123,"line_end":123,"column_start":7,"column_end":16},"name":"AccountId","qualname":"::traits::AppVerify::AccountId","value":"type AccountId;","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Type of the signer.\n","sig":null,"attributes":[{"value":"/ Type of the signer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":135433,"byte_end":135456,"line_start":122,"line_end":122,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":135554,"byte_end":135560,"line_start":125,"line_end":125,"column_start":5,"column_end":11},"name":"verify","qualname":"::traits::AppVerify::verify","value":"pub fn verify<L: Lazy<[u8]>>(&Self, L, &Self::AccountId) -> bool","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Verify a signature. Return `true` if signature is valid for the value.\n","sig":null,"attributes":[{"value":"/ Verify a signature. Return `true` if signature is valid for the value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":135475,"byte_end":135549,"line_start":124,"line_end":124,"column_start":2,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2757},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":136627,"byte_end":136636,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"BadOrigin","qualname":"::traits::BadOrigin","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type that indicates that the origin is invalid.\n","sig":null,"attributes":[{"value":"/ An error type that indicates that the origin is invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":136515,"byte_end":136575,"line_start":146,"line_end":146,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2772},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":136842,"byte_end":136853,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"LookupError","qualname":"::traits::LookupError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that indicates that a lookup failed.\n","sig":null,"attributes":[{"value":"/ An error that indicates that a lookup failed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":136741,"byte_end":136790,"line_start":156,"line_end":156,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":930},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137199,"byte_end":137205,"line_start":173,"line_end":173,"column_start":11,"column_end":17},"name":"Lookup","qualname":"::traits::Lookup","value":"Lookup","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"decl_id":null,"docs":" Means of changing one type into another in a manner dependent on the source type.\n","sig":null,"attributes":[{"value":"/ Means of changing one type into another in a manner dependent on the source type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137103,"byte_end":137188,"line_start":172,"line_end":172,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":931},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137240,"byte_end":137246,"line_start":175,"line_end":175,"column_start":7,"column_end":13},"name":"Source","qualname":"::traits::Lookup::Source","value":"type Source;","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Type to lookup from.\n","sig":null,"attributes":[{"value":"/ Type to lookup from.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137209,"byte_end":137233,"line_start":174,"line_end":174,"column_start":2,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":932},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137280,"byte_end":137286,"line_start":177,"line_end":177,"column_start":7,"column_end":13},"name":"Target","qualname":"::traits::Lookup::Target","value":"type Target;","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Type to lookup into.\n","sig":null,"attributes":[{"value":"/ Type to lookup into.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137249,"byte_end":137273,"line_start":176,"line_end":176,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137315,"byte_end":137321,"line_start":179,"line_end":179,"column_start":5,"column_end":11},"name":"lookup","qualname":"::traits::Lookup::lookup","value":"pub fn lookup(&Self, Self::Source) -> Result<Self::Target, LookupError>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Attempt a lookup.\n","sig":null,"attributes":[{"value":"/ Attempt a lookup.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137289,"byte_end":137310,"line_start":178,"line_end":178,"column_start":2,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":934},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137582,"byte_end":137594,"line_start":185,"line_end":185,"column_start":11,"column_end":23},"name":"StaticLookup","qualname":"::traits::StaticLookup","value":"StaticLookup","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938}],"decl_id":null,"docs":" Means of changing one type into another in a manner dependent on the source type.\n This variant is different to `Lookup` in that it doesn't (can cannot) require any\n context.\n","sig":null,"attributes":[{"value":"/ Means of changing one type into another in a manner dependent on the source type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137387,"byte_end":137472,"line_start":182,"line_end":182,"column_start":1,"column_end":86}},{"value":"/ This variant is different to `Lookup` in that it doesn't (can cannot) require any","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137473,"byte_end":137558,"line_start":183,"line_end":183,"column_start":1,"column_end":86}},{"value":"/ context.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137559,"byte_end":137571,"line_start":184,"line_end":184,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":935},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137629,"byte_end":137635,"line_start":187,"line_end":187,"column_start":7,"column_end":13},"name":"Source","qualname":"::traits::StaticLookup::Source","value":"type Source: Codec + Clone + PartialEq + Debug;","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Type to lookup from.\n","sig":null,"attributes":[{"value":"/ Type to lookup from.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137598,"byte_end":137622,"line_start":186,"line_end":186,"column_start":2,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":936},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137704,"byte_end":137710,"line_start":189,"line_end":189,"column_start":7,"column_end":13},"name":"Target","qualname":"::traits::StaticLookup::Target","value":"type Target;","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Type to lookup into.\n","sig":null,"attributes":[{"value":"/ Type to lookup into.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137673,"byte_end":137697,"line_start":188,"line_end":188,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137739,"byte_end":137745,"line_start":191,"line_end":191,"column_start":5,"column_end":11},"name":"lookup","qualname":"::traits::StaticLookup::lookup","value":"pub fn lookup(Self::Source) -> Result<Self::Target, LookupError>","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Attempt a lookup.\n","sig":null,"attributes":[{"value":"/ Attempt a lookup.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137713,"byte_end":137734,"line_start":190,"line_end":190,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137846,"byte_end":137854,"line_start":193,"line_end":193,"column_start":5,"column_end":13},"name":"unlookup","qualname":"::traits::StaticLookup::unlookup","value":"pub fn unlookup(Self::Target) -> Self::Source","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Convert from Target back to Source.\n","sig":null,"attributes":[{"value":"/ Convert from Target back to Source.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137802,"byte_end":137841,"line_start":192,"line_end":192,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2787},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137977,"byte_end":137991,"line_start":198,"line_end":198,"column_start":12,"column_end":26},"name":"IdentityLookup","qualname":"::traits::IdentityLookup","value":"","parent":null,"children":[],"decl_id":null,"docs":" A lookup implementation returning the input value.\n","sig":null,"attributes":[{"value":"/ A lookup implementation returning the input value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":137892,"byte_end":137946,"line_start":196,"line_end":196,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":950},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138443,"byte_end":138450,"line_start":213,"line_end":213,"column_start":11,"column_end":18},"name":"Convert","qualname":"::traits::Convert","value":"Convert<A, B>","parent":null,"children":[{"krate":0,"index":953}],"decl_id":null,"docs":" Extensible conversion trait. Generic over both source and destination types.\n","sig":null,"attributes":[{"value":"/ Extensible conversion trait. Generic over both source and destination types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138352,"byte_end":138432,"line_start":212,"line_end":212,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138485,"byte_end":138492,"line_start":215,"line_end":215,"column_start":5,"column_end":12},"name":"convert","qualname":"::traits::Convert::convert","value":"pub fn convert(A) -> B","parent":{"krate":0,"index":950},"children":[],"decl_id":null,"docs":" Make conversion.\n","sig":null,"attributes":[{"value":"/ Make conversion.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138460,"byte_end":138480,"line_start":214,"line_end":214,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":958},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138662,"byte_end":138670,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"Identity","qualname":"::traits::Identity","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure that performs identity conversion.\n","sig":null,"attributes":[{"value":"/ A structure that performs identity conversion.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138600,"byte_end":138650,"line_start":222,"line_end":222,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":963},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138845,"byte_end":138856,"line_start":229,"line_end":229,"column_start":12,"column_end":23},"name":"ConvertInto","qualname":"::traits::ConvertInto","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure that performs standard conversion using the standard Rust conversion traits.\n","sig":null,"attributes":[{"value":"/ A structure that performs standard conversion using the standard Rust conversion traits.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138741,"byte_end":138833,"line_start":228,"line_end":228,"column_start":1,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":969},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139132,"byte_end":139149,"line_start":237,"line_end":237,"column_start":11,"column_end":28},"name":"CheckedConversion","qualname":"::traits::CheckedConversion","value":"CheckedConversion","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":972}],"decl_id":null,"docs":" Convenience type to work around the highly unergonomic syntax needed\n to invoke the functions of overloaded generic traits, in this case\n `TryFrom` and `TryInto`.\n","sig":null,"attributes":[{"value":"/ Convenience type to work around the highly unergonomic syntax needed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138949,"byte_end":139021,"line_start":234,"line_end":234,"column_start":1,"column_end":73}},{"value":"/ to invoke the functions of overloaded generic traits, in this case","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139022,"byte_end":139092,"line_start":235,"line_end":235,"column_start":1,"column_end":71}},{"value":"/ `TryFrom` and `TryInto`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139093,"byte_end":139121,"line_start":236,"line_end":236,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139427,"byte_end":139439,"line_start":243,"line_end":243,"column_start":5,"column_end":17},"name":"checked_from","qualname":"::traits::CheckedConversion::checked_from","value":"pub fn checked_from<T>(T) -> Option<Self> where Self: TryFrom<T>","parent":{"krate":0,"index":969},"children":[],"decl_id":null,"docs":" Convert from a value of `T` into an equivalent instance of `Option<Self>`.","sig":null,"attributes":[{"value":"/ Convert from a value of `T` into an equivalent instance of `Option<Self>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139153,"byte_end":139231,"line_start":238,"line_end":238,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139233,"byte_end":139236,"line_start":239,"line_end":239,"column_start":2,"column_end":5}},{"value":"/ This just uses `TryFrom` internally but with this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139238,"byte_end":139291,"line_start":240,"line_end":240,"column_start":2,"column_end":55}},{"value":"/ variant you can provide the destination type using turbofish syntax","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139293,"byte_end":139364,"line_start":241,"line_end":241,"column_start":2,"column_end":73}},{"value":"/ in case Rust happens not to assume the correct type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139366,"byte_end":139422,"line_start":242,"line_end":242,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139797,"byte_end":139809,"line_start":251,"line_end":251,"column_start":5,"column_end":17},"name":"checked_into","qualname":"::traits::CheckedConversion::checked_into","value":"pub fn checked_into<T>(Self) -> Option<T> where Self: TryInto<T>","parent":{"krate":0,"index":969},"children":[],"decl_id":null,"docs":" Consume self to return `Some` equivalent value of `Option<T>`.","sig":null,"attributes":[{"value":"/ Consume self to return `Some` equivalent value of `Option<T>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139535,"byte_end":139601,"line_start":246,"line_end":246,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139603,"byte_end":139606,"line_start":247,"line_end":247,"column_start":2,"column_end":5}},{"value":"/ This just uses `TryInto` internally but with this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139608,"byte_end":139661,"line_start":248,"line_end":248,"column_start":2,"column_end":55}},{"value":"/ variant you can provide the destination type using turbofish syntax","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139663,"byte_end":139734,"line_start":249,"line_end":249,"column_start":2,"column_end":73}},{"value":"/ in case Rust happens not to assume the correct type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139736,"byte_end":139792,"line_start":250,"line_end":250,"column_start":2,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":976},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":140131,"byte_end":140136,"line_start":259,"line_end":259,"column_start":11,"column_end":16},"name":"Scale","qualname":"::traits::Scale","value":"Scale<Other>","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"decl_id":null,"docs":" Multiply and divide by a number that isn't necessarily the same type. Basically just the same\n as `Mul` and `Div` except it can be used for all basic numeric types.\n","sig":null,"attributes":[{"value":"/ Multiply and divide by a number that isn't necessarily the same type. Basically just the same","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139949,"byte_end":140046,"line_start":257,"line_end":257,"column_start":1,"column_end":98}},{"value":"/ as `Mul` and `Div` except it can be used for all basic numeric types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":140047,"byte_end":140120,"line_start":258,"line_end":258,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":978},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":140211,"byte_end":140217,"line_start":261,"line_end":261,"column_start":7,"column_end":13},"name":"Output","qualname":"::traits::Scale::Output","value":"type Output;","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" The output type of the product of `self` and `Other`.\n","sig":null,"attributes":[{"value":"/ The output type of the product of `self` and `Other`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":140147,"byte_end":140204,"line_start":260,"line_end":260,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":140272,"byte_end":140275,"line_start":264,"line_end":264,"column_start":5,"column_end":8},"name":"mul","qualname":"::traits::Scale::mul","value":"pub fn mul(Self, Other) -> Self::Output","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" @return the product of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ @return the product of `self` and `other`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":140221,"byte_end":140267,"line_start":263,"line_end":263,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":140375,"byte_end":140378,"line_start":267,"line_end":267,"column_start":5,"column_end":8},"name":"div","qualname":"::traits::Scale::div","value":"pub fn div(Self, Other) -> Self::Output","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" @return the integer division of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ @return the integer division of `self` and `other`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":140315,"byte_end":140370,"line_start":266,"line_end":266,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":140478,"byte_end":140481,"line_start":270,"line_end":270,"column_start":5,"column_end":8},"name":"rem","qualname":"::traits::Scale::rem","value":"pub fn rem(Self, Other) -> Self::Output","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" @return the modulo remainder of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ @return the modulo remainder of `self` and `other`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":140418,"byte_end":140473,"line_start":269,"line_end":269,"column_start":2,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":983},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141332,"byte_end":141337,"line_start":300,"line_end":300,"column_start":11,"column_end":16},"name":"Clear","qualname":"::traits::Clear","value":"Clear","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985}],"decl_id":null,"docs":" Trait for things that can be clear (have no bits set). For numeric types, essentially the same\n as `Zero`.\n","sig":null,"attributes":[{"value":"/ Trait for things that can be clear (have no bits set). For numeric types, essentially the same","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141208,"byte_end":141306,"line_start":298,"line_end":298,"column_start":1,"column_end":99}},{"value":"/ as `Zero`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141307,"byte_end":141321,"line_start":299,"line_end":299,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141375,"byte_end":141383,"line_start":302,"line_end":302,"column_start":5,"column_end":13},"name":"is_clear","qualname":"::traits::Clear::is_clear","value":"pub fn is_clear(&Self) -> bool","parent":{"krate":0,"index":983},"children":[],"decl_id":null,"docs":" True iff no bits are set.\n","sig":null,"attributes":[{"value":"/ True iff no bits are set.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141341,"byte_end":141370,"line_start":301,"line_end":301,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141450,"byte_end":141455,"line_start":305,"line_end":305,"column_start":5,"column_end":10},"name":"clear","qualname":"::traits::Clear::clear","value":"pub fn clear() -> Self","parent":{"krate":0,"index":983},"children":[],"decl_id":null,"docs":" Return the value of Self that is clear.\n","sig":null,"attributes":[{"value":"/ Return the value of Self that is clear.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141402,"byte_end":141445,"line_start":304,"line_end":304,"column_start":2,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":990},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141663,"byte_end":141675,"line_start":314,"line_end":314,"column_start":11,"column_end":23},"name":"SimpleBitOps","qualname":"::traits::SimpleBitOps","value":"SimpleBitOps: Sized + Clear + sp_std::ops::BitOr<Self, Output = Self> +\nsp_std::ops::BitXor<Self, Output = Self> + sp_std::ops::BitAnd<Self, Output =\nSelf>","parent":null,"children":[],"decl_id":null,"docs":" A meta trait for all bit ops.\n","sig":null,"attributes":[{"value":"/ A meta trait for all bit ops.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141619,"byte_end":141652,"line_start":313,"line_end":313,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":993},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142150,"byte_end":142154,"line_start":330,"line_end":330,"column_start":11,"column_end":15},"name":"Hash","qualname":"::traits::Hash","value":"Hash: 'static + MaybeSerializeDeserialize + Debug + Clone + Eq + PartialEq +\nHasher<Out = <Self as Hash>::Output>","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":999}],"decl_id":null,"docs":" Abstraction around hashing\n","sig":null,"attributes":[{"value":"/ Abstraction around hashing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142005,"byte_end":142035,"line_start":327,"line_end":327,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":994},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142301,"byte_end":142307,"line_start":332,"line_end":332,"column_start":7,"column_end":13},"name":"Output","qualname":"::traits::Hash::Output","value":"type Output: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash\n\t\t+ AsRef<[u8]> + AsMut<[u8]> + Copy + Default + Encode + Decode;","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" The hash type produced.\n","sig":null,"attributes":[{"value":"/ The hash type produced.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142267,"byte_end":142294,"line_start":331,"line_end":331,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142486,"byte_end":142490,"line_start":336,"line_end":336,"column_start":5,"column_end":9},"name":"hash","qualname":"::traits::Hash::hash","value":"pub fn hash(&[u8]) -> Self::Output","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Produce the hash of some byte-slice.\n","sig":null,"attributes":[{"value":"/ Produce the hash of some byte-slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142441,"byte_end":142481,"line_start":335,"line_end":335,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142608,"byte_end":142615,"line_start":341,"line_end":341,"column_start":5,"column_end":12},"name":"hash_of","qualname":"::traits::Hash::hash_of","value":"pub fn hash_of<S: Encode>(&S) -> Self::Output","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Produce the hash of some codec-encodable value.\n","sig":null,"attributes":[{"value":"/ Produce the hash of some codec-encodable value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142552,"byte_end":142603,"line_start":340,"line_end":340,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142769,"byte_end":142786,"line_start":346,"line_end":346,"column_start":5,"column_end":22},"name":"ordered_trie_root","qualname":"::traits::Hash::ordered_trie_root","value":"pub fn ordered_trie_root(Vec<Vec<u8>>) -> Self::Output","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" The ordered Patricia tree root of the given `input`.\n","sig":null,"attributes":[{"value":"/ The ordered Patricia tree root of the given `input`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142708,"byte_end":142764,"line_start":345,"line_end":345,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142880,"byte_end":142889,"line_start":349,"line_end":349,"column_start":5,"column_end":14},"name":"trie_root","qualname":"::traits::Hash::trie_root","value":"pub fn trie_root(Vec<(Vec<u8>, Vec<u8>)>) -> Self::Output","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" The Patricia tree root of the given mapping.\n","sig":null,"attributes":[{"value":"/ The Patricia tree root of the given mapping.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142827,"byte_end":142875,"line_start":348,"line_end":348,"column_start":2,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2869},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":143096,"byte_end":143107,"line_start":355,"line_end":355,"column_start":12,"column_end":23},"name":"BlakeTwo256","qualname":"::traits::BlakeTwo256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blake2-256 Hash implementation.\n","sig":null,"attributes":[{"value":"/ Blake2-256 Hash implementation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142942,"byte_end":142977,"line_start":352,"line_end":352,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2902},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":143762,"byte_end":143771,"line_start":382,"line_end":382,"column_start":12,"column_end":21},"name":"Keccak256","qualname":"::traits::Keccak256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Keccak-256 Hash implementation.\n","sig":null,"attributes":[{"value":"/ Keccak-256 Hash implementation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":143608,"byte_end":143643,"line_start":379,"line_end":379,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1018},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":144368,"byte_end":144378,"line_start":407,"line_end":407,"column_start":11,"column_end":21},"name":"CheckEqual","qualname":"::traits::CheckEqual","value":"CheckEqual","parent":null,"children":[{"krate":0,"index":1019}],"decl_id":null,"docs":" Something that can be checked for equality and printed out to a debug channel if bad.\n","sig":null,"attributes":[{"value":"/ Something that can be checked for equality and printed out to a debug channel if bad.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":144268,"byte_end":144357,"line_start":406,"line_end":406,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":144418,"byte_end":144429,"line_start":409,"line_end":409,"column_start":5,"column_end":16},"name":"check_equal","qualname":"::traits::CheckEqual::check_equal","value":"pub fn check_equal(&Self, &Self)","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" Perform the equality check.\n","sig":null,"attributes":[{"value":"/ Perform the equality check.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":144382,"byte_end":144413,"line_start":408,"line_end":408,"column_start":2,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2935},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145522,"byte_end":145534,"line_start":455,"line_end":455,"column_start":8,"column_end":20},"name":"MaybeDisplay","qualname":"::traits::MaybeDisplay","value":"MaybeDisplay: Display","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Display when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":9032779,"byte_end":9032802,"line_start":378,"line_end":378,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2938},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145614,"byte_end":145626,"line_start":458,"line_end":458,"column_start":8,"column_end":20},"name":"MaybeFromStr","qualname":"::traits::MaybeFromStr","value":"MaybeFromStr: FromStr","parent":null,"children":[],"decl_id":null,"docs":" A type that implements FromStr when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":9032779,"byte_end":9032802,"line_start":378,"line_end":378,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2941},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145703,"byte_end":145712,"line_start":461,"line_end":461,"column_start":8,"column_end":17},"name":"MaybeHash","qualname":"::traits::MaybeHash","value":"MaybeHash: sp_std::hash::Hash","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Hash when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":9032779,"byte_end":9032802,"line_start":378,"line_end":378,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2944},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145805,"byte_end":145819,"line_start":464,"line_end":464,"column_start":8,"column_end":22},"name":"MaybeSerialize","qualname":"::traits::MaybeSerialize","value":"MaybeSerialize: Serialize","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Serialize when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":9032779,"byte_end":9032802,"line_start":378,"line_end":378,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2947},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145931,"byte_end":145956,"line_start":467,"line_end":467,"column_start":8,"column_end":33},"name":"MaybeSerializeDeserialize","qualname":"::traits::MaybeSerializeDeserialize","value":"MaybeSerializeDeserialize: DeserializeOwned + Serialize","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Serialize, DeserializeOwned and Debug when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":9032779,"byte_end":9032802,"line_start":378,"line_end":378,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2950},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146037,"byte_end":146054,"line_start":470,"line_end":470,"column_start":8,"column_end":25},"name":"MaybeMallocSizeOf","qualname":"::traits::MaybeMallocSizeOf","value":"MaybeMallocSizeOf: parity_util_mem::MallocSizeOf","parent":null,"children":[],"decl_id":null,"docs":" A type that implements MallocSizeOf.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":9032779,"byte_end":9032802,"line_start":378,"line_end":378,"column_start":4,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":1026},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146152,"byte_end":146158,"line_start":474,"line_end":474,"column_start":11,"column_end":17},"name":"Member","qualname":"::traits::Member","value":"Member: Send + Sync + Sized + Debug + Eq + PartialEq + Clone + 'static","parent":null,"children":[],"decl_id":null,"docs":" A type that can be used in runtime structures.\n","sig":null,"attributes":[{"value":"/ A type that can be used in runtime structures.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146091,"byte_end":146141,"line_start":473,"line_end":473,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1029},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146374,"byte_end":146382,"line_start":478,"line_end":478,"column_start":11,"column_end":19},"name":"IsMember","qualname":"::traits::IsMember","value":"IsMember<MemberId>","parent":null,"children":[{"krate":0,"index":1031}],"decl_id":null,"docs":" Determine if a `MemberId` is a valid member.\n","sig":null,"attributes":[{"value":"/ Determine if a `MemberId` is a valid member.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146315,"byte_end":146363,"line_start":477,"line_end":477,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146444,"byte_end":146453,"line_start":480,"line_end":480,"column_start":5,"column_end":14},"name":"is_member","qualname":"::traits::IsMember::is_member","value":"pub fn is_member(&MemberId) -> bool","parent":{"krate":0,"index":1029},"children":[],"decl_id":null,"docs":" Is the given `MemberId` a valid member?\n","sig":null,"attributes":[{"value":"/ Is the given `MemberId` a valid member?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146396,"byte_end":146439,"line_start":479,"line_end":479,"column_start":2,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1032},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146810,"byte_end":146816,"line_start":488,"line_end":488,"column_start":11,"column_end":17},"name":"Header","qualname":"::traits::Header","value":"Header: Clone + Send + Sync + Codec + Eq + MaybeSerialize + Debug +\nMaybeMallocSizeOf + 'static","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047}],"decl_id":null,"docs":" Something which fulfills the abstract idea of a Substrate header. It has types for a `Number`,\n a `Hash` and a `Hashing`. It provides access to an `extrinsics_root`, `state_root` and\n `parent_hash`, as well as a `digest` and a block `number`.","sig":null,"attributes":[{"value":"/ Something which fulfills the abstract idea of a Substrate header. It has types for a `Number`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146488,"byte_end":146586,"line_start":483,"line_end":483,"column_start":1,"column_end":99}},{"value":"/ a `Hash` and a `Hashing`. It provides access to an `extrinsics_root`, `state_root` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146587,"byte_end":146677,"line_start":484,"line_end":484,"column_start":1,"column_end":91}},{"value":"/ `parent_hash`, as well as a `digest` and a block `number`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146678,"byte_end":146740,"line_start":485,"line_end":485,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146741,"byte_end":146744,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ You can also create a `new` one from those fields.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146745,"byte_end":146799,"line_start":487,"line_end":487,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1033},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146936,"byte_end":146942,"line_start":493,"line_end":493,"column_start":7,"column_end":13},"name":"Number","qualname":"::traits::Header::Number","value":"type Number: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash + Copy +\n\t\tMaybeDisplay + AtLeast32BitUnsigned + Codec + sp_std::str::FromStr + MaybeMallocSizeOf;","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Header number.\n","sig":null,"attributes":[{"value":"/ Header number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146911,"byte_end":146929,"line_start":492,"line_end":492,"column_start":2,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":1034},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147135,"byte_end":147139,"line_start":496,"line_end":496,"column_start":7,"column_end":11},"name":"Hash","qualname":"::traits::Header::Hash","value":"type Hash: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash + Ord\n\t\t+ Copy + MaybeDisplay + Default + SimpleBitOps + Codec + AsRef<[u8]>\n\t\t+ AsMut<[u8]> + MaybeMallocSizeOf;","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Header hash type\n","sig":null,"attributes":[{"value":"/ Header hash type","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147108,"byte_end":147128,"line_start":495,"line_end":495,"column_start":2,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1035},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147348,"byte_end":147355,"line_start":500,"line_end":500,"column_start":7,"column_end":14},"name":"Hashing","qualname":"::traits::Header::Hashing","value":"type Hashing: Hash<Output = Self::Hash>;","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Hashing algorithm\n","sig":null,"attributes":[{"value":"/ Hashing algorithm","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147320,"byte_end":147341,"line_start":499,"line_end":499,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147414,"byte_end":147417,"line_start":503,"line_end":503,"column_start":5,"column_end":8},"name":"new","qualname":"::traits::Header::new","value":"pub fn new(Self::Number, Self::Hash, Self::Hash, Self::Hash,\n           Digest<Self::Hash>) -> Self","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Creates new header.\n","sig":null,"attributes":[{"value":"/ Creates new header.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147386,"byte_end":147409,"line_start":502,"line_end":502,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147621,"byte_end":147627,"line_start":512,"line_end":512,"column_start":5,"column_end":11},"name":"number","qualname":"::traits::Header::number","value":"pub fn number(&Self) -> &Self::Number","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Returns a reference to the header number.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the header number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147571,"byte_end":147616,"line_start":511,"line_end":511,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147686,"byte_end":147696,"line_start":514,"line_end":514,"column_start":5,"column_end":15},"name":"set_number","qualname":"::traits::Header::set_number","value":"pub fn set_number(&mut Self, Self::Number)","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Sets the header number.\n","sig":null,"attributes":[{"value":"/ Sets the header number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147654,"byte_end":147681,"line_start":513,"line_end":513,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147785,"byte_end":147800,"line_start":517,"line_end":517,"column_start":5,"column_end":20},"name":"extrinsics_root","qualname":"::traits::Header::extrinsics_root","value":"pub fn extrinsics_root(&Self) -> &Self::Hash","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Returns a reference to the extrinsics root.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the extrinsics root.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147733,"byte_end":147780,"line_start":516,"line_end":516,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147858,"byte_end":147877,"line_start":519,"line_end":519,"column_start":5,"column_end":24},"name":"set_extrinsics_root","qualname":"::traits::Header::set_extrinsics_root","value":"pub fn set_extrinsics_root(&mut Self, Self::Hash)","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Sets the extrinsic root.\n","sig":null,"attributes":[{"value":"/ Sets the extrinsic root.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147825,"byte_end":147853,"line_start":518,"line_end":518,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147957,"byte_end":147967,"line_start":522,"line_end":522,"column_start":5,"column_end":15},"name":"state_root","qualname":"::traits::Header::state_root","value":"pub fn state_root(&Self) -> &Self::Hash","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Returns a reference to the state root.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the state root.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147910,"byte_end":147952,"line_start":521,"line_end":521,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148021,"byte_end":148035,"line_start":524,"line_end":524,"column_start":5,"column_end":19},"name":"set_state_root","qualname":"::traits::Header::set_state_root","value":"pub fn set_state_root(&mut Self, Self::Hash)","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Sets the state root.\n","sig":null,"attributes":[{"value":"/ Sets the state root.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":147992,"byte_end":148016,"line_start":523,"line_end":523,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148116,"byte_end":148127,"line_start":527,"line_end":527,"column_start":5,"column_end":16},"name":"parent_hash","qualname":"::traits::Header::parent_hash","value":"pub fn parent_hash(&Self) -> &Self::Hash","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Returns a reference to the parent hash.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the parent hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148068,"byte_end":148111,"line_start":526,"line_end":526,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148182,"byte_end":148197,"line_start":529,"line_end":529,"column_start":5,"column_end":20},"name":"set_parent_hash","qualname":"::traits::Header::set_parent_hash","value":"pub fn set_parent_hash(&mut Self, Self::Hash)","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Sets the parent hash.\n","sig":null,"attributes":[{"value":"/ Sets the parent hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148152,"byte_end":148177,"line_start":528,"line_end":528,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148273,"byte_end":148279,"line_start":532,"line_end":532,"column_start":5,"column_end":11},"name":"digest","qualname":"::traits::Header::digest","value":"pub fn digest(&Self) -> &Digest<Self::Hash>","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Returns a reference to the digest.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148230,"byte_end":148268,"line_start":531,"line_end":531,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148359,"byte_end":148369,"line_start":534,"line_end":534,"column_start":5,"column_end":15},"name":"digest_mut","qualname":"::traits::Header::digest_mut","value":"pub fn digest_mut(&mut Self) -> &mut Digest<Self::Hash>","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Get a mutable reference to the digest.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the digest.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148312,"byte_end":148354,"line_start":533,"line_end":533,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148451,"byte_end":148455,"line_start":537,"line_end":537,"column_start":5,"column_end":9},"name":"hash","qualname":"::traits::Header::hash","value":"pub fn hash(&Self) -> Self::Hash","parent":{"krate":0,"index":1032},"children":[],"decl_id":null,"docs":" Returns the hash of the header.\n","sig":null,"attributes":[{"value":"/ Returns the hash of the header.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148411,"byte_end":148446,"line_start":536,"line_end":536,"column_start":2,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":1048},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148772,"byte_end":148777,"line_start":546,"line_end":546,"column_start":11,"column_end":16},"name":"Block","qualname":"::traits::Block","value":"Block: Clone + Send + Sync + Codec + Eq + MaybeSerialize + Debug +\nMaybeMallocSizeOf + 'static","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057}],"decl_id":null,"docs":" Something which fulfills the abstract idea of a Substrate block. It has types for\n `Extrinsic` pieces of information as well as a `Header`.","sig":null,"attributes":[{"value":"/ Something which fulfills the abstract idea of a Substrate block. It has types for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148526,"byte_end":148611,"line_start":542,"line_end":542,"column_start":1,"column_end":86}},{"value":"/ `Extrinsic` pieces of information as well as a `Header`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148612,"byte_end":148672,"line_start":543,"line_end":543,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148673,"byte_end":148676,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ You can get an iterator over each of the `extrinsics` and retrieve the `header`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148677,"byte_end":148761,"line_start":545,"line_end":545,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":1049},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148901,"byte_end":148910,"line_start":548,"line_end":548,"column_start":7,"column_end":16},"name":"Extrinsic","qualname":"::traits::Block::Extrinsic","value":"type Extrinsic: Member + Codec + Extrinsic + MaybeSerialize + MaybeMallocSizeOf;","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Type for extrinsics.\n","sig":null,"attributes":[{"value":"/ Type for extrinsics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148870,"byte_end":148894,"line_start":547,"line_end":547,"column_start":2,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":1050},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149001,"byte_end":149007,"line_start":550,"line_end":550,"column_start":7,"column_end":13},"name":"Header","qualname":"::traits::Block::Header","value":"type Header: Header<Hash=Self::Hash> + MaybeMallocSizeOf;","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Header type.\n","sig":null,"attributes":[{"value":"/ Header type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148978,"byte_end":148994,"line_start":549,"line_end":549,"column_start":2,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":1051},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149082,"byte_end":149086,"line_start":552,"line_end":552,"column_start":7,"column_end":11},"name":"Hash","qualname":"::traits::Block::Hash","value":"type Hash: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash + Ord\n\t\t+ Copy + MaybeDisplay + Default + SimpleBitOps + Codec + AsRef<[u8]> + AsMut<[u8]>\n\t\t+ MaybeMallocSizeOf;","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Block hash type.\n","sig":null,"attributes":[{"value":"/ Block hash type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149055,"byte_end":149075,"line_start":551,"line_end":551,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149311,"byte_end":149317,"line_start":557,"line_end":557,"column_start":5,"column_end":11},"name":"header","qualname":"::traits::Block::header","value":"pub fn header(&Self) -> &Self::Header","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Returns a reference to the header.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the header.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149268,"byte_end":149306,"line_start":556,"line_end":556,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149399,"byte_end":149409,"line_start":559,"line_end":559,"column_start":5,"column_end":15},"name":"extrinsics","qualname":"::traits::Block::extrinsics","value":"pub fn extrinsics(&Self) -> &[Self::Extrinsic]","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Returns a reference to the list of extrinsics.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the list of extrinsics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149344,"byte_end":149394,"line_start":558,"line_end":558,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149501,"byte_end":149512,"line_start":561,"line_end":561,"column_start":5,"column_end":16},"name":"deconstruct","qualname":"::traits::Block::deconstruct","value":"pub fn deconstruct(Self) -> (Self::Header, Vec<Self::Extrinsic>)","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Split the block into header and list of extrinsics.\n","sig":null,"attributes":[{"value":"/ Split the block into header and list of extrinsics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149441,"byte_end":149496,"line_start":560,"line_end":560,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149615,"byte_end":149618,"line_start":563,"line_end":563,"column_start":5,"column_end":8},"name":"new","qualname":"::traits::Block::new","value":"pub fn new(Self::Header, Vec<Self::Extrinsic>) -> Self","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Creates new block from header and extrinsics.\n","sig":null,"attributes":[{"value":"/ Creates new block from header and extrinsics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149561,"byte_end":149610,"line_start":562,"line_end":562,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149724,"byte_end":149728,"line_start":565,"line_end":565,"column_start":5,"column_end":9},"name":"hash","qualname":"::traits::Block::hash","value":"pub fn hash(&Self) -> Self::Hash","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Returns the hash of the block.\n","sig":null,"attributes":[{"value":"/ Returns the hash of the block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149685,"byte_end":149719,"line_start":564,"line_end":564,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149952,"byte_end":149963,"line_start":570,"line_end":570,"column_start":5,"column_end":16},"name":"encode_from","qualname":"::traits::Block::encode_from","value":"pub fn encode_from(&Self::Header, &[Self::Extrinsic]) -> Vec<u8>","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Creates an encoded block from the given `header` and `extrinsics` without requiring the\n creation of an instance.\n","sig":null,"attributes":[{"value":"/ Creates an encoded block from the given `header` and `extrinsics` without requiring the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149826,"byte_end":149917,"line_start":568,"line_end":568,"column_start":2,"column_end":93}},{"value":"/ creation of an instance.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":149919,"byte_end":149947,"line_start":569,"line_end":569,"column_start":2,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1058},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150090,"byte_end":150099,"line_start":575,"line_end":575,"column_start":11,"column_end":20},"name":"Extrinsic","qualname":"::traits::Extrinsic","value":"Extrinsic: Sized + MaybeMallocSizeOf","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062}],"decl_id":null,"docs":" Something that acts like an `Extrinsic`.\n","sig":null,"attributes":[{"value":"/ Something that acts like an `Extrinsic`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150035,"byte_end":150079,"line_start":574,"line_end":574,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1059},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150159,"byte_end":150163,"line_start":577,"line_end":577,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::Extrinsic::Call","value":"type Call;","parent":{"krate":0,"index":1058},"children":[],"decl_id":null,"docs":" The function call.\n","sig":null,"attributes":[{"value":"/ The function call.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150130,"byte_end":150152,"line_start":576,"line_end":576,"column_start":2,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1060},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150356,"byte_end":150372,"line_start":584,"line_end":584,"column_start":7,"column_end":23},"name":"SignaturePayload","qualname":"::traits::Extrinsic::SignaturePayload","value":"type SignaturePayload;","parent":{"krate":0,"index":1058},"children":[],"decl_id":null,"docs":" The payload we carry for signed extrinsics.","sig":null,"attributes":[{"value":"/ The payload we carry for signed extrinsics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150167,"byte_end":150214,"line_start":579,"line_end":579,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150216,"byte_end":150219,"line_start":580,"line_end":580,"column_start":2,"column_end":5}},{"value":"/ Usually it will contain a `Signature` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150221,"byte_end":150266,"line_start":581,"line_end":581,"column_start":2,"column_end":47}},{"value":"/ may include some additional data that are specific to signed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150268,"byte_end":150332,"line_start":582,"line_end":582,"column_start":2,"column_end":66}},{"value":"/ extrinsics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150334,"byte_end":150349,"line_start":583,"line_end":583,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150499,"byte_end":150508,"line_start":588,"line_end":588,"column_start":5,"column_end":14},"name":"is_signed","qualname":"::traits::Extrinsic::is_signed","value":"pub fn is_signed(&Self) -> Option<bool>","parent":{"krate":0,"index":1058},"children":[],"decl_id":null,"docs":" Is this `Extrinsic` signed?\n If no information are available about signed/unsigned, `None` should be returned.\n","sig":null,"attributes":[{"value":"/ Is this `Extrinsic` signed?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150376,"byte_end":150407,"line_start":586,"line_end":586,"column_start":2,"column_end":33}},{"value":"/ If no information are available about signed/unsigned, `None` should be returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150409,"byte_end":150494,"line_start":587,"line_end":587,"column_start":2,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150899,"byte_end":150902,"line_start":596,"line_end":596,"column_start":5,"column_end":8},"name":"new","qualname":"::traits::Extrinsic::new","value":"pub fn new(Self::Call, Option<Self::SignaturePayload>) -> Option<Self>","parent":{"krate":0,"index":1058},"children":[],"decl_id":null,"docs":" Create new instance of the extrinsic.","sig":null,"attributes":[{"value":"/ Create new instance of the extrinsic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150543,"byte_end":150584,"line_start":590,"line_end":590,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150586,"byte_end":150589,"line_start":591,"line_end":591,"column_start":2,"column_end":5}},{"value":"/ Extrinsics can be split into:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150591,"byte_end":150624,"line_start":592,"line_end":592,"column_start":2,"column_end":35}},{"value":"/ 1. Inherents (no signature; created by validators during block production)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150626,"byte_end":150704,"line_start":593,"line_end":593,"column_start":2,"column_end":80}},{"value":"/ 2. Unsigned Transactions (no signature; represent \"system calls\" or other special kinds of calls)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150706,"byte_end":150807,"line_start":594,"line_end":594,"column_start":2,"column_end":103}},{"value":"/ 3. Signed Transactions (with signature; a regular transactions with known origin)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150809,"byte_end":150894,"line_start":595,"line_end":595,"column_start":2,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":1063},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151086,"byte_end":151103,"line_start":600,"line_end":600,"column_start":11,"column_end":28},"name":"ExtrinsicMetadata","qualname":"::traits::ExtrinsicMetadata","value":"ExtrinsicMetadata","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065}],"decl_id":null,"docs":" Implementor is an [`Extrinsic`] and provides metadata about this extrinsic.\n","sig":null,"attributes":[{"value":"/ Implementor is an [`Extrinsic`] and provides metadata about this extrinsic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150996,"byte_end":151075,"line_start":599,"line_end":599,"column_start":1,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":1064},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151150,"byte_end":151157,"line_start":602,"line_end":602,"column_start":8,"column_end":15},"name":"VERSION","qualname":"::traits::ExtrinsicMetadata::VERSION","value":"u8","parent":{"krate":0,"index":1063},"children":[],"decl_id":null,"docs":" The version of the `Extrinsic`.\n","sig":null,"attributes":[{"value":"/ The version of the `Extrinsic`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151107,"byte_end":151142,"line_start":601,"line_end":601,"column_start":2,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1065},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151223,"byte_end":151239,"line_start":605,"line_end":605,"column_start":7,"column_end":23},"name":"SignedExtensions","qualname":"::traits::ExtrinsicMetadata::SignedExtensions","value":"type SignedExtensions: SignedExtension;","parent":{"krate":0,"index":1063},"children":[],"decl_id":null,"docs":" Signed extensions attached to this `Extrinsic`.\n","sig":null,"attributes":[{"value":"/ Signed extensions attached to this `Extrinsic`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151165,"byte_end":151216,"line_start":604,"line_end":604,"column_start":2,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":1066},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151312,"byte_end":151319,"line_start":609,"line_end":609,"column_start":10,"column_end":17},"name":"HashFor","qualname":"::traits::HashFor","value":"<<B as Block>::Header as Header>::Hashing","parent":null,"children":[],"decl_id":null,"docs":" Extract the hashing type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the hashing type for a block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151261,"byte_end":151302,"line_start":608,"line_end":608,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":1068},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151418,"byte_end":151427,"line_start":611,"line_end":611,"column_start":10,"column_end":19},"name":"NumberFor","qualname":"::traits::NumberFor","value":"<<B as Block>::Header as Header>::Number","parent":null,"children":[],"decl_id":null,"docs":" Extract the number type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the number type for a block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151368,"byte_end":151408,"line_start":610,"line_end":610,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1070},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151525,"byte_end":151534,"line_start":613,"line_end":613,"column_start":10,"column_end":19},"name":"DigestFor","qualname":"::traits::DigestFor","value":"Digest<<<B as Block>::Header as Header>::Hash>","parent":null,"children":[],"decl_id":null,"docs":" Extract the digest type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the digest type for a block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151475,"byte_end":151515,"line_start":612,"line_end":612,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1072},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151643,"byte_end":151656,"line_start":615,"line_end":615,"column_start":10,"column_end":23},"name":"DigestItemFor","qualname":"::traits::DigestItemFor","value":"DigestItem<<<B as Block>::Header as Header>::Hash>","parent":null,"children":[],"decl_id":null,"docs":" Extract the digest item type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the digest item type for a block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151588,"byte_end":151633,"line_start":614,"line_end":614,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":1074},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152029,"byte_end":152038,"line_start":621,"line_end":621,"column_start":11,"column_end":20},"name":"Checkable","qualname":"::traits::Checkable","value":"Checkable<Context>: Sized","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077}],"decl_id":null,"docs":" A \"checkable\" piece of information, used by the standard Substrate Executive in order to\n check the validity of a piece of extrinsic information, usually by verifying the signature.\n Implement for pieces of information that require some additional context `Context` in order to be\n checked.\n","sig":null,"attributes":[{"value":"/ A \"checkable\" piece of information, used by the standard Substrate Executive in order to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151715,"byte_end":151807,"line_start":617,"line_end":617,"column_start":1,"column_end":93}},{"value":"/ check the validity of a piece of extrinsic information, usually by verifying the signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151808,"byte_end":151903,"line_start":618,"line_end":618,"column_start":1,"column_end":96}},{"value":"/ Implement for pieces of information that require some additional context `Context` in order to be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":151904,"byte_end":152005,"line_start":619,"line_end":619,"column_start":1,"column_end":102}},{"value":"/ checked.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152006,"byte_end":152018,"line_start":620,"line_end":620,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":1076},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152098,"byte_end":152105,"line_start":623,"line_end":623,"column_start":7,"column_end":14},"name":"Checked","qualname":"::traits::Checkable::Checked","value":"type Checked;","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Returned if `check` succeeds.\n","sig":null,"attributes":[{"value":"/ Returned if `check` succeeds.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152058,"byte_end":152091,"line_start":622,"line_end":622,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152159,"byte_end":152164,"line_start":626,"line_end":626,"column_start":5,"column_end":10},"name":"check","qualname":"::traits::Checkable::check","value":"pub fn check(Self, &Context)\n-> Result<Self::Checked, TransactionValidityError>","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Check self, given an instance of Context.\n","sig":null,"attributes":[{"value":"/ Check self, given an instance of Context.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152109,"byte_end":152154,"line_start":625,"line_end":625,"column_start":2,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":1078},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152544,"byte_end":152558,"line_start":633,"line_end":633,"column_start":11,"column_end":25},"name":"BlindCheckable","qualname":"::traits::BlindCheckable","value":"BlindCheckable: Sized","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"decl_id":null,"docs":" A \"checkable\" piece of information, used by the standard Substrate Executive in order to\n check the validity of a piece of extrinsic information, usually by verifying the signature.\n Implement for pieces of information that don't require additional context in order to be\n checked.\n","sig":null,"attributes":[{"value":"/ A \"checkable\" piece of information, used by the standard Substrate Executive in order to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152239,"byte_end":152331,"line_start":629,"line_end":629,"column_start":1,"column_end":93}},{"value":"/ check the validity of a piece of extrinsic information, usually by verifying the signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152332,"byte_end":152427,"line_start":630,"line_end":630,"column_start":1,"column_end":96}},{"value":"/ Implement for pieces of information that don't require additional context in order to be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152428,"byte_end":152520,"line_start":631,"line_end":631,"column_start":1,"column_end":93}},{"value":"/ checked.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152521,"byte_end":152533,"line_start":632,"line_end":632,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":1079},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152609,"byte_end":152616,"line_start":635,"line_end":635,"column_start":7,"column_end":14},"name":"Checked","qualname":"::traits::BlindCheckable::Checked","value":"type Checked;","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Returned if `check` succeeds.\n","sig":null,"attributes":[{"value":"/ Returned if `check` succeeds.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152569,"byte_end":152602,"line_start":634,"line_end":634,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152640,"byte_end":152645,"line_start":638,"line_end":638,"column_start":5,"column_end":10},"name":"check","qualname":"::traits::BlindCheckable::check","value":"pub fn check(Self) -> Result<Self::Checked, TransactionValidityError>","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Check self.\n","sig":null,"attributes":[{"value":"/ Check self.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152620,"byte_end":152635,"line_start":637,"line_end":637,"column_start":2,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":1086},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153133,"byte_end":153145,"line_start":652,"line_end":652,"column_start":11,"column_end":23},"name":"Dispatchable","qualname":"::traits::Dispatchable","value":"Dispatchable","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091}],"decl_id":null,"docs":" A lazy call (module function and argument values) that can be executed via its `dispatch`\n method.\n","sig":null,"attributes":[{"value":"/ A lazy call (module function and argument values) that can be executed via its `dispatch`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153017,"byte_end":153110,"line_start":650,"line_end":650,"column_start":1,"column_end":94}},{"value":"/ method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153111,"byte_end":153122,"line_start":651,"line_end":651,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":1087},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153439,"byte_end":153445,"line_start":656,"line_end":656,"column_start":7,"column_end":13},"name":"Origin","qualname":"::traits::Dispatchable::Origin","value":"type Origin;","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Every function call from your runtime has an origin, which specifies where the extrinsic was\n generated from. In the case of a signed extrinsic (transaction), the origin contains an\n identifier for the caller. The origin can be empty in the case of an inherent extrinsic.\n","sig":null,"attributes":[{"value":"/ Every function call from your runtime has an origin, which specifies where the extrinsic was","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153149,"byte_end":153245,"line_start":653,"line_end":653,"column_start":2,"column_end":98}},{"value":"/ generated from. In the case of a signed extrinsic (transaction), the origin contains an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153247,"byte_end":153338,"line_start":654,"line_end":654,"column_start":2,"column_end":93}},{"value":"/ identifier for the caller. The origin can be empty in the case of an inherent extrinsic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153340,"byte_end":153432,"line_start":655,"line_end":655,"column_start":2,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1088},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153462,"byte_end":153467,"line_start":658,"line_end":658,"column_start":7,"column_end":12},"name":"Trait","qualname":"::traits::Dispatchable::Trait","value":"type Trait;","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" ...\n","sig":null,"attributes":[{"value":"/ ...","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153448,"byte_end":153455,"line_start":657,"line_end":657,"column_start":2,"column_end":9}}]},{"kind":"Type","id":{"krate":0,"index":1089},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153718,"byte_end":153722,"line_start":662,"line_end":662,"column_start":7,"column_end":11},"name":"Info","qualname":"::traits::Dispatchable::Info","value":"type Info;","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" An opaque set of information attached to the transaction. This could be constructed anywhere\n down the line in a runtime. The current Substrate runtime uses a struct with the same name\n to represent the dispatch class and weight.\n","sig":null,"attributes":[{"value":"/ An opaque set of information attached to the transaction. This could be constructed anywhere","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153470,"byte_end":153566,"line_start":659,"line_end":659,"column_start":2,"column_end":98}},{"value":"/ down the line in a runtime. The current Substrate runtime uses a struct with the same name","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153568,"byte_end":153662,"line_start":660,"line_end":660,"column_start":2,"column_end":96}},{"value":"/ to represent the dispatch class and weight.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153664,"byte_end":153711,"line_start":661,"line_end":661,"column_start":2,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1090},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153903,"byte_end":153911,"line_start":665,"line_end":665,"column_start":7,"column_end":15},"name":"PostInfo","qualname":"::traits::Dispatchable::PostInfo","value":"type PostInfo: Eq + PartialEq + Clone + Copy + Encode + Decode + Printable;","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Additional information that is returned by `dispatch`. Can be used to supply the caller\n with information about a `Dispatchable` that is ownly known post dispatch.\n","sig":null,"attributes":[{"value":"/ Additional information that is returned by `dispatch`. Can be used to supply the caller","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153725,"byte_end":153816,"line_start":663,"line_end":663,"column_start":2,"column_end":93}},{"value":"/ with information about a `Dispatchable` that is ownly known post dispatch.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153818,"byte_end":153896,"line_start":664,"line_end":664,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154040,"byte_end":154048,"line_start":667,"line_end":667,"column_start":5,"column_end":13},"name":"dispatch","qualname":"::traits::Dispatchable::dispatch","value":"pub fn dispatch(Self, Self::Origin)\n-> crate::DispatchResultWithInfo<Self::PostInfo>","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Actually dispatch this call and return the result of it.\n","sig":null,"attributes":[{"value":"/ Actually dispatch this call and return the result of it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":153975,"byte_end":154035,"line_start":666,"line_end":666,"column_start":2,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":1092},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154202,"byte_end":154216,"line_start":671,"line_end":671,"column_start":10,"column_end":24},"name":"DispatchInfoOf","qualname":"::traits::DispatchInfoOf","value":"<T as Dispatchable>::Info","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to reference the `Info` type of a `Dispatchable`.\n","sig":null,"attributes":[{"value":"/ Shortcut to reference the `Info` type of a `Dispatchable`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154130,"byte_end":154192,"line_start":670,"line_end":670,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1094},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154325,"byte_end":154343,"line_start":673,"line_end":673,"column_start":10,"column_end":28},"name":"PostDispatchInfoOf","qualname":"::traits::PostDispatchInfoOf","value":"<T as Dispatchable>::PostInfo","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to reference the `PostInfo` type of a `Dispatchable`.\n","sig":null,"attributes":[{"value":"/ Shortcut to reference the `PostInfo` type of a `Dispatchable`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154249,"byte_end":154315,"line_start":672,"line_end":672,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":1102},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154854,"byte_end":154869,"line_start":687,"line_end":687,"column_start":11,"column_end":26},"name":"SignedExtension","qualname":"::traits::SignedExtension","value":"SignedExtension: Codec + Debug + Sync + Send + Clone + Eq + PartialEq","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1116}],"decl_id":null,"docs":" Means by which a transaction may be extended. This type embodies both the data and the logic\n that should be additionally associated with the transaction. It should be plain old data.\n","sig":null,"attributes":[{"value":"/ Means by which a transaction may be extended. This type embodies both the data and the logic","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154653,"byte_end":154749,"line_start":685,"line_end":685,"column_start":1,"column_end":97}},{"value":"/ that should be additionally associated with the transaction. It should be plain old data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154750,"byte_end":154843,"line_start":686,"line_end":686,"column_start":1,"column_end":94}}]},{"kind":"Const","id":{"krate":0,"index":1103},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155089,"byte_end":155099,"line_start":692,"line_end":692,"column_start":8,"column_end":18},"name":"IDENTIFIER","qualname":"::traits::SignedExtension::IDENTIFIER","value":"&'static str","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Unique identifier of this signed extension.","sig":null,"attributes":[{"value":"/ Unique identifier of this signed extension.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154927,"byte_end":154974,"line_start":688,"line_end":688,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154976,"byte_end":154979,"line_start":689,"line_end":689,"column_start":2,"column_end":5}},{"value":"/ This will be exposed in the metadata to identify the signed extension used","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154981,"byte_end":155059,"line_start":690,"line_end":690,"column_start":2,"column_end":80}},{"value":"/ in an extrinsic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155061,"byte_end":155081,"line_start":691,"line_end":691,"column_start":2,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1104},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155171,"byte_end":155180,"line_start":695,"line_end":695,"column_start":7,"column_end":16},"name":"AccountId","qualname":"::traits::SignedExtension::AccountId","value":"type AccountId;","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" The type which encodes the sender identity.\n","sig":null,"attributes":[{"value":"/ The type which encodes the sender identity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155117,"byte_end":155164,"line_start":694,"line_end":694,"column_start":2,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1105},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155244,"byte_end":155248,"line_start":698,"line_end":698,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::SignedExtension::Call","value":"type Call: Dispatchable;","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" The type which encodes the call to be dispatched.\n","sig":null,"attributes":[{"value":"/ The type which encodes the call to be dispatched.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155184,"byte_end":155237,"line_start":697,"line_end":697,"column_start":2,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1106},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155432,"byte_end":155448,"line_start":702,"line_end":702,"column_start":7,"column_end":23},"name":"AdditionalSigned","qualname":"::traits::SignedExtension::AdditionalSigned","value":"type AdditionalSigned: Encode;","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Any additional data that will go into the signed payload. This may be created dynamically\n from the transaction using the `additional_signed` function.\n","sig":null,"attributes":[{"value":"/ Any additional data that will go into the signed payload. This may be created dynamically","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155266,"byte_end":155359,"line_start":700,"line_end":700,"column_start":2,"column_end":95}},{"value":"/ from the transaction using the `additional_signed` function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155361,"byte_end":155425,"line_start":701,"line_end":701,"column_start":2,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1107},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155559,"byte_end":155562,"line_start":705,"line_end":705,"column_start":7,"column_end":10},"name":"Pre","qualname":"::traits::SignedExtension::Pre","value":"type Pre: Default;","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" The type that encodes information that can be passed from pre_dispatch to post-dispatch.\n","sig":null,"attributes":[{"value":"/ The type that encodes information that can be passed from pre_dispatch to post-dispatch.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155460,"byte_end":155552,"line_start":704,"line_end":704,"column_start":2,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155761,"byte_end":155778,"line_start":709,"line_end":709,"column_start":5,"column_end":22},"name":"additional_signed","qualname":"::traits::SignedExtension::additional_signed","value":"pub fn additional_signed(&Self)\n-> Result<Self::AdditionalSigned, TransactionValidityError>","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Construct any additional data that should be in the signed payload of the transaction. Can\n also perform any pre-signature-verification checks and return an error if needed.\n","sig":null,"attributes":[{"value":"/ Construct any additional data that should be in the signed payload of the transaction. Can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155575,"byte_end":155669,"line_start":707,"line_end":707,"column_start":2,"column_end":96}},{"value":"/ also perform any pre-signature-verification checks and return an error if needed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155671,"byte_end":155756,"line_start":708,"line_end":708,"column_start":2,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156290,"byte_end":156298,"line_start":720,"line_end":720,"column_start":5,"column_end":13},"name":"validate","qualname":"::traits::SignedExtension::validate","value":"pub fn validate(&Self, &Self::AccountId, &Self::Call,\n                &DispatchInfoOf<Self::Call>, usize) -> TransactionValidity","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Validate a signed transaction for the transaction queue.","sig":null,"attributes":[{"value":"/ Validate a signed transaction for the transaction queue.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155849,"byte_end":155909,"line_start":711,"line_end":711,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155911,"byte_end":155914,"line_start":712,"line_end":712,"column_start":2,"column_end":5}},{"value":"/ This function can be called frequently by the transaction queue,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155916,"byte_end":155984,"line_start":713,"line_end":713,"column_start":2,"column_end":70}},{"value":"/ to obtain transaction validity against current state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":155986,"byte_end":156043,"line_start":714,"line_end":714,"column_start":2,"column_end":59}},{"value":"/ It should perform all checks that determine a valid transaction,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156045,"byte_end":156113,"line_start":715,"line_end":715,"column_start":2,"column_end":70}},{"value":"/ that can pay for its execution and quickly eliminate ones","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156115,"byte_end":156176,"line_start":716,"line_end":716,"column_start":2,"column_end":63}},{"value":"/ that are stale or incorrect.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156178,"byte_end":156210,"line_start":717,"line_end":717,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156212,"byte_end":156215,"line_start":718,"line_end":718,"column_start":2,"column_end":5}},{"value":"/ Make sure to perform the same checks in `pre_dispatch` function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156217,"byte_end":156285,"line_start":719,"line_end":719,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156865,"byte_end":156877,"line_start":738,"line_end":738,"column_start":5,"column_end":17},"name":"pre_dispatch","qualname":"::traits::SignedExtension::pre_dispatch","value":"pub fn pre_dispatch(Self, &Self::AccountId, &Self::Call,\n                    &DispatchInfoOf<Self::Call>, usize)\n-> Result<Self::Pre, TransactionValidityError>","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Do any pre-flight stuff for a signed transaction.","sig":null,"attributes":[{"value":"/ Do any pre-flight stuff for a signed transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156477,"byte_end":156530,"line_start":730,"line_end":730,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156532,"byte_end":156535,"line_start":731,"line_end":731,"column_start":2,"column_end":5}},{"value":"/ Note this function by default delegates to `validate`, so that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156537,"byte_end":156603,"line_start":732,"line_end":732,"column_start":2,"column_end":68}},{"value":"/ all checks performed for the transaction queue are also performed during","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156605,"byte_end":156681,"line_start":733,"line_end":733,"column_start":2,"column_end":78}},{"value":"/ the dispatch phase (applying the extrinsic).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156683,"byte_end":156731,"line_start":734,"line_end":734,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156733,"byte_end":156736,"line_start":735,"line_end":735,"column_start":2,"column_end":5}},{"value":"/ If you ever override this function, you need to make sure to always","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156738,"byte_end":156809,"line_start":736,"line_end":736,"column_start":2,"column_end":73}},{"value":"/ perform the same validation as in `validate`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":156811,"byte_end":156860,"line_start":737,"line_end":737,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157562,"byte_end":157579,"line_start":758,"line_end":758,"column_start":5,"column_end":22},"name":"validate_unsigned","qualname":"::traits::SignedExtension::validate_unsigned","value":"pub fn validate_unsigned(&Self::Call, &DispatchInfoOf<Self::Call>, usize)\n-> TransactionValidity","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Validate an unsigned transaction for the transaction queue.","sig":null,"attributes":[{"value":"/ Validate an unsigned transaction for the transaction queue.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157137,"byte_end":157200,"line_start":750,"line_end":750,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157202,"byte_end":157205,"line_start":751,"line_end":751,"column_start":2,"column_end":5}},{"value":"/ This function can be called frequently by the transaction queue","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157207,"byte_end":157274,"line_start":752,"line_end":752,"column_start":2,"column_end":69}},{"value":"/ to obtain transaction validity against current state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157276,"byte_end":157333,"line_start":753,"line_end":753,"column_start":2,"column_end":59}},{"value":"/ It should perform all checks that determine a valid unsigned transaction,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157335,"byte_end":157412,"line_start":754,"line_end":754,"column_start":2,"column_end":79}},{"value":"/ and quickly eliminate ones that are stale or incorrect.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157414,"byte_end":157473,"line_start":755,"line_end":755,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157475,"byte_end":157478,"line_start":756,"line_end":756,"column_start":2,"column_end":5}},{"value":"/ Make sure to perform the same checks in `pre_dispatch_unsigned` function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157480,"byte_end":157557,"line_start":757,"line_end":757,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158131,"byte_end":158152,"line_start":774,"line_end":774,"column_start":5,"column_end":26},"name":"pre_dispatch_unsigned","qualname":"::traits::SignedExtension::pre_dispatch_unsigned","value":"pub fn pre_dispatch_unsigned(&Self::Call, &DispatchInfoOf<Self::Call>, usize)\n-> Result<Self::Pre, TransactionValidityError>","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Do any pre-flight stuff for a unsigned transaction.","sig":null,"attributes":[{"value":"/ Do any pre-flight stuff for a unsigned transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157723,"byte_end":157778,"line_start":766,"line_end":766,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157780,"byte_end":157783,"line_start":767,"line_end":767,"column_start":2,"column_end":5}},{"value":"/ Note this function by default delegates to `validate_unsigned`, so that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157785,"byte_end":157860,"line_start":768,"line_end":768,"column_start":2,"column_end":77}},{"value":"/ all checks performed for the transaction queue are also performed during","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157862,"byte_end":157938,"line_start":769,"line_end":769,"column_start":2,"column_end":78}},{"value":"/ the dispatch phase (applying the extrinsic).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157940,"byte_end":157988,"line_start":770,"line_end":770,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157990,"byte_end":157993,"line_start":771,"line_end":771,"column_start":2,"column_end":5}},{"value":"/ If you ever override this function, you need to make sure to always","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":157995,"byte_end":158066,"line_start":772,"line_end":772,"column_start":2,"column_end":73}},{"value":"/ perform the same validation as in `validate_unsigned`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158068,"byte_end":158126,"line_start":773,"line_end":773,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159182,"byte_end":159195,"line_start":797,"line_end":797,"column_start":5,"column_end":18},"name":"post_dispatch","qualname":"::traits::SignedExtension::post_dispatch","value":"pub fn post_dispatch(Self::Pre, &DispatchInfoOf<Self::Call>,\n                     &PostDispatchInfoOf<Self::Call>, usize, &DispatchResult)\n-> Result<(), TransactionValidityError>","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Do any post-flight stuff for an extrinsic.","sig":null,"attributes":[{"value":"/ Do any post-flight stuff for an extrinsic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158384,"byte_end":158430,"line_start":784,"line_end":784,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158432,"byte_end":158435,"line_start":785,"line_end":785,"column_start":2,"column_end":5}},{"value":"/ This gets given the `DispatchResult` `_result` from the extrinsic and can, if desired,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158437,"byte_end":158527,"line_start":786,"line_end":786,"column_start":2,"column_end":92}},{"value":"/ introduce a `TransactionValidityError`, causing the block to become invalid for including","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158529,"byte_end":158622,"line_start":787,"line_end":787,"column_start":2,"column_end":95}},{"value":"/ it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158624,"byte_end":158631,"line_start":788,"line_end":788,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158633,"byte_end":158636,"line_start":789,"line_end":789,"column_start":2,"column_end":5}},{"value":"/ WARNING: It is dangerous to return an error here. To do so will fundamentally invalidate the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158638,"byte_end":158734,"line_start":790,"line_end":790,"column_start":2,"column_end":98}},{"value":"/ transaction and any block that it is included in, causing the block author to not be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158736,"byte_end":158824,"line_start":791,"line_end":791,"column_start":2,"column_end":90}},{"value":"/ compensated for their work in validating the transaction or producing the block so far.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158826,"byte_end":158917,"line_start":792,"line_end":792,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158919,"byte_end":158922,"line_start":793,"line_end":793,"column_start":2,"column_end":5}},{"value":"/ It can only be used safely when you *know* that the extrinsic is one that can only be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":158924,"byte_end":159013,"line_start":794,"line_end":794,"column_start":2,"column_end":91}},{"value":"/ introduced by the current block author; generally this implies that it is an inherent and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159015,"byte_end":159108,"line_start":795,"line_end":795,"column_start":2,"column_end":95}},{"value":"/ will come from either an offchain-worker or via `InherentData`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159110,"byte_end":159177,"line_start":796,"line_end":796,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159792,"byte_end":159802,"line_start":814,"line_end":814,"column_start":5,"column_end":15},"name":"identifier","qualname":"::traits::SignedExtension::identifier","value":"pub fn identifier() -> Vec<&'static str>","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Returns the list of unique identifier for this signed extension.","sig":null,"attributes":[{"value":"/ Returns the list of unique identifier for this signed extension.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159403,"byte_end":159471,"line_start":807,"line_end":807,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159473,"byte_end":159476,"line_start":808,"line_end":808,"column_start":2,"column_end":5}},{"value":"/ As a [`SignedExtension`] can be a tuple of [`SignedExtension`]s we need to return a `Vec`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159478,"byte_end":159571,"line_start":809,"line_end":809,"column_start":2,"column_end":95}},{"value":"/ that holds all the unique identifiers. Each individual `SignedExtension` must return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159573,"byte_end":159661,"line_start":810,"line_end":810,"column_start":2,"column_end":90}},{"value":"/ *exactly* one identifier.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159663,"byte_end":159692,"line_start":811,"line_end":811,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159694,"byte_end":159697,"line_start":812,"line_end":812,"column_start":2,"column_end":5}},{"value":"/ This method provides a default implementation that returns `vec![SELF::IDENTIFIER]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":159699,"byte_end":159787,"line_start":813,"line_end":813,"column_start":2,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":1124},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162700,"byte_end":162709,"line_start":903,"line_end":903,"column_start":11,"column_end":20},"name":"Applyable","qualname":"::traits::Applyable","value":"Applyable: Sized + Send + Sync","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1128}],"decl_id":null,"docs":" An \"executable\" piece of information, used by the standard Substrate Executive in order to\n enact a piece of extrinsic information by marshalling and dispatching to a named function\n call.","sig":null,"attributes":[{"value":"/ An \"executable\" piece of information, used by the standard Substrate Executive in order to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162324,"byte_end":162418,"line_start":897,"line_end":897,"column_start":1,"column_end":95}},{"value":"/ enact a piece of extrinsic information by marshalling and dispatching to a named function","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162419,"byte_end":162512,"line_start":898,"line_end":898,"column_start":1,"column_end":94}},{"value":"/ call.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162513,"byte_end":162522,"line_start":899,"line_end":899,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162523,"byte_end":162526,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ Also provides information on to whom this information is attributable and an index that allows","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162527,"byte_end":162625,"line_start":901,"line_end":901,"column_start":1,"column_end":99}},{"value":"/ each piece of attributable information to be disambiguated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162626,"byte_end":162689,"line_start":902,"line_end":902,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1125},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162815,"byte_end":162819,"line_start":905,"line_end":905,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::Applyable::Call","value":"type Call: Dispatchable;","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Type by which we can dispatch. Restricts the `UnsignedValidator` type.\n","sig":null,"attributes":[{"value":"/ Type by which we can dispatch. Restricts the `UnsignedValidator` type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162734,"byte_end":162808,"line_start":904,"line_end":904,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162929,"byte_end":162937,"line_start":908,"line_end":908,"column_start":5,"column_end":13},"name":"validate","qualname":"::traits::Applyable::validate","value":"pub fn validate<V: ValidateUnsigned<Call =\n                Self::Call>>(&Self, TransactionSource,\n                             &DispatchInfoOf<Self::Call>, usize)\n-> TransactionValidity","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Checks to see if this is a valid *transaction*. It returns information on it if so.\n","sig":null,"attributes":[{"value":"/ Checks to see if this is a valid *transaction*. It returns information on it if so.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162837,"byte_end":162924,"line_start":907,"line_end":907,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163217,"byte_end":163222,"line_start":917,"line_end":917,"column_start":5,"column_end":10},"name":"apply","qualname":"::traits::Applyable::apply","value":"pub fn apply<V: ValidateUnsigned<Call =\n             Self::Call>>(Self, &DispatchInfoOf<Self::Call>, usize)\n-> crate::ApplyExtrinsicResultWithInfo<PostDispatchInfoOf<Self::Call>>","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Executes all necessary logic needed prior to dispatch and deconstructs into function call,\n index and sender.\n","sig":null,"attributes":[{"value":"/ Executes all necessary logic needed prior to dispatch and deconstructs into function call,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163095,"byte_end":163189,"line_start":915,"line_end":915,"column_start":2,"column_end":96}},{"value":"/ index and sender.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163191,"byte_end":163212,"line_start":916,"line_end":916,"column_start":2,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1130},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163484,"byte_end":163503,"line_start":925,"line_end":925,"column_start":11,"column_end":30},"name":"GetRuntimeBlockType","qualname":"::traits::GetRuntimeBlockType","value":"GetRuntimeBlockType","parent":null,"children":[{"krate":0,"index":1131}],"decl_id":null,"docs":" A marker trait for something that knows the type of the runtime block.\n","sig":null,"attributes":[{"value":"/ A marker trait for something that knows the type of the runtime block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163399,"byte_end":163473,"line_start":924,"line_end":924,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":1131},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163542,"byte_end":163554,"line_start":927,"line_end":927,"column_start":7,"column_end":19},"name":"RuntimeBlock","qualname":"::traits::GetRuntimeBlockType::RuntimeBlock","value":"type RuntimeBlock: self::Block;","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The `RuntimeBlock` type.\n","sig":null,"attributes":[{"value":"/ The `RuntimeBlock` type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163507,"byte_end":163535,"line_start":926,"line_end":926,"column_start":2,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1132},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163654,"byte_end":163670,"line_start":931,"line_end":931,"column_start":11,"column_end":27},"name":"GetNodeBlockType","qualname":"::traits::GetNodeBlockType","value":"GetNodeBlockType","parent":null,"children":[{"krate":0,"index":1133}],"decl_id":null,"docs":" A marker trait for something that knows the type of the node block.\n","sig":null,"attributes":[{"value":"/ A marker trait for something that knows the type of the node block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163572,"byte_end":163643,"line_start":930,"line_end":930,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1133},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163706,"byte_end":163715,"line_start":933,"line_end":933,"column_start":7,"column_end":16},"name":"NodeBlock","qualname":"::traits::GetNodeBlockType::NodeBlock","value":"type NodeBlock: self::Block;","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" The `NodeBlock` type.\n","sig":null,"attributes":[{"value":"/ The `NodeBlock` type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163674,"byte_end":163699,"line_start":932,"line_end":932,"column_start":2,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":1134},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164074,"byte_end":164090,"line_start":942,"line_end":942,"column_start":11,"column_end":27},"name":"ValidateUnsigned","qualname":"::traits::ValidateUnsigned","value":"ValidateUnsigned","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1138}],"decl_id":null,"docs":" Something that can validate unsigned extrinsics for the transaction pool.","sig":null,"attributes":[{"value":"/ Something that can validate unsigned extrinsics for the transaction pool.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163733,"byte_end":163810,"line_start":936,"line_end":936,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163811,"byte_end":163814,"line_start":937,"line_end":937,"column_start":1,"column_end":4}},{"value":"/ Note that any checks done here are only used for determining the validity of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163815,"byte_end":163895,"line_start":938,"line_end":938,"column_start":1,"column_end":81}},{"value":"/ the transaction for the transaction pool.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163896,"byte_end":163941,"line_start":939,"line_end":939,"column_start":1,"column_end":46}},{"value":"/ During block execution phase one need to perform the same checks anyway,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":163942,"byte_end":164018,"line_start":940,"line_end":940,"column_start":1,"column_end":77}},{"value":"/ since this function is not being called.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164019,"byte_end":164063,"line_start":941,"line_end":941,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1135},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164125,"byte_end":164129,"line_start":944,"line_end":944,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::ValidateUnsigned::Call","value":"type Call;","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" The call to validate\n","sig":null,"attributes":[{"value":"/ The call to validate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164094,"byte_end":164118,"line_start":943,"line_end":943,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164614,"byte_end":164626,"line_start":956,"line_end":956,"column_start":5,"column_end":17},"name":"pre_dispatch","qualname":"::traits::ValidateUnsigned::pre_dispatch","value":"pub fn pre_dispatch(&Self::Call) -> Result<(), TransactionValidityError>","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Validate the call right before dispatch.","sig":null,"attributes":[{"value":"/ Validate the call right before dispatch.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164133,"byte_end":164177,"line_start":946,"line_end":946,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164179,"byte_end":164182,"line_start":947,"line_end":947,"column_start":2,"column_end":5}},{"value":"/ This method should be used to prevent transactions already in the pool","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164184,"byte_end":164258,"line_start":948,"line_end":948,"column_start":2,"column_end":76}},{"value":"/ (i.e. passing `validate_unsigned`) from being included in blocks","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164260,"byte_end":164328,"line_start":949,"line_end":949,"column_start":2,"column_end":70}},{"value":"/ in case we know they now became invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164330,"byte_end":164374,"line_start":950,"line_end":950,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164376,"byte_end":164379,"line_start":951,"line_end":951,"column_start":2,"column_end":5}},{"value":"/ By default it's a good idea to call `validate_unsigned` from within","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164381,"byte_end":164452,"line_start":952,"line_end":952,"column_start":2,"column_end":73}},{"value":"/ this function again to make sure we never include an invalid transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164454,"byte_end":164531,"line_start":953,"line_end":953,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164533,"byte_end":164536,"line_start":954,"line_end":954,"column_start":2,"column_end":5}},{"value":"/ Changes made to storage WILL be persisted if the call returns `Ok`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164538,"byte_end":164609,"line_start":955,"line_end":955,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165033,"byte_end":165050,"line_start":968,"line_end":968,"column_start":5,"column_end":22},"name":"validate_unsigned","qualname":"::traits::ValidateUnsigned::validate_unsigned","value":"pub fn validate_unsigned(TransactionSource, &Self::Call)\n-> TransactionValidity","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Return the validity of the call","sig":null,"attributes":[{"value":"/ Return the validity of the call","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164793,"byte_end":164828,"line_start":962,"line_end":962,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164830,"byte_end":164833,"line_start":963,"line_end":963,"column_start":2,"column_end":5}},{"value":"/ This doesn't execute any side-effects; it merely checks","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164835,"byte_end":164894,"line_start":964,"line_end":964,"column_start":2,"column_end":61}},{"value":"/ whether the transaction would panic if it were included or not.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164896,"byte_end":164963,"line_start":965,"line_end":965,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164965,"byte_end":164968,"line_start":966,"line_end":966,"column_start":2,"column_end":5}},{"value":"/ Changes made to storage should be discarded by caller.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":164970,"byte_end":165028,"line_start":967,"line_end":967,"column_start":2,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1139},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165252,"byte_end":165262,"line_start":973,"line_end":973,"column_start":11,"column_end":21},"name":"OpaqueKeys","qualname":"::traits::OpaqueKeys","value":"OpaqueKeys: Clone","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1145}],"decl_id":null,"docs":" Opaque data type that may be destructured into a series of raw byte slices (which represent\n individual keys).\n","sig":null,"attributes":[{"value":"/ Opaque data type that may be destructured into a series of raw byte slices (which represent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165124,"byte_end":165219,"line_start":971,"line_end":971,"column_start":1,"column_end":96}},{"value":"/ individual keys).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165220,"byte_end":165241,"line_start":972,"line_end":972,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1140},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165355,"byte_end":165373,"line_start":975,"line_end":975,"column_start":7,"column_end":25},"name":"KeyTypeIdProviders","qualname":"::traits::OpaqueKeys::KeyTypeIdProviders","value":"type KeyTypeIdProviders;","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":" Types bound to this opaque keys that provide the key type ids returned.\n","sig":null,"attributes":[{"value":"/ Types bound to this opaque keys that provide the key type ids returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165273,"byte_end":165348,"line_start":974,"line_end":974,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165432,"byte_end":165439,"line_start":978,"line_end":978,"column_start":5,"column_end":12},"name":"key_ids","qualname":"::traits::OpaqueKeys::key_ids","value":"pub fn key_ids() -> &'static [crate::KeyTypeId]","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":" Return the key-type IDs supported by this set.\n","sig":null,"attributes":[{"value":"/ Return the key-type IDs supported by this set.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165377,"byte_end":165427,"line_start":977,"line_end":977,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165530,"byte_end":165537,"line_start":980,"line_end":980,"column_start":5,"column_end":12},"name":"get_raw","qualname":"::traits::OpaqueKeys::get_raw","value":"pub fn get_raw(&Self, super::KeyTypeId) -> &[u8]","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":" Get the raw bytes of key with key-type ID `i`.\n","sig":null,"attributes":[{"value":"/ Get the raw bytes of key with key-type ID `i`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165475,"byte_end":165525,"line_start":979,"line_end":979,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165627,"byte_end":165630,"line_start":982,"line_end":982,"column_start":5,"column_end":8},"name":"get","qualname":"::traits::OpaqueKeys::get","value":"pub fn get<T: Decode>(&Self, super::KeyTypeId) -> Option<T>","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":" Get the decoded key with key-type ID `i`.\n","sig":null,"attributes":[{"value":"/ Get the decoded key with key-type ID `i`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165577,"byte_end":165622,"line_start":981,"line_end":981,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165778,"byte_end":165802,"line_start":986,"line_end":986,"column_start":5,"column_end":29},"name":"ownership_proof_is_valid","qualname":"::traits::OpaqueKeys::ownership_proof_is_valid","value":"pub fn ownership_proof_is_valid(&Self, &[u8]) -> bool","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":" Verify a proof of ownership for the keys.\n","sig":null,"attributes":[{"value":"/ Verify a proof of ownership for the keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165728,"byte_end":165773,"line_start":985,"line_end":985,"column_start":2,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1146},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":166037,"byte_end":166053,"line_start":993,"line_end":993,"column_start":12,"column_end":28},"name":"AppendZerosInput","qualname":"::traits::AppendZerosInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" Input that adds infinite number of zero after wrapped input.","sig":null,"attributes":[{"value":"/ Input that adds infinite number of zero after wrapped input.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165845,"byte_end":165909,"line_start":989,"line_end":989,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165910,"byte_end":165913,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ This can add an infinite stream of zeros onto any input, not just a slice as with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165914,"byte_end":165999,"line_start":991,"line_end":991,"column_start":1,"column_end":86}},{"value":"/ `TrailingZerosInput`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":166000,"byte_end":166025,"line_start":992,"line_end":992,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":166174,"byte_end":166177,"line_start":997,"line_end":997,"column_start":9,"column_end":12},"name":"new","qualname":"<AppendZerosInput>::new","value":"pub fn new(&'a mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from the given byte array.\n","sig":null,"attributes":[{"value":"/ Create a new instance from the given byte array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":166113,"byte_end":166165,"line_start":996,"line_end":996,"column_start":2,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1160},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167077,"byte_end":167094,"line_start":1036,"line_end":1036,"column_start":12,"column_end":29},"name":"TrailingZeroInput","qualname":"::traits::TrailingZeroInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" Input that adds infinite number of zero after wrapped input.\n","sig":null,"attributes":[{"value":"/ Input that adds infinite number of zero after wrapped input.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167001,"byte_end":167065,"line_start":1035,"line_end":1035,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167206,"byte_end":167209,"line_start":1040,"line_end":1040,"column_start":9,"column_end":12},"name":"new","qualname":"<TrailingZeroInput>::new","value":"pub fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from the given byte array.\n","sig":null,"attributes":[{"value":"/ Create a new instance from the given byte array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167145,"byte_end":167197,"line_start":1039,"line_end":1039,"column_start":2,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1171},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167793,"byte_end":167812,"line_start":1063,"line_end":1063,"column_start":11,"column_end":30},"name":"AccountIdConversion","qualname":"::traits::AccountIdConversion","value":"AccountIdConversion<AccountId>: Sized","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178}],"decl_id":null,"docs":" This type can be converted into and possibly from an AccountId (which itself is generic).\n","sig":null,"attributes":[{"value":"/ This type can be converted into and possibly from an AccountId (which itself is generic).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167689,"byte_end":167782,"line_start":1062,"line_end":1062,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167890,"byte_end":167902,"line_start":1065,"line_end":1065,"column_start":5,"column_end":17},"name":"into_account","qualname":"::traits::AccountIdConversion::into_account","value":"pub fn into_account(&Self) -> AccountId","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" Convert into an account ID. This is infallible.\n","sig":null,"attributes":[{"value":"/ Convert into an account ID. This is infallible.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167834,"byte_end":167885,"line_start":1064,"line_end":1064,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168028,"byte_end":168044,"line_start":1068,"line_end":1068,"column_start":5,"column_end":21},"name":"try_from_account","qualname":"::traits::AccountIdConversion::try_from_account","value":"pub fn try_from_account(&AccountId) -> Option<Self>","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" Try to convert an account ID into this type. Might not succeed.\n","sig":null,"attributes":[{"value":"/ Try to convert an account ID into this type. Might not succeed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167956,"byte_end":168023,"line_start":1067,"line_end":1067,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168642,"byte_end":168658,"line_start":1081,"line_end":1081,"column_start":5,"column_end":21},"name":"into_sub_account","qualname":"::traits::AccountIdConversion::into_sub_account","value":"pub fn into_sub_account<S: Encode>(&Self, S) -> AccountId","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" Convert this value amalgamated with the a secondary \"sub\" value into an account ID. This is\n infallible.","sig":null,"attributes":[{"value":"/ Convert this value amalgamated with the a secondary \"sub\" value into an account ID. This is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168134,"byte_end":168229,"line_start":1072,"line_end":1072,"column_start":2,"column_end":97}},{"value":"/ infallible.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168231,"byte_end":168246,"line_start":1073,"line_end":1073,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168248,"byte_end":168251,"line_start":1074,"line_end":1074,"column_start":2,"column_end":5}},{"value":"/ NOTE: The account IDs from this and from `into_account` are *not* guaranteed to be distinct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168253,"byte_end":168348,"line_start":1075,"line_end":1075,"column_start":2,"column_end":97}},{"value":"/ for any given value of `self`, nor are different invocations to this with different types","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168350,"byte_end":168443,"line_start":1076,"line_end":1076,"column_start":2,"column_end":95}},{"value":"/ `T`. For example, the following will all encode to the same account ID value:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168445,"byte_end":168526,"line_start":1077,"line_end":1077,"column_start":2,"column_end":83}},{"value":"/ - `self.into_sub_account(0u32)`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168528,"byte_end":168563,"line_start":1078,"line_end":1078,"column_start":2,"column_end":37}},{"value":"/ - `self.into_sub_account(vec![0u8; 0])`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168565,"byte_end":168608,"line_start":1079,"line_end":1079,"column_start":2,"column_end":45}},{"value":"/ - `self.into_account()`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168610,"byte_end":168637,"line_start":1080,"line_end":1080,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168773,"byte_end":168793,"line_start":1084,"line_end":1084,"column_start":5,"column_end":25},"name":"try_from_sub_account","qualname":"::traits::AccountIdConversion::try_from_sub_account","value":"pub fn try_from_sub_account<S: Decode>(&AccountId) -> Option<(Self, S)>","parent":{"krate":0,"index":1171},"children":[],"decl_id":null,"docs":" Try to convert an account ID into this type. Might not succeed.\n","sig":null,"attributes":[{"value":"/ Try to convert an account ID into this type. Might not succeed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":168701,"byte_end":168768,"line_start":1083,"line_end":1083,"column_start":2,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":1192},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":173815,"byte_end":173824,"line_start":1263,"line_end":1263,"column_start":11,"column_end":20},"name":"Printable","qualname":"::traits::Printable","value":"Printable","parent":null,"children":[{"krate":0,"index":1193}],"decl_id":null,"docs":" Trait for things which can be printed from the runtime.\n","sig":null,"attributes":[{"value":"/ Trait for things which can be printed from the runtime.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":173745,"byte_end":173804,"line_start":1262,"line_end":1262,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":173854,"byte_end":173859,"line_start":1265,"line_end":1265,"column_start":5,"column_end":10},"name":"print","qualname":"::traits::Printable::print","value":"pub fn print(&Self)","parent":{"krate":0,"index":1192},"children":[],"decl_id":null,"docs":" Print the object.\n","sig":null,"attributes":[{"value":"/ Print the object.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":173828,"byte_end":173849,"line_start":1264,"line_end":1264,"column_start":2,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1213},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":174863,"byte_end":174872,"line_start":1335,"line_end":1335,"column_start":11,"column_end":20},"name":"BlockIdTo","qualname":"::traits::BlockIdTo","value":"BlockIdTo<Block: self::Block>","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"decl_id":null,"docs":" Something that can convert a [`BlockId`](crate::generic::BlockId) to a number or a hash.\n","sig":null,"attributes":[{"value":"/ Something that can convert a [`BlockId`](crate::generic::BlockId) to a number or a hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":174736,"byte_end":174828,"line_start":1333,"line_end":1333,"column_start":1,"column_end":93}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":174829,"byte_end":174852,"line_start":1334,"line_end":1334,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1215},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":174961,"byte_end":174966,"line_start":1337,"line_end":1337,"column_start":7,"column_end":12},"name":"Error","qualname":"::traits::BlockIdTo::Error","value":"type Error: std::fmt::Debug;","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" The error type that will be returned by the functions.\n","sig":null,"attributes":[{"value":"/ The error type that will be returned by the functions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":174896,"byte_end":174954,"line_start":1336,"line_end":1336,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":175057,"byte_end":175064,"line_start":1340,"line_end":1340,"column_start":5,"column_end":12},"name":"to_hash","qualname":"::traits::BlockIdTo::to_hash","value":"pub fn to_hash(&Self, &crate::generic::BlockId<Block>)\n-> Result<Option<Block::Hash>, Self::Error>","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" Convert the given `block_id` to the corresponding block hash.\n","sig":null,"attributes":[{"value":"/ Convert the given `block_id` to the corresponding block hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":174987,"byte_end":175052,"line_start":1339,"line_end":1339,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":175242,"byte_end":175251,"line_start":1346,"line_end":1346,"column_start":5,"column_end":14},"name":"to_number","qualname":"::traits::BlockIdTo::to_number","value":"pub fn to_number(&Self, &crate::generic::BlockId<Block>)\n-> Result<Option<NumberFor<Block>>, Self::Error>","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" Convert the given `block_id` to the corresponding block number.\n","sig":null,"attributes":[{"value":"/ Convert the given `block_id` to the corresponding block number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":175170,"byte_end":175237,"line_start":1345,"line_end":1345,"column_start":2,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":1218},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transaction_validity","qualname":"::transaction_validity","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":4341},{"krate":0,"index":1222},{"krate":0,"index":4343},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":3313},{"krate":0,"index":3362},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3349},{"krate":0,"index":3344},{"krate":0,"index":3343},{"krate":0,"index":3341},{"krate":0,"index":3335},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":3364},{"krate":0,"index":3399},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3386},{"krate":0,"index":3381},{"krate":0,"index":3380},{"krate":0,"index":3378},{"krate":0,"index":3372},{"krate":0,"index":1232},{"krate":0,"index":3401},{"krate":0,"index":3435},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3422},{"krate":0,"index":3417},{"krate":0,"index":3416},{"krate":0,"index":3414},{"krate":0,"index":3408},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":3437},{"krate":0,"index":3467},{"krate":0,"index":3465},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3453},{"krate":0,"index":3448},{"krate":0,"index":3446},{"krate":0,"index":3444},{"krate":0,"index":3468},{"krate":0,"index":3494},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3481},{"krate":0,"index":3476},{"krate":0,"index":3474},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":3496},{"krate":0,"index":3503},{"krate":0,"index":3501},{"krate":0,"index":3499},{"krate":0,"index":1253},{"krate":0,"index":1263},{"krate":0,"index":1265}],"decl_id":null,"docs":" Transaction validity interface.\n","sig":null,"attributes":[{"value":"/ Transaction validity interface.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":178584,"byte_end":178619,"line_start":18,"line_end":18,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1224},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":178776,"byte_end":178795,"line_start":25,"line_end":25,"column_start":10,"column_end":29},"name":"TransactionPriority","qualname":"::transaction_validity::TransactionPriority","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Priority for a transaction. Additive. Higher is better.\n","sig":null,"attributes":[{"value":"/ Priority for a transaction. Additive. Higher is better.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":178707,"byte_end":178766,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1225},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":178936,"byte_end":178956,"line_start":29,"line_end":29,"column_start":10,"column_end":30},"name":"TransactionLongevity","qualname":"::transaction_validity::TransactionLongevity","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Minimum number of blocks a transaction will remain valid for.\n `TransactionLongevity::max_value()` means \"forever\".\n","sig":null,"attributes":[{"value":"/ Minimum number of blocks a transaction will remain valid for.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":178804,"byte_end":178869,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ `TransactionLongevity::max_value()` means \"forever\".","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":178870,"byte_end":178926,"line_start":28,"line_end":28,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1226},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179066,"byte_end":179080,"line_start":32,"line_end":32,"column_start":10,"column_end":24},"name":"TransactionTag","qualname":"::transaction_validity::TransactionTag","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Tag for a transaction. No two transactions with the same tag should be placed on-chain.\n","sig":null,"attributes":[{"value":"/ Tag for a transaction. No two transactions with the same tag should be placed on-chain.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":178965,"byte_end":179056,"line_start":31,"line_end":31,"column_start":1,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3314},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179334,"byte_end":179338,"line_start":39,"line_end":39,"column_start":2,"column_end":6},"name":"Call","qualname":"::transaction_validity::InvalidTransaction::Call","value":"InvalidTransaction::Call","parent":{"krate":0,"index":3313},"children":[],"decl_id":null,"docs":" The call of the transaction is not expected.\n","sig":null,"attributes":[{"value":"/ The call of the transaction is not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179284,"byte_end":179332,"line_start":38,"line_end":38,"column_start":2,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3316},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179434,"byte_end":179441,"line_start":41,"line_end":41,"column_start":2,"column_end":9},"name":"Payment","qualname":"::transaction_validity::InvalidTransaction::Payment","value":"InvalidTransaction::Payment","parent":{"krate":0,"index":3313},"children":[],"decl_id":null,"docs":" General error to do with the inability to pay some fees (e.g. account balance too low).\n","sig":null,"attributes":[{"value":"/ General error to do with the inability to pay some fees (e.g. account balance too low).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179341,"byte_end":179432,"line_start":40,"line_end":40,"column_start":2,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3318},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179533,"byte_end":179539,"line_start":43,"line_end":43,"column_start":2,"column_end":8},"name":"Future","qualname":"::transaction_validity::InvalidTransaction::Future","value":"InvalidTransaction::Future","parent":{"krate":0,"index":3313},"children":[],"decl_id":null,"docs":" General error to do with the transaction not yet being valid (e.g. nonce too high).\n","sig":null,"attributes":[{"value":"/ General error to do with the transaction not yet being valid (e.g. nonce too high).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179444,"byte_end":179531,"line_start":42,"line_end":42,"column_start":2,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3320},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179625,"byte_end":179630,"line_start":45,"line_end":45,"column_start":2,"column_end":7},"name":"Stale","qualname":"::transaction_validity::InvalidTransaction::Stale","value":"InvalidTransaction::Stale","parent":{"krate":0,"index":3313},"children":[],"decl_id":null,"docs":" General error to do with the transaction being outdated (e.g. nonce too low).\n","sig":null,"attributes":[{"value":"/ General error to do with the transaction being outdated (e.g. nonce too low).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179542,"byte_end":179623,"line_start":44,"line_end":44,"column_start":2,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180203,"byte_end":180211,"line_start":55,"line_end":55,"column_start":2,"column_end":10},"name":"BadProof","qualname":"::transaction_validity::InvalidTransaction::BadProof","value":"InvalidTransaction::BadProof","parent":{"krate":0,"index":3313},"children":[],"decl_id":null,"docs":" General error to do with the transaction's proofs (e.g. signature).","sig":null,"attributes":[{"value":"/ General error to do with the transaction's proofs (e.g. signature).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179633,"byte_end":179704,"line_start":46,"line_end":46,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179706,"byte_end":179709,"line_start":47,"line_end":47,"column_start":2,"column_end":5}},{"value":"/ # Possible causes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179711,"byte_end":179732,"line_start":48,"line_end":48,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179734,"byte_end":179737,"line_start":49,"line_end":49,"column_start":2,"column_end":5}},{"value":"/ When using a signed extension that provides additional data for signing, it is required","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179739,"byte_end":179830,"line_start":50,"line_end":50,"column_start":2,"column_end":93}},{"value":"/ that the signing and the verifying side use the same additional data. Additional","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179832,"byte_end":179916,"line_start":51,"line_end":51,"column_start":2,"column_end":86}},{"value":"/ data will only be used to generate the signature, but will not be part of the transaction","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179918,"byte_end":180011,"line_start":52,"line_end":52,"column_start":2,"column_end":95}},{"value":"/ itself. As the verifying side does not know which additional data was used while signing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180013,"byte_end":180105,"line_start":53,"line_end":53,"column_start":2,"column_end":94}},{"value":"/ it will only be able to assume a bad signature and cannot express a more meaningful error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180107,"byte_end":180201,"line_start":54,"line_end":54,"column_start":2,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3324},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180259,"byte_end":180276,"line_start":57,"line_end":57,"column_start":2,"column_end":19},"name":"AncientBirthBlock","qualname":"::transaction_validity::InvalidTransaction::AncientBirthBlock","value":"InvalidTransaction::AncientBirthBlock","parent":{"krate":0,"index":3313},"children":[],"decl_id":null,"docs":" The transaction birth block is ancient.\n","sig":null,"attributes":[{"value":"/ The transaction birth block is ancient.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180214,"byte_end":180257,"line_start":56,"line_end":56,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3326},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180455,"byte_end":180472,"line_start":62,"line_end":62,"column_start":2,"column_end":19},"name":"ExhaustsResources","qualname":"::transaction_validity::InvalidTransaction::ExhaustsResources","value":"InvalidTransaction::ExhaustsResources","parent":{"krate":0,"index":3313},"children":[],"decl_id":null,"docs":" The transaction would exhaust the resources of current block.","sig":null,"attributes":[{"value":"/ The transaction would exhaust the resources of current block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180279,"byte_end":180344,"line_start":58,"line_end":58,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180346,"byte_end":180349,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ The transaction might be valid, but there are not enough resources","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180351,"byte_end":180421,"line_start":60,"line_end":60,"column_start":2,"column_end":72}},{"value":"/ left in the current block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180423,"byte_end":180453,"line_start":61,"line_end":61,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3328},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180548,"byte_end":180554,"line_start":64,"line_end":64,"column_start":2,"column_end":8},"name":"Custom","qualname":"::transaction_validity::InvalidTransaction::Custom","value":"InvalidTransaction::Custom(u8)","parent":{"krate":0,"index":3313},"children":[],"decl_id":null,"docs":" Any other custom invalid validity that is not covered by this enum.\n","sig":null,"attributes":[{"value":"/ Any other custom invalid validity that is not covered by this enum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180475,"byte_end":180546,"line_start":63,"line_end":63,"column_start":2,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3331},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180823,"byte_end":180835,"line_start":68,"line_end":68,"column_start":2,"column_end":14},"name":"BadMandatory","qualname":"::transaction_validity::InvalidTransaction::BadMandatory","value":"InvalidTransaction::BadMandatory","parent":{"krate":0,"index":3313},"children":[],"decl_id":null,"docs":" An extrinsic with a Mandatory dispatch resulted in Error. This is indicative of either a\n malicious validator or a buggy `provide_inherent`. In any case, it can result in dangerously\n overweight blocks and therefore if found, invalidates the block.\n","sig":null,"attributes":[{"value":"/ An extrinsic with a Mandatory dispatch resulted in Error. This is indicative of either a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180561,"byte_end":180653,"line_start":65,"line_end":65,"column_start":2,"column_end":94}},{"value":"/ malicious validator or a buggy `provide_inherent`. In any case, it can result in dangerously","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180655,"byte_end":180751,"line_start":66,"line_end":66,"column_start":2,"column_end":98}},{"value":"/ overweight blocks and therefore if found, invalidates the block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180753,"byte_end":180821,"line_start":67,"line_end":67,"column_start":2,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3333},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180973,"byte_end":180990,"line_start":71,"line_end":71,"column_start":2,"column_end":19},"name":"MandatoryDispatch","qualname":"::transaction_validity::InvalidTransaction::MandatoryDispatch","value":"InvalidTransaction::MandatoryDispatch","parent":{"krate":0,"index":3313},"children":[],"decl_id":null,"docs":" A transaction with a mandatory dispatch. This is invalid; only inherent extrinsics are\n allowed to have mandatory dispatches.\n","sig":null,"attributes":[{"value":"/ A transaction with a mandatory dispatch. This is invalid; only inherent extrinsics are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180838,"byte_end":180928,"line_start":69,"line_end":69,"column_start":2,"column_end":92}},{"value":"/ allowed to have mandatory dispatches.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":180930,"byte_end":180971,"line_start":70,"line_end":70,"column_start":2,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3313},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179262,"byte_end":179280,"line_start":37,"line_end":37,"column_start":10,"column_end":28},"name":"InvalidTransaction","qualname":"::transaction_validity::InvalidTransaction","value":"pub enum InvalidTransaction {\n\n    /// The call of the transaction is not expected.\n    Call,\n\n    /// General error to do with the inability to pay some fees (e.g. account balance too low).\n    Payment,\n\n    /// General error to do with the transaction not yet being valid (e.g. nonce too high).\n    Future,\n\n    /// General error to do with the transaction being outdated (e.g. nonce too low).\n    Stale,\n\n    /// General error to do with the transaction's proofs (e.g. signature).\n    ///\n    /// # Possible causes\n    ///\n    /// When using a signed extension that provides additional data for signing, it is required\n    /// that the signing and the verifying side use the same additional data. Additional\n    /// data will only be used to generate the signature, but will not be part of the transaction\n    /// itself. As the verifying side does not know which additional data was used while signing\n    /// it will only be able to assume a bad signature and cannot express a more meaningful error.\n    BadProof,\n\n    /// The transaction birth block is ancient.\n    AncientBirthBlock,\n\n    /// The transaction would exhaust the resources of current block.\n    ///\n    /// The transaction might be valid, but there are not enough resources\n    /// left in the current block.\n    ExhaustsResources,\n\n    /// Any other custom invalid validity that is not covered by this enum.\n    Custom(u8),\n\n    /// An extrinsic with a Mandatory dispatch resulted in Error. This is indicative of either a\n    /// malicious validator or a buggy `provide_inherent`. In any case, it can result in dangerously\n    /// overweight blocks and therefore if found, invalidates the block.\n    BadMandatory,\n\n    /// A transaction with a mandatory dispatch. This is invalid; only inherent extrinsics are\n    /// allowed to have mandatory dispatches.\n    MandatoryDispatch,\n}","parent":null,"children":[{"krate":0,"index":3314},{"krate":0,"index":3316},{"krate":0,"index":3318},{"krate":0,"index":3320},{"krate":0,"index":3322},{"krate":0,"index":3324},{"krate":0,"index":3326},{"krate":0,"index":3328},{"krate":0,"index":3331},{"krate":0,"index":3333}],"decl_id":null,"docs":" An invalid transaction validity.\n","sig":null,"attributes":[{"value":"/ An invalid transaction validity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":179093,"byte_end":179129,"line_start":34,"line_end":34,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":181106,"byte_end":181125,"line_start":76,"line_end":76,"column_start":9,"column_end":28},"name":"exhausted_resources","qualname":"<InvalidTransaction>::exhausted_resources","value":"pub fn exhausted_resources(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the reason for the invalidity was block resource exhaustion.\n","sig":null,"attributes":[{"value":"/ Returns if the reason for the invalidity was block resource exhaustion.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":181022,"byte_end":181097,"line_start":75,"line_end":75,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":181301,"byte_end":181314,"line_start":84,"line_end":84,"column_start":9,"column_end":22},"name":"was_mandatory","qualname":"<InvalidTransaction>::was_mandatory","value":"pub fn was_mandatory(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the reason for the invalidity was a mandatory call failing.\n","sig":null,"attributes":[{"value":"/ Returns if the reason for the invalidity was a mandatory call failing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":181218,"byte_end":181292,"line_start":83,"line_end":83,"column_start":2,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3365},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":182674,"byte_end":182686,"line_start":118,"line_end":118,"column_start":2,"column_end":14},"name":"CannotLookup","qualname":"::transaction_validity::UnknownTransaction::CannotLookup","value":"UnknownTransaction::CannotLookup","parent":{"krate":0,"index":3364},"children":[],"decl_id":null,"docs":" Could not lookup some information that is required to validate the transaction.\n","sig":null,"attributes":[{"value":"/ Could not lookup some information that is required to validate the transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":182589,"byte_end":182672,"line_start":117,"line_end":117,"column_start":2,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3367},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":182749,"byte_end":182768,"line_start":120,"line_end":120,"column_start":2,"column_end":21},"name":"NoUnsignedValidator","qualname":"::transaction_validity::UnknownTransaction::NoUnsignedValidator","value":"UnknownTransaction::NoUnsignedValidator","parent":{"krate":0,"index":3364},"children":[],"decl_id":null,"docs":" No validator found for the given unsigned transaction.\n","sig":null,"attributes":[{"value":"/ No validator found for the given unsigned transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":182689,"byte_end":182747,"line_start":119,"line_end":119,"column_start":2,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3369},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":182844,"byte_end":182850,"line_start":122,"line_end":122,"column_start":2,"column_end":8},"name":"Custom","qualname":"::transaction_validity::UnknownTransaction::Custom","value":"UnknownTransaction::Custom(u8)","parent":{"krate":0,"index":3364},"children":[],"decl_id":null,"docs":" Any other custom unknown validity that is not covered by this enum.\n","sig":null,"attributes":[{"value":"/ Any other custom unknown validity that is not covered by this enum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":182771,"byte_end":182842,"line_start":121,"line_end":121,"column_start":2,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":3364},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":182567,"byte_end":182585,"line_start":116,"line_end":116,"column_start":10,"column_end":28},"name":"UnknownTransaction","qualname":"::transaction_validity::UnknownTransaction","value":"pub enum UnknownTransaction {\n\n    /// Could not lookup some information that is required to validate the transaction.\n    CannotLookup,\n\n    /// No validator found for the given unsigned transaction.\n    NoUnsignedValidator,\n\n    /// Any other custom unknown validity that is not covered by this enum.\n    Custom(u8),\n}","parent":null,"children":[{"krate":0,"index":3365},{"krate":0,"index":3367},{"krate":0,"index":3369}],"decl_id":null,"docs":" An unknown transaction validity.\n","sig":null,"attributes":[{"value":"/ An unknown transaction validity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":182398,"byte_end":182434,"line_start":113,"line_end":113,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3402},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183559,"byte_end":183566,"line_start":142,"line_end":142,"column_start":2,"column_end":9},"name":"Invalid","qualname":"::transaction_validity::TransactionValidityError::Invalid","value":"TransactionValidityError::Invalid(InvalidTransaction)","parent":{"krate":0,"index":3401},"children":[],"decl_id":null,"docs":" The transaction is invalid.\n","sig":null,"attributes":[{"value":"/ The transaction is invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183526,"byte_end":183557,"line_start":141,"line_end":141,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3405},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183636,"byte_end":183643,"line_start":144,"line_end":144,"column_start":2,"column_end":9},"name":"Unknown","qualname":"::transaction_validity::TransactionValidityError::Unknown","value":"TransactionValidityError::Unknown(UnknownTransaction)","parent":{"krate":0,"index":3401},"children":[],"decl_id":null,"docs":" Transaction validity can't be determined.\n","sig":null,"attributes":[{"value":"/ Transaction validity can't be determined.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183589,"byte_end":183634,"line_start":143,"line_end":143,"column_start":2,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3401},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183498,"byte_end":183522,"line_start":140,"line_end":140,"column_start":10,"column_end":34},"name":"TransactionValidityError","qualname":"::transaction_validity::TransactionValidityError","value":"pub enum TransactionValidityError {\n\n    /// The transaction is invalid.\n    Invalid(InvalidTransaction),\n\n    /// Transaction validity can't be determined.\n    Unknown(UnknownTransaction),\n}","parent":null,"children":[{"krate":0,"index":3402},{"krate":0,"index":3405}],"decl_id":null,"docs":" Errors that can occur while checking the validity of a transaction.\n","sig":null,"attributes":[{"value":"/ Errors that can occur while checking the validity of a transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183294,"byte_end":183365,"line_start":137,"line_end":137,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183787,"byte_end":183806,"line_start":149,"line_end":149,"column_start":9,"column_end":28},"name":"exhausted_resources","qualname":"<TransactionValidityError>::exhausted_resources","value":"pub fn exhausted_resources(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the reason for the error was block resource exhaustion.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the reason for the error was block resource exhaustion.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183701,"byte_end":183778,"line_start":148,"line_end":148,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":184062,"byte_end":184075,"line_start":158,"line_end":158,"column_start":9,"column_end":22},"name":"was_mandatory","qualname":"<TransactionValidityError>::was_mandatory","value":"pub fn was_mandatory(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the reason for the error was it being a mandatory dispatch that could not\n be completed successfully.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the reason for the error was it being a mandatory dispatch that could not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183926,"byte_end":184021,"line_start":156,"line_end":156,"column_start":2,"column_end":97}},{"value":"/ be completed successfully.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":184023,"byte_end":184053,"line_start":157,"line_end":157,"column_start":2,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":1243},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":184870,"byte_end":184889,"line_start":188,"line_end":188,"column_start":10,"column_end":29},"name":"TransactionValidity","qualname":"::transaction_validity::TransactionValidity","value":"Result<ValidTransaction, TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" Information on a transaction's validity and, if valid, on how it relates to other transactions.\n","sig":null,"attributes":[{"value":"/ Information on a transaction's validity and, if valid, on how it relates to other transactions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":184761,"byte_end":184860,"line_start":187,"line_end":187,"column_start":1,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3438},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185898,"byte_end":185905,"line_start":215,"line_end":215,"column_start":2,"column_end":9},"name":"InBlock","qualname":"::transaction_validity::TransactionSource::InBlock","value":"TransactionSource::InBlock","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":" Transaction is already included in block.","sig":null,"attributes":[{"value":"/ Transaction is already included in block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185574,"byte_end":185619,"line_start":209,"line_end":209,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185621,"byte_end":185624,"line_start":210,"line_end":210,"column_start":2,"column_end":5}},{"value":"/ This means that we can't really tell where the transaction is coming from,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185626,"byte_end":185704,"line_start":211,"line_end":211,"column_start":2,"column_end":80}},{"value":"/ since it's already in the received block. Note that the custom validation logic","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185706,"byte_end":185789,"line_start":212,"line_end":212,"column_start":2,"column_end":85}},{"value":"/ using either `Local` or `External` should most likely just allow `InBlock`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185791,"byte_end":185869,"line_start":213,"line_end":213,"column_start":2,"column_end":80}},{"value":"/ transactions as well.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185871,"byte_end":185896,"line_start":214,"line_end":214,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3440},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186150,"byte_end":186155,"line_start":222,"line_end":222,"column_start":2,"column_end":7},"name":"Local","qualname":"::transaction_validity::TransactionSource::Local","value":"TransactionSource::Local","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":" Transaction is coming from a local source.","sig":null,"attributes":[{"value":"/ Transaction is coming from a local source.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185909,"byte_end":185955,"line_start":217,"line_end":217,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185957,"byte_end":185960,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ This means that the transaction was produced internally by the node","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185962,"byte_end":186033,"line_start":219,"line_end":219,"column_start":2,"column_end":73}},{"value":"/ (for instance an Off-Chain Worker, or an Off-Chain Call), as opposed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186035,"byte_end":186107,"line_start":220,"line_end":220,"column_start":2,"column_end":74}},{"value":"/ to being received over the network.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186109,"byte_end":186148,"line_start":221,"line_end":221,"column_start":2,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3442},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186348,"byte_end":186356,"line_start":228,"line_end":228,"column_start":2,"column_end":10},"name":"External","qualname":"::transaction_validity::TransactionSource::External","value":"TransactionSource::External","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":" Transaction has been received externally.","sig":null,"attributes":[{"value":"/ Transaction has been received externally.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186159,"byte_end":186204,"line_start":224,"line_end":224,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186206,"byte_end":186209,"line_start":225,"line_end":225,"column_start":2,"column_end":5}},{"value":"/ This means the transaction has been received from (usually) \"untrusted\" source,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186211,"byte_end":186294,"line_start":226,"line_end":226,"column_start":2,"column_end":85}},{"value":"/ for instance received over the network or RPC.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186296,"byte_end":186346,"line_start":227,"line_end":227,"column_start":2,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3437},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185553,"byte_end":185570,"line_start":208,"line_end":208,"column_start":10,"column_end":27},"name":"TransactionSource","qualname":"::transaction_validity::TransactionSource","value":"pub enum TransactionSource {\n\n    /// Transaction is already included in block.\n    ///\n    /// This means that we can't really tell where the transaction is coming from,\n    /// since it's already in the received block. Note that the custom validation logic\n    /// using either `Local` or `External` should most likely just allow `InBlock`\n    /// transactions as well.\n    InBlock,\n\n    /// Transaction is coming from a local source.\n    ///\n    /// This means that the transaction was produced internally by the node\n    /// (for instance an Off-Chain Worker, or an Off-Chain Call), as opposed\n    /// to being received over the network.\n    Local,\n\n    /// Transaction has been received externally.\n    ///\n    /// This means the transaction has been received from (usually) \"untrusted\" source,\n    /// for instance received over the network or RPC.\n    External,\n}","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3440},{"krate":0,"index":3442}],"decl_id":null,"docs":" The source of the transaction.","sig":null,"attributes":[{"value":"/ The source of the transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185187,"byte_end":185221,"line_start":202,"line_end":202,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185222,"byte_end":185225,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Depending on the source we might apply different validation schemes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185226,"byte_end":185298,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ For instance we can disallow specific kinds of transactions if they were not produced","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185299,"byte_end":185388,"line_start":205,"line_end":205,"column_start":1,"column_end":90}},{"value":"/ by our local node (for instance off-chain workers).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185389,"byte_end":185444,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3468},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186482,"byte_end":186498,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"ValidTransaction","qualname":"::transaction_validity::ValidTransaction","value":"ValidTransaction { priority, requires, provides, longevity, propagate }","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473}],"decl_id":null,"docs":" Information concerning a valid transaction.\n","sig":null,"attributes":[{"value":"/ Information concerning a valid transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186361,"byte_end":186408,"line_start":231,"line_end":231,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3469},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186668,"byte_end":186676,"line_start":238,"line_end":238,"column_start":6,"column_end":14},"name":"priority","qualname":"::transaction_validity::ValidTransaction::priority","value":"u64","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Priority of the transaction.","sig":null,"attributes":[{"value":"/ Priority of the transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186502,"byte_end":186534,"line_start":234,"line_end":234,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186536,"byte_end":186539,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ Priority determines the ordering of two transactions that have all","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186541,"byte_end":186611,"line_start":236,"line_end":236,"column_start":2,"column_end":72}},{"value":"/ their dependencies (required tags) satisfied.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186613,"byte_end":186662,"line_start":237,"line_end":237,"column_start":2,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3470},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186875,"byte_end":186883,"line_start":243,"line_end":243,"column_start":6,"column_end":14},"name":"requires","qualname":"::transaction_validity::ValidTransaction::requires","value":"sp_application_crypto::Vec<sp_application_crypto::Vec<u8>>","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Transaction dependencies","sig":null,"attributes":[{"value":"/ Transaction dependencies","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186700,"byte_end":186728,"line_start":239,"line_end":239,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186730,"byte_end":186733,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ A non-empty list signifies that some other transactions which provide","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186735,"byte_end":186808,"line_start":241,"line_end":241,"column_start":2,"column_end":75}},{"value":"/ given tags are required to be included before that one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186810,"byte_end":186869,"line_start":242,"line_end":242,"column_start":2,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3471},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187259,"byte_end":187267,"line_start":250,"line_end":250,"column_start":6,"column_end":14},"name":"provides","qualname":"::transaction_validity::ValidTransaction::provides","value":"sp_application_crypto::Vec<sp_application_crypto::Vec<u8>>","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Provided tags","sig":null,"attributes":[{"value":"/ Provided tags","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186907,"byte_end":186924,"line_start":244,"line_end":244,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186926,"byte_end":186929,"line_start":245,"line_end":245,"column_start":2,"column_end":5}},{"value":"/ A list of tags this transaction provides. Successfully importing the transaction","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":186931,"byte_end":187015,"line_start":246,"line_end":246,"column_start":2,"column_end":86}},{"value":"/ will enable other transactions that depend on (require) those tags to be included as well.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187017,"byte_end":187111,"line_start":247,"line_end":247,"column_start":2,"column_end":96}},{"value":"/ Provided and required tags allow Substrate to build a dependency graph of transactions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187113,"byte_end":187203,"line_start":248,"line_end":248,"column_start":2,"column_end":92}},{"value":"/ and import them in the right (linear) order.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187205,"byte_end":187253,"line_start":249,"line_end":249,"column_start":2,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3472},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187485,"byte_end":187494,"line_start":255,"line_end":255,"column_start":6,"column_end":15},"name":"longevity","qualname":"::transaction_validity::ValidTransaction::longevity","value":"u64","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Transaction longevity","sig":null,"attributes":[{"value":"/ Transaction longevity","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187291,"byte_end":187316,"line_start":251,"line_end":251,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187318,"byte_end":187321,"line_start":252,"line_end":252,"column_start":2,"column_end":5}},{"value":"/ Longevity describes minimum number of blocks the validity is correct.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187323,"byte_end":187396,"line_start":253,"line_end":253,"column_start":2,"column_end":75}},{"value":"/ After this period transaction should be removed from the pool or revalidated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187398,"byte_end":187479,"line_start":254,"line_end":254,"column_start":2,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":3473},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187789,"byte_end":187798,"line_start":261,"line_end":261,"column_start":6,"column_end":15},"name":"propagate","qualname":"::transaction_validity::ValidTransaction::propagate","value":"bool","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" A flag indicating if the transaction should be propagated to other peers.","sig":null,"attributes":[{"value":"/ A flag indicating if the transaction should be propagated to other peers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187519,"byte_end":187596,"line_start":256,"line_end":256,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187598,"byte_end":187601,"line_start":257,"line_end":257,"column_start":2,"column_end":5}},{"value":"/ By setting `false` here the transaction will still be considered for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187603,"byte_end":187675,"line_start":258,"line_end":258,"column_start":2,"column_end":74}},{"value":"/ including in blocks that are authored on the current node, but will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187677,"byte_end":187748,"line_start":259,"line_end":259,"column_start":2,"column_end":73}},{"value":"/ never be sent to other peers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187750,"byte_end":187783,"line_start":260,"line_end":260,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188290,"byte_end":188305,"line_start":281,"line_end":281,"column_start":9,"column_end":24},"name":"with_tag_prefix","qualname":"<ValidTransaction>::with_tag_prefix","value":"pub fn with_tag_prefix(&'static str) -> ValidTransactionBuilder","parent":null,"children":[],"decl_id":null,"docs":" Initiate `ValidTransaction` builder object with a particular prefix for tags.","sig":null,"attributes":[{"value":"/ Initiate `ValidTransaction` builder object with a particular prefix for tags.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188052,"byte_end":188133,"line_start":277,"line_end":277,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188135,"byte_end":188138,"line_start":278,"line_end":278,"column_start":2,"column_end":5}},{"value":"/ To avoid conflicts between different parts in runtime it's recommended to build `requires`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188140,"byte_end":188234,"line_start":279,"line_end":279,"column_start":2,"column_end":96}},{"value":"/ and `provides` tags with a unique prefix.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188236,"byte_end":188281,"line_start":280,"line_end":280,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188698,"byte_end":188710,"line_start":291,"line_end":291,"column_start":9,"column_end":21},"name":"combine_with","qualname":"<ValidTransaction>::combine_with","value":"pub fn combine_with(Self, ValidTransaction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Combine two instances into one, as a best effort. This will take the superset of each of the\n `provides` and `requires` tags, it will sum the priorities, take the minimum longevity and\n the logic *And* of the propagate flags.\n","sig":null,"attributes":[{"value":"/ Combine two instances into one, as a best effort. This will take the superset of each of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188452,"byte_end":188548,"line_start":288,"line_end":288,"column_start":2,"column_end":98}},{"value":"/ `provides` and `requires` tags, it will sum the priorities, take the minimum longevity and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188550,"byte_end":188644,"line_start":289,"line_end":289,"column_start":2,"column_end":96}},{"value":"/ the logic *And* of the propagate flags.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188646,"byte_end":188689,"line_start":290,"line_end":290,"column_start":2,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3496},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189341,"byte_end":189364,"line_start":308,"line_end":308,"column_start":12,"column_end":35},"name":"ValidTransactionBuilder","qualname":"::transaction_validity::ValidTransactionBuilder","value":"ValidTransactionBuilder {  }","parent":null,"children":[{"krate":0,"index":3497},{"krate":0,"index":3498}],"decl_id":null,"docs":" `ValidTransaction` builder.","sig":null,"attributes":[{"value":"/ `ValidTransaction` builder.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189100,"byte_end":189131,"line_start":302,"line_end":302,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189132,"byte_end":189135,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189136,"byte_end":189139,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ Allows to easily construct `ValidTransaction` and most importantly takes care of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189140,"byte_end":189224,"line_start":305,"line_end":305,"column_start":1,"column_end":85}},{"value":"/ prefixing `requires` and `provides` tags to avoid conflicts.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189225,"byte_end":189289,"line_start":306,"line_end":306,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189874,"byte_end":189882,"line_start":321,"line_end":321,"column_start":9,"column_end":17},"name":"priority","qualname":"<ValidTransactionBuilder>::priority","value":"pub fn priority(Self, TransactionPriority) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the priority of a transaction.","sig":null,"attributes":[{"value":"/ Set the priority of a transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189462,"byte_end":189500,"line_start":314,"line_end":314,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189502,"byte_end":189505,"line_start":315,"line_end":315,"column_start":2,"column_end":5}},{"value":"/ Note that the final priority for `FRAME` is combined from all `SignedExtension`s.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189507,"byte_end":189592,"line_start":316,"line_end":316,"column_start":2,"column_end":87}},{"value":"/ Most likely for unsigned transactions you want the priority to be higher","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189594,"byte_end":189670,"line_start":317,"line_end":317,"column_start":2,"column_end":78}},{"value":"/ than for regular transactions. We recommend exposing a base priority for unsigned","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189672,"byte_end":189757,"line_start":318,"line_end":318,"column_start":2,"column_end":87}},{"value":"/ transactions as a runtime module parameter, so that the runtime can tune inter-module","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189759,"byte_end":189848,"line_start":319,"line_end":319,"column_start":2,"column_end":91}},{"value":"/ priorities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189850,"byte_end":189865,"line_start":320,"line_end":320,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190350,"byte_end":190359,"line_start":332,"line_end":332,"column_start":9,"column_end":18},"name":"longevity","qualname":"<ValidTransactionBuilder>::longevity","value":"pub fn longevity(Self, TransactionLongevity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the longevity of a transaction.","sig":null,"attributes":[{"value":"/ Set the longevity of a transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189983,"byte_end":190022,"line_start":326,"line_end":326,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190024,"byte_end":190027,"line_start":327,"line_end":327,"column_start":2,"column_end":5}},{"value":"/ By default the transaction will be considered valid forever and will not be revalidated","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190029,"byte_end":190120,"line_start":328,"line_end":328,"column_start":2,"column_end":93}},{"value":"/ by the transaction pool. It's recommended though to set the longevity to a finite value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190122,"byte_end":190213,"line_start":329,"line_end":329,"column_start":2,"column_end":93}},{"value":"/ though. If unsure, it's also reasonable to expose this parameter via module configuration","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190215,"byte_end":190308,"line_start":330,"line_end":330,"column_start":2,"column_end":95}},{"value":"/ and let the runtime decide.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190310,"byte_end":190341,"line_start":331,"line_end":331,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190756,"byte_end":190765,"line_start":342,"line_end":342,"column_start":9,"column_end":18},"name":"propagate","qualname":"<ValidTransactionBuilder>::propagate","value":"pub fn propagate(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the propagate flag.","sig":null,"attributes":[{"value":"/ Set the propagate flag.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190464,"byte_end":190491,"line_start":337,"line_end":337,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190493,"byte_end":190496,"line_start":338,"line_end":338,"column_start":2,"column_end":5}},{"value":"/ Set to `false` if the transaction is not meant to be gossiped to peers. Combined with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190498,"byte_end":190587,"line_start":339,"line_end":339,"column_start":2,"column_end":91}},{"value":"/ `TransactionSource::Local` validation it can be used to have special kind of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190589,"byte_end":190669,"line_start":340,"line_end":340,"column_start":2,"column_end":82}},{"value":"/ transactions that are only produced and included by the validator nodes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190671,"byte_end":190747,"line_start":341,"line_end":341,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191079,"byte_end":191091,"line_start":351,"line_end":351,"column_start":9,"column_end":21},"name":"and_requires","qualname":"<ValidTransactionBuilder>::and_requires","value":"pub fn and_requires<impl Encode: Encode>(Self, impl Encode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a `TransactionTag` to the set of required tags.","sig":null,"attributes":[{"value":"/ Add a `TransactionTag` to the set of required tags.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190854,"byte_end":190909,"line_start":347,"line_end":347,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190911,"byte_end":190914,"line_start":348,"line_end":348,"column_start":2,"column_end":5}},{"value":"/ The tag will be encoded and prefixed with module prefix (if any).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190916,"byte_end":190985,"line_start":349,"line_end":349,"column_start":2,"column_end":71}},{"value":"/ If you'd rather add a raw `require` tag, consider using `#combine_with` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":190987,"byte_end":191070,"line_start":350,"line_end":350,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191500,"byte_end":191512,"line_start":363,"line_end":363,"column_start":9,"column_end":21},"name":"and_provides","qualname":"<ValidTransactionBuilder>::and_provides","value":"pub fn and_provides<impl Encode: Encode>(Self, impl Encode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a `TransactionTag` to the set of provided tags.","sig":null,"attributes":[{"value":"/ Add a `TransactionTag` to the set of provided tags.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191275,"byte_end":191330,"line_start":359,"line_end":359,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191332,"byte_end":191335,"line_start":360,"line_end":360,"column_start":2,"column_end":5}},{"value":"/ The tag will be encoded and prefixed with module prefix (if any).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191337,"byte_end":191406,"line_start":361,"line_end":361,"column_start":2,"column_end":71}},{"value":"/ If you'd rather add a raw `require` tag, consider using `#combine_with` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191408,"byte_end":191491,"line_start":362,"line_end":362,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191837,"byte_end":191849,"line_start":374,"line_end":374,"column_start":9,"column_end":21},"name":"combine_with","qualname":"<ValidTransactionBuilder>::combine_with","value":"pub fn combine_with(Self, ValidTransaction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Augment the builder with existing `ValidTransaction`.","sig":null,"attributes":[{"value":"/ Augment the builder with existing `ValidTransaction`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191696,"byte_end":191753,"line_start":371,"line_end":371,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191755,"byte_end":191758,"line_start":372,"line_end":372,"column_start":2,"column_end":5}},{"value":"/ This method does add the prefix to `require` or `provides` tags.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191760,"byte_end":191828,"line_start":373,"line_end":373,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":192145,"byte_end":192150,"line_start":382,"line_end":382,"column_start":9,"column_end":14},"name":"build","qualname":"<ValidTransactionBuilder>::build","value":"pub fn build(Self) -> TransactionValidity","parent":null,"children":[],"decl_id":null,"docs":" Finalize the builder and produce `TransactionValidity`.","sig":null,"attributes":[{"value":"/ Finalize the builder and produce `TransactionValidity`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":191988,"byte_end":192047,"line_start":379,"line_end":379,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":192049,"byte_end":192052,"line_start":380,"line_end":380,"column_start":2,"column_end":5}},{"value":"/ Note the result will always be `Ok`. Use `Into` to produce `ValidTransaction`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":192054,"byte_end":192136,"line_start":381,"line_end":381,"column_start":2,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":1267},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"random_number_generator","qualname":"::random_number_generator","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":4347},{"krate":0,"index":1270},{"krate":0,"index":4349},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":3505},{"krate":0,"index":3515},{"krate":0,"index":3509},{"krate":0,"index":1274}],"decl_id":null,"docs":" A simple pseudo random number generator that allows a stream of random numbers to be efficiently\n created from a single initial seed hash.\n","sig":null,"attributes":[{"value":"/ A simple pseudo random number generator that allows a stream of random numbers to be efficiently","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194218,"byte_end":194318,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ created from a single initial seed hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194319,"byte_end":194363,"line_start":19,"line_end":19,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3505},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195482,"byte_end":195503,"line_start":47,"line_end":47,"column_start":12,"column_end":33},"name":"RandomNumberGenerator","qualname":"::random_number_generator::RandomNumberGenerator","value":"RandomNumberGenerator {  }","parent":null,"children":[{"krate":0,"index":3507},{"krate":0,"index":3508}],"decl_id":null,"docs":" Pseudo-random number streamer. This retains the state of the random number stream. It's as\n secure as the combination of the seed with which it is constructed and the hash function it uses\n to cycle elements.","sig":null,"attributes":[{"value":"/ Pseudo-random number streamer. This retains the state of the random number stream. It's as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194441,"byte_end":194535,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ secure as the combination of the seed with which it is constructed and the hash function it uses","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194536,"byte_end":194636,"line_start":25,"line_end":25,"column_start":1,"column_end":101}},{"value":"/ to cycle elements.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194637,"byte_end":194659,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194660,"byte_end":194663,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It can be saved and later reloaded using the Codec traits.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194664,"byte_end":194726,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194727,"byte_end":194730,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194731,"byte_end":194743,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194744,"byte_end":194751,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use sp_runtime::traits::{Hash, BlakeTwo256};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194752,"byte_end":194800,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/ use sp_runtime::RandomNumberGenerator;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194801,"byte_end":194843,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ let random_seed = BlakeTwo256::hash(b\"Sixty-nine\");","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194844,"byte_end":194899,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/ let mut rng = <RandomNumberGenerator<BlakeTwo256>>::new(random_seed);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194900,"byte_end":194973,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(rng.pick_u32(100), 59);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":194974,"byte_end":195012,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(rng.pick_item(&[1, 2, 3]), Some(&1));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195013,"byte_end":195065,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195066,"byte_end":195073,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195074,"byte_end":195077,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This can use any cryptographic `Hash` function as the means of entropy-extension, and avoids","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195078,"byte_end":195174,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"/ needless extensions of entropy.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195175,"byte_end":195210,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195211,"byte_end":195214,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If you're persisting it over blocks, be aware that the sequence will start to repeat. This won't","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195215,"byte_end":195315,"line_start":43,"line_end":43,"column_start":1,"column_end":101}},{"value":"/ be a practical issue unless you're using tiny hash types (e.g. 64-bit) and pulling hundred of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195316,"byte_end":195413,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ megabytes of data from it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195414,"byte_end":195444,"line_start":45,"line_end":45,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195660,"byte_end":195663,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"name":"new","qualname":"<RandomNumberGenerator<Hashing>>::new","value":"pub fn new(Hashing::Output) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new source of random data.\n","sig":null,"attributes":[{"value":"/ A new source of random data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195619,"byte_end":195651,"line_start":53,"line_end":53,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195859,"byte_end":195867,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"pick_u32","qualname":"<RandomNumberGenerator<Hashing>>::pick_u32","value":"pub fn pick_u32(&mut Self, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a number at least zero, at most `max`.\n","sig":null,"attributes":[{"value":"/ Returns a number at least zero, at most `max`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195800,"byte_end":195850,"line_start":63,"line_end":63,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":196685,"byte_end":196695,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"name":"pick_usize","qualname":"<RandomNumberGenerator<Hashing>>::pick_usize","value":"pub fn pick_usize(&mut Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns a number at least zero, at most `max`.","sig":null,"attributes":[{"value":"/ Returns a number at least zero, at most `max`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":196529,"byte_end":196579,"line_start":86,"line_end":86,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":196581,"byte_end":196584,"line_start":87,"line_end":87,"column_start":2,"column_end":5}},{"value":"/ This returns a `usize`, but internally it only uses `u32` so avoid consensus problems.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":196586,"byte_end":196676,"line_start":88,"line_end":88,"column_start":2,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":196941,"byte_end":196950,"line_start":97,"line_end":97,"column_start":9,"column_end":18},"name":"pick_item","qualname":"<RandomNumberGenerator<Hashing>>::pick_item","value":"pub fn pick_item<'a, T>(&mut Self, &'a [T]) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Pick a random element from an array of `items`.","sig":null,"attributes":[{"value":"/ Pick a random element from an array of `items`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":196772,"byte_end":196823,"line_start":93,"line_end":93,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":196825,"byte_end":196828,"line_start":94,"line_end":94,"column_start":2,"column_end":5}},{"value":"/ This is guaranteed to return `Some` except in the case that the given array `items` is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":196830,"byte_end":196920,"line_start":95,"line_end":95,"column_start":2,"column_end":92}},{"value":"/ empty.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":196922,"byte_end":196932,"line_start":96,"line_end":96,"column_start":2,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3524},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198070,"byte_end":198078,"line_start":26,"line_end":26,"column_start":2,"column_end":10},"name":"Borrowed","qualname":"::runtime_string::RuntimeString::Borrowed","value":"RuntimeString::Borrowed(&'static str)","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":" The borrowed mode that wraps a `&'static str`.\n","sig":null,"attributes":[{"value":"/ The borrowed mode that wraps a `&'static str`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198018,"byte_end":198068,"line_start":25,"line_end":25,"column_start":2,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3527},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198163,"byte_end":198168,"line_start":29,"line_end":29,"column_start":2,"column_end":7},"name":"Owned","qualname":"::runtime_string::RuntimeString::Owned","value":"RuntimeString::Owned(String)","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":" The owned mode that wraps a `String`.\n","sig":null,"attributes":[{"value":"/ The owned mode that wraps a `String`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198095,"byte_end":198136,"line_start":27,"line_end":27,"column_start":2,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198138,"byte_end":198161,"line_start":28,"line_end":28,"column_start":2,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":3523},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198001,"byte_end":198014,"line_start":24,"line_end":24,"column_start":10,"column_end":23},"name":"RuntimeString","qualname":"::runtime_string::RuntimeString","value":"pub enum RuntimeString {\n\n    /// The borrowed mode that wraps a `&'static str`.\n    Borrowed(&'static str),\n\n    /// The owned mode that wraps a `String`.\n    #[cfg(feature = \"std\")]\n    Owned(String),\n}","parent":null,"children":[{"krate":0,"index":3524},{"krate":0,"index":3527}],"decl_id":null,"docs":" A string that wraps a `&'static str` in the runtime and `String`/`Vec<u8>` on decode.\n","sig":null,"attributes":[{"value":"/ A string that wraps a `&'static str` in the runtime and `String`/`Vec<u8>` on decode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":197867,"byte_end":197956,"line_start":22,"line_end":22,"column_start":1,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":1349},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2950,"byte_end":2963,"line_start":93,"line_end":93,"column_start":10,"column_end":23},"name":"Justification","qualname":"::Justification","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" An abstraction over justification for a block's validity under a consensus algorithm.","sig":null,"attributes":[{"value":"/ An abstraction over justification for a block's validity under a consensus algorithm.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2485,"byte_end":2574,"line_start":86,"line_end":86,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2575,"byte_end":2578,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Essentially a finality proof. The exact formulation will vary between consensus","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2579,"byte_end":2662,"line_start":88,"line_end":88,"column_start":1,"column_end":84}},{"value":"/ algorithms. In the case where there are multiple valid proofs, inclusion within","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2663,"byte_end":2746,"line_start":89,"line_end":89,"column_start":1,"column_end":84}},{"value":"/ the block itself would allow swapping justifications to change the block's hash","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2747,"byte_end":2830,"line_start":90,"line_end":90,"column_start":1,"column_end":84}},{"value":"/ (and thus fork the chain). Sending a `Justification` alongside a block instead","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2831,"byte_end":2913,"line_start":91,"line_end":91,"column_start":1,"column_end":83}},{"value":"/ bypasses this problem.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":2914,"byte_end":2940,"line_start":92,"line_end":92,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3537},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3162,"byte_end":3170,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"ModuleId","qualname":"::ModuleId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A module identifier. These are per module and should be stored in a registry somewhere.\n","sig":null,"attributes":[{"value":"/ A module identifier. These are per module and should be stored in a registry somewhere.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3005,"byte_end":3096,"line_start":97,"line_end":97,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":3539},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3171,"byte_end":3182,"line_start":99,"line_end":99,"column_start":21,"column_end":32},"name":"0","qualname":"::ModuleId::0","value":"[u8; 8]","parent":{"krate":0,"index":3537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1361},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3445,"byte_end":3457,"line_start":111,"line_end":111,"column_start":11,"column_end":23},"name":"BuildStorage","qualname":"::BuildStorage","value":"BuildStorage","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363}],"decl_id":null,"docs":" Complex storage builder stuff.\n","sig":null,"attributes":[{"value":"/ Complex storage builder stuff.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3376,"byte_end":3410,"line_start":109,"line_end":109,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3411,"byte_end":3434,"line_start":110,"line_end":110,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3508,"byte_end":3521,"line_start":113,"line_end":113,"column_start":5,"column_end":18},"name":"build_storage","qualname":"::BuildStorage::build_storage","value":"pub fn build_storage(&Self) -> Result<sp_core::storage::Storage, String>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Build the storage out of this builder.\n","sig":null,"attributes":[{"value":"/ Build the storage out of this builder.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3461,"byte_end":3503,"line_start":112,"line_end":112,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3751,"byte_end":3769,"line_start":119,"line_end":119,"column_start":5,"column_end":23},"name":"assimilate_storage","qualname":"::BuildStorage::assimilate_storage","value":"pub fn assimilate_storage(&Self, &mut sp_core::storage::Storage)\n-> Result<(), String>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Assimilate the storage for this module into pre-existing overlays.\n","sig":null,"attributes":[{"value":"/ Assimilate the storage for this module into pre-existing overlays.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3676,"byte_end":3746,"line_start":118,"line_end":118,"column_start":2,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":1364},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3948,"byte_end":3973,"line_start":127,"line_end":127,"column_start":11,"column_end":36},"name":"BuildModuleGenesisStorage","qualname":"::BuildModuleGenesisStorage","value":"BuildModuleGenesisStorage<T, I>: Sized","parent":null,"children":[{"krate":0,"index":1367}],"decl_id":null,"docs":" Something that can build the genesis storage of a module.\n","sig":null,"attributes":[{"value":"/ Something that can build the genesis storage of a module.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3852,"byte_end":3913,"line_start":125,"line_end":125,"column_start":1,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3914,"byte_end":3937,"line_start":126,"line_end":126,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":4078,"byte_end":4106,"line_start":129,"line_end":129,"column_start":5,"column_end":33},"name":"build_module_genesis_storage","qualname":"::BuildModuleGenesisStorage::build_module_genesis_storage","value":"pub fn build_module_genesis_storage(&Self, &mut sp_core::storage::Storage)\n-> Result<(), String>","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" Create the module genesis storage into the given `storage` and `child_storage`.\n","sig":null,"attributes":[{"value":"/ Create the module genesis storage into the given `storage` and `child_storage`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3990,"byte_end":4073,"line_start":128,"line_end":128,"column_start":2,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":1374},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5140,"byte_end":5157,"line_start":168,"line_end":168,"column_start":10,"column_end":27},"name":"ConsensusEngineId","qualname":"::ConsensusEngineId","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Consensus engine unique ID.\n","sig":null,"attributes":[{"value":"/ Consensus engine unique ID.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5099,"byte_end":5130,"line_start":167,"line_end":167,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3569},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5415,"byte_end":5422,"line_start":175,"line_end":175,"column_start":2,"column_end":9},"name":"Ed25519","qualname":"::MultiSignature::Ed25519","value":"MultiSignature::Ed25519(ed25519::Signature)","parent":{"krate":0,"index":3568},"children":[],"decl_id":null,"docs":" An Ed25519 signature.\n","sig":null,"attributes":[{"value":"/ An Ed25519 signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5388,"byte_end":5413,"line_start":174,"line_end":174,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3572},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5472,"byte_end":5479,"line_start":177,"line_end":177,"column_start":2,"column_end":9},"name":"Sr25519","qualname":"::MultiSignature::Sr25519","value":"MultiSignature::Sr25519(sr25519::Signature)","parent":{"krate":0,"index":3568},"children":[],"decl_id":null,"docs":" An Sr25519 signature.\n","sig":null,"attributes":[{"value":"/ An Sr25519 signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5445,"byte_end":5470,"line_start":176,"line_end":176,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3575},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5537,"byte_end":5542,"line_start":179,"line_end":179,"column_start":2,"column_end":7},"name":"Ecdsa","qualname":"::MultiSignature::Ecdsa","value":"MultiSignature::Ecdsa(ecdsa::Signature)","parent":{"krate":0,"index":3568},"children":[],"decl_id":null,"docs":" An ECDSA/SECP256k1 signature.\n","sig":null,"attributes":[{"value":"/ An ECDSA/SECP256k1 signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5502,"byte_end":5535,"line_start":178,"line_end":178,"column_start":2,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3568},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5370,"byte_end":5384,"line_start":173,"line_end":173,"column_start":10,"column_end":24},"name":"MultiSignature","qualname":"::MultiSignature","value":"pub enum MultiSignature {\n\n    /// An Ed25519 signature.\n    Ed25519(ed25519::Signature),\n\n    /// An Sr25519 signature.\n    Sr25519(sr25519::Signature),\n\n    /// An ECDSA/SECP256k1 signature.\n    Ecdsa(ecdsa::Signature),\n}","parent":null,"children":[{"krate":0,"index":3569},{"krate":0,"index":3572},{"krate":0,"index":3575}],"decl_id":null,"docs":" Signature verify that can work with any known signature types..\n","sig":null,"attributes":[{"value":"/ Signature verify that can work with any known signature types..","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5170,"byte_end":5237,"line_start":170,"line_end":170,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3648},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6910,"byte_end":6917,"line_start":232,"line_end":232,"column_start":2,"column_end":9},"name":"Ed25519","qualname":"::MultiSigner::Ed25519","value":"MultiSigner::Ed25519(ed25519::Public)","parent":{"krate":0,"index":3647},"children":[],"decl_id":null,"docs":" An Ed25519 identity.\n","sig":null,"attributes":[{"value":"/ An Ed25519 identity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6884,"byte_end":6908,"line_start":231,"line_end":231,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3651},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6963,"byte_end":6970,"line_start":234,"line_end":234,"column_start":2,"column_end":9},"name":"Sr25519","qualname":"::MultiSigner::Sr25519","value":"MultiSigner::Sr25519(sr25519::Public)","parent":{"krate":0,"index":3647},"children":[],"decl_id":null,"docs":" An Sr25519 identity.\n","sig":null,"attributes":[{"value":"/ An Sr25519 identity.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6937,"byte_end":6961,"line_start":233,"line_end":233,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3654},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":7078,"byte_end":7083,"line_start":236,"line_end":236,"column_start":2,"column_end":7},"name":"Ecdsa","qualname":"::MultiSigner::Ecdsa","value":"MultiSigner::Ecdsa(ecdsa::Public)","parent":{"krate":0,"index":3647},"children":[],"decl_id":null,"docs":" An SECP256k1/ECDSA identity (actually, the Blake2 hash of the compressed pub key).\n","sig":null,"attributes":[{"value":"/ An SECP256k1/ECDSA identity (actually, the Blake2 hash of the compressed pub key).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6990,"byte_end":7076,"line_start":235,"line_end":235,"column_start":2,"column_end":88}}]},{"kind":"Enum","id":{"krate":0,"index":3647},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6869,"byte_end":6880,"line_start":230,"line_end":230,"column_start":10,"column_end":21},"name":"MultiSigner","qualname":"::MultiSigner","value":"pub enum MultiSigner {\n\n    /// An Ed25519 identity.\n    Ed25519(ed25519::Public),\n\n    /// An Sr25519 identity.\n    Sr25519(sr25519::Public),\n\n    /// An SECP256k1/ECDSA identity (actually, the Blake2 hash of the compressed pub key).\n    Ecdsa(ecdsa::Public),\n}","parent":null,"children":[{"krate":0,"index":3648},{"krate":0,"index":3651},{"krate":0,"index":3654}],"decl_id":null,"docs":" Public key for any known crypto algorithm.\n","sig":null,"attributes":[{"value":"/ Public key for any known crypto algorithm.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6673,"byte_end":6719,"line_start":227,"line_end":227,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3734},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":10305,"byte_end":10317,"line_start":346,"line_end":346,"column_start":12,"column_end":24},"name":"AnySignature","qualname":"::AnySignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Signature verify that can work with any known signature types..\n","sig":null,"attributes":[{"value":"/ Signature verify that can work with any known signature types..","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":10094,"byte_end":10161,"line_start":343,"line_end":343,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1439},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11366,"byte_end":11380,"line_start":382,"line_end":382,"column_start":10,"column_end":24},"name":"DispatchResult","qualname":"::DispatchResult","value":"sp_std::result::Result<(), DispatchError>","parent":null,"children":[],"decl_id":null,"docs":" This is the legacy return type of `Dispatchable`. It is still exposed for compatibility reasons.\n The new return type is `DispatchResultWithInfo`. FRAME runtimes should use\n `frame_support::dispatch::DispatchResult`.\n","sig":null,"attributes":[{"value":"/ This is the legacy return type of `Dispatchable`. It is still exposed for compatibility reasons.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11130,"byte_end":11230,"line_start":379,"line_end":379,"column_start":1,"column_end":101}},{"value":"/ The new return type is `DispatchResultWithInfo`. FRAME runtimes should use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11231,"byte_end":11309,"line_start":380,"line_end":380,"column_start":1,"column_end":79}},{"value":"/ `frame_support::dispatch::DispatchResult`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11310,"byte_end":11356,"line_start":381,"line_end":381,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1440},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11598,"byte_end":11620,"line_start":386,"line_end":386,"column_start":10,"column_end":32},"name":"DispatchResultWithInfo","qualname":"::DispatchResultWithInfo","value":"sp_std::result::Result<T, DispatchErrorWithPostInfo<T>>","parent":null,"children":[],"decl_id":null,"docs":" Return type of a `Dispatchable` which contains the `DispatchResult` and additional information\n about the `Dispatchable` that is only known post dispatch.\n","sig":null,"attributes":[{"value":"/ Return type of a `Dispatchable` which contains the `DispatchResult` and additional information","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11427,"byte_end":11525,"line_start":384,"line_end":384,"column_start":1,"column_end":99}},{"value":"/ about the `Dispatchable` that is only known post dispatch.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11526,"byte_end":11588,"line_start":385,"line_end":385,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3791},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11891,"byte_end":11896,"line_start":393,"line_end":393,"column_start":2,"column_end":7},"name":"Other","qualname":"::DispatchError::Other","value":"DispatchError::Other(&'static str)","parent":{"krate":0,"index":3790},"children":[],"decl_id":null,"docs":" Some error occurred.\n","sig":null,"attributes":[{"value":"/ Some error occurred.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11865,"byte_end":11889,"line_start":392,"line_end":392,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3793},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11961,"byte_end":11973,"line_start":395,"line_end":395,"column_start":2,"column_end":14},"name":"CannotLookup","qualname":"::DispatchError::CannotLookup","value":"DispatchError::CannotLookup","parent":{"krate":0,"index":3790},"children":[],"decl_id":null,"docs":" Failed to lookup some data.\n","sig":null,"attributes":[{"value":"/ Failed to lookup some data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11928,"byte_end":11959,"line_start":394,"line_end":394,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3795},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11995,"byte_end":12004,"line_start":397,"line_end":397,"column_start":2,"column_end":11},"name":"BadOrigin","qualname":"::DispatchError::BadOrigin","value":"DispatchError::BadOrigin","parent":{"krate":0,"index":3790},"children":[],"decl_id":null,"docs":" A bad origin.\n","sig":null,"attributes":[{"value":"/ A bad origin.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11976,"byte_end":11993,"line_start":396,"line_end":396,"column_start":2,"column_end":19}}]},{"kind":"StructVariant","id":{"krate":0,"index":3797},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12040,"byte_end":12046,"line_start":399,"line_end":399,"column_start":2,"column_end":8},"name":"Module","qualname":"::DispatchError::Module","value":"DispatchError::Module { index, error, message }","parent":{"krate":0,"index":3790},"children":[],"decl_id":null,"docs":" A custom error in a module.\n","sig":null,"attributes":[{"value":"/ A custom error in a module.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12007,"byte_end":12038,"line_start":398,"line_end":398,"column_start":2,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":3790},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11848,"byte_end":11861,"line_start":391,"line_end":391,"column_start":10,"column_end":23},"name":"DispatchError","qualname":"::DispatchError","value":"pub enum DispatchError {\n\n    /// Some error occurred.\n    Other(\n          #[codec(skip)]\n          &'static str),\n\n    /// Failed to lookup some data.\n    CannotLookup,\n\n    /// A bad origin.\n    BadOrigin,\n\n    /// A custom error in a module.\n    Module {\n        /// Module index, matching the metadata module index.\n        index: u8,\n        /// Module specific error value.\n        error: u8,\n        /// Optional error message.\n        #[codec(skip)]\n        message: Option<&'static str>,\n    },\n}","parent":null,"children":[{"krate":0,"index":3791},{"krate":0,"index":3793},{"krate":0,"index":3795},{"krate":0,"index":3797}],"decl_id":null,"docs":" Reason why a dispatch call failed.\n","sig":null,"attributes":[{"value":"/ Reason why a dispatch call failed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11684,"byte_end":11722,"line_start":388,"line_end":388,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3831},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12489,"byte_end":12514,"line_start":413,"line_end":413,"column_start":12,"column_end":37},"name":"DispatchErrorWithPostInfo","qualname":"::DispatchErrorWithPostInfo","value":"DispatchErrorWithPostInfo { post_info, error }","parent":null,"children":[{"krate":0,"index":3833},{"krate":0,"index":3834}],"decl_id":null,"docs":" Result of a `Dispatchable` which contains the `DispatchResult` and additional information about\n the `Dispatchable` that is only known post dispatch.\n","sig":null,"attributes":[{"value":"/ Result of a `Dispatchable` which contains the `DispatchResult` and additional information about","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12253,"byte_end":12352,"line_start":410,"line_end":410,"column_start":1,"column_end":100}},{"value":"/ the `Dispatchable` that is only known post dispatch.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12353,"byte_end":12409,"line_start":411,"line_end":411,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3833},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12697,"byte_end":12706,"line_start":417,"line_end":417,"column_start":6,"column_end":15},"name":"post_info","qualname":"::DispatchErrorWithPostInfo::post_info","value":"Info","parent":{"krate":0,"index":3831},"children":[],"decl_id":null,"docs":" Additional information about the `Dispatchable` which is only known post dispatch.\n","sig":null,"attributes":[{"value":"/ Additional information about the `Dispatchable` which is only known post dispatch.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12605,"byte_end":12691,"line_start":416,"line_end":416,"column_start":2,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3834},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12800,"byte_end":12805,"line_start":419,"line_end":419,"column_start":6,"column_end":11},"name":"error","qualname":"::DispatchErrorWithPostInfo::error","value":"DispatchError","parent":{"krate":0,"index":3831},"children":[],"decl_id":null,"docs":" The actual `DispatchResult` indicating whether the dispatch was successful.\n","sig":null,"attributes":[{"value":"/ The actual `DispatchResult` indicating whether the dispatch was successful.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12715,"byte_end":12794,"line_start":418,"line_end":418,"column_start":2,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12915,"byte_end":12923,"line_start":424,"line_end":424,"column_start":9,"column_end":17},"name":"stripped","qualname":"<DispatchError>::stripped","value":"pub fn stripped(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the same error but without the attached message.\n","sig":null,"attributes":[{"value":"/ Return the same error but without the attached message.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12847,"byte_end":12906,"line_start":423,"line_end":423,"column_start":2,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1464},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15479,"byte_end":15494,"line_start":519,"line_end":519,"column_start":10,"column_end":25},"name":"DispatchOutcome","qualname":"::DispatchOutcome","value":"Result<(), DispatchError>","parent":null,"children":[],"decl_id":null,"docs":" This type specifies the outcome of dispatching a call to a module.","sig":null,"attributes":[{"value":"/ This type specifies the outcome of dispatching a call to a module.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":14950,"byte_end":15020,"line_start":510,"line_end":510,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15021,"byte_end":15024,"line_start":511,"line_end":511,"column_start":1,"column_end":4}},{"value":"/ In case of failure an error specific to the module is returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15025,"byte_end":15092,"line_start":512,"line_end":512,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15093,"byte_end":15096,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ Failure of the module call dispatching doesn't invalidate the extrinsic and it is still included","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15097,"byte_end":15197,"line_start":514,"line_end":514,"column_start":1,"column_end":101}},{"value":"/ in the block, therefore all state changes performed by the dispatched call are still persisted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15198,"byte_end":15297,"line_start":515,"line_end":515,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15298,"byte_end":15301,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ For example, if the dispatching of an extrinsic involves inclusion fee payment then these","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15302,"byte_end":15395,"line_start":517,"line_end":517,"column_start":1,"column_end":94}},{"value":"/ changes are going to be preserved even if the call dispatched failed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15396,"byte_end":15469,"line_start":518,"line_end":518,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1465},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16641,"byte_end":16661,"line_start":539,"line_end":539,"column_start":10,"column_end":30},"name":"ApplyExtrinsicResult","qualname":"::ApplyExtrinsicResult","value":"Result<DispatchOutcome, transaction_validity::TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" The result of applying of an extrinsic.","sig":null,"attributes":[{"value":"/ The result of applying of an extrinsic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15525,"byte_end":15568,"line_start":521,"line_end":521,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15569,"byte_end":15572,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ This type is typically used in the context of `BlockBuilder` to signal that the extrinsic","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15573,"byte_end":15666,"line_start":523,"line_end":523,"column_start":1,"column_end":94}},{"value":"/ in question cannot be included.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15667,"byte_end":15702,"line_start":524,"line_end":524,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15703,"byte_end":15706,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ A block containing extrinsics that have a negative inclusion outcome is invalid. A negative","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15707,"byte_end":15802,"line_start":526,"line_end":526,"column_start":1,"column_end":96}},{"value":"/ result can only occur during the block production, where such extrinsics are detected and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15803,"byte_end":15896,"line_start":527,"line_end":527,"column_start":1,"column_end":94}},{"value":"/ removed from the block that is being created and the transaction pool.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15897,"byte_end":15971,"line_start":528,"line_end":528,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15972,"byte_end":15975,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ To rehash: every extrinsic in a valid block must return a positive `ApplyExtrinsicResult`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":15976,"byte_end":16070,"line_start":530,"line_end":530,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16071,"byte_end":16074,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ Examples of reasons preventing inclusion in a block:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16075,"byte_end":16131,"line_start":532,"line_end":532,"column_start":1,"column_end":57}},{"value":"/ - More block weight is required to process the extrinsic than is left in the block being built.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16132,"byte_end":16231,"line_start":533,"line_end":533,"column_start":1,"column_end":100}},{"value":"/   This doesn't necessarily mean that the extrinsic is invalid, since it can still be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16232,"byte_end":16320,"line_start":534,"line_end":534,"column_start":1,"column_end":89}},{"value":"/   included in the next block if it has enough spare weight available.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16321,"byte_end":16394,"line_start":535,"line_end":535,"column_start":1,"column_end":74}},{"value":"/ - The sender doesn't have enough funds to pay the transaction inclusion fee. Including such","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16395,"byte_end":16490,"line_start":536,"line_end":536,"column_start":1,"column_end":96}},{"value":"/   a transaction in the block doesn't make sense.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16491,"byte_end":16543,"line_start":537,"line_end":537,"column_start":1,"column_end":53}},{"value":"/ - The extrinsic supplied a bad signature. This transaction won't become valid ever.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16544,"byte_end":16631,"line_start":538,"line_end":538,"column_start":1,"column_end":88}}]},{"kind":"Type","id":{"krate":0,"index":1466},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16832,"byte_end":16860,"line_start":542,"line_end":542,"column_start":10,"column_end":38},"name":"ApplyExtrinsicResultWithInfo","qualname":"::ApplyExtrinsicResultWithInfo","value":"Result<DispatchResultWithInfo<T>,\n       transaction_validity::TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `ApplyExtrinsicResult` but augmented with `PostDispatchInfo` on success.\n","sig":null,"attributes":[{"value":"/ Same as `ApplyExtrinsicResult` but augmented with `PostDispatchInfo` on success.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16738,"byte_end":16822,"line_start":541,"line_end":541,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":1468},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":17106,"byte_end":17125,"line_start":547,"line_end":547,"column_start":8,"column_end":27},"name":"verify_encoded_lazy","qualname":"::verify_encoded_lazy","value":"pub fn verify_encoded_lazy<V: Verify,\n                           T: codec::Encode>(&V, &T,\n                                             &<V::Signer as\n                                              IdentifyAccount>::AccountId)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify a signature on an encoded value in a lazy manner. This can be\n an optimization if the signature scheme has an \"unsigned\" escape hash.\n","sig":null,"attributes":[{"value":"/ Verify a signature on an encoded value in a lazy manner. This can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":16951,"byte_end":17023,"line_start":545,"line_end":545,"column_start":1,"column_end":73}},{"value":"/ an optimization if the signature scheme has an \"unsigned\" escape hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":17024,"byte_end":17098,"line_start":546,"line_end":546,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3868},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21439,"byte_end":21454,"line_start":717,"line_end":717,"column_start":12,"column_end":27},"name":"OpaqueExtrinsic","qualname":"::OpaqueExtrinsic","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple blob to hold an extrinsic without committing to its format and ensure it is serialized\n correctly.\n","sig":null,"attributes":[{"value":"/ Simple blob to hold an extrinsic without committing to its format and ensure it is serialized","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21258,"byte_end":21355,"line_start":714,"line_end":714,"column_start":1,"column_end":98}},{"value":"/ correctly.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21356,"byte_end":21370,"line_start":715,"line_end":715,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21556,"byte_end":21566,"line_start":721,"line_end":721,"column_start":9,"column_end":19},"name":"from_bytes","qualname":"<OpaqueExtrinsic>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, codec::Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert an encoded extrinsic to an `OpaqueExtrinsic`.\n","sig":null,"attributes":[{"value":"/ Convert an encoded extrinsic to an `OpaqueExtrinsic`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21490,"byte_end":21547,"line_start":720,"line_end":720,"column_start":2,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1500},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":22931,"byte_end":22936,"line_start":768,"line_end":768,"column_start":8,"column_end":13},"name":"print","qualname":"::print","value":"pub fn print<impl traits::Printable: traits::Printable>(impl traits::Printable)","parent":null,"children":[],"decl_id":null,"docs":" Print something that implements `Printable` from the runtime.\n","sig":null,"attributes":[{"value":"/ Print something that implements `Printable` from the runtime.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":22858,"byte_end":22923,"line_start":767,"line_end":767,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23210,"byte_end":23227,"line_start":778,"line_end":778,"column_start":12,"column_end":29},"name":"SignatureBatching","qualname":"::SignatureBatching","value":"","parent":null,"children":[],"decl_id":null,"docs":" Batching session.","sig":null,"attributes":[{"value":"/ Batching session.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":22990,"byte_end":23011,"line_start":773,"line_end":773,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23012,"byte_end":23015,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/ To be used in runtime only. Outside of runtime, just construct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23016,"byte_end":23082,"line_start":775,"line_end":775,"column_start":1,"column_end":67}},{"value":"/ `BatchVerifier` directly.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23083,"byte_end":23112,"line_start":776,"line_end":776,"column_start":1,"column_end":30}},{"value":"must_use =\n  \"`verify()` needs to be called to finish batch signature verification!\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23113,"byte_end":23198,"line_start":777,"line_end":777,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23302,"byte_end":23307,"line_start":782,"line_end":782,"column_start":9,"column_end":14},"name":"start","qualname":"<SignatureBatching>::start","value":"pub fn start() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start new batching session.\n","sig":null,"attributes":[{"value":"/ Start new batching session.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23262,"byte_end":23293,"line_start":781,"line_end":781,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23477,"byte_end":23483,"line_start":789,"line_end":789,"column_start":9,"column_end":15},"name":"verify","qualname":"<SignatureBatching>::verify","value":"pub fn verify(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify all signatures submitted during the batching session.\n","sig":null,"attributes":[{"value":"/ Verify all signatures submitted during the batching session.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23391,"byte_end":23455,"line_start":787,"line_end":787,"column_start":2,"column_end":66}},{"value":"must_use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23457,"byte_end":23468,"line_start":788,"line_end":788,"column_start":2,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1512},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":24081,"byte_end":24087,"line_start":810,"line_end":810,"column_start":2,"column_end":8},"name":"Commit","qualname":"::TransactionOutcome::Commit","value":"TransactionOutcome::Commit(R)","parent":{"krate":0,"index":1510},"children":[],"decl_id":null,"docs":" Commit the transaction.\n","sig":null,"attributes":[{"value":"/ Commit the transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":24052,"byte_end":24079,"line_start":809,"line_end":809,"column_start":2,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1515},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":24124,"byte_end":24132,"line_start":812,"line_end":812,"column_start":2,"column_end":10},"name":"Rollback","qualname":"::TransactionOutcome::Rollback","value":"TransactionOutcome::Rollback(R)","parent":{"krate":0,"index":1510},"children":[],"decl_id":null,"docs":" Rollback the transaction.\n","sig":null,"attributes":[{"value":"/ Rollback the transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":24093,"byte_end":24122,"line_start":811,"line_end":811,"column_start":2,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1510},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":24027,"byte_end":24045,"line_start":808,"line_end":808,"column_start":10,"column_end":28},"name":"TransactionOutcome","qualname":"::TransactionOutcome","value":"pub enum TransactionOutcome<R> {\n\n    /// Commit the transaction.\n    Commit(R),\n\n    /// Rollback the transaction.\n    Rollback(R),\n}","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1515}],"decl_id":null,"docs":" Describes on what should happen with a storage transaction.\n","sig":null,"attributes":[{"value":"/ Describes on what should happen with a storage transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23954,"byte_end":24017,"line_start":807,"line_end":807,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":24214,"byte_end":24224,"line_start":817,"line_end":817,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<TransactionOutcome<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Convert into the inner type.\n","sig":null,"attributes":[{"value":"/ Convert into the inner type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":24173,"byte_end":24205,"line_start":816,"line_end":816,"column_start":2,"column_end":34}}]}],"impls":[{"id":1,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27737,"byte_end":27752,"line_start":36,"line_end":36,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35388,"byte_end":35406,"line_start":52,"line_end":52,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35648,"byte_end":35666,"line_start":63,"line_end":63,"column_start":2,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":36204,"byte_end":36222,"line_start":88,"line_end":88,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":36790,"byte_end":36808,"line_start":114,"line_end":114,"column_start":2,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":37922,"byte_end":37940,"line_start":150,"line_end":150,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38466,"byte_end":38479,"line_start":169,"line_end":169,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":39237,"byte_end":39250,"line_start":193,"line_end":193,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":39670,"byte_end":39683,"line_start":211,"line_end":211,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":39797,"byte_end":39815,"line_start":218,"line_end":218,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":40749,"byte_end":40767,"line_start":248,"line_end":248,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":41288,"byte_end":41306,"line_start":273,"line_end":273,"column_start":6,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":41553,"byte_end":41571,"line_start":283,"line_end":283,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":41895,"byte_end":41913,"line_start":292,"line_end":292,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":42248,"byte_end":42266,"line_start":304,"line_end":304,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":42662,"byte_end":42677,"line_start":321,"line_end":321,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48302,"byte_end":48305,"line_start":59,"line_end":59,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49885,"byte_end":49888,"line_start":109,"line_end":109,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":50271,"byte_end":50274,"line_start":122,"line_end":122,"column_start":28,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":50295,"byte_end":50298,"line_start":124,"line_end":124,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":54317,"byte_end":54333,"line_start":41,"line_end":41,"column_start":2,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":58001,"byte_end":58007,"line_start":57,"line_end":57,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":58983,"byte_end":58989,"line_start":88,"line_end":88,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":59446,"byte_end":59452,"line_start":104,"line_end":104,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":59885,"byte_end":59891,"line_start":118,"line_end":118,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":60048,"byte_end":60054,"line_start":124,"line_end":124,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":61587,"byte_end":61593,"line_start":173,"line_end":173,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64614,"byte_end":64621,"line_start":47,"line_end":47,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64885,"byte_end":64892,"line_start":59,"line_end":59,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64965,"byte_end":64972,"line_start":62,"line_end":62,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":65609,"byte_end":65614,"line_start":80,"line_end":80,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68104,"byte_end":68110,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68191,"byte_end":68197,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71659,"byte_end":71669,"line_start":139,"line_end":139,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71923,"byte_end":71933,"line_start":148,"line_end":148,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74435,"byte_end":74445,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76468,"byte_end":76478,"line_start":272,"line_end":272,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76588,"byte_end":76598,"line_start":278,"line_end":278,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76639,"byte_end":76649,"line_start":280,"line_end":280,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":77599,"byte_end":77612,"line_start":310,"line_end":310,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":79935,"byte_end":79948,"line_start":379,"line_end":379,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":80887,"byte_end":80904,"line_start":414,"line_end":414,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":81174,"byte_end":81187,"line_start":423,"line_end":423,"column_start":46,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84735,"byte_end":84741,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":85123,"byte_end":85129,"line_start":103,"line_end":103,"column_start":7,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86331,"byte_end":86338,"line_start":145,"line_end":145,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86532,"byte_end":86539,"line_start":157,"line_end":157,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86649,"byte_end":86656,"line_start":164,"line_end":164,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86937,"byte_end":86944,"line_start":179,"line_end":179,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87762,"byte_end":87769,"line_start":216,"line_end":216,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89091,"byte_end":89105,"line_start":275,"line_end":275,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91041,"byte_end":91049,"line_start":337,"line_end":337,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":92232,"byte_end":92244,"line_start":381,"line_end":381,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":92594,"byte_end":92606,"line_start":394,"line_end":394,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":93198,"byte_end":93210,"line_start":421,"line_end":421,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94063,"byte_end":94070,"line_start":467,"line_end":467,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94890,"byte_end":94905,"line_start":497,"line_end":497,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":98843,"byte_end":98858,"line_start":31,"line_end":31,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":107111,"byte_end":107115,"line_start":114,"line_end":114,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":107241,"byte_end":107245,"line_start":122,"line_end":122,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108337,"byte_end":108357,"line_start":156,"line_end":156,"column_start":40,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108532,"byte_end":108552,"line_start":165,"line_end":165,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":109348,"byte_end":109360,"line_start":190,"line_end":190,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":109705,"byte_end":109717,"line_start":201,"line_end":201,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":109986,"byte_end":109998,"line_start":211,"line_end":211,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":111311,"byte_end":111322,"line_start":251,"line_end":251,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":111516,"byte_end":111527,"line_start":258,"line_end":258,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114414,"byte_end":114430,"line_start":347,"line_end":347,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115308,"byte_end":115324,"line_start":373,"line_end":373,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115438,"byte_end":115449,"line_start":381,"line_end":381,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115790,"byte_end":115801,"line_start":394,"line_end":394,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123430,"byte_end":123445,"line_start":42,"line_end":42,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123598,"byte_end":123613,"line_start":54,"line_end":54,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123814,"byte_end":123829,"line_start":62,"line_end":62,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123876,"byte_end":123891,"line_start":66,"line_end":66,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":124345,"byte_end":124360,"line_start":81,"line_end":81,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":124664,"byte_end":124679,"line_start":88,"line_end":88,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":125378,"byte_end":125393,"line_start":116,"line_end":116,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":125712,"byte_end":125727,"line_start":132,"line_end":132,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":125787,"byte_end":125802,"line_start":136,"line_end":136,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126102,"byte_end":126115,"line_start":148,"line_end":148,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126484,"byte_end":126490,"line_start":165,"line_end":165,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127013,"byte_end":127029,"line_start":182,"line_end":182,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127213,"byte_end":127229,"line_start":193,"line_end":193,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127411,"byte_end":127427,"line_start":199,"line_end":199,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127509,"byte_end":127525,"line_start":205,"line_end":205,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127954,"byte_end":127959,"line_start":223,"line_end":223,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":128549,"byte_end":128554,"line_start":246,"line_end":246,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129229,"byte_end":129235,"line_start":266,"line_end":266,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129512,"byte_end":129518,"line_start":276,"line_end":276,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129740,"byte_end":129746,"line_start":282,"line_end":282,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129967,"byte_end":129973,"line_start":288,"line_end":288,"column_start":72,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":130168,"byte_end":130174,"line_start":293,"line_end":293,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":130486,"byte_end":130492,"line_start":306,"line_end":306,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133875,"byte_end":133881,"line_start":66,"line_end":66,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133994,"byte_end":134000,"line_start":71,"line_end":71,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134111,"byte_end":134117,"line_start":76,"line_end":76,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134527,"byte_end":134536,"line_start":91,"line_end":91,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134768,"byte_end":134777,"line_start":99,"line_end":99,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":135007,"byte_end":135016,"line_start":107,"line_end":107,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":135899,"byte_end":135900,"line_start":132,"line_end":132,"column_start":17,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":136993,"byte_end":137017,"line_start":166,"line_end":166,"column_start":28,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138072,"byte_end":138086,"line_start":199,"line_end":199,"column_start":61,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138233,"byte_end":138247,"line_start":206,"line_end":206,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138698,"byte_end":138706,"line_start":224,"line_end":224,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138896,"byte_end":138907,"line_start":230,"line_end":230,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139943,"byte_end":139944,"line_start":255,"line_end":255,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141514,"byte_end":141515,"line_start":308,"line_end":308,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141999,"byte_end":142000,"line_start":325,"line_end":325,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":143126,"byte_end":143137,"line_start":357,"line_end":357,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":143344,"byte_end":143355,"line_start":367,"line_end":367,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":143790,"byte_end":143799,"line_start":384,"line_end":384,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":144006,"byte_end":144015,"line_start":394,"line_end":394,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":144484,"byte_end":144488,"line_start":412,"line_end":412,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145017,"byte_end":145027,"line_start":435,"line_end":435,"column_start":64,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146309,"byte_end":146310,"line_start":475,"line_end":475,"column_start":84,"column_end":85},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152842,"byte_end":152843,"line_start":642,"line_end":642,"column_start":57,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":166086,"byte_end":166102,"line_start":995,"line_end":995,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":166269,"byte_end":166285,"line_start":1002,"line_end":1002,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167120,"byte_end":167137,"line_start":1038,"line_end":1038,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167281,"byte_end":167298,"line_start":1045,"line_end":1045,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":169058,"byte_end":169060,"line_start":1089,"line_end":1089,"column_start":93,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":181000,"byte_end":181018,"line_start":74,"line_end":74,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183673,"byte_end":183697,"line_start":147,"line_end":147,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":184491,"byte_end":184515,"line_start":175,"line_end":175,"column_start":35,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":184643,"byte_end":184667,"line_start":181,"line_end":181,"column_start":35,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":184980,"byte_end":184998,"line_start":190,"line_end":190,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185101,"byte_end":185119,"line_start":196,"line_end":196,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187826,"byte_end":187842,"line_start":264,"line_end":264,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188032,"byte_end":188048,"line_start":276,"line_end":276,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189435,"byte_end":189458,"line_start":313,"line_end":313,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":192241,"byte_end":192260,"line_start":387,"line_end":387,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":192382,"byte_end":192398,"line_start":393,"line_end":393,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195585,"byte_end":195606,"line_start":52,"line_end":52,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198300,"byte_end":198313,"line_start":35,"line_end":35,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198437,"byte_end":198443,"line_start":42,"line_end":42,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198624,"byte_end":198637,"line_start":51,"line_end":51,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198726,"byte_end":198739,"line_start":57,"line_end":57,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198841,"byte_end":198854,"line_start":63,"line_end":63,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":199004,"byte_end":199017,"line_start":72,"line_end":72,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":199169,"byte_end":199182,"line_start":81,"line_end":81,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":199358,"byte_end":199371,"line_start":88,"line_end":88,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":199608,"byte_end":199621,"line_start":98,"line_end":98,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":199901,"byte_end":199914,"line_start":108,"line_end":108,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3202,"byte_end":3210,"line_start":101,"line_end":101,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":4253,"byte_end":4260,"line_start":136,"line_end":136,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5599,"byte_end":5613,"line_start":182,"line_end":182,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5735,"byte_end":5744,"line_start":188,"line_end":188,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5935,"byte_end":5949,"line_start":195,"line_end":195,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6071,"byte_end":6080,"line_start":201,"line_end":201,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6269,"byte_end":6283,"line_start":208,"line_end":208,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6399,"byte_end":6408,"line_start":214,"line_end":214,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6580,"byte_end":6594,"line_start":221,"line_end":221,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":7120,"byte_end":7131,"line_start":239,"line_end":239,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":7403,"byte_end":7414,"line_start":247,"line_end":247,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":7530,"byte_end":7541,"line_start":253,"line_end":253,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":7780,"byte_end":7791,"line_start":263,"line_end":263,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8129,"byte_end":8140,"line_start":274,"line_end":274,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8253,"byte_end":8259,"line_start":280,"line_end":280,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8441,"byte_end":8452,"line_start":287,"line_end":287,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8565,"byte_end":8571,"line_start":293,"line_end":293,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8751,"byte_end":8762,"line_start":300,"line_end":300,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8869,"byte_end":8875,"line_start":306,"line_end":306,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":9075,"byte_end":9086,"line_start":314,"line_end":314,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":9402,"byte_end":9416,"line_start":324,"line_end":324,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":10342,"byte_end":10354,"line_start":348,"line_end":348,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":10817,"byte_end":10829,"line_start":361,"line_end":361,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":10939,"byte_end":10951,"line_start":367,"line_end":367,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11056,"byte_end":11071,"line_start":373,"line_end":373,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12830,"byte_end":12843,"line_start":422,"line_end":422,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":13121,"byte_end":13146,"line_start":433,"line_end":433,"column_start":24,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":13413,"byte_end":13426,"line_start":445,"line_end":445,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":13546,"byte_end":13559,"line_start":451,"line_end":451,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":13662,"byte_end":13675,"line_start":457,"line_end":457,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":14349,"byte_end":14362,"line_start":482,"line_end":482,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":14744,"byte_end":14769,"line_start":500,"line_end":500,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":17655,"byte_end":17665,"line_start":561,"line_end":561,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21471,"byte_end":21486,"line_start":719,"line_end":719,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21724,"byte_end":21739,"line_start":727,"line_end":727,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21872,"byte_end":21887,"line_start":733,"line_end":733,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":22234,"byte_end":22249,"line_start":747,"line_end":747,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":22499,"byte_end":22514,"line_start":754,"line_end":754,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":22791,"byte_end":22806,"line_start":762,"line_end":762,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23241,"byte_end":23258,"line_start":780,"line_end":780,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23580,"byte_end":23597,"line_start":795,"line_end":795,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":24148,"byte_end":24166,"line_start":815,"line_end":815,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1377,"byte_end":1382,"line_start":50,"line_end":50,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":26}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1392,"byte_end":1399,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1409,"byte_end":1417,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":451}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/mod.rs","byte_start":82354,"byte_end":82358,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":452}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/mod.rs","byte_start":82368,"byte_end":82375,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":530}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/mod.rs","byte_start":82385,"byte_end":82397,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":554}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1451,"byte_end":1458,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":658}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1468,"byte_end":1474,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":825}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1484,"byte_end":1504,"line_start":56,"line_end":56,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":1218}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":1514,"byte_end":1537,"line_start":57,"line_end":57,"column_start":9,"column_end":32},"ref_id":{"krate":0,"index":1267}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/curve.rs","byte_start":27737,"byte_end":27752,"line_start":36,"line_end":36,"column_start":10,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35388,"byte_end":35406,"line_start":52,"line_end":52,"column_start":6,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1539},"to":{"krate":158,"index":51}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":35648,"byte_end":35666,"line_start":63,"line_end":63,"column_start":2,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":36204,"byte_end":36222,"line_start":88,"line_end":88,"column_start":6,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1539},"to":{"krate":0,"index":1058}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":36790,"byte_end":36808,"line_start":114,"line_end":114,"column_start":2,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1539},"to":{"krate":0,"index":1074}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":37922,"byte_end":37940,"line_start":150,"line_end":150,"column_start":6,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1539},"to":{"krate":0,"index":1063}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":38466,"byte_end":38479,"line_start":169,"line_end":169,"column_start":19,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":39237,"byte_end":39250,"line_start":193,"line_end":193,"column_start":30,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":111},"to":{"krate":18,"index":118}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":39670,"byte_end":39683,"line_start":211,"line_end":211,"column_start":34,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":111},"to":{"krate":18,"index":701}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":39797,"byte_end":39815,"line_start":218,"line_end":218,"column_start":6,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1539},"to":{"krate":18,"index":130}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":40749,"byte_end":40767,"line_start":248,"line_end":248,"column_start":6,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1539},"to":{"krate":18,"index":118}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":41288,"byte_end":41306,"line_start":273,"line_end":273,"column_start":6,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1539},"to":{"krate":18,"index":701}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":41553,"byte_end":41571,"line_start":283,"line_end":283,"column_start":6,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1539},"to":{"krate":22,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":41895,"byte_end":41913,"line_start":292,"line_end":292,"column_start":6,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1539},"to":{"krate":22,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":42248,"byte_end":42266,"line_start":304,"line_end":304,"column_start":6,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1539},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/unchecked_extrinsic.rs","byte_start":42662,"byte_end":42677,"line_start":321,"line_end":321,"column_start":6,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3868},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":48302,"byte_end":48305,"line_start":59,"line_end":59,"column_start":6,"column_end":9},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":49885,"byte_end":49888,"line_start":109,"line_end":109,"column_start":17,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1576},"to":{"krate":18,"index":118}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":50271,"byte_end":50274,"line_start":122,"line_end":122,"column_start":28,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1576},"to":{"krate":18,"index":701}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/era.rs","byte_start":50295,"byte_end":50298,"line_start":124,"line_end":124,"column_start":17,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1576},"to":{"krate":18,"index":130}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/checked_extrinsic.rs","byte_start":54317,"byte_end":54333,"line_start":41,"line_end":41,"column_start":2,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1650},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":58001,"byte_end":58007,"line_start":57,"line_end":57,"column_start":54,"column_end":60},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1685},"to":{"krate":158,"index":51}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":58983,"byte_end":58989,"line_start":88,"line_end":88,"column_start":31,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1685},"to":{"krate":18,"index":130}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":59446,"byte_end":59452,"line_start":104,"line_end":104,"column_start":31,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1685},"to":{"krate":18,"index":118}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":59885,"byte_end":59891,"line_start":118,"line_end":118,"column_start":42,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1685},"to":{"krate":18,"index":701}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":60048,"byte_end":60054,"line_start":124,"line_end":124,"column_start":39,"column_end":45},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1685},"to":{"krate":0,"index":1032}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/header.rs","byte_start":61587,"byte_end":61593,"line_start":173,"line_end":173,"column_start":20,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64614,"byte_end":64621,"line_start":47,"line_end":47,"column_start":21,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64885,"byte_end":64892,"line_start":59,"line_end":59,"column_start":30,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1816},"to":{"krate":2,"index":2048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":64965,"byte_end":64972,"line_start":62,"line_end":62,"column_start":38,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1816},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/block.rs","byte_start":65609,"byte_end":65614,"line_start":80,"line_end":80,"column_start":59,"column_end":64},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1848},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68104,"byte_end":68110,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2038},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":68191,"byte_end":68197,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71659,"byte_end":71669,"line_start":139,"line_end":139,"column_start":41,"column_end":51},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2130},"to":{"krate":22,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":71923,"byte_end":71933,"line_start":148,"line_end":148,"column_start":51,"column_end":61},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2130},"to":{"krate":22,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":74435,"byte_end":74445,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76468,"byte_end":76478,"line_start":272,"line_end":272,"column_start":31,"column_end":41},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2130},"to":{"krate":18,"index":118}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76588,"byte_end":76598,"line_start":278,"line_end":278,"column_start":42,"column_end":52},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2130},"to":{"krate":18,"index":701}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":76639,"byte_end":76649,"line_start":280,"line_end":280,"column_start":31,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2130},"to":{"krate":18,"index":130}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":77599,"byte_end":77612,"line_start":310,"line_end":310,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":79935,"byte_end":79948,"line_start":379,"line_end":379,"column_start":35,"column_end":48},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2201},"to":{"krate":18,"index":118}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":80887,"byte_end":80904,"line_start":414,"line_end":414,"column_start":6,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/generic/digest.rs","byte_start":81174,"byte_end":81187,"line_start":423,"line_end":423,"column_start":46,"column_end":59},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2201},"to":{"krate":18,"index":701}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":84735,"byte_end":84741,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2317},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":85123,"byte_end":85129,"line_start":103,"line_end":103,"column_start":7,"column_end":13},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86331,"byte_end":86338,"line_start":145,"line_end":145,"column_start":30,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2356},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86532,"byte_end":86539,"line_start":157,"line_end":157,"column_start":10,"column_end":17},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86649,"byte_end":86656,"line_start":164,"line_end":164,"column_start":13,"column_end":20},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":86937,"byte_end":86944,"line_start":179,"line_end":179,"column_start":22,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":87762,"byte_end":87769,"line_start":216,"line_end":216,"column_start":51,"column_end":58},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":89091,"byte_end":89105,"line_start":275,"line_end":275,"column_start":6,"column_end":20},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":91041,"byte_end":91049,"line_start":337,"line_end":337,"column_start":6,"column_end":14},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":92232,"byte_end":92244,"line_start":381,"line_end":381,"column_start":26,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2421},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":92594,"byte_end":92606,"line_start":394,"line_end":394,"column_start":6,"column_end":18},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":93198,"byte_end":93210,"line_start":421,"line_end":421,"column_start":19,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2421},"to":{"krate":2,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94063,"byte_end":94070,"line_start":467,"line_end":467,"column_start":6,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/http.rs","byte_start":94890,"byte_end":94905,"line_start":497,"line_end":497,"column_start":10,"column_end":25},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage.rs","byte_start":98843,"byte_end":98858,"line_start":31,"line_end":31,"column_start":10,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":106075,"byte_end":106080,"line_start":83,"line_end":83,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":107111,"byte_end":107115,"line_start":114,"line_end":114,"column_start":18,"column_end":22},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2454},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":107241,"byte_end":107245,"line_start":122,"line_end":122,"column_start":19,"column_end":23},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2454},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108337,"byte_end":108357,"line_start":156,"line_end":156,"column_start":40,"column_end":60},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2471},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":108532,"byte_end":108552,"line_start":165,"line_end":165,"column_start":42,"column_end":62},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2471},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":109348,"byte_end":109360,"line_start":190,"line_end":190,"column_start":42,"column_end":54},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":109705,"byte_end":109717,"line_start":201,"line_end":201,"column_start":40,"column_end":52},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":109986,"byte_end":109998,"line_start":211,"line_end":211,"column_start":43,"column_end":55},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":590},"to":{"krate":0,"index":569}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":111311,"byte_end":111322,"line_start":251,"line_end":251,"column_start":33,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":111516,"byte_end":111527,"line_start":258,"line_end":258,"column_start":23,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":114414,"byte_end":114430,"line_start":347,"line_end":347,"column_start":27,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115308,"byte_end":115324,"line_start":373,"line_end":373,"column_start":36,"column_end":52},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":630},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115438,"byte_end":115449,"line_start":381,"line_end":381,"column_start":10,"column_end":21},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/offchain/storage_lock.rs","byte_start":115790,"byte_end":115801,"line_start":394,"line_end":394,"column_start":13,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123430,"byte_end":123445,"line_start":42,"line_end":42,"column_start":20,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123598,"byte_end":123613,"line_start":54,"line_end":54,"column_start":6,"column_end":21},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123814,"byte_end":123829,"line_start":62,"line_end":62,"column_start":21,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2500},"to":{"krate":29,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":123876,"byte_end":123891,"line_start":66,"line_end":66,"column_start":22,"column_end":37},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":124345,"byte_end":124360,"line_start":81,"line_end":81,"column_start":6,"column_end":21},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":124664,"byte_end":124679,"line_start":88,"line_end":88,"column_start":50,"column_end":65},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2500},"to":{"krate":28,"index":134}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":125378,"byte_end":125393,"line_start":116,"line_end":116,"column_start":21,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2500},"to":{"krate":0,"index":1139}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":125712,"byte_end":125727,"line_start":132,"line_end":132,"column_start":41,"column_end":56},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2500},"to":{"krate":28,"index":145}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":125787,"byte_end":125802,"line_start":136,"line_end":136,"column_start":34,"column_end":49},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2500},"to":{"krate":0,"index":885}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126102,"byte_end":126115,"line_start":148,"line_end":148,"column_start":25,"column_end":38},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2571},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":126484,"byte_end":126490,"line_start":165,"line_end":165,"column_start":6,"column_end":12},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127013,"byte_end":127029,"line_start":182,"line_end":182,"column_start":32,"column_end":48},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2623},"to":{"krate":0,"index":1058}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127213,"byte_end":127229,"line_start":193,"line_end":193,"column_start":39,"column_end":55},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2623},"to":{"krate":22,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127411,"byte_end":127427,"line_start":199,"line_end":199,"column_start":23,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2623},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127509,"byte_end":127525,"line_start":205,"line_end":205,"column_start":20,"column_end":36},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2623},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":127954,"byte_end":127959,"line_start":223,"line_end":223,"column_start":6,"column_end":11},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2665},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":128549,"byte_end":128554,"line_start":246,"line_end":246,"column_start":34,"column_end":39},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2665},"to":{"krate":22,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129229,"byte_end":129235,"line_start":266,"line_end":266,"column_start":19,"column_end":25},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129512,"byte_end":129518,"line_start":276,"line_end":276,"column_start":33,"column_end":39},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2710},"to":{"krate":22,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129740,"byte_end":129746,"line_start":282,"line_end":282,"column_start":29,"column_end":35},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2710},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":129967,"byte_end":129973,"line_start":288,"line_end":288,"column_start":72,"column_end":78},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2710},"to":{"krate":0,"index":1074}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":130168,"byte_end":130174,"line_start":293,"line_end":293,"column_start":62,"column_end":68},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2710},"to":{"krate":0,"index":1058}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/testing.rs","byte_start":130486,"byte_end":130492,"line_start":306,"line_end":306,"column_start":41,"column_end":47},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2710},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133875,"byte_end":133881,"line_start":66,"line_end":66,"column_start":44,"column_end":50},"kind":{"Impl":{"id":171}},"from":{"krate":29,"index":2468},"to":{"krate":0,"index":885}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":133994,"byte_end":134000,"line_start":71,"line_end":71,"column_start":44,"column_end":50},"kind":{"Impl":{"id":172}},"from":{"krate":29,"index":2598},"to":{"krate":0,"index":885}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134111,"byte_end":134117,"line_start":76,"line_end":76,"column_start":42,"column_end":48},"kind":{"Impl":{"id":173}},"from":{"krate":29,"index":2697},"to":{"krate":0,"index":885}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134527,"byte_end":134536,"line_start":91,"line_end":91,"column_start":35,"column_end":44},"kind":{"Impl":{"id":174}},"from":{"krate":29,"index":2523},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":134768,"byte_end":134777,"line_start":99,"line_end":99,"column_start":35,"column_end":44},"kind":{"Impl":{"id":175}},"from":{"krate":29,"index":2653},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":135007,"byte_end":135016,"line_start":107,"line_end":107,"column_start":33,"column_end":42},"kind":{"Impl":{"id":176}},"from":{"krate":29,"index":2749},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":135899,"byte_end":135900,"line_start":132,"line_end":132,"column_start":17,"column_end":18},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":919},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":136993,"byte_end":137017,"line_start":166,"line_end":166,"column_start":28,"column_end":52},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3401},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138072,"byte_end":138086,"line_start":199,"line_end":199,"column_start":61,"column_end":75},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2787},"to":{"krate":0,"index":934}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138233,"byte_end":138247,"line_start":206,"line_end":206,"column_start":20,"column_end":34},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2787},"to":{"krate":0,"index":930}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138698,"byte_end":138706,"line_start":224,"line_end":224,"column_start":27,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":958},"to":{"krate":0,"index":950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":138896,"byte_end":138907,"line_start":230,"line_end":230,"column_start":39,"column_end":50},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":963},"to":{"krate":0,"index":950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":139943,"byte_end":139944,"line_start":255,"line_end":255,"column_start":38,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":975},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141514,"byte_end":141515,"line_start":308,"line_end":308,"column_start":45,"column_end":46},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":987},"to":{"krate":0,"index":983}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141678,"byte_end":141683,"line_start":315,"line_end":315,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":990}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141686,"byte_end":141691,"line_start":315,"line_end":315,"column_start":10,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":983},"to":{"krate":0,"index":990}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141708,"byte_end":141713,"line_start":316,"line_end":316,"column_start":15,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":2164},"to":{"krate":0,"index":990}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141751,"byte_end":141757,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2169},"to":{"krate":0,"index":990}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141795,"byte_end":141801,"line_start":318,"line_end":318,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2159},"to":{"krate":0,"index":990}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":141999,"byte_end":142000,"line_start":325,"line_end":325,"column_start":20,"column_end":21},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":992},"to":{"krate":0,"index":990}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142166,"byte_end":142191,"line_start":330,"line_end":330,"column_start":27,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":2947},"to":{"krate":0,"index":993}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142194,"byte_end":142199,"line_start":330,"line_end":330,"column_start":55,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":6563},"to":{"krate":0,"index":993}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142202,"byte_end":142207,"line_start":330,"line_end":330,"column_start":63,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":993}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142210,"byte_end":142212,"line_start":330,"line_end":330,"column_start":71,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":1769},"to":{"krate":0,"index":993}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142215,"byte_end":142224,"line_start":330,"line_end":330,"column_start":76,"column_end":85},"kind":"SuperTrait","from":{"krate":2,"index":1764},"to":{"krate":0,"index":993}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":142227,"byte_end":142233,"line_start":330,"line_end":330,"column_start":88,"column_end":94},"kind":"SuperTrait","from":{"krate":156,"index":11},"to":{"krate":0,"index":993}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":143126,"byte_end":143137,"line_start":357,"line_end":357,"column_start":17,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2869},"to":{"krate":156,"index":11}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":143344,"byte_end":143355,"line_start":367,"line_end":367,"column_start":15,"column_end":26},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2869},"to":{"krate":0,"index":993}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":143790,"byte_end":143799,"line_start":384,"line_end":384,"column_start":17,"column_end":26},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2902},"to":{"krate":156,"index":11}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":144006,"byte_end":144015,"line_start":394,"line_end":394,"column_start":15,"column_end":24},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2902},"to":{"krate":0,"index":993}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":144484,"byte_end":144488,"line_start":412,"line_end":412,"column_start":30,"column_end":34},"kind":{"Impl":{"id":219}},"from":{"krate":78,"index":1887},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145017,"byte_end":145027,"line_start":435,"line_end":435,"column_start":64,"column_end":74},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2130},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145536,"byte_end":145543,"line_start":455,"line_end":455,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":6568},"to":{"krate":0,"index":2935}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145628,"byte_end":145635,"line_start":458,"line_end":458,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":8501},"to":{"krate":0,"index":2938}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145728,"byte_end":145732,"line_start":461,"line_end":461,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":6751},"to":{"krate":0,"index":2941}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145821,"byte_end":145830,"line_start":464,"line_end":464,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":22,"index":1680},"to":{"krate":0,"index":2944}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145958,"byte_end":145974,"line_start":467,"line_end":467,"column_start":35,"column_end":51},"kind":"SuperTrait","from":{"krate":22,"index":1198},"to":{"krate":0,"index":2947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":145976,"byte_end":145985,"line_start":467,"line_end":467,"column_start":53,"column_end":62},"kind":"SuperTrait","from":{"krate":22,"index":1680},"to":{"krate":0,"index":2947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146073,"byte_end":146085,"line_start":470,"line_end":470,"column_start":44,"column_end":56},"kind":"SuperTrait","from":{"krate":158,"index":51},"to":{"krate":0,"index":2950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146160,"byte_end":146164,"line_start":474,"line_end":474,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146167,"byte_end":146171,"line_start":474,"line_end":474,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146174,"byte_end":146179,"line_start":474,"line_end":474,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146182,"byte_end":146187,"line_start":474,"line_end":474,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":6563},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146190,"byte_end":146192,"line_start":474,"line_end":474,"column_start":49,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":1769},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146195,"byte_end":146204,"line_start":474,"line_end":474,"column_start":54,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":1764},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146207,"byte_end":146212,"line_start":474,"line_end":474,"column_start":66,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146309,"byte_end":146310,"line_start":475,"line_end":475,"column_start":84,"column_end":85},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1028},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146819,"byte_end":146824,"line_start":489,"line_end":489,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":1032}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146827,"byte_end":146831,"line_start":489,"line_end":489,"column_start":10,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":1032}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146834,"byte_end":146838,"line_start":489,"line_end":489,"column_start":17,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1032}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146841,"byte_end":146846,"line_start":489,"line_end":489,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":18,"index":134},"to":{"krate":0,"index":1032}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146849,"byte_end":146851,"line_start":489,"line_end":489,"column_start":32,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1769},"to":{"krate":0,"index":1032}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146854,"byte_end":146868,"line_start":489,"line_end":489,"column_start":37,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":2944},"to":{"krate":0,"index":1032}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146871,"byte_end":146876,"line_start":489,"line_end":489,"column_start":54,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":6563},"to":{"krate":0,"index":1032}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":146880,"byte_end":146897,"line_start":490,"line_end":490,"column_start":2,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":2950},"to":{"krate":0,"index":1032}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148779,"byte_end":148784,"line_start":546,"line_end":546,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148787,"byte_end":148791,"line_start":546,"line_end":546,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148794,"byte_end":148798,"line_start":546,"line_end":546,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148801,"byte_end":148806,"line_start":546,"line_end":546,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":18,"index":134},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148809,"byte_end":148811,"line_start":546,"line_end":546,"column_start":48,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":1769},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148814,"byte_end":148828,"line_start":546,"line_end":546,"column_start":53,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":2944},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148831,"byte_end":148836,"line_start":546,"line_end":546,"column_start":70,"column_end":75},"kind":"SuperTrait","from":{"krate":2,"index":6563},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":148839,"byte_end":148856,"line_start":546,"line_end":546,"column_start":78,"column_end":95},"kind":"SuperTrait","from":{"krate":0,"index":2950},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150101,"byte_end":150106,"line_start":575,"line_end":575,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":1058}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":150109,"byte_end":150126,"line_start":575,"line_end":575,"column_start":30,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":2950},"to":{"krate":0,"index":1058}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152049,"byte_end":152054,"line_start":621,"line_end":621,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":1074}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152560,"byte_end":152565,"line_start":633,"line_end":633,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":1078}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":152842,"byte_end":152843,"line_start":642,"line_end":642,"column_start":57,"column_end":58},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1082},"to":{"krate":0,"index":1074}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154871,"byte_end":154876,"line_start":687,"line_end":687,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":18,"index":134},"to":{"krate":0,"index":1102}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154879,"byte_end":154884,"line_start":687,"line_end":687,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":6563},"to":{"krate":0,"index":1102}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154887,"byte_end":154891,"line_start":687,"line_end":687,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1102}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154894,"byte_end":154898,"line_start":687,"line_end":687,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":1102}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154901,"byte_end":154906,"line_start":687,"line_end":687,"column_start":58,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":1102}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154909,"byte_end":154911,"line_start":687,"line_end":687,"column_start":66,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":1769},"to":{"krate":0,"index":1102}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":154914,"byte_end":154923,"line_start":687,"line_end":687,"column_start":71,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":1764},"to":{"krate":0,"index":1102}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162711,"byte_end":162716,"line_start":903,"line_end":903,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162719,"byte_end":162723,"line_start":903,"line_end":903,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":162726,"byte_end":162730,"line_start":903,"line_end":903,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":165264,"byte_end":165269,"line_start":973,"line_end":973,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":1139}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":166086,"byte_end":166102,"line_start":995,"line_end":995,"column_start":13,"column_end":29},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":166269,"byte_end":166285,"line_start":1002,"line_end":1002,"column_start":44,"column_end":60},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1146},"to":{"krate":18,"index":66}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167120,"byte_end":167137,"line_start":1038,"line_end":1038,"column_start":10,"column_end":27},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167281,"byte_end":167298,"line_start":1045,"line_end":1045,"column_start":27,"column_end":44},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1160},"to":{"krate":18,"index":66}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":167825,"byte_end":167830,"line_start":1063,"line_end":1063,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":1171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/traits.rs","byte_start":169058,"byte_end":169060,"line_start":1089,"line_end":1089,"column_start":93,"column_end":95},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1182},"to":{"krate":0,"index":1171}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":181000,"byte_end":181018,"line_start":74,"line_end":74,"column_start":6,"column_end":24},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":183673,"byte_end":183697,"line_start":147,"line_end":147,"column_start":6,"column_end":30},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":184491,"byte_end":184515,"line_start":175,"line_end":175,"column_start":35,"column_end":59},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3401},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":184643,"byte_end":184667,"line_start":181,"line_end":181,"column_start":35,"column_end":59},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3401},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":184980,"byte_end":184998,"line_start":190,"line_end":190,"column_start":36,"column_end":54},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3313},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":185101,"byte_end":185119,"line_start":196,"line_end":196,"column_start":36,"column_end":54},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3364},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":187826,"byte_end":187842,"line_start":264,"line_end":264,"column_start":18,"column_end":34},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3468},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":188032,"byte_end":188048,"line_start":276,"line_end":276,"column_start":6,"column_end":22},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":189435,"byte_end":189458,"line_start":313,"line_end":313,"column_start":6,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":192241,"byte_end":192260,"line_start":387,"line_end":387,"column_start":40,"column_end":59},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/transaction_validity.rs","byte_start":192382,"byte_end":192398,"line_start":393,"line_end":393,"column_start":40,"column_end":56},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3468},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/random_number_generator.rs","byte_start":195585,"byte_end":195606,"line_start":52,"line_end":52,"column_start":21,"column_end":42},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198300,"byte_end":198313,"line_start":35,"line_end":35,"column_start":29,"column_end":42},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3523},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198437,"byte_end":198443,"line_start":42,"line_end":42,"column_start":30,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":5,"index":5316},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198624,"byte_end":198637,"line_start":51,"line_end":51,"column_start":18,"column_end":31},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3523},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198726,"byte_end":198739,"line_start":57,"line_end":57,"column_start":20,"column_end":33},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3523},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":198841,"byte_end":198854,"line_start":63,"line_end":63,"column_start":22,"column_end":35},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3523},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":199004,"byte_end":199017,"line_start":72,"line_end":72,"column_start":17,"column_end":30},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3523},"to":{"krate":18,"index":118}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":199169,"byte_end":199182,"line_start":81,"line_end":81,"column_start":17,"column_end":30},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3523},"to":{"krate":18,"index":130}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":199358,"byte_end":199371,"line_start":88,"line_end":88,"column_start":28,"column_end":41},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3523},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":199608,"byte_end":199621,"line_start":98,"line_end":98,"column_start":27,"column_end":40},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3523},"to":{"krate":22,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/runtime_string.rs","byte_start":199901,"byte_end":199914,"line_start":108,"line_end":108,"column_start":39,"column_end":52},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3523},"to":{"krate":22,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3202,"byte_end":3210,"line_start":101,"line_end":101,"column_start":17,"column_end":25},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3537},"to":{"krate":29,"index":1960}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":3981,"byte_end":3986,"line_start":127,"line_end":127,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":1364}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":4253,"byte_end":4260,"line_start":136,"line_end":136,"column_start":41,"column_end":48},"kind":{"Impl":{"id":288}},"from":{"krate":72,"index":324},"to":{"krate":0,"index":1361}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5599,"byte_end":5613,"line_start":182,"line_end":182,"column_start":35,"column_end":49},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5735,"byte_end":5744,"line_start":188,"line_end":188,"column_start":43,"column_end":52},"kind":{"Impl":{"id":296}},"from":{"krate":29,"index":2523},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":5935,"byte_end":5949,"line_start":195,"line_end":195,"column_start":35,"column_end":49},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6071,"byte_end":6080,"line_start":201,"line_end":201,"column_start":43,"column_end":52},"kind":{"Impl":{"id":298}},"from":{"krate":29,"index":2653},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6269,"byte_end":6283,"line_start":208,"line_end":208,"column_start":33,"column_end":47},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6399,"byte_end":6408,"line_start":214,"line_end":214,"column_start":41,"column_end":50},"kind":{"Impl":{"id":300}},"from":{"krate":29,"index":2749},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":6580,"byte_end":6594,"line_start":221,"line_end":221,"column_start":18,"column_end":32},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":7120,"byte_end":7131,"line_start":239,"line_end":239,"column_start":18,"column_end":29},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3647},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":7403,"byte_end":7414,"line_start":247,"line_end":247,"column_start":50,"column_end":61},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3647},"to":{"krate":29,"index":145}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":7530,"byte_end":7541,"line_start":253,"line_end":253,"column_start":22,"column_end":33},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3647},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":7780,"byte_end":7791,"line_start":263,"line_end":263,"column_start":34,"column_end":45},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3647},"to":{"krate":0,"index":885}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8129,"byte_end":8140,"line_start":274,"line_end":274,"column_start":32,"column_end":43},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3647},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8253,"byte_end":8259,"line_start":280,"line_end":280,"column_start":40,"column_end":46},"kind":{"Impl":{"id":313}},"from":{"krate":29,"index":2468},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8441,"byte_end":8452,"line_start":287,"line_end":287,"column_start":32,"column_end":43},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":3647},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8565,"byte_end":8571,"line_start":293,"line_end":293,"column_start":40,"column_end":46},"kind":{"Impl":{"id":315}},"from":{"krate":29,"index":2598},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8751,"byte_end":8762,"line_start":300,"line_end":300,"column_start":30,"column_end":41},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3647},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":8869,"byte_end":8875,"line_start":306,"line_end":306,"column_start":38,"column_end":44},"kind":{"Impl":{"id":317}},"from":{"krate":29,"index":2697},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":9075,"byte_end":9086,"line_start":314,"line_end":314,"column_start":28,"column_end":39},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":3647},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":9402,"byte_end":9416,"line_start":324,"line_end":324,"column_start":17,"column_end":31},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3568},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":10342,"byte_end":10354,"line_start":348,"line_end":348,"column_start":17,"column_end":29},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3734},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":10817,"byte_end":10829,"line_start":361,"line_end":361,"column_start":35,"column_end":47},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3734},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":10939,"byte_end":10951,"line_start":367,"line_end":367,"column_start":35,"column_end":47},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3734},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":11056,"byte_end":11071,"line_start":373,"line_end":373,"column_start":30,"column_end":45},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":12830,"byte_end":12843,"line_start":422,"line_end":422,"column_start":6,"column_end":19},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":3790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":13121,"byte_end":13146,"line_start":433,"line_end":433,"column_start":24,"column_end":49},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":3831},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":13413,"byte_end":13426,"line_start":445,"line_end":445,"column_start":43,"column_end":56},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":3790},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":13546,"byte_end":13559,"line_start":451,"line_end":451,"column_start":41,"column_end":54},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":3790},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":13662,"byte_end":13675,"line_start":457,"line_end":457,"column_start":29,"column_end":42},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":3790},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":14349,"byte_end":14362,"line_start":482,"line_end":482,"column_start":28,"column_end":41},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":3790},"to":{"krate":0,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":14744,"byte_end":14769,"line_start":500,"line_end":500,"column_start":31,"column_end":56},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":3831},"to":{"krate":0,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":17655,"byte_end":17665,"line_start":561,"line_end":561,"column_start":50,"column_end":60},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":1471},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21471,"byte_end":21486,"line_start":719,"line_end":719,"column_start":6,"column_end":21},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":3868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21724,"byte_end":21739,"line_start":727,"line_end":727,"column_start":40,"column_end":55},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":3868},"to":{"krate":158,"index":51}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":21872,"byte_end":21887,"line_start":733,"line_end":733,"column_start":29,"column_end":44},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":3868},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":22234,"byte_end":22249,"line_start":747,"line_end":747,"column_start":29,"column_end":44},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":3868},"to":{"krate":22,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":22499,"byte_end":22514,"line_start":754,"line_end":754,"column_start":39,"column_end":54},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":3868},"to":{"krate":22,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":22791,"byte_end":22806,"line_start":762,"line_end":762,"column_start":28,"column_end":43},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":3868},"to":{"krate":0,"index":1058}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23241,"byte_end":23258,"line_start":780,"line_end":780,"column_start":6,"column_end":23},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":23580,"byte_end":23597,"line_start":795,"line_end":795,"column_start":15,"column_end":32},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-runtime-2.0.1/src/lib.rs","byte_start":24148,"byte_end":24166,"line_start":815,"line_end":815,"column_start":9,"column_end":27},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":1510},"to":{"krate":4294967295,"index":4294967295}}]}