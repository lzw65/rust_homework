{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","unsigned_varint","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=98dd2598d42ce316","-C","extra-filename=-98dd2598d42ce316","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libunsigned_varint-98dd2598d42ce316.rmeta"},"prelude":{"crate_id":{"name":"unsigned_varint","disambiguator":[7435245412390365442,11253858114740101992]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","byte_start":1126,"byte_end":1502,"line_start":20,"line_end":35,"column_start":1,"column_end":13}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","byte_start":1126,"byte_end":1502,"line_start":20,"line_end":35,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":19},{"krate":0,"index":57}],"decl_id":null,"docs":" Unsigned varint encodes unsigned integers in 7-bit groups. The most\n significant bit (MSB) in each byte indicates if another byte follows\n (MSB = 1), or not (MSB = 0).\n","sig":null,"attributes":[{"value":"/ Unsigned varint encodes unsigned integers in 7-bit groups. The most","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","byte_start":1126,"byte_end":1197,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ significant bit (MSB) in each byte indicates if another byte follows","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","byte_start":1198,"byte_end":1270,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ (MSB = 1), or not (MSB = 0).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","byte_start":1271,"byte_end":1303,"line_start":22,"line_end":22,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decode","qualname":"::decode","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":73},{"krate":0,"index":86},{"krate":0,"index":84},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" Basic unsigned-varint decoding.\n","sig":null,"attributes":[{"value":"/ Basic unsigned-varint decoding.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":2630,"byte_end":2665,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":74},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":2830,"byte_end":2842,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"Insufficient","qualname":"::decode::Error::Insufficient","value":"Error::Insufficient","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Not enough input bytes.\n","sig":null,"attributes":[{"value":"/ Not enough input bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":2798,"byte_end":2825,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":76},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":2884,"byte_end":2892,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::decode::Error::Overflow","value":"Error::Overflow","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Input bytes exceed maximum.\n","sig":null,"attributes":[{"value":"/ Input bytes exceed maximum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":2848,"byte_end":2879,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":73},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":2786,"byte_end":2791,"line_start":27,"line_end":27,"column_start":10,"column_end":15},"name":"Error","qualname":"::decode::Error","value":"pub enum Error {\n\n    /// Not enough input bytes.\n    Insufficient,\n\n    /// Input bytes exceed maximum.\n    Overflow,\n}","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":76}],"decl_id":null,"docs":" Possible decoding errors.\n","sig":null,"attributes":[{"value":"/ Possible decoding errors.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":2690,"byte_end":2719,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"non_exhaustive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":2720,"byte_end":2737,"line_start":25,"line_end":25,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3732,"byte_end":3739,"line_start":64,"line_end":64,"column_start":8,"column_end":15},"name":"is_last","qualname":"::decode::is_last","value":"pub fn is_last(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the last byte of an unsigned varint?\n","sig":null,"attributes":[{"value":"/ Is this the last byte of an unsigned varint?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3666,"byte_end":3714,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3715,"byte_end":3724,"line_start":63,"line_end":63,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3882,"byte_end":3884,"line_start":72,"line_end":72,"column_start":8,"column_end":10},"name":"u8","qualname":"::decode::u8","value":"pub fn u8(&[u8]) -> Result<(u8, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `u8`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `u8`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3778,"byte_end":3813,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3814,"byte_end":3817,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3818,"byte_end":3864,"line_start":70,"line_end":70,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3865,"byte_end":3874,"line_start":71,"line_end":71,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4061,"byte_end":4064,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"u16","qualname":"::decode::u16","value":"pub fn u16(&[u8]) -> Result<(u16, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `u16`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `u16`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3956,"byte_end":3992,"line_start":76,"line_end":76,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3993,"byte_end":3996,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3997,"byte_end":4043,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4044,"byte_end":4053,"line_start":79,"line_end":79,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4243,"byte_end":4246,"line_start":88,"line_end":88,"column_start":8,"column_end":11},"name":"u32","qualname":"::decode::u32","value":"pub fn u32(&[u8]) -> Result<(u32, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `u32`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `u32`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4138,"byte_end":4174,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4175,"byte_end":4178,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4179,"byte_end":4225,"line_start":86,"line_end":86,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4226,"byte_end":4235,"line_start":87,"line_end":87,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4425,"byte_end":4428,"line_start":96,"line_end":96,"column_start":8,"column_end":11},"name":"u64","qualname":"::decode::u64","value":"pub fn u64(&[u8]) -> Result<(u64, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `u64`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `u64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4320,"byte_end":4356,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4357,"byte_end":4360,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4361,"byte_end":4407,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4408,"byte_end":4417,"line_start":95,"line_end":95,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4608,"byte_end":4612,"line_start":104,"line_end":104,"column_start":8,"column_end":12},"name":"u128","qualname":"::decode::u128","value":"pub fn u128(&[u8]) -> Result<(u128, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `u128`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `u128`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4502,"byte_end":4539,"line_start":100,"line_end":100,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4540,"byte_end":4543,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4544,"byte_end":4590,"line_start":102,"line_end":102,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4591,"byte_end":4600,"line_start":103,"line_end":103,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4832,"byte_end":4837,"line_start":113,"line_end":113,"column_start":8,"column_end":13},"name":"usize","qualname":"::decode::usize","value":"pub fn usize(&[u8]) -> Result<(usize, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `usize`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `usize`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4689,"byte_end":4727,"line_start":108,"line_end":108,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4728,"byte_end":4731,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4732,"byte_end":4778,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4779,"byte_end":4788,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":4789,"byte_end":4824,"line_start":112,"line_end":112,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encode","qualname":"::encode","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":" Basic unsigned-varint encoding.\n","sig":null,"attributes":[{"value":"/ Basic unsigned-varint encoding.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":6295,"byte_end":6330,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":6826,"byte_end":6828,"line_start":45,"line_end":45,"column_start":8,"column_end":10},"name":"u8","qualname":"::encode::u8","value":"pub fn u8(u8, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `u8` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `u8` into the given byte array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":6712,"byte_end":6764,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":6765,"byte_end":6768,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":6769,"byte_end":6808,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":6809,"byte_end":6818,"line_start":44,"line_end":44,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7019,"byte_end":7022,"line_start":53,"line_end":53,"column_start":8,"column_end":11},"name":"u16","qualname":"::encode::u16","value":"pub fn u16(u16, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `u16` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `u16` into the given byte array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":6904,"byte_end":6957,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":6958,"byte_end":6961,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":6962,"byte_end":7001,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7002,"byte_end":7011,"line_start":52,"line_end":52,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7215,"byte_end":7218,"line_start":61,"line_end":61,"column_start":8,"column_end":11},"name":"u32","qualname":"::encode::u32","value":"pub fn u32(u32, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `u32` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `u32` into the given byte array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7100,"byte_end":7153,"line_start":57,"line_end":57,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7154,"byte_end":7157,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7158,"byte_end":7197,"line_start":59,"line_end":59,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7198,"byte_end":7207,"line_start":60,"line_end":60,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7411,"byte_end":7414,"line_start":69,"line_end":69,"column_start":8,"column_end":11},"name":"u64","qualname":"::encode::u64","value":"pub fn u64(u64, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `u64` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `u64` into the given byte array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7296,"byte_end":7349,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7350,"byte_end":7353,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7354,"byte_end":7393,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7394,"byte_end":7403,"line_start":68,"line_end":68,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7608,"byte_end":7612,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"u128","qualname":"::encode::u128","value":"pub fn u128(u128, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `u128` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `u128` into the given byte array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7492,"byte_end":7546,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7547,"byte_end":7550,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7551,"byte_end":7590,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7591,"byte_end":7600,"line_start":76,"line_end":76,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7845,"byte_end":7850,"line_start":86,"line_end":86,"column_start":8,"column_end":13},"name":"usize","qualname":"::encode::usize","value":"pub fn usize(usize, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `usize` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `usize` into the given byte array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7692,"byte_end":7747,"line_start":81,"line_end":81,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7748,"byte_end":7751,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7752,"byte_end":7791,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7792,"byte_end":7801,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":7802,"byte_end":7837,"line_start":85,"line_end":85,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8252,"byte_end":8261,"line_start":101,"line_end":101,"column_start":8,"column_end":17},"name":"u8_buffer","qualname":"::encode::u8_buffer","value":"pub fn u8_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `u8` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `u8` values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8178,"byte_end":8234,"line_start":99,"line_end":99,"column_start":1,"column_end":57}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8235,"byte_end":8244,"line_start":100,"line_end":100,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8376,"byte_end":8386,"line_start":107,"line_end":107,"column_start":8,"column_end":18},"name":"u16_buffer","qualname":"::encode::u16_buffer","value":"pub fn u16_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `u16` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `u16` values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8301,"byte_end":8358,"line_start":105,"line_end":105,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8359,"byte_end":8368,"line_start":106,"line_end":106,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8503,"byte_end":8513,"line_start":113,"line_end":113,"column_start":8,"column_end":18},"name":"u32_buffer","qualname":"::encode::u32_buffer","value":"pub fn u32_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `u32` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `u32` values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8428,"byte_end":8485,"line_start":111,"line_end":111,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8486,"byte_end":8495,"line_start":112,"line_end":112,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8630,"byte_end":8640,"line_start":119,"line_end":119,"column_start":8,"column_end":18},"name":"u64_buffer","qualname":"::encode::u64_buffer","value":"pub fn u64_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `u64` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `u64` values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8555,"byte_end":8612,"line_start":117,"line_end":117,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8613,"byte_end":8622,"line_start":118,"line_end":118,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8758,"byte_end":8769,"line_start":125,"line_end":125,"column_start":8,"column_end":19},"name":"u128_buffer","qualname":"::encode::u128_buffer","value":"pub fn u128_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `u128` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `u128` values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8682,"byte_end":8740,"line_start":123,"line_end":123,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8741,"byte_end":8750,"line_start":124,"line_end":124,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8890,"byte_end":8902,"line_start":131,"line_end":131,"column_start":8,"column_end":20},"name":"usize_buffer","qualname":"::encode::usize_buffer","value":"pub fn usize_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `usize` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `usize` values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8813,"byte_end":8872,"line_start":129,"line_end":129,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/encode.rs","byte_start":8873,"byte_end":8882,"line_start":130,"line_end":130,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":107},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71}],"decl_id":null,"docs":" Decode using [`std::io::Read`] types.\n","sig":null,"attributes":[{"value":"/ Decode using [`std::io::Read`] types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":10388,"byte_end":10429,"line_start":20,"line_end":20,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":88},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11303,"byte_end":11310,"line_start":49,"line_end":49,"column_start":5,"column_end":12},"name":"read_u8","qualname":"::io::read_u8","value":"pub fn read_u8<R: io::Read>(R) -> Result<u8, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u8`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":90},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11348,"byte_end":11356,"line_start":50,"line_end":50,"column_start":5,"column_end":13},"name":"read_u16","qualname":"::io::read_u16","value":"pub fn read_u16<R: io::Read>(R) -> Result<u16, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u16`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":92},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11394,"byte_end":11402,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"read_u32","qualname":"::io::read_u32","value":"pub fn read_u32<R: io::Read>(R) -> Result<u32, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u32`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11440,"byte_end":11448,"line_start":52,"line_end":52,"column_start":5,"column_end":13},"name":"read_u64","qualname":"::io::read_u64","value":"pub fn read_u64<R: io::Read>(R) -> Result<u64, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u64`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":96},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11486,"byte_end":11495,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"read_u128","qualname":"::io::read_u128","value":"pub fn read_u128<R: io::Read>(R) -> Result<u128, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u128`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":98},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11533,"byte_end":11543,"line_start":54,"line_end":54,"column_start":5,"column_end":15},"name":"read_usize","qualname":"::io::read_usize","value":"pub fn read_usize<R: io::Read>(R) -> Result<usize, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`usize`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":101},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11665,"byte_end":11667,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"Io","qualname":"::io::ReadError::Io","value":"ReadError::Io(io::Error)","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":104},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11684,"byte_end":11690,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"Decode","qualname":"::io::ReadError::Decode","value":"ReadError::Decode(decode::Error)","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":100},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11649,"byte_end":11658,"line_start":60,"line_end":60,"column_start":10,"column_end":19},"name":"ReadError","qualname":"::io::ReadError","value":"pub enum ReadError { Io(io::Error), Decode(decode::Error), }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":104}],"decl_id":null,"docs":" Possible read errors.\n","sig":null,"attributes":[{"value":"/ Possible read errors.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11579,"byte_end":11604,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"non_exhaustive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11605,"byte_end":11622,"line_start":58,"line_end":58,"column_start":1,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":2918,"byte_end":2923,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3199,"byte_end":3204,"line_start":43,"line_end":43,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11731,"byte_end":11740,"line_start":65,"line_end":65,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":12001,"byte_end":12010,"line_start":74,"line_end":74,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":12221,"byte_end":12230,"line_start":84,"line_end":84,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":12332,"byte_end":12341,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","byte_start":1313,"byte_end":1319,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","byte_start":1329,"byte_end":1335,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/lib.rs","byte_start":1345,"byte_end":1347,"line_start":26,"line_end":26,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":57}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":2918,"byte_end":2923,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/decode.rs","byte_start":3199,"byte_end":3204,"line_start":43,"line_end":43,"column_start":28,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":73},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":11731,"byte_end":11740,"line_start":65,"line_end":65,"column_start":23,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":12001,"byte_end":12010,"line_start":74,"line_end":74,"column_start":28,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":100},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":12221,"byte_end":12230,"line_start":84,"line_end":84,"column_start":26,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.4.0/src/io.rs","byte_start":12332,"byte_end":12341,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":1956}}]}