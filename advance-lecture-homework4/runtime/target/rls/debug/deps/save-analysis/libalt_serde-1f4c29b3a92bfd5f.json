{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","alt_serde","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"derive\"","--cfg","feature=\"serde_derive\"","-C","metadata=1f4c29b3a92bfd5f","-C","extra-filename=-1f4c29b3a92bfd5f","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--extern","serde_derive=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libserde_derive-568d361b0a6969d1.so","--cap-lints","allow","--cfg","ops_bound","--cfg","core_reverse","--cfg","de_boxed_c_str","--cfg","de_boxed_path","--cfg","de_rc_dst","--cfg","core_duration","--cfg","integer128","--cfg","range_inclusive","--cfg","num_nonzero","--cfg","core_try_from","--cfg","num_nonzero_signed","--cfg","std_atomic64","--cfg","std_atomic","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libalt_serde-1f4c29b3a92bfd5f.rmeta"},"prelude":{"crate_id":{"name":"alt_serde","disambiguator":[8310575308826930113,14953848382810994585]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","num":5,"id":{"name":"serde_derive","disambiguator":[15005227695834228928,13188106083218604858]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":0,"byte_end":10193,"line_start":1,"line_end":273,"column_start":1,"column_end":25}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":5001},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":25117,"byte_end":25127,"line_start":126,"line_end":126,"column_start":28,"column_end":38},"alias_span":null,"name":"IgnoredAny","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":5002},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":25117,"byte_end":25127,"line_start":126,"line_end":126,"column_start":28,"column_end":38},"alias_span":null,"name":"IgnoredAny","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2781},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":25277,"byte_end":25282,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"alias_span":null,"name":"StdError","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":1316},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":238163,"byte_end":238173,"line_start":115,"line_end":115,"column_start":27,"column_end":37},"alias_span":null,"name":"Impossible","value":"","parent":{"krate":0,"index":1223}},{"kind":"Use","ref_id":{"krate":0,"index":2781},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":238323,"byte_end":238328,"line_start":122,"line_end":122,"column_start":20,"column_end":25},"alias_span":null,"name":"StdError","value":"","parent":{"krate":0,"index":1223}},{"kind":"Use","ref_id":{"krate":0,"index":998},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":9415,"byte_end":9426,"line_start":247,"line_end":247,"column_start":14,"column_end":25},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1020},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":9428,"byte_end":9440,"line_start":247,"line_end":247,"column_start":27,"column_end":39},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1384},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":9472,"byte_end":9481,"line_start":249,"line_end":249,"column_start":15,"column_end":24},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1387},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":9483,"byte_end":9493,"line_start":249,"line_end":249,"column_start":26,"column_end":36},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":1736},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328624,"byte_end":328629,"line_start":1,"line_end":1,"column_start":21,"column_end":26},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":1739},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328624,"byte_end":328629,"line_start":1,"line_end":1,"column_start":21,"column_end":26},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":1501}},{"kind":"Use","ref_id":{"krate":1,"index":1956},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328654,"byte_end":328658,"line_start":2,"line_end":2,"column_start":24,"column_end":28},"alias_span":null,"name":"From","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":1953},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328660,"byte_end":328664,"line_start":2,"line_end":2,"column_start":30,"column_end":34},"alias_span":null,"name":"Into","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":2026},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328689,"byte_end":328696,"line_start":3,"line_end":3,"column_start":23,"column_end":30},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":2030},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328689,"byte_end":328696,"line_start":3,"line_end":3,"column_start":23,"column_end":30},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":1505}},{"kind":"Use","ref_id":{"krate":1,"index":6292},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328711,"byte_end":328714,"line_start":4,"line_end":4,"column_start":14,"column_end":17},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":6531},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328723,"byte_end":328732,"line_start":4,"line_end":4,"column_start":26,"column_end":35},"alias_span":null,"name":"Formatter","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":2056},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328756,"byte_end":328767,"line_start":5,"line_end":5,"column_start":22,"column_end":33},"alias_span":null,"name":"PhantomData","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":2057},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328756,"byte_end":328767,"line_start":5,"line_end":5,"column_start":22,"column_end":33},"alias_span":null,"name":"PhantomData","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":1,"index":31858},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328790,"byte_end":328796,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":31860},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328805,"byte_end":328809,"line_start":6,"line_end":6,"column_start":37,"column_end":41},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":31861},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328805,"byte_end":328809,"line_start":6,"line_end":6,"column_start":37,"column_end":41},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":1512}},{"kind":"Use","ref_id":{"krate":1,"index":31862},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328811,"byte_end":328815,"line_start":6,"line_end":6,"column_start":43,"column_end":47},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":31863},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328811,"byte_end":328815,"line_start":6,"line_end":6,"column_start":43,"column_end":47},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":1513}},{"kind":"Use","ref_id":{"krate":1,"index":32017},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328839,"byte_end":328845,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":32023},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328854,"byte_end":328857,"line_start":7,"line_end":7,"column_start":37,"column_end":40},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":32024},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328854,"byte_end":328857,"line_start":7,"line_end":7,"column_start":37,"column_end":40},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":1516}},{"kind":"Use","ref_id":{"krate":1,"index":32020},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328859,"byte_end":328861,"line_start":7,"line_end":7,"column_start":42,"column_end":44},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":32021},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328859,"byte_end":328861,"line_start":7,"line_end":7,"column_start":42,"column_end":44},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":1517}},{"kind":"Use","ref_id":{"krate":0,"index":1525},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328887,"byte_end":328902,"line_start":9,"line_end":9,"column_start":23,"column_end":38},"alias_span":null,"name":"from_utf8_lossy","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":4,"index":4080},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328967,"byte_end":328975,"line_start":12,"line_end":12,"column_start":15,"column_end":23},"alias_span":null,"name":"ToString","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":4,"index":4556},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":328977,"byte_end":328980,"line_start":12,"line_end":12,"column_start":25,"column_end":28},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":1,"index":1963},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":329028,"byte_end":329035,"line_start":15,"line_end":15,"column_start":23,"column_end":30},"alias_span":null,"name":"TryFrom","value":"","parent":{"krate":0,"index":1500}},{"kind":"Use","ref_id":{"krate":0,"index":8157},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":334884,"byte_end":334891,"line_start":10,"line_end":10,"column_start":5,"column_end":12},"alias_span":null,"name":"Content","value":"","parent":{"krate":0,"index":1533}},{"kind":"Use","ref_id":{"krate":0,"index":1851},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":334893,"byte_end":334912,"line_start":10,"line_end":10,"column_start":14,"column_end":33},"alias_span":null,"name":"ContentDeserializer","value":"","parent":{"krate":0,"index":1533}},{"kind":"Use","ref_id":{"krate":0,"index":2018},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":334914,"byte_end":334936,"line_start":10,"line_end":10,"column_start":35,"column_end":57},"alias_span":null,"name":"ContentRefDeserializer","value":"","parent":{"krate":0,"index":1533}},{"kind":"Use","ref_id":{"krate":0,"index":1937},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":334938,"byte_end":334954,"line_start":10,"line_end":10,"column_start":59,"column_end":75},"alias_span":null,"name":"EnumDeserializer","value":"","parent":{"krate":0,"index":1533}},{"kind":"Use","ref_id":{"krate":0,"index":2210},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":334960,"byte_end":334987,"line_start":11,"line_end":11,"column_start":5,"column_end":32},"alias_span":null,"name":"InternallyTaggedUnitVisitor","value":"","parent":{"krate":0,"index":1533}},{"kind":"Use","ref_id":{"krate":0,"index":1830},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":334989,"byte_end":335009,"line_start":11,"line_end":11,"column_start":34,"column_end":54},"alias_span":null,"name":"TagContentOtherField","value":"","parent":{"krate":0,"index":1533}},{"kind":"Use","ref_id":{"krate":0,"index":1837},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":335011,"byte_end":335038,"line_start":11,"line_end":11,"column_start":56,"column_end":83},"alias_span":null,"name":"TagContentOtherFieldVisitor","value":"","parent":{"krate":0,"index":1533}},{"kind":"Use","ref_id":{"krate":0,"index":1811},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":335044,"byte_end":335061,"line_start":12,"line_end":12,"column_start":5,"column_end":22},"alias_span":null,"name":"TagOrContentField","value":"","parent":{"krate":0,"index":1533}},{"kind":"Use","ref_id":{"krate":0,"index":1816},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":335063,"byte_end":335087,"line_start":12,"line_end":12,"column_start":24,"column_end":48},"alias_span":null,"name":"TagOrContentFieldVisitor","value":"","parent":{"krate":0,"index":1533}},{"kind":"Use","ref_id":{"krate":0,"index":1787},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":335089,"byte_end":335109,"line_start":12,"line_end":12,"column_start":50,"column_end":70},"alias_span":null,"name":"TaggedContentVisitor","value":"","parent":{"krate":0,"index":1533}},{"kind":"Use","ref_id":{"krate":0,"index":2226},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":335111,"byte_end":335130,"line_start":12,"line_end":12,"column_start":72,"column_end":91},"alias_span":null,"name":"UntaggedUnitVisitor","value":"","parent":{"krate":0,"index":1533}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":10191,"byte_end":10192,"line_start":273,"line_end":273,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":0,"byte_end":10193,"line_start":1,"line_end":273,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":1223},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1526},{"krate":0,"index":2777},{"krate":0,"index":2783},{"krate":0,"index":2784}],"decl_id":null,"docs":" # Serde","sig":null,"attributes":[{"value":"/ # Serde","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Serde is a framework for ***ser***ializing and ***de***serializing Rust data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":16,"byte_end":96,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ structures efficiently and generically.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":97,"byte_end":140,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":141,"byte_end":144,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The Serde ecosystem consists of data structures that know how to serialize","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":145,"byte_end":223,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ and deserialize themselves along with data formats that know how to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":224,"byte_end":295,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ serialize and deserialize other things. Serde provides the layer by which","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":296,"byte_end":373,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ these two groups interact with each other, allowing any supported data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":374,"byte_end":448,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ structure to be serialized and deserialized using any supported data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":449,"byte_end":529,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":530,"byte_end":533,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See the Serde website [https://serde.rs/] for additional documentation and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":534,"byte_end":612,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ usage examples.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":613,"byte_end":632,"line_start":13,"line_end":13,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":633,"byte_end":636,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [https://serde.rs/]: https://serde.rs/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":637,"byte_end":679,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":680,"byte_end":683,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Design","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":684,"byte_end":697,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":698,"byte_end":701,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Where many other languages rely on runtime reflection for serializing data,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":702,"byte_end":781,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ Serde is instead built on Rust's powerful trait system. A data structure","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":782,"byte_end":858,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ that knows how to serialize and deserialize itself is one that implements","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":859,"byte_end":936,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ Serde's `Serialize` and `Deserialize` traits (or uses Serde's derive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":937,"byte_end":1009,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ attribute to automatically generate implementations at compile time). This","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1010,"byte_end":1088,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ avoids any overhead of reflection or runtime type information. In fact in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1089,"byte_end":1166,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ many situations the interaction between data structure and data format can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1167,"byte_end":1245,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ be completely optimized away by the Rust compiler, leaving Serde","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1246,"byte_end":1314,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ serialization to perform the same speed as a handwritten serializer for the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1315,"byte_end":1394,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ specific selection of data structure and data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1395,"byte_end":1452,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1453,"byte_end":1456,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Data formats","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1457,"byte_end":1476,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1477,"byte_end":1480,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The following is a partial list of data formats that have been implemented","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1481,"byte_end":1559,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ for Serde by the community.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1560,"byte_end":1591,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1592,"byte_end":1595,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ - [JSON], the ubiquitous JavaScript Object Notation used by many HTTP APIs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1596,"byte_end":1675,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ - [Bincode], a compact binary format","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1676,"byte_end":1716,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/   used for IPC within the Servo rendering engine.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1717,"byte_end":1770,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ - [CBOR], a Concise Binary Object Representation designed for small message","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1771,"byte_end":1850,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/   size without the need for version negotiation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1851,"byte_end":1903,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ - [YAML], a popular human-friendly configuration language that ain't markup","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1904,"byte_end":1983,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/   language.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":1984,"byte_end":1999,"line_start":41,"line_end":41,"column_start":1,"column_end":16}},{"value":"/ - [MessagePack], an efficient binary format that resembles a compact JSON.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2000,"byte_end":2078,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ - [TOML], a minimal configuration format used by [Cargo].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2079,"byte_end":2140,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/ - [Pickle], a format common in the Python world.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2141,"byte_end":2193,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/ - [RON], a Rusty Object Notation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2194,"byte_end":2231,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ - [BSON], the data storage and network transfer format used by MongoDB.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2232,"byte_end":2307,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ - [Avro], a binary format used within Apache Hadoop, with support for schema","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2308,"byte_end":2388,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/   definition.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2389,"byte_end":2406,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/ - [JSON5], A superset of JSON including some productions from ES5.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2407,"byte_end":2477,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/ - [Postcard], a no\\_std and embedded-systems friendly compact binary format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2478,"byte_end":2558,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ - [URL], the x-www-form-urlencoded format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2559,"byte_end":2605,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/ - [Envy], a way to deserialize environment variables into Rust structs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2606,"byte_end":2681,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/   *(deserialization only)*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2682,"byte_end":2712,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/ - [Envy Store], a way to deserialize [AWS Parameter Store] parameters into","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2713,"byte_end":2791,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/   Rust structs. *(deserialization only)*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2792,"byte_end":2836,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2837,"byte_end":2840,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [JSON]: https://github.com/serde-rs/json","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2841,"byte_end":2885,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ [Bincode]: https://github.com/TyOverby/bincode","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2886,"byte_end":2936,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/ [CBOR]: https://github.com/pyfisch/cbor","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2937,"byte_end":2980,"line_start":59,"line_end":59,"column_start":1,"column_end":44}},{"value":"/ [YAML]: https://github.com/dtolnay/serde-yaml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":2981,"byte_end":3030,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/ [MessagePack]: https://github.com/3Hren/msgpack-rust","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3031,"byte_end":3087,"line_start":61,"line_end":61,"column_start":1,"column_end":57}},{"value":"/ [TOML]: https://github.com/alexcrichton/toml-rs","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3088,"byte_end":3139,"line_start":62,"line_end":62,"column_start":1,"column_end":52}},{"value":"/ [Pickle]: https://github.com/birkenfeld/serde-pickle","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3140,"byte_end":3196,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ [RON]: https://github.com/ron-rs/ron","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3197,"byte_end":3237,"line_start":64,"line_end":64,"column_start":1,"column_end":41}},{"value":"/ [BSON]: https://github.com/zonyitoo/bson-rs","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3238,"byte_end":3285,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/ [Avro]: https://github.com/flavray/avro-rs","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3286,"byte_end":3332,"line_start":66,"line_end":66,"column_start":1,"column_end":47}},{"value":"/ [JSON5]: https://github.com/callum-oakley/json5-rs","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3333,"byte_end":3387,"line_start":67,"line_end":67,"column_start":1,"column_end":55}},{"value":"/ [Postcard]: https://github.com/jamesmunns/postcard","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3388,"byte_end":3442,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/ [URL]: https://github.com/nox/serde_urlencoded","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3443,"byte_end":3493,"line_start":69,"line_end":69,"column_start":1,"column_end":51}},{"value":"/ [Envy]: https://github.com/softprops/envy","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3494,"byte_end":3539,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [Envy Store]: https://github.com/softprops/envy-store","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3540,"byte_end":3597,"line_start":71,"line_end":71,"column_start":1,"column_end":58}},{"value":"/ [Cargo]: http://doc.crates.io/manifest.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3598,"byte_end":3645,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/ [AWS Parameter Store]: https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-paramstore.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":3646,"byte_end":3765,"line_start":73,"line_end":73,"column_start":1,"column_end":120}},{"value":"no_std","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":4055,"byte_end":4061,"line_start":80,"line_end":80,"column_start":35,"column_end":41}},{"value":"allow(unknown_lints, bare_trait_objects, deprecated)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":4323,"byte_end":4379,"line_start":86,"line_end":86,"column_start":1,"column_end":57}},{"value":"deny(missing_docs, unused_imports)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":5458,"byte_end":5496,"line_start":123,"line_end":123,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":81},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":496},{"krate":0,"index":513},{"krate":0,"index":558},{"krate":0,"index":962},{"krate":0,"index":979},{"krate":0,"index":8922},{"krate":0,"index":980},{"krate":0,"index":7544},{"krate":0,"index":7554},{"krate":0,"index":7612},{"krate":0,"index":7609},{"krate":0,"index":7603},{"krate":0,"index":7605},{"krate":0,"index":7600},{"krate":0,"index":982},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1014},{"krate":0,"index":1020},{"krate":0,"index":1082},{"krate":0,"index":1138},{"krate":0,"index":1146},{"krate":0,"index":1156},{"krate":0,"index":1174},{"krate":0,"index":1194},{"krate":0,"index":1202},{"krate":0,"index":1214},{"krate":0,"index":1219},{"krate":0,"index":1221}],"decl_id":null,"docs":" Generic data structure deserialization framework.","sig":null,"attributes":[{"value":"/ Generic data structure deserialization framework.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":20870,"byte_end":20923,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":20924,"byte_end":20927,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The two most important traits in this module are [`Deserialize`] and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":20928,"byte_end":21000,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ [`Deserializer`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21001,"byte_end":21022,"line_start":4,"line_end":4,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21023,"byte_end":21026,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/  - **A type that implements `Deserialize` is a data structure** that can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21027,"byte_end":21106,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/    deserialized from any data format supported by Serde, and conversely","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21107,"byte_end":21182,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/  - **A type that implements `Deserializer` is a data format** that can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21183,"byte_end":21257,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/    deserialize any data structure supported by Serde.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21258,"byte_end":21315,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21316,"byte_end":21319,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # The Deserialize trait","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21320,"byte_end":21347,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21348,"byte_end":21351,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Serde provides [`Deserialize`] implementations for many Rust primitive and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21352,"byte_end":21430,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ standard library types. The complete list is below. All of these can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21431,"byte_end":21506,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ deserialized using Serde out of the box.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21507,"byte_end":21551,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21552,"byte_end":21555,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Additionally, Serde provides a procedural macro called [`serde_derive`] to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21556,"byte_end":21634,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ automatically generate [`Deserialize`] implementations for structs and enums","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21635,"byte_end":21715,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ in your program. See the [derive section of the manual] for how to use this.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21716,"byte_end":21796,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21797,"byte_end":21800,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In rare cases it may be necessary to implement [`Deserialize`] manually for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21801,"byte_end":21880,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ some type in your program. See the [Implementing `Deserialize`] section of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21881,"byte_end":21959,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ the manual for more about this.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21960,"byte_end":21995,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":21996,"byte_end":21999,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Third-party crates may provide [`Deserialize`] implementations for types","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22000,"byte_end":22076,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ that they expose. For example the [`linked-hash-map`] crate provides a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22077,"byte_end":22151,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ [`LinkedHashMap<K, V>`] type that is deserializable by Serde because the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22152,"byte_end":22228,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ crate provides an implementation of [`Deserialize`] for it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22229,"byte_end":22292,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22293,"byte_end":22296,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # The Deserializer trait","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22297,"byte_end":22325,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22326,"byte_end":22329,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`Deserializer`] implementations are provided by third-party crates, for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22330,"byte_end":22406,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ example [`serde_json`], [`serde_yaml`] and [`bincode`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22407,"byte_end":22466,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22467,"byte_end":22470,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A partial list of well-maintained formats is given on the [Serde","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22471,"byte_end":22539,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ website][data formats].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22540,"byte_end":22567,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22568,"byte_end":22571,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Implementations of Deserialize provided by Serde","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22572,"byte_end":22626,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22627,"byte_end":22630,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This is a slightly different set of types than what is supported for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22631,"byte_end":22703,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ serialization. Some types can be serialized by Serde but not deserialized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22704,"byte_end":22782,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ One example is `OsStr`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22783,"byte_end":22810,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22811,"byte_end":22814,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/  - **Primitive types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22815,"byte_end":22842,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/    - bool","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22843,"byte_end":22856,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/    - i8, i16, i32, i64, i128, isize","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22857,"byte_end":22896,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/    - u8, u16, u32, u64, u128, usize","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22897,"byte_end":22936,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/    - f32, f64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22937,"byte_end":22954,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/    - char","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22955,"byte_end":22968,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/  - **Compound types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22969,"byte_end":22995,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/    - \\[T; 0\\] through \\[T; 32\\]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":22996,"byte_end":23031,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/    - tuples up to size 16","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23032,"byte_end":23061,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/  - **Common standard library types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23062,"byte_end":23103,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/    - String","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23104,"byte_end":23119,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/    - Option\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23120,"byte_end":23140,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/    - Result\\<T, E\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23141,"byte_end":23164,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/    - PhantomData\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23165,"byte_end":23190,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"/  - **Wrapper types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23191,"byte_end":23216,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/    - Box\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23217,"byte_end":23234,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/    - Box\\<\\[T\\]\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23235,"byte_end":23256,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/    - Box\\<str\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23257,"byte_end":23276,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/    - Cow\\<'a, T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23277,"byte_end":23298,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/    - Cell\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23299,"byte_end":23317,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/    - RefCell\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23318,"byte_end":23339,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/    - Mutex\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23340,"byte_end":23359,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/    - RwLock\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23360,"byte_end":23380,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/    - Rc\\<T\\>&emsp;*(if* features = [\"rc\"] *is enabled)*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23381,"byte_end":23440,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/    - Arc\\<T\\>&emsp;*(if* features = [\"rc\"] *is enabled)*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23441,"byte_end":23501,"line_start":68,"line_end":68,"column_start":1,"column_end":61}},{"value":"/  - **Collection types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23502,"byte_end":23530,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/    - BTreeMap\\<K, V\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23531,"byte_end":23556,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/    - BTreeSet\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23557,"byte_end":23579,"line_start":71,"line_end":71,"column_start":1,"column_end":23}},{"value":"/    - BinaryHeap\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23580,"byte_end":23604,"line_start":72,"line_end":72,"column_start":1,"column_end":25}},{"value":"/    - HashMap\\<K, V, H\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23605,"byte_end":23632,"line_start":73,"line_end":73,"column_start":1,"column_end":28}},{"value":"/    - HashSet\\<T, H\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23633,"byte_end":23657,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/    - LinkedList\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23658,"byte_end":23682,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/    - VecDeque\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23683,"byte_end":23705,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/    - Vec\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23706,"byte_end":23723,"line_start":77,"line_end":77,"column_start":1,"column_end":18}},{"value":"/  - **Zero-copy types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23724,"byte_end":23751,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/    - &str","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23752,"byte_end":23765,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/    - &\\[u8\\]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23766,"byte_end":23782,"line_start":80,"line_end":80,"column_start":1,"column_end":17}},{"value":"/  - **FFI types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23783,"byte_end":23804,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/    - CString","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23805,"byte_end":23821,"line_start":82,"line_end":82,"column_start":1,"column_end":17}},{"value":"/    - Box\\<CStr\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23822,"byte_end":23842,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/    - OsString","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23843,"byte_end":23860,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/  - **Miscellaneous standard library types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23861,"byte_end":23909,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/    - Duration","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23910,"byte_end":23927,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/    - SystemTime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23928,"byte_end":23947,"line_start":87,"line_end":87,"column_start":1,"column_end":20}},{"value":"/    - Path","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23948,"byte_end":23961,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/    - PathBuf","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23962,"byte_end":23978,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/    - Range\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23979,"byte_end":23998,"line_start":90,"line_end":90,"column_start":1,"column_end":20}},{"value":"/    - RangeInclusive\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":23999,"byte_end":24027,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"/    - Bound\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24028,"byte_end":24047,"line_start":92,"line_end":92,"column_start":1,"column_end":20}},{"value":"/    - num::NonZero*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24048,"byte_end":24070,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/    - `!` *(unstable)*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24071,"byte_end":24096,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/  - **Net types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24097,"byte_end":24118,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/    - IpAddr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24119,"byte_end":24134,"line_start":96,"line_end":96,"column_start":1,"column_end":16}},{"value":"/    - Ipv4Addr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24135,"byte_end":24152,"line_start":97,"line_end":97,"column_start":1,"column_end":18}},{"value":"/    - Ipv6Addr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24153,"byte_end":24170,"line_start":98,"line_end":98,"column_start":1,"column_end":18}},{"value":"/    - SocketAddr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24171,"byte_end":24190,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/    - SocketAddrV4","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24191,"byte_end":24212,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/    - SocketAddrV6","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24213,"byte_end":24234,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24235,"byte_end":24238,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [Implementing `Deserialize`]: https://serde.rs/impl-deserialize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24239,"byte_end":24311,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/ [`Deserialize`]: ../trait.Deserialize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24312,"byte_end":24358,"line_start":104,"line_end":104,"column_start":1,"column_end":47}},{"value":"/ [`Deserializer`]: ../trait.Deserializer.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24359,"byte_end":24407,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/ [`LinkedHashMap<K, V>`]: https://docs.rs/linked-hash-map/*/linked_hash_map/struct.LinkedHashMap.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24408,"byte_end":24512,"line_start":106,"line_end":106,"column_start":1,"column_end":105}},{"value":"/ [`bincode`]: https://github.com/TyOverby/bincode","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24513,"byte_end":24565,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ [`linked-hash-map`]: https://crates.io/crates/linked-hash-map","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24566,"byte_end":24631,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ [`serde_derive`]: https://crates.io/crates/serde_derive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24632,"byte_end":24691,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/ [`serde_json`]: https://github.com/serde-rs/json","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24692,"byte_end":24744,"line_start":110,"line_end":110,"column_start":1,"column_end":53}},{"value":"/ [`serde_yaml`]: https://github.com/dtolnay/serde-yaml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24745,"byte_end":24802,"line_start":111,"line_end":111,"column_start":1,"column_end":58}},{"value":"/ [derive section of the manual]: https://serde.rs/derive.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24803,"byte_end":24867,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"/ [data formats]: https://serde.rs/#data-formats","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":24868,"byte_end":24918,"line_start":113,"line_end":113,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::de::value","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":2785},{"krate":0,"index":2793},{"krate":0,"index":2791},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":2795},{"krate":0,"index":2798},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":110},{"krate":0,"index":2875},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2864},{"krate":0,"index":2869},{"krate":0,"index":2958},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2967},{"krate":0,"index":2947},{"krate":0,"index":2952},{"krate":0,"index":3041},{"krate":0,"index":3045},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3030},{"krate":0,"index":3035},{"krate":0,"index":3124},{"krate":0,"index":3128},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3113},{"krate":0,"index":3118},{"krate":0,"index":3207},{"krate":0,"index":3211},{"krate":0,"index":3214},{"krate":0,"index":3216},{"krate":0,"index":3196},{"krate":0,"index":3201},{"krate":0,"index":3290},{"krate":0,"index":3294},{"krate":0,"index":3297},{"krate":0,"index":3299},{"krate":0,"index":3279},{"krate":0,"index":3284},{"krate":0,"index":3373},{"krate":0,"index":3377},{"krate":0,"index":3380},{"krate":0,"index":3382},{"krate":0,"index":3362},{"krate":0,"index":3367},{"krate":0,"index":3456},{"krate":0,"index":3460},{"krate":0,"index":3463},{"krate":0,"index":3465},{"krate":0,"index":3445},{"krate":0,"index":3450},{"krate":0,"index":3539},{"krate":0,"index":3543},{"krate":0,"index":3546},{"krate":0,"index":3548},{"krate":0,"index":3528},{"krate":0,"index":3533},{"krate":0,"index":3622},{"krate":0,"index":3626},{"krate":0,"index":3629},{"krate":0,"index":3631},{"krate":0,"index":3611},{"krate":0,"index":3616},{"krate":0,"index":3705},{"krate":0,"index":3709},{"krate":0,"index":3712},{"krate":0,"index":3714},{"krate":0,"index":3694},{"krate":0,"index":3699},{"krate":0,"index":3788},{"krate":0,"index":3792},{"krate":0,"index":3795},{"krate":0,"index":3797},{"krate":0,"index":3777},{"krate":0,"index":3782},{"krate":0,"index":3871},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3880},{"krate":0,"index":3860},{"krate":0,"index":3865},{"krate":0,"index":3954},{"krate":0,"index":3958},{"krate":0,"index":3961},{"krate":0,"index":3963},{"krate":0,"index":3943},{"krate":0,"index":3948},{"krate":0,"index":4037},{"krate":0,"index":4041},{"krate":0,"index":4044},{"krate":0,"index":4046},{"krate":0,"index":4026},{"krate":0,"index":4031},{"krate":0,"index":4109},{"krate":0,"index":4113},{"krate":0,"index":4116},{"krate":0,"index":4118},{"krate":0,"index":119},{"krate":0,"index":124},{"krate":0,"index":132},{"krate":0,"index":4179},{"krate":0,"index":4184},{"krate":0,"index":4188},{"krate":0,"index":4191},{"krate":0,"index":139},{"krate":0,"index":145},{"krate":0,"index":154},{"krate":0,"index":4253},{"krate":0,"index":4258},{"krate":0,"index":4262},{"krate":0,"index":4265},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":174},{"krate":0,"index":4327},{"krate":0,"index":4331},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":189},{"krate":0,"index":197},{"krate":0,"index":4392},{"krate":0,"index":4397},{"krate":0,"index":205},{"krate":0,"index":209},{"krate":0,"index":215},{"krate":0,"index":224},{"krate":0,"index":4459},{"krate":0,"index":4464},{"krate":0,"index":4468},{"krate":0,"index":4471},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":4535},{"krate":0,"index":4545},{"krate":0,"index":4541},{"krate":0,"index":242},{"krate":0,"index":246},{"krate":0,"index":250},{"krate":0,"index":258},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":4609},{"krate":0,"index":4615},{"krate":0,"index":4612},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":293},{"krate":0,"index":302},{"krate":0,"index":307},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":328},{"krate":0,"index":341},{"krate":0,"index":349},{"krate":0,"index":354},{"krate":0,"index":359},{"krate":0,"index":367},{"krate":0,"index":379},{"krate":0,"index":387},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":4790},{"krate":0,"index":4796},{"krate":0,"index":4793},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":419},{"krate":0,"index":426}],"decl_id":null,"docs":" Building blocks for deserializing basic values using the `IntoDeserializer`\n trait.","sig":null,"attributes":[{"value":"/ Building blocks for deserializing basic values using the `IntoDeserializer`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100613,"byte_end":100692,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100693,"byte_end":100703,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100704,"byte_end":100707,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100708,"byte_end":100726,"line_start":4,"line_end":4,"column_start":1,"column_end":19}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100727,"byte_end":100753,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100754,"byte_end":100781,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/ use serde::de::{value, IntoDeserializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100782,"byte_end":100827,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100828,"byte_end":100831,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100832,"byte_end":100858,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/ enum Setting {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100859,"byte_end":100877,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"/     On,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100878,"byte_end":100889,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/     Off,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100890,"byte_end":100902,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100903,"byte_end":100908,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100909,"byte_end":100912,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ impl FromStr for Setting {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100913,"byte_end":100943,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/     type Err = value::Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100944,"byte_end":100976,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100977,"byte_end":100980,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/     fn from_str(s: &str) -> Result<Self, Self::Err> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":100981,"byte_end":101038,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/         Self::deserialize(s.into_deserializer())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":101039,"byte_end":101091,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":101092,"byte_end":101101,"line_start":20,"line_end":20,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":101102,"byte_end":101107,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":101108,"byte_end":101115,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2785},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":101987,"byte_end":101992,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"Error","qualname":"::de::value::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2786}],"decl_id":null,"docs":" A minimal representation of all possible errors that can occur using the\n `IntoDeserializer` trait.\n","sig":null,"attributes":[{"value":"/ A minimal representation of all possible errors that can occur using the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":101834,"byte_end":101910,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ `IntoDeserializer` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":101911,"byte_end":101940,"line_start":50,"line_end":50,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2795},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":103673,"byte_end":103689,"line_start":130,"line_end":130,"column_start":12,"column_end":28},"name":"UnitDeserializer","qualname":"::de::value::UnitDeserializer","value":"UnitDeserializer {  }","parent":null,"children":[{"krate":0,"index":2797}],"decl_id":null,"docs":" A deserializer holding a `()`.\n","sig":null,"attributes":[{"value":"/ A deserializer holding a `()`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":103610,"byte_end":103644,"line_start":128,"line_end":128,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2875},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":106892,"byte_end":106908,"line_start":255,"line_end":255,"column_start":44,"column_end":60},"name":"BoolDeserializer","qualname":"::de::value::BoolDeserializer","value":"BoolDeserializer {  }","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2878}],"decl_id":null,"docs":"A deserializer holding\na `bool`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2958},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":106963,"byte_end":106977,"line_start":256,"line_end":256,"column_start":41,"column_end":55},"name":"I8Deserializer","qualname":"::de::value::I8Deserializer","value":"I8Deserializer {  }","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961}],"decl_id":null,"docs":"A deserializer holding\nan `i8`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3041},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107032,"byte_end":107047,"line_start":257,"line_end":257,"column_start":43,"column_end":58},"name":"I16Deserializer","qualname":"::de::value::I16Deserializer","value":"I16Deserializer {  }","parent":null,"children":[{"krate":0,"index":3043},{"krate":0,"index":3044}],"decl_id":null,"docs":"A deserializer holding\nan `i16`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3124},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107103,"byte_end":107118,"line_start":258,"line_end":258,"column_start":43,"column_end":58},"name":"I32Deserializer","qualname":"::de::value::I32Deserializer","value":"I32Deserializer {  }","parent":null,"children":[{"krate":0,"index":3126},{"krate":0,"index":3127}],"decl_id":null,"docs":"A deserializer holding\nan `i32`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3207},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107174,"byte_end":107189,"line_start":259,"line_end":259,"column_start":43,"column_end":58},"name":"I64Deserializer","qualname":"::de::value::I64Deserializer","value":"I64Deserializer {  }","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":3210}],"decl_id":null,"docs":"A deserializer holding\nan `i64`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3290},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107249,"byte_end":107266,"line_start":260,"line_end":260,"column_start":47,"column_end":64},"name":"IsizeDeserializer","qualname":"::de::value::IsizeDeserializer","value":"IsizeDeserializer {  }","parent":null,"children":[{"krate":0,"index":3292},{"krate":0,"index":3293}],"decl_id":null,"docs":"A deserializer holding\nan `isize`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3373},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107326,"byte_end":107340,"line_start":261,"line_end":261,"column_start":40,"column_end":54},"name":"U8Deserializer","qualname":"::de::value::U8Deserializer","value":"U8Deserializer {  }","parent":null,"children":[{"krate":0,"index":3375},{"krate":0,"index":3376}],"decl_id":null,"docs":"A deserializer holding\na `u8`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3456},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107394,"byte_end":107409,"line_start":262,"line_end":262,"column_start":42,"column_end":57},"name":"U16Deserializer","qualname":"::de::value::U16Deserializer","value":"U16Deserializer {  }","parent":null,"children":[{"krate":0,"index":3458},{"krate":0,"index":3459}],"decl_id":null,"docs":"A deserializer holding\na `u16`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3539},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107464,"byte_end":107479,"line_start":263,"line_end":263,"column_start":42,"column_end":57},"name":"U64Deserializer","qualname":"::de::value::U64Deserializer","value":"U64Deserializer {  }","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542}],"decl_id":null,"docs":"A deserializer holding\na `u64`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3622},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107538,"byte_end":107555,"line_start":264,"line_end":264,"column_start":46,"column_end":63},"name":"UsizeDeserializer","qualname":"::de::value::UsizeDeserializer","value":"UsizeDeserializer {  }","parent":null,"children":[{"krate":0,"index":3624},{"krate":0,"index":3625}],"decl_id":null,"docs":"A deserializer holding\na `usize`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3705},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107618,"byte_end":107633,"line_start":265,"line_end":265,"column_start":43,"column_end":58},"name":"F32Deserializer","qualname":"::de::value::F32Deserializer","value":"F32Deserializer {  }","parent":null,"children":[{"krate":0,"index":3707},{"krate":0,"index":3708}],"decl_id":null,"docs":"A deserializer holding\nan `f32`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3788},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107689,"byte_end":107704,"line_start":266,"line_end":266,"column_start":43,"column_end":58},"name":"F64Deserializer","qualname":"::de::value::F64Deserializer","value":"F64Deserializer {  }","parent":null,"children":[{"krate":0,"index":3790},{"krate":0,"index":3791}],"decl_id":null,"docs":"A deserializer holding\nan `f64`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3871},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107761,"byte_end":107777,"line_start":267,"line_end":267,"column_start":44,"column_end":60},"name":"CharDeserializer","qualname":"::de::value::CharDeserializer","value":"CharDeserializer {  }","parent":null,"children":[{"krate":0,"index":3873},{"krate":0,"index":3874}],"decl_id":null,"docs":"A deserializer holding\na `char`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3954},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107864,"byte_end":107880,"line_start":270,"line_end":270,"column_start":49,"column_end":65},"name":"I128Deserializer","qualname":"::de::value::I128Deserializer","value":"I128Deserializer {  }","parent":null,"children":[{"krate":0,"index":3956},{"krate":0,"index":3957}],"decl_id":null,"docs":"A deserializer holding\nan `i128`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4037},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107942,"byte_end":107958,"line_start":271,"line_end":271,"column_start":48,"column_end":64},"name":"U128Deserializer","qualname":"::de::value::U128Deserializer","value":"U128Deserializer {  }","parent":null,"children":[{"krate":0,"index":4039},{"krate":0,"index":4040}],"decl_id":null,"docs":"A deserializer holding\na `u128`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4109},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":108040,"byte_end":108055,"line_start":276,"line_end":276,"column_start":12,"column_end":27},"name":"U32Deserializer","qualname":"::de::value::U32Deserializer","value":"U32Deserializer {  }","parent":null,"children":[{"krate":0,"index":4111},{"krate":0,"index":4112}],"decl_id":null,"docs":" A deserializer holding a `u32`.\n","sig":null,"attributes":[{"value":"/ A deserializer holding a `u32`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":107976,"byte_end":108011,"line_start":274,"line_end":274,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4179},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":109731,"byte_end":109746,"line_start":350,"line_end":350,"column_start":12,"column_end":27},"name":"StrDeserializer","qualname":"::de::value::StrDeserializer","value":"StrDeserializer {  }","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":4183}],"decl_id":null,"docs":" A deserializer holding a `&str`.\n","sig":null,"attributes":[{"value":"/ A deserializer holding a `&str`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":109666,"byte_end":109702,"line_start":348,"line_end":348,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4253},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111516,"byte_end":111539,"line_start":425,"line_end":425,"column_start":12,"column_end":35},"name":"BorrowedStrDeserializer","qualname":"::de::value::BorrowedStrDeserializer","value":"BorrowedStrDeserializer {  }","parent":null,"children":[{"krate":0,"index":4256},{"krate":0,"index":4257}],"decl_id":null,"docs":" A deserializer holding a `&str` with a lifetime tied to another\n deserializer.\n","sig":null,"attributes":[{"value":"/ A deserializer holding a `&str` with a lifetime tied to another","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111402,"byte_end":111469,"line_start":422,"line_end":422,"column_start":1,"column_end":68}},{"value":"/ deserializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111470,"byte_end":111487,"line_start":423,"line_end":423,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111775,"byte_end":111778,"line_start":434,"line_end":434,"column_start":12,"column_end":15},"name":"new","qualname":"<BorrowedStrDeserializer>::new","value":"pub fn new(&'de str) -> BorrowedStrDeserializer","parent":null,"children":[],"decl_id":null,"docs":" Create a new borrowed deserializer from the given string.\n","sig":null,"attributes":[{"value":"/ Create a new borrowed deserializer from the given string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111702,"byte_end":111763,"line_start":433,"line_end":433,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4327},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":113342,"byte_end":113360,"line_start":496,"line_end":496,"column_start":12,"column_end":30},"name":"StringDeserializer","qualname":"::de::value::StringDeserializer","value":"StringDeserializer {  }","parent":null,"children":[{"krate":0,"index":4329},{"krate":0,"index":4330}],"decl_id":null,"docs":" A deserializer holding a `String`.\n","sig":null,"attributes":[{"value":"/ A deserializer holding a `String`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":113227,"byte_end":113265,"line_start":493,"line_end":493,"column_start":1,"column_end":39}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":113266,"byte_end":113313,"line_start":494,"line_end":494,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4392},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":115464,"byte_end":115482,"line_start":582,"line_end":582,"column_start":12,"column_end":30},"name":"CowStrDeserializer","qualname":"::de::value::CowStrDeserializer","value":"CowStrDeserializer {  }","parent":null,"children":[{"krate":0,"index":4395},{"krate":0,"index":4396}],"decl_id":null,"docs":" A deserializer holding a `Cow<str>`.\n","sig":null,"attributes":[{"value":"/ A deserializer holding a `Cow<str>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":115347,"byte_end":115387,"line_start":579,"line_end":579,"column_start":1,"column_end":41}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":115388,"byte_end":115435,"line_start":580,"line_end":580,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4459},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":117756,"byte_end":117781,"line_start":671,"line_end":671,"column_start":12,"column_end":37},"name":"BorrowedBytesDeserializer","qualname":"::de::value::BorrowedBytesDeserializer","value":"BorrowedBytesDeserializer {  }","parent":null,"children":[{"krate":0,"index":4462},{"krate":0,"index":4463}],"decl_id":null,"docs":" A deserializer holding a `&[u8]` with a lifetime tied to another\n deserializer.\n","sig":null,"attributes":[{"value":"/ A deserializer holding a `&[u8]` with a lifetime tied to another","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":117641,"byte_end":117709,"line_start":668,"line_end":668,"column_start":1,"column_end":69}},{"value":"/ deserializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":117710,"byte_end":117727,"line_start":669,"line_end":669,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":118026,"byte_end":118029,"line_start":680,"line_end":680,"column_start":12,"column_end":15},"name":"new","qualname":"<BorrowedBytesDeserializer>::new","value":"pub fn new(&'de [u8]) -> BorrowedBytesDeserializer","parent":null,"children":[],"decl_id":null,"docs":" Create a new borrowed deserializer from the given byte slice.\n","sig":null,"attributes":[{"value":"/ Create a new borrowed deserializer from the given byte slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":117949,"byte_end":118014,"line_start":679,"line_end":679,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":4535},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":118918,"byte_end":118933,"line_start":712,"line_end":712,"column_start":12,"column_end":27},"name":"SeqDeserializer","qualname":"::de::value::SeqDeserializer","value":"SeqDeserializer {  }","parent":null,"children":[{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540}],"decl_id":null,"docs":" A deserializer that iterates over a sequence.\n","sig":null,"attributes":[{"value":"/ A deserializer that iterates over a sequence.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":118833,"byte_end":118882,"line_start":710,"line_end":710,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119134,"byte_end":119137,"line_start":723,"line_end":723,"column_start":12,"column_end":15},"name":"new","qualname":"<SeqDeserializer<I, E>>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `SeqDeserializer<I, E>`.\n","sig":null,"attributes":[{"value":"/ Construct a new `SeqDeserializer<I, E>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119078,"byte_end":119122,"line_start":722,"line_end":722,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119479,"byte_end":119482,"line_start":739,"line_end":739,"column_start":12,"column_end":15},"name":"end","qualname":"<SeqDeserializer<I, E>>::end","value":"pub fn end(Self) -> Result<(), E>","parent":null,"children":[],"decl_id":null,"docs":" Check for remaining elements after passing a `SeqDeserializer` to\n `Visitor::visit_seq`.\n","sig":null,"attributes":[{"value":"/ Check for remaining elements after passing a `SeqDeserializer` to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119368,"byte_end":119437,"line_start":737,"line_end":737,"column_start":5,"column_end":74}},{"value":"/ `Visitor::visit_seq`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119442,"byte_end":119467,"line_start":738,"line_end":738,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":4609},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":122850,"byte_end":122871,"line_start":862,"line_end":862,"column_start":12,"column_end":33},"name":"SeqAccessDeserializer","qualname":"::de::value::SeqAccessDeserializer","value":"SeqAccessDeserializer {  }","parent":null,"children":[{"krate":0,"index":4611}],"decl_id":null,"docs":" A deserializer holding a `SeqAccess`.\n","sig":null,"attributes":[{"value":"/ A deserializer holding a `SeqAccess`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":122773,"byte_end":122814,"line_start":860,"line_end":860,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":122990,"byte_end":122993,"line_start":868,"line_end":868,"column_start":12,"column_end":15},"name":"new","qualname":"<SeqAccessDeserializer<A>>::new","value":"pub fn new(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `SeqAccessDeserializer<A>`.\n","sig":null,"attributes":[{"value":"/ Construct a new `SeqAccessDeserializer<A>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":122931,"byte_end":122978,"line_start":867,"line_end":867,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":293},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":123746,"byte_end":123761,"line_start":896,"line_end":896,"column_start":12,"column_end":27},"name":"MapDeserializer","qualname":"::de::value::MapDeserializer","value":"MapDeserializer {  }","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":" A deserializer that iterates over a map.\n","sig":null,"attributes":[{"value":"/ A deserializer that iterates over a map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":123690,"byte_end":123734,"line_start":895,"line_end":895,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":124127,"byte_end":124130,"line_start":914,"line_end":914,"column_start":12,"column_end":15},"name":"new","qualname":"<MapDeserializer>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `MapDeserializer<I, E>`.\n","sig":null,"attributes":[{"value":"/ Construct a new `MapDeserializer<I, E>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":124071,"byte_end":124115,"line_start":913,"line_end":913,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":124569,"byte_end":124572,"line_start":933,"line_end":933,"column_start":12,"column_end":15},"name":"end","qualname":"<MapDeserializer>::end","value":"pub fn end(Self) -> Result<(), E>","parent":null,"children":[],"decl_id":null,"docs":" Check for remaining elements after passing a `MapDeserializer` to\n `Visitor::visit_map`.\n","sig":null,"attributes":[{"value":"/ Check for remaining elements after passing a `MapDeserializer` to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":124458,"byte_end":124527,"line_start":931,"line_end":931,"column_start":5,"column_end":74}},{"value":"/ `Visitor::visit_map`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":124532,"byte_end":124557,"line_start":932,"line_end":932,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":4790},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":134120,"byte_end":134141,"line_start":1266,"line_end":1266,"column_start":12,"column_end":33},"name":"MapAccessDeserializer","qualname":"::de::value::MapAccessDeserializer","value":"MapAccessDeserializer {  }","parent":null,"children":[{"krate":0,"index":4792}],"decl_id":null,"docs":" A deserializer holding a `MapAccess`.\n","sig":null,"attributes":[{"value":"/ A deserializer holding a `MapAccess`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":134043,"byte_end":134084,"line_start":1264,"line_end":1264,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":134260,"byte_end":134263,"line_start":1272,"line_end":1272,"column_start":12,"column_end":15},"name":"new","qualname":"<MapAccessDeserializer<A>>::new","value":"pub fn new(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `MapAccessDeserializer<A>`.\n","sig":null,"attributes":[{"value":"/ Construct a new `MapAccessDeserializer<A>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":134201,"byte_end":134248,"line_start":1271,"line_end":1271,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4857},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":135904,"byte_end":135912,"line_start":1335,"line_end":1335,"column_start":16,"column_end":24},"name":"UnitOnly","qualname":"::de::value::private::UnitOnly","value":"UnitOnly {  }","parent":null,"children":[{"krate":0,"index":4859}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4866},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":137333,"byte_end":137342,"line_start":1394,"line_end":1394,"column_start":16,"column_end":25},"name":"MapAsEnum","qualname":"::de::value::private::MapAsEnum","value":"MapAsEnum {  }","parent":null,"children":[{"krate":0,"index":4868}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":482},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":139532,"byte_end":139536,"line_start":1481,"line_end":1481,"column_start":15,"column_end":19},"name":"Pair","qualname":"::de::value::private::Pair","value":"Pair","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"decl_id":null,"docs":" Avoid having to restate the generic types on `MapDeserializer`. The\n `Iterator::Item` contains enough information to figure out K and V.\n","sig":null,"attributes":[{"value":"/ Avoid having to restate the generic types on `MapDeserializer`. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":139370,"byte_end":139441,"line_start":1479,"line_end":1479,"column_start":5,"column_end":76}},{"value":"/ `Iterator::Item` contains enough information to figure out K and V.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":139446,"byte_end":139517,"line_start":1480,"line_end":1480,"column_start":5,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":483},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":139552,"byte_end":139557,"line_start":1482,"line_end":1482,"column_start":14,"column_end":19},"name":"First","qualname":"::de::value::private::Pair::First","value":"type First;","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":484},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":139572,"byte_end":139578,"line_start":1483,"line_end":1483,"column_start":14,"column_end":20},"name":"Second","qualname":"::de::value::private::Pair::Second","value":"type Second;","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":139591,"byte_end":139596,"line_start":1484,"line_end":1484,"column_start":12,"column_end":17},"name":"split","qualname":"::de::value::private::Pair::split","value":"pub fn split(Self) -> (Self::First, Self::Second)","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5001},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149899,"byte_end":149909,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"IgnoredAny","qualname":"::de::ignored_any::IgnoredAny","value":"","parent":null,"children":[],"decl_id":null,"docs":" An efficient way of discarding data from a deserializer.","sig":null,"attributes":[{"value":"/ An efficient way of discarding data from a deserializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":146715,"byte_end":146775,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":146776,"byte_end":146779,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Think of this like `serde_json::Value` in that it can be deserialized from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":146780,"byte_end":146858,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ any type, except that it does not store any information about the data that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":146859,"byte_end":146938,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ gets deserialized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":146939,"byte_end":146961,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":146962,"byte_end":146965,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":146966,"byte_end":146984,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/ use std::fmt;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":146985,"byte_end":147002,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/ use std::marker::PhantomData;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147003,"byte_end":147036,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147037,"byte_end":147040,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ use serde::de::{","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147041,"byte_end":147061,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     self, Deserialize, DeserializeSeed, Deserializer, IgnoredAny, SeqAccess, Visitor,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147062,"byte_end":147151,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ };","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147152,"byte_end":147158,"line_start":19,"line_end":19,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147159,"byte_end":147162,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ /// A seed that can be used to deserialize only the `n`th element of a sequence","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147163,"byte_end":147246,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ /// while efficiently discarding elements of any type before or after index `n`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147247,"byte_end":147331,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ ///","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147332,"byte_end":147339,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ /// For example to deserialize only the element at index 3:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147340,"byte_end":147403,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/ ///","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147404,"byte_end":147411,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ /// ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147412,"byte_end":147423,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ /// NthElement::new(3).deserialize(deserializer)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147424,"byte_end":147476,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ /// ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147477,"byte_end":147488,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ pub struct NthElement<T> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147489,"byte_end":147519,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     n: usize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147520,"byte_end":147537,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/     marker: PhantomData<T>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147538,"byte_end":147569,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147570,"byte_end":147575,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147576,"byte_end":147579,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ impl<T> NthElement<T> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147580,"byte_end":147607,"line_start":34,"line_end":34,"column_start":1,"column_end":28}},{"value":"/     pub fn new(n: usize) -> Self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147608,"byte_end":147646,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/         NthElement {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147647,"byte_end":147671,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/             n: n,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147672,"byte_end":147693,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/             marker: PhantomData,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147694,"byte_end":147730,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147731,"byte_end":147744,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147745,"byte_end":147754,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147755,"byte_end":147760,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147761,"byte_end":147764,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ impl<'de, T> Visitor<'de> for NthElement<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147765,"byte_end":147812,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147813,"byte_end":147822,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/     T: Deserialize<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147823,"byte_end":147851,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147852,"byte_end":147857,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/     type Value = T;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147858,"byte_end":147881,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147882,"byte_end":147885,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147886,"byte_end":147962,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/         write!(","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147963,"byte_end":147982,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/             formatter,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":147983,"byte_end":148009,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/             \"a sequence in which we care about element {}\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148010,"byte_end":148073,"line_start":52,"line_end":52,"column_start":1,"column_end":64}},{"value":"/             self.n","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148074,"byte_end":148096,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/         )","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148097,"byte_end":148110,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148111,"byte_end":148120,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148121,"byte_end":148124,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148125,"byte_end":148199,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148200,"byte_end":148213,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/         A: SeqAccess<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148214,"byte_end":148244,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148245,"byte_end":148254,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/         // Skip over the first `n` elements.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148255,"byte_end":148303,"line_start":61,"line_end":61,"column_start":1,"column_end":49}},{"value":"/         for i in 0..self.n {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148304,"byte_end":148336,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/             // It is an error if the sequence ends before we get to element `n`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148337,"byte_end":148421,"line_start":63,"line_end":63,"column_start":1,"column_end":85}},{"value":"/             if seq.next_element::<IgnoredAny>()?.is_none() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148422,"byte_end":148486,"line_start":64,"line_end":64,"column_start":1,"column_end":65}},{"value":"/                 return Err(de::Error::invalid_length(i, &self));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148487,"byte_end":148555,"line_start":65,"line_end":65,"column_start":1,"column_end":69}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148556,"byte_end":148573,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148574,"byte_end":148587,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148588,"byte_end":148591,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/         // Deserialize the one we care about.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148592,"byte_end":148641,"line_start":69,"line_end":69,"column_start":1,"column_end":50}},{"value":"/         let nth = match seq.next_element()? {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148642,"byte_end":148691,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/             Some(nth) => nth,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148692,"byte_end":148725,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/             None => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148726,"byte_end":148751,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/                 return Err(de::Error::invalid_length(self.n, &self));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148752,"byte_end":148825,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148826,"byte_end":148843,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/         };","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148844,"byte_end":148858,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148859,"byte_end":148862,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         // Skip over any remaining elements in the sequence after `n`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148863,"byte_end":148937,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/         while let Some(IgnoredAny) = seq.next_element()? {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":148938,"byte_end":149000,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/             // ignore","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149001,"byte_end":149026,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149027,"byte_end":149040,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149041,"byte_end":149044,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/         Ok(nth)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149045,"byte_end":149064,"line_start":82,"line_end":82,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149065,"byte_end":149074,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149075,"byte_end":149080,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149081,"byte_end":149084,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ impl<'de, T> DeserializeSeed<'de> for NthElement<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149085,"byte_end":149140,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149141,"byte_end":149150,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     T: Deserialize<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149151,"byte_end":149179,"line_start":88,"line_end":88,"column_start":1,"column_end":29}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149180,"byte_end":149185,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/     type Value = T;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149186,"byte_end":149209,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149210,"byte_end":149213,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149214,"byte_end":149295,"line_start":92,"line_end":92,"column_start":1,"column_end":82}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149296,"byte_end":149309,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/         D: Deserializer<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149310,"byte_end":149343,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149344,"byte_end":149353,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/         deserializer.deserialize_seq(self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149354,"byte_end":149400,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149401,"byte_end":149410,"line_start":97,"line_end":97,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149411,"byte_end":149416,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149417,"byte_end":149420,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # fn example<'de, D>(deserializer: D) -> Result<(), D::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149421,"byte_end":149486,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ # where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149487,"byte_end":149498,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ #     D: Deserializer<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149499,"byte_end":149530,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149531,"byte_end":149538,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ // Deserialize only the sequence element at index 3 from this deserializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149539,"byte_end":149618,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/ // The element at index 3 is required to be a string. Elements before and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149619,"byte_end":149696,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/ // after index 3 are allowed to be of any type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149697,"byte_end":149748,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/ let s: String = NthElement::new(3).deserialize(deserializer)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149749,"byte_end":149815,"line_start":107,"line_end":107,"column_start":1,"column_end":67}},{"value":"/ #     Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149816,"byte_end":149832,"line_start":108,"line_end":108,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149833,"byte_end":149840,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149841,"byte_end":149848,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7556},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33636,"byte_end":33640,"line_start":334,"line_end":334,"column_start":5,"column_end":9},"name":"Bool","qualname":"::de::Unexpected::Bool","value":"Unexpected::Bool(bool)","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a boolean value that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a boolean value that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33569,"byte_end":33631,"line_start":333,"line_end":333,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7559},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33760,"byte_end":33768,"line_start":338,"line_end":338,"column_start":5,"column_end":13},"name":"Unsigned","qualname":"::de::Unexpected::Unsigned","value":"Unexpected::Unsigned(u64)","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that\n was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33653,"byte_end":33729,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/ was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33734,"byte_end":33755,"line_start":337,"line_end":337,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7562},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33884,"byte_end":33890,"line_start":342,"line_end":342,"column_start":5,"column_end":11},"name":"Signed","qualname":"::de::Unexpected::Signed","value":"Unexpected::Signed(i64)","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a signed integer `i8`, `i16`, `i32` or `i64` that\n was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a signed integer `i8`, `i16`, `i32` or `i64` that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33780,"byte_end":33853,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33858,"byte_end":33879,"line_start":341,"line_end":341,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7565},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33993,"byte_end":33998,"line_start":346,"line_end":346,"column_start":5,"column_end":10},"name":"Float","qualname":"::de::Unexpected::Float","value":"Unexpected::Float(f64)","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a floating point `f32` or `f64` that was not\n expected.\n","sig":null,"attributes":[{"value":"/ The input contained a floating point `f32` or `f64` that was not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33902,"byte_end":33970,"line_start":344,"line_end":344,"column_start":5,"column_end":73}},{"value":"/ expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33975,"byte_end":33988,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7568},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34070,"byte_end":34074,"line_start":349,"line_end":349,"column_start":5,"column_end":9},"name":"Char","qualname":"::de::Unexpected::Char","value":"Unexpected::Char(char)","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a `char` that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a `char` that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34010,"byte_end":34065,"line_start":348,"line_end":348,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7571},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34159,"byte_end":34162,"line_start":352,"line_end":352,"column_start":5,"column_end":8},"name":"Str","qualname":"::de::Unexpected::Str","value":"Unexpected::Str(&'a str)","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a `&str` or `String` that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a `&str` or `String` that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34087,"byte_end":34154,"line_start":351,"line_end":351,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7574},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34252,"byte_end":34257,"line_start":355,"line_end":355,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::de::Unexpected::Bytes","value":"Unexpected::Bytes(&'a [u8])","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a `&[u8]` or `Vec<u8>` that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a `&[u8]` or `Vec<u8>` that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34178,"byte_end":34247,"line_start":354,"line_end":354,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7577},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34337,"byte_end":34341,"line_start":358,"line_end":358,"column_start":5,"column_end":9},"name":"Unit","qualname":"::de::Unexpected::Unit","value":"Unexpected::Unit","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a unit `()` that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a unit `()` that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34274,"byte_end":34332,"line_start":357,"line_end":357,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7579},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34414,"byte_end":34420,"line_start":361,"line_end":361,"column_start":5,"column_end":11},"name":"Option","qualname":"::de::Unexpected::Option","value":"Unexpected::Option","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained an `Option<T>` that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained an `Option<T>` that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34348,"byte_end":34409,"line_start":360,"line_end":360,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7581},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34495,"byte_end":34508,"line_start":364,"line_end":364,"column_start":5,"column_end":18},"name":"NewtypeStruct","qualname":"::de::Unexpected::NewtypeStruct","value":"Unexpected::NewtypeStruct","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a newtype struct that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a newtype struct that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34427,"byte_end":34490,"line_start":363,"line_end":363,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7583},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34577,"byte_end":34580,"line_start":367,"line_end":367,"column_start":5,"column_end":8},"name":"Seq","qualname":"::de::Unexpected::Seq","value":"Unexpected::Seq","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a sequence that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a sequence that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34515,"byte_end":34572,"line_start":366,"line_end":366,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7585},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34644,"byte_end":34647,"line_start":370,"line_end":370,"column_start":5,"column_end":8},"name":"Map","qualname":"::de::Unexpected::Map","value":"Unexpected::Map","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a map that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a map that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34587,"byte_end":34639,"line_start":369,"line_end":369,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7587},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34713,"byte_end":34717,"line_start":373,"line_end":373,"column_start":5,"column_end":9},"name":"Enum","qualname":"::de::Unexpected::Enum","value":"Unexpected::Enum","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained an enum that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained an enum that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34654,"byte_end":34708,"line_start":372,"line_end":372,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7589},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34790,"byte_end":34801,"line_start":376,"line_end":376,"column_start":5,"column_end":16},"name":"UnitVariant","qualname":"::de::Unexpected::UnitVariant","value":"Unexpected::UnitVariant","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a unit variant that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a unit variant that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34724,"byte_end":34785,"line_start":375,"line_end":375,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7591},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34877,"byte_end":34891,"line_start":379,"line_end":379,"column_start":5,"column_end":19},"name":"NewtypeVariant","qualname":"::de::Unexpected::NewtypeVariant","value":"Unexpected::NewtypeVariant","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a newtype variant that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a newtype variant that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34808,"byte_end":34872,"line_start":378,"line_end":378,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7593},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34965,"byte_end":34977,"line_start":382,"line_end":382,"column_start":5,"column_end":17},"name":"TupleVariant","qualname":"::de::Unexpected::TupleVariant","value":"Unexpected::TupleVariant","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a tuple variant that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a tuple variant that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34898,"byte_end":34960,"line_start":381,"line_end":381,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7595},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":35052,"byte_end":35065,"line_start":385,"line_end":385,"column_start":5,"column_end":18},"name":"StructVariant","qualname":"::de::Unexpected::StructVariant","value":"Unexpected::StructVariant","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" The input contained a struct variant that was not expected.\n","sig":null,"attributes":[{"value":"/ The input contained a struct variant that was not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":34984,"byte_end":35047,"line_start":384,"line_end":384,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7597},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":35327,"byte_end":35332,"line_start":392,"line_end":392,"column_start":5,"column_end":10},"name":"Other","qualname":"::de::Unexpected::Other","value":"Unexpected::Other(&'a str)","parent":{"krate":0,"index":7554},"children":[],"decl_id":null,"docs":" A message stating what uncategorized thing the input contained that was\n not expected.","sig":null,"attributes":[{"value":"/ A message stating what uncategorized thing the input contained that was","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":35072,"byte_end":35147,"line_start":387,"line_end":387,"column_start":5,"column_end":80}},{"value":"/ not expected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":35152,"byte_end":35169,"line_start":388,"line_end":388,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":35174,"byte_end":35177,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The message should be a noun or noun phrase, not capitalized and without","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":35182,"byte_end":35258,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ a period. An example message is \"unoriginal superhero\".","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":35263,"byte_end":35322,"line_start":391,"line_end":391,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":7554},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33548,"byte_end":33558,"line_start":332,"line_end":332,"column_start":10,"column_end":20},"name":"Unexpected","qualname":"::de::Unexpected","value":"pub enum Unexpected<'a> {\n\n    /// The input contained a boolean value that was not expected.\n    Bool(bool),\n\n    /// The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that\n    /// was not expected.\n    Unsigned(u64),\n\n    /// The input contained a signed integer `i8`, `i16`, `i32` or `i64` that\n    /// was not expected.\n    Signed(i64),\n\n    /// The input contained a floating point `f32` or `f64` that was not\n    /// expected.\n    Float(f64),\n\n    /// The input contained a `char` that was not expected.\n    Char(char),\n\n    /// The input contained a `&str` or `String` that was not expected.\n    Str(&'a str),\n\n    /// The input contained a `&[u8]` or `Vec<u8>` that was not expected.\n    Bytes(&'a [u8]),\n\n    /// The input contained a unit `()` that was not expected.\n    Unit,\n\n    /// The input contained an `Option<T>` that was not expected.\n    Option,\n\n    /// The input contained a newtype struct that was not expected.\n    NewtypeStruct,\n\n    /// The input contained a sequence that was not expected.\n    Seq,\n\n    /// The input contained a map that was not expected.\n    Map,\n\n    /// The input contained an enum that was not expected.\n    Enum,\n\n    /// The input contained a unit variant that was not expected.\n    UnitVariant,\n\n    /// The input contained a newtype variant that was not expected.\n    NewtypeVariant,\n\n    /// The input contained a tuple variant that was not expected.\n    TupleVariant,\n\n    /// The input contained a struct variant that was not expected.\n    StructVariant,\n\n    /// A message stating what uncategorized thing the input contained that was\n    /// not expected.\n    ///\n    /// The message should be a noun or noun phrase, not capitalized and without\n    /// a period. An example message is \"unoriginal superhero\".\n    Other(&'a str),\n}","parent":null,"children":[{"krate":0,"index":7556},{"krate":0,"index":7559},{"krate":0,"index":7562},{"krate":0,"index":7565},{"krate":0,"index":7568},{"krate":0,"index":7571},{"krate":0,"index":7574},{"krate":0,"index":7577},{"krate":0,"index":7579},{"krate":0,"index":7581},{"krate":0,"index":7583},{"krate":0,"index":7585},{"krate":0,"index":7587},{"krate":0,"index":7589},{"krate":0,"index":7591},{"krate":0,"index":7593},{"krate":0,"index":7595},{"krate":0,"index":7597}],"decl_id":null,"docs":" `Unexpected` represents an unexpected invocation of any one of the `Visitor`\n trait methods.","sig":null,"attributes":[{"value":"/ `Unexpected` represents an unexpected invocation of any one of the `Visitor`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32690,"byte_end":32770,"line_start":303,"line_end":303,"column_start":1,"column_end":81}},{"value":"/ trait methods.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32771,"byte_end":32789,"line_start":304,"line_end":304,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32790,"byte_end":32793,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ This is used as an argument to the `invalid_type`, `invalid_value`, and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32794,"byte_end":32869,"line_start":306,"line_end":306,"column_start":1,"column_end":76}},{"value":"/ `invalid_length` methods of the `Error` trait to build error messages.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32870,"byte_end":32944,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32945,"byte_end":32948,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32949,"byte_end":32967,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"/ # use std::fmt;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32968,"byte_end":32987,"line_start":310,"line_end":310,"column_start":1,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32988,"byte_end":32993,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/ # use serde::de::{self, Unexpected, Visitor};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32994,"byte_end":33043,"line_start":312,"line_end":312,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33044,"byte_end":33049,"line_start":313,"line_end":313,"column_start":1,"column_end":6}},{"value":"/ # struct Example;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33050,"byte_end":33071,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33072,"byte_end":33077,"line_start":315,"line_end":315,"column_start":1,"column_end":6}},{"value":"/ # impl<'de> Visitor<'de> for Example {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33078,"byte_end":33120,"line_start":316,"line_end":316,"column_start":1,"column_end":43}},{"value":"/ #     type Value = ();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33121,"byte_end":33147,"line_start":317,"line_end":317,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33148,"byte_end":33153,"line_start":318,"line_end":318,"column_start":1,"column_end":6}},{"value":"/ #     fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33154,"byte_end":33232,"line_start":319,"line_end":319,"column_start":1,"column_end":79}},{"value":"/ #         write!(formatter, \"definitely not a boolean\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33233,"byte_end":33292,"line_start":320,"line_end":320,"column_start":1,"column_end":60}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33293,"byte_end":33304,"line_start":321,"line_end":321,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33305,"byte_end":33310,"line_start":322,"line_end":322,"column_start":1,"column_end":6}},{"value":"/ fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33311,"byte_end":33372,"line_start":323,"line_end":323,"column_start":1,"column_end":62}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33373,"byte_end":33382,"line_start":324,"line_end":324,"column_start":1,"column_end":10}},{"value":"/     E: de::Error,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33383,"byte_end":33404,"line_start":325,"line_end":325,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33405,"byte_end":33410,"line_start":326,"line_end":326,"column_start":1,"column_end":6}},{"value":"/     Err(de::Error::invalid_type(Unexpected::Bool(v), &self))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33411,"byte_end":33475,"line_start":327,"line_end":327,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33476,"byte_end":33481,"line_start":328,"line_end":328,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33482,"byte_end":33489,"line_start":329,"line_end":329,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":33490,"byte_end":33497,"line_start":330,"line_end":330,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":986},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38150,"byte_end":38158,"line_start":470,"line_end":470,"column_start":11,"column_end":19},"name":"Expected","qualname":"::de::Expected","value":"Expected","parent":null,"children":[{"krate":0,"index":987}],"decl_id":null,"docs":" `Expected` represents an explanation of what data a `Visitor` was expecting\n to receive.","sig":null,"attributes":[{"value":"/ `Expected` represents an explanation of what data a `Visitor` was expecting","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":36612,"byte_end":36691,"line_start":421,"line_end":421,"column_start":1,"column_end":80}},{"value":"/ to receive.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":36692,"byte_end":36707,"line_start":422,"line_end":422,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":36708,"byte_end":36711,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ This is used as an argument to the `invalid_type`, `invalid_value`, and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":36712,"byte_end":36787,"line_start":424,"line_end":424,"column_start":1,"column_end":76}},{"value":"/ `invalid_length` methods of the `Error` trait to build error messages. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":36788,"byte_end":36866,"line_start":425,"line_end":425,"column_start":1,"column_end":79}},{"value":"/ message should be a noun or noun phrase that completes the sentence \"This","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":36867,"byte_end":36944,"line_start":426,"line_end":426,"column_start":1,"column_end":78}},{"value":"/ Visitor expects to receive ...\", for example the message could be \"an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":36945,"byte_end":37018,"line_start":427,"line_end":427,"column_start":1,"column_end":74}},{"value":"/ integer between 0 and 64\". The message should not be capitalized and should","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37019,"byte_end":37098,"line_start":428,"line_end":428,"column_start":1,"column_end":80}},{"value":"/ not end with a period.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37099,"byte_end":37125,"line_start":429,"line_end":429,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37126,"byte_end":37129,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Within the context of a `Visitor` implementation, the `Visitor` itself","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37130,"byte_end":37204,"line_start":431,"line_end":431,"column_start":1,"column_end":75}},{"value":"/ (`&self`) is an implementation of this trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37205,"byte_end":37254,"line_start":432,"line_end":432,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37255,"byte_end":37258,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37259,"byte_end":37277,"line_start":434,"line_end":434,"column_start":1,"column_end":19}},{"value":"/ # use std::fmt;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37278,"byte_end":37297,"line_start":435,"line_end":435,"column_start":1,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37298,"byte_end":37303,"line_start":436,"line_end":436,"column_start":1,"column_end":6}},{"value":"/ # use serde::de::{self, Unexpected, Visitor};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37304,"byte_end":37353,"line_start":437,"line_end":437,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37354,"byte_end":37359,"line_start":438,"line_end":438,"column_start":1,"column_end":6}},{"value":"/ # struct Example;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37360,"byte_end":37381,"line_start":439,"line_end":439,"column_start":1,"column_end":22}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37382,"byte_end":37387,"line_start":440,"line_end":440,"column_start":1,"column_end":6}},{"value":"/ # impl<'de> Visitor<'de> for Example {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37388,"byte_end":37430,"line_start":441,"line_end":441,"column_start":1,"column_end":43}},{"value":"/ #     type Value = ();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37431,"byte_end":37457,"line_start":442,"line_end":442,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37458,"byte_end":37463,"line_start":443,"line_end":443,"column_start":1,"column_end":6}},{"value":"/ #     fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37464,"byte_end":37542,"line_start":444,"line_end":444,"column_start":1,"column_end":79}},{"value":"/ #         write!(formatter, \"definitely not a boolean\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37543,"byte_end":37602,"line_start":445,"line_end":445,"column_start":1,"column_end":60}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37603,"byte_end":37614,"line_start":446,"line_end":446,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37615,"byte_end":37620,"line_start":447,"line_end":447,"column_start":1,"column_end":6}},{"value":"/ fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37621,"byte_end":37682,"line_start":448,"line_end":448,"column_start":1,"column_end":62}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37683,"byte_end":37692,"line_start":449,"line_end":449,"column_start":1,"column_end":10}},{"value":"/     E: de::Error,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37693,"byte_end":37714,"line_start":450,"line_end":450,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37715,"byte_end":37720,"line_start":451,"line_end":451,"column_start":1,"column_end":6}},{"value":"/     Err(de::Error::invalid_type(Unexpected::Bool(v), &self))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37721,"byte_end":37785,"line_start":452,"line_end":452,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37786,"byte_end":37791,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37792,"byte_end":37799,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37800,"byte_end":37807,"line_start":455,"line_end":455,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37808,"byte_end":37811,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ Outside of a `Visitor`, `&\"...\"` can be used.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37812,"byte_end":37861,"line_start":457,"line_end":457,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37862,"byte_end":37865,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37866,"byte_end":37884,"line_start":459,"line_end":459,"column_start":1,"column_end":19}},{"value":"/ # use serde::de::{self, Unexpected};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37885,"byte_end":37925,"line_start":460,"line_end":460,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37926,"byte_end":37931,"line_start":461,"line_end":461,"column_start":1,"column_end":6}},{"value":"/ # fn example<E>() -> Result<(), E>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37932,"byte_end":37970,"line_start":462,"line_end":462,"column_start":1,"column_end":39}},{"value":"/ # where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37971,"byte_end":37982,"line_start":463,"line_end":463,"column_start":1,"column_end":12}},{"value":"/ #     E: de::Error,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":37983,"byte_end":38006,"line_start":464,"line_end":464,"column_start":1,"column_end":24}},{"value":"/ # {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38007,"byte_end":38014,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ #     let v = true;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38015,"byte_end":38038,"line_start":466,"line_end":466,"column_start":1,"column_end":24}},{"value":"/ return Err(de::Error::invalid_type(Unexpected::Bool(v), &\"a negative integer\"));","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38039,"byte_end":38123,"line_start":467,"line_end":467,"column_start":1,"column_end":85}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38124,"byte_end":38131,"line_start":468,"line_end":468,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38132,"byte_end":38139,"line_start":469,"line_end":469,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38291,"byte_end":38294,"line_start":473,"line_end":473,"column_start":8,"column_end":11},"name":"fmt","qualname":"::de::Expected::fmt","value":"pub fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Format an explanation of what data was being expected. Same signature as\n the `Display` and `Debug` traits.\n","sig":null,"attributes":[{"value":"/ Format an explanation of what data was being expected. Same signature as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38165,"byte_end":38241,"line_start":471,"line_end":471,"column_start":5,"column_end":81}},{"value":"/ the `Display` and `Debug` traits.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38246,"byte_end":38283,"line_start":472,"line_end":472,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":998},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40453,"byte_end":40464,"line_start":531,"line_end":531,"column_start":11,"column_end":22},"name":"Deserialize","qualname":"::de::Deserialize","value":"Deserialize<'de>: Sized","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1002}],"decl_id":null,"docs":" A **data structure** that can be deserialized from any data format supported\n by Serde.","sig":null,"attributes":[{"value":"/ A **data structure** that can be deserialized from any data format supported","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38896,"byte_end":38976,"line_start":499,"line_end":499,"column_start":1,"column_end":81}},{"value":"/ by Serde.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38977,"byte_end":38990,"line_start":500,"line_end":500,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38991,"byte_end":38994,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ Serde provides `Deserialize` implementations for many Rust primitive and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38995,"byte_end":39071,"line_start":502,"line_end":502,"column_start":1,"column_end":77}},{"value":"/ standard library types. The complete list is [here][de]. All of these can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39072,"byte_end":39149,"line_start":503,"line_end":503,"column_start":1,"column_end":78}},{"value":"/ be deserialized using Serde out of the box.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39150,"byte_end":39197,"line_start":504,"line_end":504,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39198,"byte_end":39201,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ Additionally, Serde provides a procedural macro called `serde_derive` to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39202,"byte_end":39278,"line_start":506,"line_end":506,"column_start":1,"column_end":77}},{"value":"/ automatically generate `Deserialize` implementations for structs and enums","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39279,"byte_end":39357,"line_start":507,"line_end":507,"column_start":1,"column_end":79}},{"value":"/ in your program. See the [derive section of the manual][derive] for how to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39358,"byte_end":39436,"line_start":508,"line_end":508,"column_start":1,"column_end":79}},{"value":"/ use this.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39437,"byte_end":39450,"line_start":509,"line_end":509,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39451,"byte_end":39454,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ In rare cases it may be necessary to implement `Deserialize` manually for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39455,"byte_end":39532,"line_start":511,"line_end":511,"column_start":1,"column_end":78}},{"value":"/ some type in your program. See the [Implementing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39533,"byte_end":39585,"line_start":512,"line_end":512,"column_start":1,"column_end":53}},{"value":"/ `Deserialize`][impl-deserialize] section of the manual for more about this.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39586,"byte_end":39665,"line_start":513,"line_end":513,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39666,"byte_end":39669,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ Third-party crates may provide `Deserialize` implementations for types that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39670,"byte_end":39749,"line_start":515,"line_end":515,"column_start":1,"column_end":80}},{"value":"/ they expose. For example the `linked-hash-map` crate provides a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39750,"byte_end":39817,"line_start":516,"line_end":516,"column_start":1,"column_end":68}},{"value":"/ `LinkedHashMap<K, V>` type that is deserializable by Serde because the crate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39818,"byte_end":39898,"line_start":517,"line_end":517,"column_start":1,"column_end":81}},{"value":"/ provides an implementation of `Deserialize` for it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39899,"byte_end":39954,"line_start":518,"line_end":518,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39955,"byte_end":39958,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/ [de]: https://docs.serde.rs/serde/de/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":39959,"byte_end":40010,"line_start":520,"line_end":520,"column_start":1,"column_end":52}},{"value":"/ [derive]: https://serde.rs/derive.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40011,"byte_end":40053,"line_start":521,"line_end":521,"column_start":1,"column_end":43}},{"value":"/ [impl-deserialize]: https://serde.rs/impl-deserialize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40054,"byte_end":40116,"line_start":522,"line_end":522,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40117,"byte_end":40120,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40121,"byte_end":40135,"line_start":524,"line_end":524,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40136,"byte_end":40139,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ The `'de` lifetime of this trait is the lifetime of data that may be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40140,"byte_end":40212,"line_start":526,"line_end":526,"column_start":1,"column_end":73}},{"value":"/ borrowed by `Self` when deserialized. See the page [Understanding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40213,"byte_end":40282,"line_start":527,"line_end":527,"column_start":1,"column_end":70}},{"value":"/ deserializer lifetimes] for a more detailed explanation of these lifetimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40283,"byte_end":40362,"line_start":528,"line_end":528,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40363,"byte_end":40366,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ [Understanding deserializer lifetimes]: https://serde.rs/lifetimes.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40367,"byte_end":40442,"line_start":530,"line_end":530,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40785,"byte_end":40796,"line_start":538,"line_end":538,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::de::Deserialize::deserialize","value":"pub fn deserialize<D>(D) -> Result<Self, D::Error> where D: Deserializer","parent":{"krate":0,"index":998},"children":[],"decl_id":null,"docs":" Deserialize this value from the given Serde deserializer.","sig":null,"attributes":[{"value":"/ Deserialize this value from the given Serde deserializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40483,"byte_end":40544,"line_start":532,"line_end":532,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40549,"byte_end":40552,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ See the [Implementing `Deserialize`][impl-deserialize] section of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40557,"byte_end":40630,"line_start":534,"line_end":534,"column_start":5,"column_end":78}},{"value":"/ manual for more information about how to implement this method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40635,"byte_end":40702,"line_start":535,"line_end":535,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40707,"byte_end":40710,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ [impl-deserialize]: https://serde.rs/impl-deserialize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40715,"byte_end":40777,"line_start":537,"line_end":537,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41909,"byte_end":41929,"line_start":562,"line_end":562,"column_start":8,"column_end":28},"name":"deserialize_in_place","qualname":"::de::Deserialize::deserialize_in_place","value":"pub fn deserialize_in_place<D>(D, &mut Self) -> Result<(), D::Error> where\nD: Deserializer","parent":{"krate":0,"index":998},"children":[],"decl_id":null,"docs":" Deserializes a value into `self` from the given Deserializer.","sig":null,"attributes":[{"value":"/ Deserializes a value into `self` from the given Deserializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40888,"byte_end":40953,"line_start":542,"line_end":542,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40958,"byte_end":40961,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The purpose of this method is to allow the deserializer to reuse","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40966,"byte_end":41034,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/ resources and avoid copies. As such, if this method returns an error,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41039,"byte_end":41112,"line_start":545,"line_end":545,"column_start":5,"column_end":78}},{"value":"/ `self` will be in an indeterminate state where some parts of the struct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41117,"byte_end":41192,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ have been overwritten. Although whatever state that is will be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41197,"byte_end":41263,"line_start":547,"line_end":547,"column_start":5,"column_end":71}},{"value":"/ memory-safe.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41268,"byte_end":41284,"line_start":548,"line_end":548,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41289,"byte_end":41292,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ This is generally useful when repeatedly deserializing values that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41297,"byte_end":41367,"line_start":550,"line_end":550,"column_start":5,"column_end":75}},{"value":"/ are processed one at a time, where the value of `self` doesn't matter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41372,"byte_end":41445,"line_start":551,"line_end":551,"column_start":5,"column_end":78}},{"value":"/ when the next deserialization occurs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41450,"byte_end":41491,"line_start":552,"line_end":552,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41496,"byte_end":41499,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ If you manually implement this, your recursive deserializations should","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41504,"byte_end":41578,"line_start":554,"line_end":554,"column_start":5,"column_end":79}},{"value":"/ use `deserialize_in_place`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41583,"byte_end":41614,"line_start":555,"line_end":555,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41619,"byte_end":41622,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This method is stable and an official public API, but hidden from the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41627,"byte_end":41700,"line_start":557,"line_end":557,"column_start":5,"column_end":78}},{"value":"/ documentation because it is almost never what newbies are looking for.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41705,"byte_end":41779,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ Showing it in rustdoc would cause it to be featured more prominently","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41784,"byte_end":41856,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ than it deserves.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":41861,"byte_end":41882,"line_start":560,"line_end":560,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":1004},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43174,"byte_end":43190,"line_start":603,"line_end":603,"column_start":11,"column_end":27},"name":"DeserializeOwned","qualname":"::de::DeserializeOwned","value":"DeserializeOwned: for<'de> Deserialize","parent":null,"children":[],"decl_id":null,"docs":" A data structure that can be deserialized without borrowing any data from\n the deserializer.","sig":null,"attributes":[{"value":"/ A data structure that can be deserialized without borrowing any data from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42192,"byte_end":42269,"line_start":572,"line_end":572,"column_start":1,"column_end":78}},{"value":"/ the deserializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42270,"byte_end":42291,"line_start":573,"line_end":573,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42292,"byte_end":42295,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ This is primarily useful for trait bounds on functions. For example a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42296,"byte_end":42369,"line_start":575,"line_end":575,"column_start":1,"column_end":74}},{"value":"/ `from_str` function may be able to deserialize a data structure that borrows","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42370,"byte_end":42450,"line_start":576,"line_end":576,"column_start":1,"column_end":81}},{"value":"/ from the input string, but a `from_reader` function may only deserialize","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42451,"byte_end":42527,"line_start":577,"line_end":577,"column_start":1,"column_end":77}},{"value":"/ owned data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42528,"byte_end":42543,"line_start":578,"line_end":578,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42544,"byte_end":42547,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42548,"byte_end":42566,"line_start":580,"line_end":580,"column_start":1,"column_end":19}},{"value":"/ # use serde::de::{Deserialize, DeserializeOwned};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42567,"byte_end":42620,"line_start":581,"line_end":581,"column_start":1,"column_end":54}},{"value":"/ # use std::io::{Read, Result};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42621,"byte_end":42655,"line_start":582,"line_end":582,"column_start":1,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42656,"byte_end":42661,"line_start":583,"line_end":583,"column_start":1,"column_end":6}},{"value":"/ # trait Ignore {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42662,"byte_end":42682,"line_start":584,"line_end":584,"column_start":1,"column_end":21}},{"value":"/ fn from_str<'a, T>(s: &'a str) -> Result<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42683,"byte_end":42730,"line_start":585,"line_end":585,"column_start":1,"column_end":48}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42731,"byte_end":42740,"line_start":586,"line_end":586,"column_start":1,"column_end":10}},{"value":"/     T: Deserialize<'a>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42741,"byte_end":42768,"line_start":587,"line_end":587,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42769,"byte_end":42772,"line_start":588,"line_end":588,"column_start":1,"column_end":4}},{"value":"/ fn from_reader<R, T>(rdr: R) -> Result<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42773,"byte_end":42818,"line_start":589,"line_end":589,"column_start":1,"column_end":46}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42819,"byte_end":42828,"line_start":590,"line_end":590,"column_start":1,"column_end":10}},{"value":"/     R: Read,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42829,"byte_end":42845,"line_start":591,"line_end":591,"column_start":1,"column_end":17}},{"value":"/     T: DeserializeOwned;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42846,"byte_end":42874,"line_start":592,"line_end":592,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42875,"byte_end":42882,"line_start":593,"line_end":593,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42883,"byte_end":42890,"line_start":594,"line_end":594,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42891,"byte_end":42894,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42895,"byte_end":42909,"line_start":596,"line_end":596,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42910,"byte_end":42913,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ The relationship between `Deserialize` and `DeserializeOwned` in trait","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42914,"byte_end":42988,"line_start":598,"line_end":598,"column_start":1,"column_end":75}},{"value":"/ bounds is explained in more detail on the page [Understanding deserializer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":42989,"byte_end":43067,"line_start":599,"line_end":599,"column_start":1,"column_end":79}},{"value":"/ lifetimes].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43068,"byte_end":43083,"line_start":600,"line_end":600,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43084,"byte_end":43087,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ [Understanding deserializer lifetimes]: https://serde.rs/lifetimes.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43088,"byte_end":43163,"line_start":602,"line_end":602,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":1009},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49007,"byte_end":49022,"line_start":764,"line_end":764,"column_start":11,"column_end":26},"name":"DeserializeSeed","qualname":"::de::DeserializeSeed","value":"DeserializeSeed<'de>: Sized","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012}],"decl_id":null,"docs":" `DeserializeSeed` is the stateful form of the `Deserialize` trait. If you\n ever find yourself looking for a way to pass data into a `Deserialize` impl,\n this trait is the way to do it.","sig":null,"attributes":[{"value":"/ `DeserializeSeed` is the stateful form of the `Deserialize` trait. If you","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43291,"byte_end":43368,"line_start":606,"line_end":606,"column_start":1,"column_end":78}},{"value":"/ ever find yourself looking for a way to pass data into a `Deserialize` impl,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43369,"byte_end":43449,"line_start":607,"line_end":607,"column_start":1,"column_end":81}},{"value":"/ this trait is the way to do it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43450,"byte_end":43485,"line_start":608,"line_end":608,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43486,"byte_end":43489,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ As one example of stateful deserialization consider deserializing a JSON","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43490,"byte_end":43566,"line_start":610,"line_end":610,"column_start":1,"column_end":77}},{"value":"/ array into an existing buffer. Using the `Deserialize` trait we could","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43567,"byte_end":43640,"line_start":611,"line_end":611,"column_start":1,"column_end":74}},{"value":"/ deserialize a JSON array into a `Vec<T>` but it would be a freshly allocated","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43641,"byte_end":43721,"line_start":612,"line_end":612,"column_start":1,"column_end":81}},{"value":"/ `Vec<T>`; there is no way for `Deserialize` to reuse a previously allocated","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43722,"byte_end":43801,"line_start":613,"line_end":613,"column_start":1,"column_end":80}},{"value":"/ buffer. Using `DeserializeSeed` instead makes this possible as in the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43802,"byte_end":43875,"line_start":614,"line_end":614,"column_start":1,"column_end":74}},{"value":"/ example code below.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43876,"byte_end":43899,"line_start":615,"line_end":615,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43900,"byte_end":43903,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ The canonical API for stateless deserialization looks like this:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43904,"byte_end":43972,"line_start":617,"line_end":617,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43973,"byte_end":43976,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43977,"byte_end":43995,"line_start":619,"line_end":619,"column_start":1,"column_end":19}},{"value":"/ # use serde::Deserialize;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43996,"byte_end":44025,"line_start":620,"line_end":620,"column_start":1,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44026,"byte_end":44031,"line_start":621,"line_end":621,"column_start":1,"column_end":6}},{"value":"/ # enum Error {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44032,"byte_end":44051,"line_start":622,"line_end":622,"column_start":1,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44052,"byte_end":44057,"line_start":623,"line_end":623,"column_start":1,"column_end":6}},{"value":"/ fn func<'de, T: Deserialize<'de>>() -> Result<T, Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44058,"byte_end":44117,"line_start":624,"line_end":624,"column_start":1,"column_end":60}},{"value":"/ # {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44118,"byte_end":44125,"line_start":625,"line_end":625,"column_start":1,"column_end":8}},{"value":"/ #     unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44126,"byte_end":44152,"line_start":626,"line_end":626,"column_start":1,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44153,"byte_end":44160,"line_start":627,"line_end":627,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44161,"byte_end":44168,"line_start":628,"line_end":628,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44169,"byte_end":44172,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ Adjusting an API like this to support stateful deserialization is a matter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44173,"byte_end":44251,"line_start":630,"line_end":630,"column_start":1,"column_end":79}},{"value":"/ of accepting a seed as input:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44252,"byte_end":44285,"line_start":631,"line_end":631,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44286,"byte_end":44289,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44290,"byte_end":44308,"line_start":633,"line_end":633,"column_start":1,"column_end":19}},{"value":"/ # use serde::de::DeserializeSeed;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44309,"byte_end":44346,"line_start":634,"line_end":634,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44347,"byte_end":44352,"line_start":635,"line_end":635,"column_start":1,"column_end":6}},{"value":"/ # enum Error {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44353,"byte_end":44372,"line_start":636,"line_end":636,"column_start":1,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44373,"byte_end":44378,"line_start":637,"line_end":637,"column_start":1,"column_end":6}},{"value":"/ fn func_seed<'de, T: DeserializeSeed<'de>>(seed: T) -> Result<T::Value, Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44379,"byte_end":44461,"line_start":638,"line_end":638,"column_start":1,"column_end":83}},{"value":"/ # {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44462,"byte_end":44469,"line_start":639,"line_end":639,"column_start":1,"column_end":8}},{"value":"/ #     let _ = seed;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44470,"byte_end":44493,"line_start":640,"line_end":640,"column_start":1,"column_end":24}},{"value":"/ #     unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44494,"byte_end":44520,"line_start":641,"line_end":641,"column_start":1,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44521,"byte_end":44528,"line_start":642,"line_end":642,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44529,"byte_end":44536,"line_start":643,"line_end":643,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44537,"byte_end":44540,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ In practice the majority of deserialization is stateless. An API expecting a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44541,"byte_end":44621,"line_start":645,"line_end":645,"column_start":1,"column_end":81}},{"value":"/ seed can be appeased by passing `std::marker::PhantomData` as a seed in the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44622,"byte_end":44701,"line_start":646,"line_end":646,"column_start":1,"column_end":80}},{"value":"/ case of stateless deserialization.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44702,"byte_end":44740,"line_start":647,"line_end":647,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44741,"byte_end":44744,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44745,"byte_end":44759,"line_start":649,"line_end":649,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44760,"byte_end":44763,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ The `'de` lifetime of this trait is the lifetime of data that may be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44764,"byte_end":44836,"line_start":651,"line_end":651,"column_start":1,"column_end":73}},{"value":"/ borrowed by `Self::Value` when deserialized. See the page [Understanding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44837,"byte_end":44913,"line_start":652,"line_end":652,"column_start":1,"column_end":77}},{"value":"/ deserializer lifetimes] for a more detailed explanation of these lifetimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44914,"byte_end":44993,"line_start":653,"line_end":653,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44994,"byte_end":44997,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ [Understanding deserializer lifetimes]: https://serde.rs/lifetimes.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":44998,"byte_end":45073,"line_start":655,"line_end":655,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45074,"byte_end":45077,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45078,"byte_end":45091,"line_start":657,"line_end":657,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45092,"byte_end":45095,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ Suppose we have JSON that looks like `[[1, 2], [3, 4, 5], [6]]` and we need","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45096,"byte_end":45175,"line_start":659,"line_end":659,"column_start":1,"column_end":80}},{"value":"/ to deserialize it into a flat representation like `vec![1, 2, 3, 4, 5, 6]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45176,"byte_end":45255,"line_start":660,"line_end":660,"column_start":1,"column_end":80}},{"value":"/ Allocating a brand new `Vec<T>` for each subarray would be slow. Instead we","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45256,"byte_end":45335,"line_start":661,"line_end":661,"column_start":1,"column_end":80}},{"value":"/ would like to allocate a single `Vec<T>` and then deserialize each subarray","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45336,"byte_end":45415,"line_start":662,"line_end":662,"column_start":1,"column_end":80}},{"value":"/ into it. This requires stateful deserialization using the `DeserializeSeed`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45416,"byte_end":45495,"line_start":663,"line_end":663,"column_start":1,"column_end":80}},{"value":"/ trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45496,"byte_end":45506,"line_start":664,"line_end":664,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45507,"byte_end":45510,"line_start":665,"line_end":665,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45511,"byte_end":45529,"line_start":666,"line_end":666,"column_start":1,"column_end":19}},{"value":"/ use std::fmt;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45530,"byte_end":45547,"line_start":667,"line_end":667,"column_start":1,"column_end":18}},{"value":"/ use std::marker::PhantomData;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45548,"byte_end":45581,"line_start":668,"line_end":668,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45582,"byte_end":45585,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ use serde::de::{Deserialize, DeserializeSeed, Deserializer, SeqAccess, Visitor};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45586,"byte_end":45670,"line_start":670,"line_end":670,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45671,"byte_end":45674,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ // A DeserializeSeed implementation that uses stateful deserialization to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45675,"byte_end":45752,"line_start":672,"line_end":672,"column_start":1,"column_end":78}},{"value":"/ // append array elements onto the end of an existing vector. The preexisting","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45753,"byte_end":45833,"line_start":673,"line_end":673,"column_start":1,"column_end":81}},{"value":"/ // state (\"seed\") in this case is the Vec<T>. The `deserialize` method of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45834,"byte_end":45911,"line_start":674,"line_end":674,"column_start":1,"column_end":78}},{"value":"/ // `ExtendVec` will be traversing the inner arrays of the JSON input and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45912,"byte_end":45988,"line_start":675,"line_end":675,"column_start":1,"column_end":77}},{"value":"/ // appending each integer into the existing Vec.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":45989,"byte_end":46041,"line_start":676,"line_end":676,"column_start":1,"column_end":53}},{"value":"/ struct ExtendVec<'a, T: 'a>(&'a mut Vec<T>);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46042,"byte_end":46090,"line_start":677,"line_end":677,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46091,"byte_end":46094,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ impl<'de, 'a, T> DeserializeSeed<'de> for ExtendVec<'a, T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46095,"byte_end":46157,"line_start":679,"line_end":679,"column_start":1,"column_end":63}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46158,"byte_end":46167,"line_start":680,"line_end":680,"column_start":1,"column_end":10}},{"value":"/     T: Deserialize<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46168,"byte_end":46196,"line_start":681,"line_end":681,"column_start":1,"column_end":29}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46197,"byte_end":46202,"line_start":682,"line_end":682,"column_start":1,"column_end":6}},{"value":"/     // The return type of the `deserialize` method. This implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46203,"byte_end":46278,"line_start":683,"line_end":683,"column_start":1,"column_end":76}},{"value":"/     // appends onto an existing vector but does not create any new data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46279,"byte_end":46354,"line_start":684,"line_end":684,"column_start":1,"column_end":76}},{"value":"/     // structure, so the return type is ().","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46355,"byte_end":46402,"line_start":685,"line_end":685,"column_start":1,"column_end":48}},{"value":"/     type Value = ();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46403,"byte_end":46427,"line_start":686,"line_end":686,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46428,"byte_end":46431,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/     fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46432,"byte_end":46513,"line_start":688,"line_end":688,"column_start":1,"column_end":82}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46514,"byte_end":46527,"line_start":689,"line_end":689,"column_start":1,"column_end":14}},{"value":"/         D: Deserializer<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46528,"byte_end":46561,"line_start":690,"line_end":690,"column_start":1,"column_end":34}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46562,"byte_end":46571,"line_start":691,"line_end":691,"column_start":1,"column_end":10}},{"value":"/         // Visitor implementation that will walk an inner array of the JSON","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46572,"byte_end":46651,"line_start":692,"line_end":692,"column_start":1,"column_end":80}},{"value":"/         // input.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46652,"byte_end":46673,"line_start":693,"line_end":693,"column_start":1,"column_end":22}},{"value":"/         struct ExtendVecVisitor<'a, T: 'a>(&'a mut Vec<T>);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46674,"byte_end":46737,"line_start":694,"line_end":694,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46738,"byte_end":46741,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/         impl<'de, 'a, T> Visitor<'de> for ExtendVecVisitor<'a, T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46742,"byte_end":46811,"line_start":696,"line_end":696,"column_start":1,"column_end":70}},{"value":"/         where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46812,"byte_end":46829,"line_start":697,"line_end":697,"column_start":1,"column_end":18}},{"value":"/             T: Deserialize<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46830,"byte_end":46866,"line_start":698,"line_end":698,"column_start":1,"column_end":37}},{"value":"/         {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46867,"byte_end":46880,"line_start":699,"line_end":699,"column_start":1,"column_end":14}},{"value":"/             type Value = ();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46881,"byte_end":46913,"line_start":700,"line_end":700,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46914,"byte_end":46917,"line_start":701,"line_end":701,"column_start":1,"column_end":4}},{"value":"/             fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":46918,"byte_end":47002,"line_start":702,"line_end":702,"column_start":1,"column_end":85}},{"value":"/                 write!(formatter, \"an array of integers\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47003,"byte_end":47064,"line_start":703,"line_end":703,"column_start":1,"column_end":62}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47065,"byte_end":47082,"line_start":704,"line_end":704,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47083,"byte_end":47086,"line_start":705,"line_end":705,"column_start":1,"column_end":4}},{"value":"/             fn visit_seq<A>(self, mut seq: A) -> Result<(), A::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47087,"byte_end":47160,"line_start":706,"line_end":706,"column_start":1,"column_end":74}},{"value":"/             where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47161,"byte_end":47182,"line_start":707,"line_end":707,"column_start":1,"column_end":22}},{"value":"/                 A: SeqAccess<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47183,"byte_end":47221,"line_start":708,"line_end":708,"column_start":1,"column_end":39}},{"value":"/             {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47222,"byte_end":47239,"line_start":709,"line_end":709,"column_start":1,"column_end":18}},{"value":"/                 // Visit each element in the inner array and push it onto","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47240,"byte_end":47317,"line_start":710,"line_end":710,"column_start":1,"column_end":78}},{"value":"/                 // the existing vector.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47318,"byte_end":47361,"line_start":711,"line_end":711,"column_start":1,"column_end":44}},{"value":"/                 while let Some(elem) = seq.next_element()? {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47362,"byte_end":47426,"line_start":712,"line_end":712,"column_start":1,"column_end":65}},{"value":"/                     self.0.push(elem);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47427,"byte_end":47469,"line_start":713,"line_end":713,"column_start":1,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47470,"byte_end":47491,"line_start":714,"line_end":714,"column_start":1,"column_end":22}},{"value":"/                 Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47492,"byte_end":47518,"line_start":715,"line_end":715,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47519,"byte_end":47536,"line_start":716,"line_end":716,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47537,"byte_end":47550,"line_start":717,"line_end":717,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47551,"byte_end":47554,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/         deserializer.deserialize_seq(ExtendVecVisitor(self.0))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47555,"byte_end":47621,"line_start":719,"line_end":719,"column_start":1,"column_end":67}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47622,"byte_end":47631,"line_start":720,"line_end":720,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47632,"byte_end":47637,"line_start":721,"line_end":721,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47638,"byte_end":47641,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ // Visitor implementation that will walk the outer array of the JSON input.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47642,"byte_end":47721,"line_start":723,"line_end":723,"column_start":1,"column_end":80}},{"value":"/ struct FlattenedVecVisitor<T>(PhantomData<T>);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47722,"byte_end":47772,"line_start":724,"line_end":724,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47773,"byte_end":47776,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ impl<'de, T> Visitor<'de> for FlattenedVecVisitor<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47777,"byte_end":47833,"line_start":726,"line_end":726,"column_start":1,"column_end":57}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47834,"byte_end":47843,"line_start":727,"line_end":727,"column_start":1,"column_end":10}},{"value":"/     T: Deserialize<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47844,"byte_end":47872,"line_start":728,"line_end":728,"column_start":1,"column_end":29}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47873,"byte_end":47878,"line_start":729,"line_end":729,"column_start":1,"column_end":6}},{"value":"/     // This Visitor constructs a single Vec<T> to hold the flattened","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47879,"byte_end":47951,"line_start":730,"line_end":730,"column_start":1,"column_end":73}},{"value":"/     // contents of the inner arrays.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47952,"byte_end":47992,"line_start":731,"line_end":731,"column_start":1,"column_end":41}},{"value":"/     type Value = Vec<T>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":47993,"byte_end":48021,"line_start":732,"line_end":732,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48022,"byte_end":48025,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/     fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48026,"byte_end":48102,"line_start":734,"line_end":734,"column_start":1,"column_end":77}},{"value":"/         write!(formatter, \"an array of arrays\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48103,"byte_end":48154,"line_start":735,"line_end":735,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48155,"byte_end":48164,"line_start":736,"line_end":736,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48165,"byte_end":48168,"line_start":737,"line_end":737,"column_start":1,"column_end":4}},{"value":"/     fn visit_seq<A>(self, mut seq: A) -> Result<Vec<T>, A::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48169,"byte_end":48238,"line_start":738,"line_end":738,"column_start":1,"column_end":70}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48239,"byte_end":48252,"line_start":739,"line_end":739,"column_start":1,"column_end":14}},{"value":"/         A: SeqAccess<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48253,"byte_end":48283,"line_start":740,"line_end":740,"column_start":1,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48284,"byte_end":48293,"line_start":741,"line_end":741,"column_start":1,"column_end":10}},{"value":"/         // Create a single Vec to hold the flattened contents.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48294,"byte_end":48360,"line_start":742,"line_end":742,"column_start":1,"column_end":67}},{"value":"/         let mut vec = Vec::new();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48361,"byte_end":48398,"line_start":743,"line_end":743,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48399,"byte_end":48402,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/         // Each iteration through this loop is one inner array.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48403,"byte_end":48470,"line_start":745,"line_end":745,"column_start":1,"column_end":68}},{"value":"/         while let Some(()) = seq.next_element_seed(ExtendVec(&mut vec))? {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48471,"byte_end":48549,"line_start":746,"line_end":746,"column_start":1,"column_end":79}},{"value":"/             // Nothing to do; inner array has been appended into `vec`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48550,"byte_end":48625,"line_start":747,"line_end":747,"column_start":1,"column_end":76}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48626,"byte_end":48639,"line_start":748,"line_end":748,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48640,"byte_end":48643,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/         // Return the finished vec.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48644,"byte_end":48683,"line_start":750,"line_end":750,"column_start":1,"column_end":40}},{"value":"/         Ok(vec)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48684,"byte_end":48703,"line_start":751,"line_end":751,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48704,"byte_end":48713,"line_start":752,"line_end":752,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48714,"byte_end":48719,"line_start":753,"line_end":753,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48720,"byte_end":48723,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ # fn example<'de, D>(deserializer: D) -> Result<(), D::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48724,"byte_end":48789,"line_start":755,"line_end":755,"column_start":1,"column_end":66}},{"value":"/ # where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48790,"byte_end":48801,"line_start":756,"line_end":756,"column_start":1,"column_end":12}},{"value":"/ #     D: Deserializer<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48802,"byte_end":48833,"line_start":757,"line_end":757,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48834,"byte_end":48841,"line_start":758,"line_end":758,"column_start":1,"column_end":8}},{"value":"/ let visitor = FlattenedVecVisitor(PhantomData);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48842,"byte_end":48893,"line_start":759,"line_end":759,"column_start":1,"column_end":52}},{"value":"/ let flattened: Vec<u64> = deserializer.deserialize_seq(visitor)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48894,"byte_end":48963,"line_start":760,"line_end":760,"column_start":1,"column_end":70}},{"value":"/ #     Ok(())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48964,"byte_end":48980,"line_start":761,"line_end":761,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48981,"byte_end":48988,"line_start":762,"line_end":762,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":48989,"byte_end":48996,"line_start":763,"line_end":763,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1011},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49092,"byte_end":49097,"line_start":766,"line_end":766,"column_start":10,"column_end":15},"name":"Value","qualname":"::de::DeserializeSeed::Value","value":"type Value;","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" The type produced by using this seed.\n","sig":null,"attributes":[{"value":"/ The type produced by using this seed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49041,"byte_end":49082,"line_start":765,"line_end":765,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49249,"byte_end":49260,"line_start":770,"line_end":770,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::de::DeserializeSeed::deserialize","value":"pub fn deserialize<D>(Self, D) -> Result<Self::Value, D::Error> where\nD: Deserializer","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Equivalent to the more common `Deserialize::deserialize` method, except\n with some initial piece of data (the seed) passed in.\n","sig":null,"attributes":[{"value":"/ Equivalent to the more common `Deserialize::deserialize` method, except","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49104,"byte_end":49179,"line_start":768,"line_end":768,"column_start":5,"column_end":80}},{"value":"/ with some initial piece of data (the seed) passed in.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49184,"byte_end":49241,"line_start":769,"line_end":769,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":1020},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54817,"byte_end":54829,"line_start":900,"line_end":900,"column_start":11,"column_end":23},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer<'de>: Sized","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":7614},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":7616},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1081}],"decl_id":null,"docs":" A **data format** that can deserialize any data structure supported by\n Serde.","sig":null,"attributes":[{"value":"/ A **data format** that can deserialize any data structure supported by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49726,"byte_end":49800,"line_start":792,"line_end":792,"column_start":1,"column_end":75}},{"value":"/ Serde.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49801,"byte_end":49811,"line_start":793,"line_end":793,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49812,"byte_end":49815,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ The role of this trait is to define the deserialization half of the [Serde","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49816,"byte_end":49894,"line_start":795,"line_end":795,"column_start":1,"column_end":79}},{"value":"/ data model], which is a way to categorize every Rust data type into one of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49895,"byte_end":49973,"line_start":796,"line_end":796,"column_start":1,"column_end":79}},{"value":"/ 29 possible types. Each method of the `Deserializer` trait corresponds to one","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49974,"byte_end":50055,"line_start":797,"line_end":797,"column_start":1,"column_end":82}},{"value":"/ of the types of the data model.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50056,"byte_end":50091,"line_start":798,"line_end":798,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50092,"byte_end":50095,"line_start":799,"line_end":799,"column_start":1,"column_end":4}},{"value":"/ Implementations of `Deserialize` map themselves into this data model by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50096,"byte_end":50171,"line_start":800,"line_end":800,"column_start":1,"column_end":76}},{"value":"/ passing to the `Deserializer` a `Visitor` implementation that can receive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50172,"byte_end":50249,"line_start":801,"line_end":801,"column_start":1,"column_end":78}},{"value":"/ these various types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50250,"byte_end":50274,"line_start":802,"line_end":802,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50275,"byte_end":50278,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ The types that make up the Serde data model are:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50279,"byte_end":50331,"line_start":804,"line_end":804,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50332,"byte_end":50335,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/  - **14 primitive types**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50336,"byte_end":50365,"line_start":806,"line_end":806,"column_start":1,"column_end":30}},{"value":"/    - bool","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50366,"byte_end":50379,"line_start":807,"line_end":807,"column_start":1,"column_end":14}},{"value":"/    - i8, i16, i32, i64, i128","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50380,"byte_end":50412,"line_start":808,"line_end":808,"column_start":1,"column_end":33}},{"value":"/    - u8, u16, u32, u64, u128","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50413,"byte_end":50445,"line_start":809,"line_end":809,"column_start":1,"column_end":33}},{"value":"/    - f32, f64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50446,"byte_end":50463,"line_start":810,"line_end":810,"column_start":1,"column_end":18}},{"value":"/    - char","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50464,"byte_end":50477,"line_start":811,"line_end":811,"column_start":1,"column_end":14}},{"value":"/  - **string**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50478,"byte_end":50495,"line_start":812,"line_end":812,"column_start":1,"column_end":18}},{"value":"/    - UTF-8 bytes with a length and no null terminator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50496,"byte_end":50554,"line_start":813,"line_end":813,"column_start":1,"column_end":59}},{"value":"/    - When serializing, all strings are handled equally. When deserializing,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50555,"byte_end":50634,"line_start":814,"line_end":814,"column_start":1,"column_end":80}},{"value":"/      there are three flavors of strings: transient, owned, and borrowed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50635,"byte_end":50711,"line_start":815,"line_end":815,"column_start":1,"column_end":77}},{"value":"/  - **byte array** - \\[u8\\]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50712,"byte_end":50742,"line_start":816,"line_end":816,"column_start":1,"column_end":31}},{"value":"/    - Similar to strings, during deserialization byte arrays can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50743,"byte_end":50813,"line_start":817,"line_end":817,"column_start":1,"column_end":71}},{"value":"/      transient, owned, or borrowed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50814,"byte_end":50853,"line_start":818,"line_end":818,"column_start":1,"column_end":40}},{"value":"/  - **option**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50854,"byte_end":50871,"line_start":819,"line_end":819,"column_start":1,"column_end":18}},{"value":"/    - Either none or some value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50872,"byte_end":50907,"line_start":820,"line_end":820,"column_start":1,"column_end":36}},{"value":"/  - **unit**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50908,"byte_end":50923,"line_start":821,"line_end":821,"column_start":1,"column_end":16}},{"value":"/    - The type of `()` in Rust. It represents an anonymous value containing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":50924,"byte_end":51002,"line_start":822,"line_end":822,"column_start":1,"column_end":79}},{"value":"/      no data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51003,"byte_end":51020,"line_start":823,"line_end":823,"column_start":1,"column_end":18}},{"value":"/  - **unit_struct**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51021,"byte_end":51043,"line_start":824,"line_end":824,"column_start":1,"column_end":23}},{"value":"/    - For example `struct Unit` or `PhantomData<T>`. It represents a named","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51044,"byte_end":51121,"line_start":825,"line_end":825,"column_start":1,"column_end":78}},{"value":"/      value containing no data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51122,"byte_end":51156,"line_start":826,"line_end":826,"column_start":1,"column_end":35}},{"value":"/  - **unit_variant**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51157,"byte_end":51180,"line_start":827,"line_end":827,"column_start":1,"column_end":24}},{"value":"/    - For example the `E::A` and `E::B` in `enum E { A, B }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51181,"byte_end":51245,"line_start":828,"line_end":828,"column_start":1,"column_end":65}},{"value":"/  - **newtype_struct**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51246,"byte_end":51271,"line_start":829,"line_end":829,"column_start":1,"column_end":26}},{"value":"/    - For example `struct Millimeters(u8)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51272,"byte_end":51318,"line_start":830,"line_end":830,"column_start":1,"column_end":47}},{"value":"/  - **newtype_variant**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51319,"byte_end":51345,"line_start":831,"line_end":831,"column_start":1,"column_end":27}},{"value":"/    - For example the `E::N` in `enum E { N(u8) }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51346,"byte_end":51400,"line_start":832,"line_end":832,"column_start":1,"column_end":55}},{"value":"/  - **seq**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51401,"byte_end":51415,"line_start":833,"line_end":833,"column_start":1,"column_end":15}},{"value":"/    - A variably sized heterogeneous sequence of values, for example `Vec<T>`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51416,"byte_end":51496,"line_start":834,"line_end":834,"column_start":1,"column_end":81}},{"value":"/      or `HashSet<T>`. When serializing, the length may or may not be known","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51497,"byte_end":51575,"line_start":835,"line_end":835,"column_start":1,"column_end":79}},{"value":"/      before iterating through all the data. When deserializing, the length","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51576,"byte_end":51654,"line_start":836,"line_end":836,"column_start":1,"column_end":79}},{"value":"/      is determined by looking at the serialized data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51655,"byte_end":51712,"line_start":837,"line_end":837,"column_start":1,"column_end":58}},{"value":"/  - **tuple**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51713,"byte_end":51729,"line_start":838,"line_end":838,"column_start":1,"column_end":17}},{"value":"/    - A statically sized heterogeneous sequence of values for which the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51730,"byte_end":51804,"line_start":839,"line_end":839,"column_start":1,"column_end":75}},{"value":"/      length will be known at deserialization time without looking at the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51805,"byte_end":51881,"line_start":840,"line_end":840,"column_start":1,"column_end":77}},{"value":"/      serialized data, for example `(u8,)` or `(String, u64, Vec<T>)` or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51882,"byte_end":51957,"line_start":841,"line_end":841,"column_start":1,"column_end":76}},{"value":"/      `[u64; 10]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51958,"byte_end":51979,"line_start":842,"line_end":842,"column_start":1,"column_end":22}},{"value":"/  - **tuple_struct**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":51980,"byte_end":52003,"line_start":843,"line_end":843,"column_start":1,"column_end":24}},{"value":"/    - A named tuple, for example `struct Rgb(u8, u8, u8)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52004,"byte_end":52065,"line_start":844,"line_end":844,"column_start":1,"column_end":62}},{"value":"/  - **tuple_variant**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52066,"byte_end":52090,"line_start":845,"line_end":845,"column_start":1,"column_end":25}},{"value":"/    - For example the `E::T` in `enum E { T(u8, u8) }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52091,"byte_end":52149,"line_start":846,"line_end":846,"column_start":1,"column_end":59}},{"value":"/  - **map**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52150,"byte_end":52164,"line_start":847,"line_end":847,"column_start":1,"column_end":15}},{"value":"/    - A heterogeneous key-value pairing, for example `BTreeMap<K, V>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52165,"byte_end":52238,"line_start":848,"line_end":848,"column_start":1,"column_end":74}},{"value":"/  - **struct**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52239,"byte_end":52256,"line_start":849,"line_end":849,"column_start":1,"column_end":18}},{"value":"/    - A heterogeneous key-value pairing in which the keys are strings and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52257,"byte_end":52333,"line_start":850,"line_end":850,"column_start":1,"column_end":77}},{"value":"/      will be known at deserialization time without looking at the serialized","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52334,"byte_end":52414,"line_start":851,"line_end":851,"column_start":1,"column_end":81}},{"value":"/      data, for example `struct S { r: u8, g: u8, b: u8 }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52415,"byte_end":52477,"line_start":852,"line_end":852,"column_start":1,"column_end":63}},{"value":"/  - **struct_variant**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52478,"byte_end":52503,"line_start":853,"line_end":853,"column_start":1,"column_end":26}},{"value":"/    - For example the `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52504,"byte_end":52578,"line_start":854,"line_end":854,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52579,"byte_end":52582,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ The `Deserializer` trait supports two entry point styles which enables","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52583,"byte_end":52657,"line_start":856,"line_end":856,"column_start":1,"column_end":75}},{"value":"/ different kinds of deserialization.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52658,"byte_end":52697,"line_start":857,"line_end":857,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52698,"byte_end":52701,"line_start":858,"line_end":858,"column_start":1,"column_end":4}},{"value":"/ 1. The `deserialize` method. Self-describing data formats like JSON are able","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52702,"byte_end":52782,"line_start":859,"line_end":859,"column_start":1,"column_end":81}},{"value":"/    to look at the serialized data and tell what it represents. For example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52783,"byte_end":52861,"line_start":860,"line_end":860,"column_start":1,"column_end":79}},{"value":"/    the JSON deserializer may see an opening curly brace (`{`) and know that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52862,"byte_end":52941,"line_start":861,"line_end":861,"column_start":1,"column_end":80}},{"value":"/    it is seeing a map. If the data format supports","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52942,"byte_end":52996,"line_start":862,"line_end":862,"column_start":1,"column_end":55}},{"value":"/    `Deserializer::deserialize_any`, it will drive the Visitor using whatever","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":52997,"byte_end":53077,"line_start":863,"line_end":863,"column_start":1,"column_end":81}},{"value":"/    type it sees in the input. JSON uses this approach when deserializing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53078,"byte_end":53154,"line_start":864,"line_end":864,"column_start":1,"column_end":77}},{"value":"/    `serde_json::Value` which is an enum that can represent any JSON","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53155,"byte_end":53226,"line_start":865,"line_end":865,"column_start":1,"column_end":72}},{"value":"/    document. Without knowing what is in a JSON document, we can deserialize","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53227,"byte_end":53306,"line_start":866,"line_end":866,"column_start":1,"column_end":80}},{"value":"/    it to `serde_json::Value` by going through","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53307,"byte_end":53356,"line_start":867,"line_end":867,"column_start":1,"column_end":50}},{"value":"/    `Deserializer::deserialize_any`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53357,"byte_end":53396,"line_start":868,"line_end":868,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53397,"byte_end":53400,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ 2. The various `deserialize_*` methods. Non-self-describing formats like","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53401,"byte_end":53477,"line_start":870,"line_end":870,"column_start":1,"column_end":77}},{"value":"/    Bincode need to be told what is in the input in order to deserialize it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53478,"byte_end":53557,"line_start":871,"line_end":871,"column_start":1,"column_end":80}},{"value":"/    The `deserialize_*` methods are hints to the deserializer for how to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53558,"byte_end":53633,"line_start":872,"line_end":872,"column_start":1,"column_end":76}},{"value":"/    interpret the next piece of input. Non-self-describing formats are not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53634,"byte_end":53711,"line_start":873,"line_end":873,"column_start":1,"column_end":78}},{"value":"/    able to deserialize something like `serde_json::Value` which relies on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53712,"byte_end":53789,"line_start":874,"line_end":874,"column_start":1,"column_end":78}},{"value":"/    `Deserializer::deserialize_any`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53790,"byte_end":53829,"line_start":875,"line_end":875,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53830,"byte_end":53833,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ When implementing `Deserialize`, you should avoid relying on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53834,"byte_end":53898,"line_start":877,"line_end":877,"column_start":1,"column_end":65}},{"value":"/ `Deserializer::deserialize_any` unless you need to be told by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53899,"byte_end":53968,"line_start":878,"line_end":878,"column_start":1,"column_end":70}},{"value":"/ Deserializer what type is in the input. Know that relying on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":53969,"byte_end":54033,"line_start":879,"line_end":879,"column_start":1,"column_end":65}},{"value":"/ `Deserializer::deserialize_any` means your data type will be able to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54034,"byte_end":54106,"line_start":880,"line_end":880,"column_start":1,"column_end":73}},{"value":"/ deserialize from self-describing formats only, ruling out Bincode and many","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54107,"byte_end":54185,"line_start":881,"line_end":881,"column_start":1,"column_end":79}},{"value":"/ others.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54186,"byte_end":54197,"line_start":882,"line_end":882,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54198,"byte_end":54201,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ [Serde data model]: https://serde.rs/data-model.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54202,"byte_end":54258,"line_start":884,"line_end":884,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54259,"byte_end":54262,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54263,"byte_end":54277,"line_start":886,"line_end":886,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54278,"byte_end":54281,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ The `'de` lifetime of this trait is the lifetime of data that may be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54282,"byte_end":54354,"line_start":888,"line_end":888,"column_start":1,"column_end":73}},{"value":"/ borrowed from the input when deserializing. See the page [Understanding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54355,"byte_end":54430,"line_start":889,"line_end":889,"column_start":1,"column_end":76}},{"value":"/ deserializer lifetimes] for a more detailed explanation of these lifetimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54431,"byte_end":54510,"line_start":890,"line_end":890,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54511,"byte_end":54514,"line_start":891,"line_end":891,"column_start":1,"column_end":4}},{"value":"/ [Understanding deserializer lifetimes]: https://serde.rs/lifetimes.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54515,"byte_end":54590,"line_start":892,"line_end":892,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54591,"byte_end":54594,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54595,"byte_end":54623,"line_start":894,"line_end":894,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54624,"byte_end":54627,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website contains example code for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54628,"byte_end":54708,"line_start":896,"line_end":896,"column_start":1,"column_end":81}},{"value":"/ a basic JSON `Deserializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54709,"byte_end":54741,"line_start":897,"line_end":897,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54742,"byte_end":54745,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54746,"byte_end":54806,"line_start":899,"line_end":899,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1022},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54950,"byte_end":54955,"line_start":903,"line_end":903,"column_start":10,"column_end":15},"name":"Error","qualname":"::de::Deserializer::Error","value":"type Error: Error;","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" The error type that can be returned if some error occurs during\n deserialization.\n","sig":null,"attributes":[{"value":"/ The error type that can be returned if some error occurs during","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54848,"byte_end":54915,"line_start":901,"line_end":901,"column_start":5,"column_end":72}},{"value":"/ deserialization.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54920,"byte_end":54940,"line_start":902,"line_end":902,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55491,"byte_end":55506,"line_start":914,"line_end":914,"column_start":8,"column_end":23},"name":"deserialize_any","qualname":"::de::Deserializer::deserialize_any","value":"pub fn deserialize_any<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Require the `Deserializer` to figure out how to drive the visitor based\n on what data type is in the input.","sig":null,"attributes":[{"value":"/ Require the `Deserializer` to figure out how to drive the visitor based","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54969,"byte_end":55044,"line_start":905,"line_end":905,"column_start":5,"column_end":80}},{"value":"/ on what data type is in the input.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55049,"byte_end":55087,"line_start":906,"line_end":906,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55092,"byte_end":55095,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ When implementing `Deserialize`, you should avoid relying on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55100,"byte_end":55164,"line_start":908,"line_end":908,"column_start":5,"column_end":69}},{"value":"/ `Deserializer::deserialize_any` unless you need to be told by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55169,"byte_end":55238,"line_start":909,"line_end":909,"column_start":5,"column_end":74}},{"value":"/ Deserializer what type is in the input. Know that relying on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55243,"byte_end":55307,"line_start":910,"line_end":910,"column_start":5,"column_end":69}},{"value":"/ `Deserializer::deserialize_any` means your data type will be able to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55312,"byte_end":55384,"line_start":911,"line_end":911,"column_start":5,"column_end":77}},{"value":"/ deserialize from self-describing formats only, ruling out Bincode and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55389,"byte_end":55462,"line_start":912,"line_end":912,"column_start":5,"column_end":78}},{"value":"/ many others.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55467,"byte_end":55483,"line_start":913,"line_end":913,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55674,"byte_end":55690,"line_start":919,"line_end":919,"column_start":8,"column_end":24},"name":"deserialize_bool","qualname":"::de::Deserializer::deserialize_bool","value":"pub fn deserialize_bool<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a `bool` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a `bool` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55601,"byte_end":55666,"line_start":918,"line_end":918,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55857,"byte_end":55871,"line_start":924,"line_end":924,"column_start":8,"column_end":22},"name":"deserialize_i8","qualname":"::de::Deserializer::deserialize_i8","value":"pub fn deserialize_i8<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting an `i8` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting an `i8` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55785,"byte_end":55849,"line_start":923,"line_end":923,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":56039,"byte_end":56054,"line_start":929,"line_end":929,"column_start":8,"column_end":23},"name":"deserialize_i16","qualname":"::de::Deserializer::deserialize_i16","value":"pub fn deserialize_i16<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting an `i16` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting an `i16` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":55966,"byte_end":56031,"line_start":928,"line_end":928,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":56222,"byte_end":56237,"line_start":934,"line_end":934,"column_start":8,"column_end":23},"name":"deserialize_i32","qualname":"::de::Deserializer::deserialize_i32","value":"pub fn deserialize_i32<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting an `i32` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting an `i32` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":56149,"byte_end":56214,"line_start":933,"line_end":933,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":56405,"byte_end":56420,"line_start":939,"line_end":939,"column_start":8,"column_end":23},"name":"deserialize_i64","qualname":"::de::Deserializer::deserialize_i64","value":"pub fn deserialize_i64<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting an `i64` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting an `i64` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":56332,"byte_end":56397,"line_start":938,"line_end":938,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7614},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":56779,"byte_end":56795,"line_start":948,"line_end":948,"column_start":12,"column_end":28},"name":"deserialize_i128","qualname":"::de::Deserializer::deserialize_i128","value":"pub fn deserialize_i128<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting an `i128` value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":57079,"byte_end":57093,"line_start":958,"line_end":958,"column_start":8,"column_end":22},"name":"deserialize_u8","qualname":"::de::Deserializer::deserialize_u8","value":"pub fn deserialize_u8<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a `u8` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a `u8` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":57008,"byte_end":57071,"line_start":957,"line_end":957,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":57260,"byte_end":57275,"line_start":963,"line_end":963,"column_start":8,"column_end":23},"name":"deserialize_u16","qualname":"::de::Deserializer::deserialize_u16","value":"pub fn deserialize_u16<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a `u16` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a `u16` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":57188,"byte_end":57252,"line_start":962,"line_end":962,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":57442,"byte_end":57457,"line_start":968,"line_end":968,"column_start":8,"column_end":23},"name":"deserialize_u32","qualname":"::de::Deserializer::deserialize_u32","value":"pub fn deserialize_u32<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a `u32` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a `u32` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":57370,"byte_end":57434,"line_start":967,"line_end":967,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":57624,"byte_end":57639,"line_start":973,"line_end":973,"column_start":8,"column_end":23},"name":"deserialize_u64","qualname":"::de::Deserializer::deserialize_u64","value":"pub fn deserialize_u64<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a `u64` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a `u64` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":57552,"byte_end":57616,"line_start":972,"line_end":972,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7616},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":57998,"byte_end":58014,"line_start":982,"line_end":982,"column_start":12,"column_end":28},"name":"deserialize_u128","qualname":"::de::Deserializer::deserialize_u128","value":"pub fn deserialize_u128<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting an `u128` value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58299,"byte_end":58314,"line_start":992,"line_end":992,"column_start":8,"column_end":23},"name":"deserialize_f32","qualname":"::de::Deserializer::deserialize_f32","value":"pub fn deserialize_f32<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a `f32` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a `f32` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58227,"byte_end":58291,"line_start":991,"line_end":991,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58481,"byte_end":58496,"line_start":997,"line_end":997,"column_start":8,"column_end":23},"name":"deserialize_f64","qualname":"::de::Deserializer::deserialize_f64","value":"pub fn deserialize_f64<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a `f64` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a `f64` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58409,"byte_end":58473,"line_start":996,"line_end":996,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58664,"byte_end":58680,"line_start":1002,"line_end":1002,"column_start":8,"column_end":24},"name":"deserialize_char","qualname":"::de::Deserializer::deserialize_char","value":"pub fn deserialize_char<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a `char` value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a `char` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58591,"byte_end":58656,"line_start":1001,"line_end":1001,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59131,"byte_end":59146,"line_start":1013,"line_end":1013,"column_start":8,"column_end":23},"name":"deserialize_str","qualname":"::de::Deserializer::deserialize_str","value":"pub fn deserialize_str<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a string value and does\n not benefit from taking ownership of buffered data owned by the\n `Deserializer`.","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a string value and does","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58775,"byte_end":58848,"line_start":1006,"line_end":1006,"column_start":5,"column_end":78}},{"value":"/ not benefit from taking ownership of buffered data owned by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58853,"byte_end":58920,"line_start":1007,"line_end":1007,"column_start":5,"column_end":72}},{"value":"/ `Deserializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58925,"byte_end":58944,"line_start":1008,"line_end":1008,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58949,"byte_end":58952,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ If the `Visitor` would benefit from taking ownership of `String` data,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":58957,"byte_end":59031,"line_start":1010,"line_end":1010,"column_start":5,"column_end":79}},{"value":"/ indiciate this to the `Deserializer` by using `deserialize_string`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59036,"byte_end":59106,"line_start":1011,"line_end":1011,"column_start":5,"column_end":75}},{"value":"/ instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59111,"byte_end":59123,"line_start":1012,"line_end":1012,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59594,"byte_end":59612,"line_start":1024,"line_end":1024,"column_start":8,"column_end":26},"name":"deserialize_string","qualname":"::de::Deserializer::deserialize_string","value":"pub fn deserialize_string<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a string value and would\n benefit from taking ownership of buffered data owned by the\n `Deserializer`.","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a string value and would","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59241,"byte_end":59315,"line_start":1017,"line_end":1017,"column_start":5,"column_end":79}},{"value":"/ benefit from taking ownership of buffered data owned by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59320,"byte_end":59383,"line_start":1018,"line_end":1018,"column_start":5,"column_end":68}},{"value":"/ `Deserializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59388,"byte_end":59407,"line_start":1019,"line_end":1019,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59412,"byte_end":59415,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ If the `Visitor` would not benefit from taking ownership of `String`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59420,"byte_end":59492,"line_start":1021,"line_end":1021,"column_start":5,"column_end":77}},{"value":"/ data, indicate that to the `Deserializer` by using `deserialize_str`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59497,"byte_end":59569,"line_start":1022,"line_end":1022,"column_start":5,"column_end":77}},{"value":"/ instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59574,"byte_end":59586,"line_start":1023,"line_end":1023,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60063,"byte_end":60080,"line_start":1035,"line_end":1035,"column_start":8,"column_end":25},"name":"deserialize_bytes","qualname":"::de::Deserializer::deserialize_bytes","value":"pub fn deserialize_bytes<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a byte array and does not\n benefit from taking ownership of buffered data owned by the\n `Deserializer`.","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a byte array and does not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59707,"byte_end":59782,"line_start":1028,"line_end":1028,"column_start":5,"column_end":80}},{"value":"/ benefit from taking ownership of buffered data owned by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59787,"byte_end":59850,"line_start":1029,"line_end":1029,"column_start":5,"column_end":68}},{"value":"/ `Deserializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59855,"byte_end":59874,"line_start":1030,"line_end":1030,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59879,"byte_end":59882,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ If the `Visitor` would benefit from taking ownership of `Vec<u8>` data,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59887,"byte_end":59962,"line_start":1032,"line_end":1032,"column_start":5,"column_end":80}},{"value":"/ indicate this to the `Deserializer` by using `deserialize_byte_buf`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":59967,"byte_end":60038,"line_start":1033,"line_end":1033,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60043,"byte_end":60055,"line_start":1034,"line_end":1034,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60529,"byte_end":60549,"line_start":1046,"line_end":1046,"column_start":8,"column_end":28},"name":"deserialize_byte_buf","qualname":"::de::Deserializer::deserialize_byte_buf","value":"pub fn deserialize_byte_buf<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a byte array and would\n benefit from taking ownership of buffered data owned by the\n `Deserializer`.","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a byte array and would","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60175,"byte_end":60247,"line_start":1039,"line_end":1039,"column_start":5,"column_end":77}},{"value":"/ benefit from taking ownership of buffered data owned by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60252,"byte_end":60315,"line_start":1040,"line_end":1040,"column_start":5,"column_end":68}},{"value":"/ `Deserializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60320,"byte_end":60339,"line_start":1041,"line_end":1041,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60344,"byte_end":60347,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ If the `Visitor` would not benefit from taking ownership of `Vec<u8>`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60352,"byte_end":60425,"line_start":1043,"line_end":1043,"column_start":5,"column_end":78}},{"value":"/ data, indicate that to the `Deserializer` by using `deserialize_bytes`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60430,"byte_end":60504,"line_start":1044,"line_end":1044,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60509,"byte_end":60521,"line_start":1045,"line_end":1045,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60906,"byte_end":60924,"line_start":1055,"line_end":1055,"column_start":8,"column_end":26},"name":"deserialize_option","qualname":"::de::Deserializer::deserialize_option","value":"pub fn deserialize_option<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting an optional value.","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting an optional value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60644,"byte_end":60712,"line_start":1050,"line_end":1050,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60717,"byte_end":60720,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This allows deserializers that encode an optional value as a nullable","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60725,"byte_end":60798,"line_start":1052,"line_end":1052,"column_start":5,"column_end":78}},{"value":"/ value to convert the null value into `None` and a regular value into","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60803,"byte_end":60875,"line_start":1053,"line_end":1053,"column_start":5,"column_end":77}},{"value":"/ `Some(value)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":60880,"byte_end":60898,"line_start":1054,"line_end":1054,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61090,"byte_end":61106,"line_start":1060,"line_end":1060,"column_start":8,"column_end":24},"name":"deserialize_unit","qualname":"::de::Deserializer::deserialize_unit","value":"pub fn deserialize_unit<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a unit value.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a unit value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61019,"byte_end":61082,"line_start":1059,"line_end":1059,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61304,"byte_end":61327,"line_start":1066,"line_end":1066,"column_start":8,"column_end":31},"name":"deserialize_unit_struct","qualname":"::de::Deserializer::deserialize_unit_struct","value":"pub fn deserialize_unit_struct<V>(Self, &'static str, V)\n-> Result<V::Value, Self::Error> where V: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a unit struct with a\n particular name.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a unit struct with a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61201,"byte_end":61271,"line_start":1064,"line_end":1064,"column_start":5,"column_end":75}},{"value":"/ particular name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61276,"byte_end":61296,"line_start":1065,"line_end":1065,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61579,"byte_end":61605,"line_start":1076,"line_end":1076,"column_start":8,"column_end":34},"name":"deserialize_newtype_struct","qualname":"::de::Deserializer::deserialize_newtype_struct","value":"pub fn deserialize_newtype_struct<V>(Self, &'static str, V)\n-> Result<V::Value, Self::Error> where V: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a newtype struct with a\n particular name.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a newtype struct with a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61473,"byte_end":61546,"line_start":1074,"line_end":1074,"column_start":5,"column_end":78}},{"value":"/ particular name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61551,"byte_end":61571,"line_start":1075,"line_end":1075,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61830,"byte_end":61845,"line_start":1085,"line_end":1085,"column_start":8,"column_end":23},"name":"deserialize_seq","qualname":"::de::Deserializer::deserialize_seq","value":"pub fn deserialize_seq<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a sequence of values.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a sequence of values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61751,"byte_end":61822,"line_start":1084,"line_end":1084,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":62102,"byte_end":62119,"line_start":1091,"line_end":1091,"column_start":8,"column_end":25},"name":"deserialize_tuple","qualname":"::de::Deserializer::deserialize_tuple","value":"pub fn deserialize_tuple<V>(Self, usize, V) -> Result<V::Value, Self::Error>\nwhere V: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a sequence of values and\n knows how many values there are without looking at the serialized data.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a sequence of values and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":61940,"byte_end":62014,"line_start":1089,"line_end":1089,"column_start":5,"column_end":79}},{"value":"/ knows how many values there are without looking at the serialized data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":62019,"byte_end":62094,"line_start":1090,"line_end":1090,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":62351,"byte_end":62375,"line_start":1097,"line_end":1097,"column_start":8,"column_end":32},"name":"deserialize_tuple_struct","qualname":"::de::Deserializer::deserialize_tuple_struct","value":"pub fn deserialize_tuple_struct<V>(Self, &'static str, usize, V)\n-> Result<V::Value, Self::Error> where V: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a tuple struct with a\n particular name and number of fields.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a tuple struct with a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":62226,"byte_end":62297,"line_start":1095,"line_end":1095,"column_start":5,"column_end":76}},{"value":"/ particular name and number of fields.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":62302,"byte_end":62343,"line_start":1096,"line_end":1096,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":62624,"byte_end":62639,"line_start":1107,"line_end":1107,"column_start":8,"column_end":23},"name":"deserialize_map","qualname":"::de::Deserializer::deserialize_map","value":"pub fn deserialize_map<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a map of key-value pairs.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a map of key-value pairs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":62541,"byte_end":62616,"line_start":1106,"line_end":1106,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":62843,"byte_end":62861,"line_start":1113,"line_end":1113,"column_start":8,"column_end":26},"name":"deserialize_struct","qualname":"::de::Deserializer::deserialize_struct","value":"pub fn deserialize_struct<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value, Self::Error> where V: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting a struct with a particular\n name and fields.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting a struct with a particular","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":62734,"byte_end":62810,"line_start":1111,"line_end":1111,"column_start":5,"column_end":81}},{"value":"/ name and fields.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":62815,"byte_end":62835,"line_start":1112,"line_end":1112,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63173,"byte_end":63189,"line_start":1124,"line_end":1124,"column_start":8,"column_end":24},"name":"deserialize_enum","qualname":"::de::Deserializer::deserialize_enum","value":"pub fn deserialize_enum<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value, Self::Error> where V: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting an enum value with a\n particular name and possible variants.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting an enum value with a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63048,"byte_end":63118,"line_start":1122,"line_end":1122,"column_start":5,"column_end":75}},{"value":"/ particular name and possible variants.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63123,"byte_end":63165,"line_start":1123,"line_end":1123,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63510,"byte_end":63532,"line_start":1135,"line_end":1135,"column_start":8,"column_end":30},"name":"deserialize_identifier","qualname":"::de::Deserializer::deserialize_identifier","value":"pub fn deserialize_identifier<V>(Self, V) -> Result<V::Value, Self::Error>\nwhere V: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type is expecting the name of a struct\n field or the discriminant of an enum variant.\n","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type is expecting the name of a struct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63378,"byte_end":63448,"line_start":1133,"line_end":1133,"column_start":5,"column_end":75}},{"value":"/ field or the discriminant of an enum variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63453,"byte_end":63502,"line_start":1134,"line_end":1134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63846,"byte_end":63869,"line_start":1143,"line_end":1143,"column_start":8,"column_end":31},"name":"deserialize_ignored_any","qualname":"::de::Deserializer::deserialize_ignored_any","value":"pub fn deserialize_ignored_any<V>(Self, V) -> Result<V::Value, Self::Error>\nwhere V: Visitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Hint that the `Deserialize` type needs to deserialize a value whose type\n doesn't matter because it is ignored.","sig":null,"attributes":[{"value":"/ Hint that the `Deserialize` type needs to deserialize a value whose type","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63627,"byte_end":63703,"line_start":1139,"line_end":1139,"column_start":5,"column_end":81}},{"value":"/ doesn't matter because it is ignored.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63708,"byte_end":63749,"line_start":1140,"line_end":1140,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63754,"byte_end":63757,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ Deserializers for non-self-describing formats may not support this mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63762,"byte_end":63838,"line_start":1142,"line_end":1142,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66581,"byte_end":66598,"line_start":1214,"line_end":1214,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"::de::Deserializer::is_human_readable","value":"pub fn is_human_readable(&Self) -> bool","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Determine whether `Deserialize` implementations should expect to\n deserialize their human-readable form.","sig":null,"attributes":[{"value":"/ Determine whether `Deserialize` implementations should expect to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":63964,"byte_end":64032,"line_start":1147,"line_end":1147,"column_start":5,"column_end":73}},{"value":"/ deserialize their human-readable form.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64037,"byte_end":64079,"line_start":1148,"line_end":1148,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64084,"byte_end":64087,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ Some types have a human-readable form that may be somewhat expensive to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64092,"byte_end":64167,"line_start":1150,"line_end":1150,"column_start":5,"column_end":80}},{"value":"/ construct, as well as a binary form that is compact and efficient.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64172,"byte_end":64242,"line_start":1151,"line_end":1151,"column_start":5,"column_end":75}},{"value":"/ Generally text-based formats like JSON and YAML will prefer to use the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64247,"byte_end":64321,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/ human-readable one and binary formats like Bincode will prefer the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64326,"byte_end":64396,"line_start":1153,"line_end":1153,"column_start":5,"column_end":75}},{"value":"/ compact one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64401,"byte_end":64417,"line_start":1154,"line_end":1154,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64422,"byte_end":64425,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64430,"byte_end":64448,"line_start":1156,"line_end":1156,"column_start":5,"column_end":23}},{"value":"/ # use std::ops::Add;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64453,"byte_end":64477,"line_start":1157,"line_end":1157,"column_start":5,"column_end":29}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64482,"byte_end":64510,"line_start":1158,"line_end":1158,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64515,"byte_end":64520,"line_start":1159,"line_end":1159,"column_start":5,"column_end":10}},{"value":"/ # struct Timestamp;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64525,"byte_end":64548,"line_start":1160,"line_end":1160,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64553,"byte_end":64558,"line_start":1161,"line_end":1161,"column_start":5,"column_end":10}},{"value":"/ # impl Timestamp {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64563,"byte_end":64585,"line_start":1162,"line_end":1162,"column_start":5,"column_end":27}},{"value":"/ #     const EPOCH: Timestamp = Timestamp;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64590,"byte_end":64635,"line_start":1163,"line_end":1163,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64640,"byte_end":64647,"line_start":1164,"line_end":1164,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64652,"byte_end":64657,"line_start":1165,"line_end":1165,"column_start":5,"column_end":10}},{"value":"/ # impl FromStr for Timestamp {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64662,"byte_end":64696,"line_start":1166,"line_end":1166,"column_start":5,"column_end":39}},{"value":"/ #     type Err = String;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64701,"byte_end":64729,"line_start":1167,"line_end":1167,"column_start":5,"column_end":33}},{"value":"/ #     fn from_str(_: &str) -> Result<Self, Self::Err> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64734,"byte_end":64793,"line_start":1168,"line_end":1168,"column_start":5,"column_end":64}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64798,"byte_end":64828,"line_start":1169,"line_end":1169,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64833,"byte_end":64844,"line_start":1170,"line_end":1170,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64849,"byte_end":64856,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64861,"byte_end":64866,"line_start":1172,"line_end":1172,"column_start":5,"column_end":10}},{"value":"/ # struct Duration;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64871,"byte_end":64893,"line_start":1173,"line_end":1173,"column_start":5,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64898,"byte_end":64903,"line_start":1174,"line_end":1174,"column_start":5,"column_end":10}},{"value":"/ # impl Duration {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64908,"byte_end":64929,"line_start":1175,"line_end":1175,"column_start":5,"column_end":26}},{"value":"/ #     fn seconds(_: u64) -> Self { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64934,"byte_end":64991,"line_start":1176,"line_end":1176,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":64996,"byte_end":65003,"line_start":1177,"line_end":1177,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65008,"byte_end":65013,"line_start":1178,"line_end":1178,"column_start":5,"column_end":10}},{"value":"/ # impl Add<Duration> for Timestamp {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65018,"byte_end":65058,"line_start":1179,"line_end":1179,"column_start":5,"column_end":45}},{"value":"/ #     type Output = Timestamp;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65063,"byte_end":65097,"line_start":1180,"line_end":1180,"column_start":5,"column_end":39}},{"value":"/ #     fn add(self, _: Duration) -> Self::Output {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65102,"byte_end":65155,"line_start":1181,"line_end":1181,"column_start":5,"column_end":58}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65160,"byte_end":65190,"line_start":1182,"line_end":1182,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65195,"byte_end":65206,"line_start":1183,"line_end":1183,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65211,"byte_end":65218,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65223,"byte_end":65228,"line_start":1185,"line_end":1185,"column_start":5,"column_end":10}},{"value":"/ use serde::de::{self, Deserialize, Deserializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65233,"byte_end":65286,"line_start":1186,"line_end":1186,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65291,"byte_end":65294,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ impl<'de> Deserialize<'de> for Timestamp {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65299,"byte_end":65345,"line_start":1188,"line_end":1188,"column_start":5,"column_end":51}},{"value":"/     fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65350,"byte_end":65418,"line_start":1189,"line_end":1189,"column_start":5,"column_end":73}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65423,"byte_end":65436,"line_start":1190,"line_end":1190,"column_start":5,"column_end":18}},{"value":"/         D: Deserializer<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65441,"byte_end":65474,"line_start":1191,"line_end":1191,"column_start":5,"column_end":38}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65479,"byte_end":65488,"line_start":1192,"line_end":1192,"column_start":5,"column_end":14}},{"value":"/         if deserializer.is_human_readable() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65493,"byte_end":65542,"line_start":1193,"line_end":1193,"column_start":5,"column_end":54}},{"value":"/             // Deserialize from a human-readable string like \"2015-05-15T17:01:00Z\".","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65547,"byte_end":65635,"line_start":1194,"line_end":1194,"column_start":5,"column_end":93}},{"value":"/             let s = String::deserialize(deserializer)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65640,"byte_end":65699,"line_start":1195,"line_end":1195,"column_start":5,"column_end":64}},{"value":"/             Timestamp::from_str(&s).map_err(de::Error::custom)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65704,"byte_end":65770,"line_start":1196,"line_end":1196,"column_start":5,"column_end":71}},{"value":"/         } else {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65775,"byte_end":65795,"line_start":1197,"line_end":1197,"column_start":5,"column_end":25}},{"value":"/             // Deserialize from a compact binary representation, seconds since","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65800,"byte_end":65882,"line_start":1198,"line_end":1198,"column_start":5,"column_end":87}},{"value":"/             // the Unix epoch.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65887,"byte_end":65921,"line_start":1199,"line_end":1199,"column_start":5,"column_end":39}},{"value":"/             let n = u64::deserialize(deserializer)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65926,"byte_end":65982,"line_start":1200,"line_end":1200,"column_start":5,"column_end":61}},{"value":"/             Ok(Timestamp::EPOCH + Duration::seconds(n))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":65987,"byte_end":66046,"line_start":1201,"line_end":1201,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66051,"byte_end":66064,"line_start":1202,"line_end":1202,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66069,"byte_end":66078,"line_start":1203,"line_end":1203,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66083,"byte_end":66088,"line_start":1204,"line_end":1204,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66093,"byte_end":66100,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66105,"byte_end":66108,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method returns `true`. Data formats","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66113,"byte_end":66187,"line_start":1207,"line_end":1207,"column_start":5,"column_end":79}},{"value":"/ may override this to `false` to request a compact form for types that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66192,"byte_end":66265,"line_start":1208,"line_end":1208,"column_start":5,"column_end":78}},{"value":"/ support one. Note that modifying this method to change a format from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66270,"byte_end":66342,"line_start":1209,"line_end":1209,"column_start":5,"column_end":77}},{"value":"/ human-readable to compact or vice versa should be regarded as a breaking","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66347,"byte_end":66423,"line_start":1210,"line_end":1210,"column_start":5,"column_end":81}},{"value":"/ change, as a value serialized in human-readable mode is not required to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66428,"byte_end":66503,"line_start":1211,"line_end":1211,"column_start":5,"column_end":80}},{"value":"/ deserialize from the same data in compact mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66508,"byte_end":66559,"line_start":1212,"line_end":1212,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66564,"byte_end":66573,"line_start":1213,"line_end":1213,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1082},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67994,"byte_end":68001,"line_start":1263,"line_end":1263,"column_start":11,"column_end":18},"name":"Visitor","qualname":"::de::Visitor","value":"Visitor<'de>: Sized","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":7618},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":7620},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1136}],"decl_id":null,"docs":" This trait represents a visitor that walks through a deserializer.","sig":null,"attributes":[{"value":"/ This trait represents a visitor that walks through a deserializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66720,"byte_end":66790,"line_start":1221,"line_end":1221,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66791,"byte_end":66794,"line_start":1222,"line_end":1222,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66795,"byte_end":66809,"line_start":1223,"line_end":1223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66810,"byte_end":66813,"line_start":1224,"line_end":1224,"column_start":1,"column_end":4}},{"value":"/ The `'de` lifetime of this trait is the requirement for lifetime of data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66814,"byte_end":66890,"line_start":1225,"line_end":1225,"column_start":1,"column_end":77}},{"value":"/ that may be borrowed by `Self::Value`. See the page [Understanding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66891,"byte_end":66961,"line_start":1226,"line_end":1226,"column_start":1,"column_end":71}},{"value":"/ deserializer lifetimes] for a more detailed explanation of these lifetimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":66962,"byte_end":67041,"line_start":1227,"line_end":1227,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67042,"byte_end":67045,"line_start":1228,"line_end":1228,"column_start":1,"column_end":4}},{"value":"/ [Understanding deserializer lifetimes]: https://serde.rs/lifetimes.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67046,"byte_end":67121,"line_start":1229,"line_end":1229,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67122,"byte_end":67125,"line_start":1230,"line_end":1230,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67126,"byte_end":67139,"line_start":1231,"line_end":1231,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67140,"byte_end":67143,"line_start":1232,"line_end":1232,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67144,"byte_end":67162,"line_start":1233,"line_end":1233,"column_start":1,"column_end":19}},{"value":"/ # use std::fmt;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67163,"byte_end":67182,"line_start":1234,"line_end":1234,"column_start":1,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67183,"byte_end":67188,"line_start":1235,"line_end":1235,"column_start":1,"column_end":6}},{"value":"/ # use serde::de::{self, Unexpected, Visitor};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67189,"byte_end":67238,"line_start":1236,"line_end":1236,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67239,"byte_end":67244,"line_start":1237,"line_end":1237,"column_start":1,"column_end":6}},{"value":"/ /// A visitor that deserializes a long string - a string containing at least","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67245,"byte_end":67325,"line_start":1238,"line_end":1238,"column_start":1,"column_end":81}},{"value":"/ /// some minimum number of bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67326,"byte_end":67363,"line_start":1239,"line_end":1239,"column_start":1,"column_end":38}},{"value":"/ struct LongString {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67364,"byte_end":67387,"line_start":1240,"line_end":1240,"column_start":1,"column_end":24}},{"value":"/     min: usize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67388,"byte_end":67407,"line_start":1241,"line_end":1241,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67408,"byte_end":67413,"line_start":1242,"line_end":1242,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67414,"byte_end":67417,"line_start":1243,"line_end":1243,"column_start":1,"column_end":4}},{"value":"/ impl<'de> Visitor<'de> for LongString {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67418,"byte_end":67461,"line_start":1244,"line_end":1244,"column_start":1,"column_end":44}},{"value":"/     type Value = String;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67462,"byte_end":67490,"line_start":1245,"line_end":1245,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67491,"byte_end":67494,"line_start":1246,"line_end":1246,"column_start":1,"column_end":4}},{"value":"/     fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67495,"byte_end":67571,"line_start":1247,"line_end":1247,"column_start":1,"column_end":77}},{"value":"/         write!(formatter, \"a string containing at least {} bytes\", self.min)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67572,"byte_end":67652,"line_start":1248,"line_end":1248,"column_start":1,"column_end":81}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67653,"byte_end":67662,"line_start":1249,"line_end":1249,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67663,"byte_end":67666,"line_start":1250,"line_end":1250,"column_start":1,"column_end":4}},{"value":"/     fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67667,"byte_end":67731,"line_start":1251,"line_end":1251,"column_start":1,"column_end":65}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67732,"byte_end":67745,"line_start":1252,"line_end":1252,"column_start":1,"column_end":14}},{"value":"/         E: de::Error,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67746,"byte_end":67771,"line_start":1253,"line_end":1253,"column_start":1,"column_end":26}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67772,"byte_end":67781,"line_start":1254,"line_end":1254,"column_start":1,"column_end":10}},{"value":"/         if s.len() >= self.min {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67782,"byte_end":67818,"line_start":1255,"line_end":1255,"column_start":1,"column_end":37}},{"value":"/             Ok(s.to_owned())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67819,"byte_end":67851,"line_start":1256,"line_end":1256,"column_start":1,"column_end":33}},{"value":"/         } else {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67852,"byte_end":67872,"line_start":1257,"line_end":1257,"column_start":1,"column_end":21}},{"value":"/             Err(de::Error::invalid_value(Unexpected::Str(s), &self))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67873,"byte_end":67945,"line_start":1258,"line_end":1258,"column_start":1,"column_end":73}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67946,"byte_end":67959,"line_start":1259,"line_end":1259,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67960,"byte_end":67969,"line_start":1260,"line_end":1260,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67970,"byte_end":67975,"line_start":1261,"line_end":1261,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":67976,"byte_end":67983,"line_start":1262,"line_end":1262,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1084},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68069,"byte_end":68074,"line_start":1265,"line_end":1265,"column_start":10,"column_end":15},"name":"Value","qualname":"::de::Visitor::Value","value":"type Value;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The value produced by this visitor.\n","sig":null,"attributes":[{"value":"/ The value produced by this visitor.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68020,"byte_end":68059,"line_start":1264,"line_end":1264,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68857,"byte_end":68866,"line_start":1289,"line_end":1289,"column_start":8,"column_end":17},"name":"expecting","qualname":"::de::Visitor::expecting","value":"pub fn expecting(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" Format a message stating what data this Visitor expects to receive.","sig":null,"attributes":[{"value":"/ Format a message stating what data this Visitor expects to receive.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68081,"byte_end":68152,"line_start":1267,"line_end":1267,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68157,"byte_end":68160,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ This is used in error messages. The message should complete the sentence","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68165,"byte_end":68241,"line_start":1269,"line_end":1269,"column_start":5,"column_end":81}},{"value":"/ \"This Visitor expects to receive ...\", for example the message could be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68246,"byte_end":68321,"line_start":1270,"line_end":1270,"column_start":5,"column_end":80}},{"value":"/ \"an integer between 0 and 64\". The message should not be capitalized and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68326,"byte_end":68402,"line_start":1271,"line_end":1271,"column_start":5,"column_end":81}},{"value":"/ should not end with a period.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68407,"byte_end":68440,"line_start":1272,"line_end":1272,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68445,"byte_end":68448,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68453,"byte_end":68471,"line_start":1274,"line_end":1274,"column_start":5,"column_end":23}},{"value":"/ # use std::fmt;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68476,"byte_end":68495,"line_start":1275,"line_end":1275,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68500,"byte_end":68505,"line_start":1276,"line_end":1276,"column_start":5,"column_end":10}},{"value":"/ # struct S {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68510,"byte_end":68526,"line_start":1277,"line_end":1277,"column_start":5,"column_end":21}},{"value":"/ #     max: usize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68531,"byte_end":68552,"line_start":1278,"line_end":1278,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68557,"byte_end":68564,"line_start":1279,"line_end":1279,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68569,"byte_end":68574,"line_start":1280,"line_end":1280,"column_start":5,"column_end":10}},{"value":"/ # impl<'de> serde::de::Visitor<'de> for S {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68579,"byte_end":68626,"line_start":1281,"line_end":1281,"column_start":5,"column_end":52}},{"value":"/ #     type Value = ();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68631,"byte_end":68657,"line_start":1282,"line_end":1282,"column_start":5,"column_end":31}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68662,"byte_end":68667,"line_start":1283,"line_end":1283,"column_start":5,"column_end":10}},{"value":"/ fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68672,"byte_end":68744,"line_start":1284,"line_end":1284,"column_start":5,"column_end":77}},{"value":"/     write!(formatter, \"an integer between 0 and {}\", self.max)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68749,"byte_end":68815,"line_start":1285,"line_end":1285,"column_start":5,"column_end":71}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68820,"byte_end":68825,"line_start":1286,"line_end":1286,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68830,"byte_end":68837,"line_start":1287,"line_end":1287,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68842,"byte_end":68849,"line_start":1288,"line_end":1288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69036,"byte_end":69046,"line_start":1294,"line_end":1294,"column_start":8,"column_end":18},"name":"visit_bool","qualname":"::de::Visitor::visit_bool","value":"pub fn visit_bool<E>(Self, bool) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a boolean.","sig":null,"attributes":[{"value":"/ The input contains a boolean.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68927,"byte_end":68960,"line_start":1291,"line_end":1291,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68965,"byte_end":68968,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68973,"byte_end":69028,"line_start":1293,"line_end":1293,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69355,"byte_end":69363,"line_start":1306,"line_end":1306,"column_start":8,"column_end":16},"name":"visit_i8","qualname":"::de::Visitor::visit_i8","value":"pub fn visit_i8<E>(Self, i8) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains an `i8`.","sig":null,"attributes":[{"value":"/ The input contains an `i8`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69197,"byte_end":69228,"line_start":1301,"line_end":1301,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69233,"byte_end":69236,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to [`visit_i64`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69241,"byte_end":69298,"line_start":1303,"line_end":1303,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69303,"byte_end":69306,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ [`visit_i64`]: #method.visit_i64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69311,"byte_end":69347,"line_start":1305,"line_end":1305,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69643,"byte_end":69652,"line_start":1318,"line_end":1318,"column_start":8,"column_end":17},"name":"visit_i16","qualname":"::de::Visitor::visit_i16","value":"pub fn visit_i16<E>(Self, i16) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains an `i16`.","sig":null,"attributes":[{"value":"/ The input contains an `i16`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69484,"byte_end":69516,"line_start":1313,"line_end":1313,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69521,"byte_end":69524,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to [`visit_i64`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69529,"byte_end":69586,"line_start":1315,"line_end":1315,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69591,"byte_end":69594,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ [`visit_i64`]: #method.visit_i64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69599,"byte_end":69635,"line_start":1317,"line_end":1317,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69933,"byte_end":69942,"line_start":1330,"line_end":1330,"column_start":8,"column_end":17},"name":"visit_i32","qualname":"::de::Visitor::visit_i32","value":"pub fn visit_i32<E>(Self, i32) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains an `i32`.","sig":null,"attributes":[{"value":"/ The input contains an `i32`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69774,"byte_end":69806,"line_start":1325,"line_end":1325,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69811,"byte_end":69814,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to [`visit_i64`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69819,"byte_end":69876,"line_start":1327,"line_end":1327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69881,"byte_end":69884,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ [`visit_i64`]: #method.visit_i64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":69889,"byte_end":69925,"line_start":1329,"line_end":1329,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70172,"byte_end":70181,"line_start":1340,"line_end":1340,"column_start":8,"column_end":17},"name":"visit_i64","qualname":"::de::Visitor::visit_i64","value":"pub fn visit_i64<E>(Self, i64) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains an `i64`.","sig":null,"attributes":[{"value":"/ The input contains an `i64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70064,"byte_end":70096,"line_start":1337,"line_end":1337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70101,"byte_end":70104,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70109,"byte_end":70164,"line_start":1339,"line_end":1339,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7618},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70560,"byte_end":70570,"line_start":1352,"line_end":1352,"column_start":12,"column_end":22},"name":"visit_i128","qualname":"::de::Visitor::visit_i128","value":"pub fn visit_i128<E>(Self, i128) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a `i128`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70933,"byte_end":70941,"line_start":1366,"line_end":1366,"column_start":8,"column_end":16},"name":"visit_u8","qualname":"::de::Visitor::visit_u8","value":"pub fn visit_u8<E>(Self, u8) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a `u8`.","sig":null,"attributes":[{"value":"/ The input contains a `u8`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70776,"byte_end":70806,"line_start":1361,"line_end":1361,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70811,"byte_end":70814,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to [`visit_u64`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70819,"byte_end":70876,"line_start":1363,"line_end":1363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70881,"byte_end":70884,"line_start":1364,"line_end":1364,"column_start":5,"column_end":8}},{"value":"/ [`visit_u64`]: #method.visit_u64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":70889,"byte_end":70925,"line_start":1365,"line_end":1365,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71220,"byte_end":71229,"line_start":1378,"line_end":1378,"column_start":8,"column_end":17},"name":"visit_u16","qualname":"::de::Visitor::visit_u16","value":"pub fn visit_u16<E>(Self, u16) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a `u16`.","sig":null,"attributes":[{"value":"/ The input contains a `u16`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71062,"byte_end":71093,"line_start":1373,"line_end":1373,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71098,"byte_end":71101,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to [`visit_u64`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71106,"byte_end":71163,"line_start":1375,"line_end":1375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71168,"byte_end":71171,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ [`visit_u64`]: #method.visit_u64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71176,"byte_end":71212,"line_start":1377,"line_end":1377,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71509,"byte_end":71518,"line_start":1390,"line_end":1390,"column_start":8,"column_end":17},"name":"visit_u32","qualname":"::de::Visitor::visit_u32","value":"pub fn visit_u32<E>(Self, u32) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a `u32`.","sig":null,"attributes":[{"value":"/ The input contains a `u32`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71351,"byte_end":71382,"line_start":1385,"line_end":1385,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71387,"byte_end":71390,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to [`visit_u64`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71395,"byte_end":71452,"line_start":1387,"line_end":1387,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71457,"byte_end":71460,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ [`visit_u64`]: #method.visit_u64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71465,"byte_end":71501,"line_start":1389,"line_end":1389,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71747,"byte_end":71756,"line_start":1400,"line_end":1400,"column_start":8,"column_end":17},"name":"visit_u64","qualname":"::de::Visitor::visit_u64","value":"pub fn visit_u64<E>(Self, u64) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a `u64`.","sig":null,"attributes":[{"value":"/ The input contains a `u64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71640,"byte_end":71671,"line_start":1397,"line_end":1397,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71676,"byte_end":71679,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":71684,"byte_end":71739,"line_start":1399,"line_end":1399,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7620},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72137,"byte_end":72147,"line_start":1412,"line_end":1412,"column_start":12,"column_end":22},"name":"visit_u128","qualname":"::de::Visitor::visit_u128","value":"pub fn visit_u128<E>(Self, u128) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a `u128`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72512,"byte_end":72521,"line_start":1426,"line_end":1426,"column_start":8,"column_end":17},"name":"visit_f32","qualname":"::de::Visitor::visit_f32","value":"pub fn visit_f32<E>(Self, f32) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains an `f32`.","sig":null,"attributes":[{"value":"/ The input contains an `f32`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72353,"byte_end":72385,"line_start":1421,"line_end":1421,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72390,"byte_end":72393,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to [`visit_f64`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72398,"byte_end":72455,"line_start":1423,"line_end":1423,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72460,"byte_end":72463,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ [`visit_f64`]: #method.visit_f64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72468,"byte_end":72504,"line_start":1425,"line_end":1425,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72751,"byte_end":72760,"line_start":1436,"line_end":1436,"column_start":8,"column_end":17},"name":"visit_f64","qualname":"::de::Visitor::visit_f64","value":"pub fn visit_f64<E>(Self, f64) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains an `f64`.","sig":null,"attributes":[{"value":"/ The input contains an `f64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72643,"byte_end":72675,"line_start":1433,"line_end":1433,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72680,"byte_end":72683,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72688,"byte_end":72743,"line_start":1435,"line_end":1435,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73118,"byte_end":73128,"line_start":1450,"line_end":1450,"column_start":8,"column_end":18},"name":"visit_char","qualname":"::de::Visitor::visit_char","value":"pub fn visit_char<E>(Self, char) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a `char`.","sig":null,"attributes":[{"value":"/ The input contains a `char`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72911,"byte_end":72943,"line_start":1443,"line_end":1443,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72948,"byte_end":72951,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to [`visit_str`] as a one-character","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":72956,"byte_end":73031,"line_start":1445,"line_end":1445,"column_start":5,"column_end":80}},{"value":"/ string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73036,"byte_end":73047,"line_start":1446,"line_end":1446,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73052,"byte_end":73055,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ [`visit_str`]: #method.visit_str","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73060,"byte_end":73096,"line_start":1448,"line_end":1448,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73101,"byte_end":73110,"line_start":1449,"line_end":1449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73924,"byte_end":73933,"line_start":1468,"line_end":1468,"column_start":8,"column_end":17},"name":"visit_str","qualname":"::de::Visitor::visit_str","value":"pub fn visit_str<E>(Self, &str) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a string. The lifetime of the string is ephemeral and\n it may be destroyed after this method returns.","sig":null,"attributes":[{"value":"/ The input contains a string. The lifetime of the string is ephemeral and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73267,"byte_end":73343,"line_start":1457,"line_end":1457,"column_start":5,"column_end":81}},{"value":"/ it may be destroyed after this method returns.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73348,"byte_end":73398,"line_start":1458,"line_end":1458,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73403,"byte_end":73406,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ This method allows the `Deserializer` to avoid a copy by retaining","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73411,"byte_end":73481,"line_start":1460,"line_end":1460,"column_start":5,"column_end":75}},{"value":"/ ownership of any buffered data. `Deserialize` implementations that do","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73486,"byte_end":73559,"line_start":1461,"line_end":1461,"column_start":5,"column_end":78}},{"value":"/ not benefit from taking ownership of `String` data should indicate that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73564,"byte_end":73639,"line_start":1462,"line_end":1462,"column_start":5,"column_end":80}},{"value":"/ to the deserializer by using `Deserializer::deserialize_str` rather than","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73644,"byte_end":73720,"line_start":1463,"line_end":1463,"column_start":5,"column_end":81}},{"value":"/ `Deserializer::deserialize_string`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73725,"byte_end":73764,"line_start":1464,"line_end":1464,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73769,"byte_end":73772,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ It is never correct to implement `visit_string` without implementing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73777,"byte_end":73849,"line_start":1466,"line_end":1466,"column_start":5,"column_end":77}},{"value":"/ `visit_str`. Implement neither, both, or just `visit_str`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":73854,"byte_end":73916,"line_start":1467,"line_end":1467,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74529,"byte_end":74547,"line_start":1485,"line_end":1485,"column_start":8,"column_end":26},"name":"visit_borrowed_str","qualname":"::de::Visitor::visit_borrowed_str","value":"pub fn visit_borrowed_str<E>(Self, &'de str) -> Result<Self::Value, E> where\nE: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a string that lives at least as long as the\n `Deserializer`.","sig":null,"attributes":[{"value":"/ The input contains a string that lives at least as long as the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74083,"byte_end":74149,"line_start":1475,"line_end":1475,"column_start":5,"column_end":71}},{"value":"/ `Deserializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74154,"byte_end":74173,"line_start":1476,"line_end":1476,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74178,"byte_end":74181,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ This enables zero-copy deserialization of strings in some formats. For","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74186,"byte_end":74260,"line_start":1478,"line_end":1478,"column_start":5,"column_end":79}},{"value":"/ example JSON input containing the JSON string `\"borrowed\"` can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74265,"byte_end":74334,"line_start":1479,"line_end":1479,"column_start":5,"column_end":74}},{"value":"/ deserialized with zero copying into a `&'a str` as long as the input","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74339,"byte_end":74411,"line_start":1480,"line_end":1480,"column_start":5,"column_end":77}},{"value":"/ data outlives `'a`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74416,"byte_end":74439,"line_start":1481,"line_end":1481,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74444,"byte_end":74447,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to `visit_str`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74452,"byte_end":74507,"line_start":1483,"line_end":1483,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74512,"byte_end":74521,"line_start":1484,"line_end":1484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75536,"byte_end":75548,"line_start":1509,"line_end":1509,"column_start":8,"column_end":20},"name":"visit_string","qualname":"::de::Visitor::visit_string","value":"pub fn visit_string<E>(Self, String) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a string and ownership of the string is being given\n to the `Visitor`.","sig":null,"attributes":[{"value":"/ The input contains a string and ownership of the string is being given","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74667,"byte_end":74741,"line_start":1492,"line_end":1492,"column_start":5,"column_end":79}},{"value":"/ to the `Visitor`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74746,"byte_end":74767,"line_start":1493,"line_end":1493,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74772,"byte_end":74775,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ This method allows the `Visitor` to avoid a copy by taking ownership of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74780,"byte_end":74855,"line_start":1495,"line_end":1495,"column_start":5,"column_end":80}},{"value":"/ a string created by the `Deserializer`. `Deserialize` implementations","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74860,"byte_end":74933,"line_start":1496,"line_end":1496,"column_start":5,"column_end":78}},{"value":"/ that benefit from taking ownership of `String` data should indicate that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":74938,"byte_end":75014,"line_start":1497,"line_end":1497,"column_start":5,"column_end":81}},{"value":"/ to the deserializer by using `Deserializer::deserialize_string` rather","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75019,"byte_end":75093,"line_start":1498,"line_end":1498,"column_start":5,"column_end":79}},{"value":"/ than `Deserializer::deserialize_str`, although not every deserializer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75098,"byte_end":75171,"line_start":1499,"line_end":1499,"column_start":5,"column_end":78}},{"value":"/ will honor such a request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75176,"byte_end":75206,"line_start":1500,"line_end":1500,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75211,"byte_end":75214,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ It is never correct to implement `visit_string` without implementing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75219,"byte_end":75291,"line_start":1502,"line_end":1502,"column_start":5,"column_end":77}},{"value":"/ `visit_str`. Implement neither, both, or just `visit_str`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75296,"byte_end":75358,"line_start":1503,"line_end":1503,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75363,"byte_end":75366,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to `visit_str` and then drops the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75371,"byte_end":75444,"line_start":1505,"line_end":1505,"column_start":5,"column_end":78}},{"value":"/ `String`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75449,"byte_end":75462,"line_start":1506,"line_end":1506,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75467,"byte_end":75476,"line_start":1507,"line_end":1507,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75481,"byte_end":75528,"line_start":1508,"line_end":1508,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76343,"byte_end":76354,"line_start":1527,"line_end":1527,"column_start":8,"column_end":19},"name":"visit_bytes","qualname":"::de::Visitor::visit_bytes","value":"pub fn visit_bytes<E>(Self, &[u8]) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a byte array. The lifetime of the byte array is\n ephemeral and it may be destroyed after this method returns.","sig":null,"attributes":[{"value":"/ The input contains a byte array. The lifetime of the byte array is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75667,"byte_end":75737,"line_start":1516,"line_end":1516,"column_start":5,"column_end":75}},{"value":"/ ephemeral and it may be destroyed after this method returns.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75742,"byte_end":75806,"line_start":1517,"line_end":1517,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75811,"byte_end":75814,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ This method allows the `Deserializer` to avoid a copy by retaining","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75819,"byte_end":75889,"line_start":1519,"line_end":1519,"column_start":5,"column_end":75}},{"value":"/ ownership of any buffered data. `Deserialize` implementations that do","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75894,"byte_end":75967,"line_start":1520,"line_end":1520,"column_start":5,"column_end":78}},{"value":"/ not benefit from taking ownership of `Vec<u8>` data should indicate that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":75972,"byte_end":76048,"line_start":1521,"line_end":1521,"column_start":5,"column_end":81}},{"value":"/ to the deserializer by using `Deserializer::deserialize_bytes` rather","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76053,"byte_end":76126,"line_start":1522,"line_end":1522,"column_start":5,"column_end":78}},{"value":"/ than `Deserializer::deserialize_byte_buf`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76131,"byte_end":76177,"line_start":1523,"line_end":1523,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76182,"byte_end":76185,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ It is never correct to implement `visit_byte_buf` without implementing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76190,"byte_end":76264,"line_start":1525,"line_end":1525,"column_start":5,"column_end":79}},{"value":"/ `visit_bytes`. Implement neither, both, or just `visit_bytes`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76269,"byte_end":76335,"line_start":1526,"line_end":1526,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76948,"byte_end":76968,"line_start":1544,"line_end":1544,"column_start":8,"column_end":28},"name":"visit_borrowed_bytes","qualname":"::de::Visitor::visit_borrowed_bytes","value":"pub fn visit_borrowed_bytes<E>(Self, &'de [u8]) -> Result<Self::Value, E>\nwhere E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a byte array that lives at least as long as the\n `Deserializer`.","sig":null,"attributes":[{"value":"/ The input contains a byte array that lives at least as long as the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76526,"byte_end":76596,"line_start":1535,"line_end":1535,"column_start":5,"column_end":75}},{"value":"/ `Deserializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76601,"byte_end":76620,"line_start":1536,"line_end":1536,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76625,"byte_end":76628,"line_start":1537,"line_end":1537,"column_start":5,"column_end":8}},{"value":"/ This enables zero-copy deserialization of bytes in some formats. For","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76633,"byte_end":76705,"line_start":1538,"line_end":1538,"column_start":5,"column_end":77}},{"value":"/ example Bincode data containing bytes can be deserialized with zero","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76710,"byte_end":76781,"line_start":1539,"line_end":1539,"column_start":5,"column_end":76}},{"value":"/ copying into a `&'a [u8]` as long as the input data outlives `'a`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76786,"byte_end":76856,"line_start":1540,"line_end":1540,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76861,"byte_end":76864,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to `visit_bytes`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76869,"byte_end":76926,"line_start":1542,"line_end":1542,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":76931,"byte_end":76940,"line_start":1543,"line_end":1543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77981,"byte_end":77995,"line_start":1568,"line_end":1568,"column_start":8,"column_end":22},"name":"visit_byte_buf","qualname":"::de::Visitor::visit_byte_buf","value":"pub fn visit_byte_buf<E>(Self, Vec<u8>) -> Result<Self::Value, E> where\nE: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a byte array and ownership of the byte array is being\n given to the `Visitor`.","sig":null,"attributes":[{"value":"/ The input contains a byte array and ownership of the byte array is being","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77091,"byte_end":77167,"line_start":1551,"line_end":1551,"column_start":5,"column_end":81}},{"value":"/ given to the `Visitor`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77172,"byte_end":77199,"line_start":1552,"line_end":1552,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77204,"byte_end":77207,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ This method allows the `Visitor` to avoid a copy by taking ownership of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77212,"byte_end":77287,"line_start":1554,"line_end":1554,"column_start":5,"column_end":80}},{"value":"/ a byte buffer created by the `Deserializer`. `Deserialize`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77292,"byte_end":77354,"line_start":1555,"line_end":1555,"column_start":5,"column_end":67}},{"value":"/ implementations that benefit from taking ownership of `Vec<u8>` data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77359,"byte_end":77431,"line_start":1556,"line_end":1556,"column_start":5,"column_end":77}},{"value":"/ should indicate that to the deserializer by using","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77436,"byte_end":77489,"line_start":1557,"line_end":1557,"column_start":5,"column_end":58}},{"value":"/ `Deserializer::deserialize_byte_buf` rather than","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77494,"byte_end":77546,"line_start":1558,"line_end":1558,"column_start":5,"column_end":57}},{"value":"/ `Deserializer::deserialize_bytes`, although not every deserializer will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77551,"byte_end":77626,"line_start":1559,"line_end":1559,"column_start":5,"column_end":80}},{"value":"/ honor such a request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77631,"byte_end":77656,"line_start":1560,"line_end":1560,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77661,"byte_end":77664,"line_start":1561,"line_end":1561,"column_start":5,"column_end":8}},{"value":"/ It is never correct to implement `visit_byte_buf` without implementing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77669,"byte_end":77743,"line_start":1562,"line_end":1562,"column_start":5,"column_end":79}},{"value":"/ `visit_bytes`. Implement neither, both, or just `visit_bytes`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77748,"byte_end":77814,"line_start":1563,"line_end":1563,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77819,"byte_end":77822,"line_start":1564,"line_end":1564,"column_start":5,"column_end":8}},{"value":"/ The default implementation forwards to `visit_bytes` and then drops the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77827,"byte_end":77902,"line_start":1565,"line_end":1565,"column_start":5,"column_end":80}},{"value":"/ `Vec<u8>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77907,"byte_end":77921,"line_start":1566,"line_end":1566,"column_start":5,"column_end":19}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":77926,"byte_end":77973,"line_start":1567,"line_end":1567,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78243,"byte_end":78253,"line_start":1578,"line_end":1578,"column_start":8,"column_end":18},"name":"visit_none","qualname":"::de::Visitor::visit_none","value":"pub fn visit_none<E>(Self) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains an optional that is absent.","sig":null,"attributes":[{"value":"/ The input contains an optional that is absent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78117,"byte_end":78167,"line_start":1575,"line_end":1575,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78172,"byte_end":78175,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78180,"byte_end":78235,"line_start":1577,"line_end":1577,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78521,"byte_end":78531,"line_start":1588,"line_end":1588,"column_start":8,"column_end":18},"name":"visit_some","qualname":"::de::Visitor::visit_some","value":"pub fn visit_some<D>(Self, D) -> Result<Self::Value, D::Error> where\nD: Deserializer","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains an optional that is present.","sig":null,"attributes":[{"value":"/ The input contains an optional that is present.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78394,"byte_end":78445,"line_start":1585,"line_end":1585,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78450,"byte_end":78453,"line_start":1586,"line_end":1586,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78458,"byte_end":78513,"line_start":1587,"line_end":1587,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78849,"byte_end":78859,"line_start":1599,"line_end":1599,"column_start":8,"column_end":18},"name":"visit_unit","qualname":"::de::Visitor::visit_unit","value":"pub fn visit_unit<E>(Self) -> Result<Self::Value, E> where E: Error","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a unit `()`.","sig":null,"attributes":[{"value":"/ The input contains a unit `()`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78738,"byte_end":78773,"line_start":1596,"line_end":1596,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78778,"byte_end":78781,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78786,"byte_end":78841,"line_start":1598,"line_end":1598,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79215,"byte_end":79235,"line_start":1612,"line_end":1612,"column_start":8,"column_end":28},"name":"visit_newtype_struct","qualname":"::de::Visitor::visit_newtype_struct","value":"pub fn visit_newtype_struct<D>(Self, D) -> Result<Self::Value, D::Error> where\nD: Deserializer","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a newtype struct.","sig":null,"attributes":[{"value":"/ The input contains a newtype struct.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":78998,"byte_end":79038,"line_start":1606,"line_end":1606,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79043,"byte_end":79046,"line_start":1607,"line_end":1607,"column_start":5,"column_end":8}},{"value":"/ The content of the newtype struct may be read from the given","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79051,"byte_end":79115,"line_start":1608,"line_end":1608,"column_start":5,"column_end":69}},{"value":"/ `Deserializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79120,"byte_end":79139,"line_start":1609,"line_end":1609,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79144,"byte_end":79147,"line_start":1610,"line_end":1610,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79152,"byte_end":79207,"line_start":1611,"line_end":1611,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79571,"byte_end":79580,"line_start":1623,"line_end":1623,"column_start":8,"column_end":17},"name":"visit_seq","qualname":"::de::Visitor::visit_seq","value":"pub fn visit_seq<A>(Self, A) -> Result<Self::Value, A::Error> where\nA: SeqAccess","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a sequence of elements.","sig":null,"attributes":[{"value":"/ The input contains a sequence of elements.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79449,"byte_end":79495,"line_start":1620,"line_end":1620,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79500,"byte_end":79503,"line_start":1621,"line_end":1621,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79508,"byte_end":79563,"line_start":1622,"line_end":1622,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79878,"byte_end":79887,"line_start":1634,"line_end":1634,"column_start":8,"column_end":17},"name":"visit_map","qualname":"::de::Visitor::visit_map","value":"pub fn visit_map<A>(Self, A) -> Result<Self::Value, A::Error> where\nA: MapAccess","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains a key-value map.","sig":null,"attributes":[{"value":"/ The input contains a key-value map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79763,"byte_end":79802,"line_start":1631,"line_end":1631,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79807,"byte_end":79810,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":79815,"byte_end":79870,"line_start":1633,"line_end":1633,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80177,"byte_end":80187,"line_start":1645,"line_end":1645,"column_start":8,"column_end":18},"name":"visit_enum","qualname":"::de::Visitor::visit_enum","value":"pub fn visit_enum<A>(Self, A) -> Result<Self::Value, A::Error> where\nA: EnumAccess","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The input contains an enum.","sig":null,"attributes":[{"value":"/ The input contains an enum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80070,"byte_end":80101,"line_start":1642,"line_end":1642,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80106,"byte_end":80109,"line_start":1643,"line_end":1643,"column_start":5,"column_end":8}},{"value":"/ The default implementation fails with a type error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80114,"byte_end":80169,"line_start":1644,"line_end":1644,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80469,"byte_end":80500,"line_start":1655,"line_end":1655,"column_start":8,"column_end":39},"name":"__private_visit_untagged_option","qualname":"::de::Visitor::__private_visit_untagged_option","value":"pub fn __private_visit_untagged_option<D>(Self, D) -> Result<Self::Value, ()>\nwhere D: Deserializer","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1138},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81483,"byte_end":81492,"line_start":1684,"line_end":1684,"column_start":11,"column_end":20},"name":"SeqAccess","qualname":"::de::SeqAccess","value":"SeqAccess<'de>","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1145}],"decl_id":null,"docs":" Provides a `Visitor` access to each element of a sequence in the input.","sig":null,"attributes":[{"value":"/ Provides a `Visitor` access to each element of a sequence in the input.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80696,"byte_end":80771,"line_start":1665,"line_end":1665,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80772,"byte_end":80775,"line_start":1666,"line_end":1666,"column_start":1,"column_end":4}},{"value":"/ This is a trait that a `Deserializer` passes to a `Visitor` implementation,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80776,"byte_end":80855,"line_start":1667,"line_end":1667,"column_start":1,"column_end":80}},{"value":"/ which deserializes each item in a sequence.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80856,"byte_end":80903,"line_start":1668,"line_end":1668,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80904,"byte_end":80907,"line_start":1669,"line_end":1669,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80908,"byte_end":80922,"line_start":1670,"line_end":1670,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80923,"byte_end":80926,"line_start":1671,"line_end":1671,"column_start":1,"column_end":4}},{"value":"/ The `'de` lifetime of this trait is the lifetime of data that may be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":80927,"byte_end":80999,"line_start":1672,"line_end":1672,"column_start":1,"column_end":73}},{"value":"/ borrowed by deserialized sequence elements. See the page [Understanding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81000,"byte_end":81075,"line_start":1673,"line_end":1673,"column_start":1,"column_end":76}},{"value":"/ deserializer lifetimes] for a more detailed explanation of these lifetimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81076,"byte_end":81155,"line_start":1674,"line_end":1674,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81156,"byte_end":81159,"line_start":1675,"line_end":1675,"column_start":1,"column_end":4}},{"value":"/ [Understanding deserializer lifetimes]: https://serde.rs/lifetimes.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81160,"byte_end":81235,"line_start":1676,"line_end":1676,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81236,"byte_end":81239,"line_start":1677,"line_end":1677,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81240,"byte_end":81268,"line_start":1678,"line_end":1678,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81269,"byte_end":81272,"line_start":1679,"line_end":1679,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81273,"byte_end":81343,"line_start":1680,"line_end":1680,"column_start":1,"column_end":71}},{"value":"/ implementation of `SeqAccess` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81344,"byte_end":81407,"line_start":1681,"line_end":1681,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81408,"byte_end":81411,"line_start":1682,"line_end":1682,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81412,"byte_end":81472,"line_start":1683,"line_end":1683,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1140},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81606,"byte_end":81611,"line_start":1687,"line_end":1687,"column_start":10,"column_end":15},"name":"Error","qualname":"::de::SeqAccess::Error","value":"type Error: Error;","parent":{"krate":0,"index":1138},"children":[],"decl_id":null,"docs":" The error type that can be returned if some error occurs during\n deserialization.\n","sig":null,"attributes":[{"value":"/ The error type that can be returned if some error occurs during","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81504,"byte_end":81571,"line_start":1685,"line_end":1685,"column_start":5,"column_end":72}},{"value":"/ deserialization.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81576,"byte_end":81596,"line_start":1686,"line_end":1686,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81873,"byte_end":81890,"line_start":1694,"line_end":1694,"column_start":8,"column_end":25},"name":"next_element_seed","qualname":"::de::SeqAccess::next_element_seed","value":"pub fn next_element_seed<T>(&mut Self, T)\n-> Result<Option<T::Value>, Self::Error> where T: DeserializeSeed","parent":{"krate":0,"index":1138},"children":[],"decl_id":null,"docs":" This returns `Ok(Some(value))` for the next value in the sequence, or\n `Ok(None)` if there are no more remaining items.","sig":null,"attributes":[{"value":"/ This returns `Ok(Some(value))` for the next value in the sequence, or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81625,"byte_end":81698,"line_start":1689,"line_end":1689,"column_start":5,"column_end":78}},{"value":"/ `Ok(None)` if there are no more remaining items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81703,"byte_end":81755,"line_start":1690,"line_end":1690,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81760,"byte_end":81763,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ `Deserialize` implementations should typically use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81768,"byte_end":81822,"line_start":1692,"line_end":1692,"column_start":5,"column_end":59}},{"value":"/ `SeqAccess::next_element` instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":81827,"byte_end":81865,"line_start":1693,"line_end":1693,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":82320,"byte_end":82332,"line_start":1704,"line_end":1704,"column_start":8,"column_end":20},"name":"next_element","qualname":"::de::SeqAccess::next_element","value":"pub fn next_element<T>(&mut Self) -> Result<Option<T>, Self::Error> where\nT: Deserialize","parent":{"krate":0,"index":1138},"children":[],"decl_id":null,"docs":" This returns `Ok(Some(value))` for the next value in the sequence, or\n `Ok(None)` if there are no more remaining items.","sig":null,"attributes":[{"value":"/ This returns `Ok(Some(value))` for the next value in the sequence, or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":82003,"byte_end":82076,"line_start":1698,"line_end":1698,"column_start":5,"column_end":78}},{"value":"/ `Ok(None)` if there are no more remaining items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":82081,"byte_end":82133,"line_start":1699,"line_end":1699,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":82138,"byte_end":82141,"line_start":1700,"line_end":1700,"column_start":5,"column_end":8}},{"value":"/ This method exists as a convenience for `Deserialize` implementations.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":82146,"byte_end":82220,"line_start":1701,"line_end":1701,"column_start":5,"column_end":79}},{"value":"/ `SeqAccess` implementations should not override the default behavior.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":82225,"byte_end":82298,"line_start":1702,"line_end":1702,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":82303,"byte_end":82312,"line_start":1703,"line_end":1703,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":82574,"byte_end":82583,"line_start":1713,"line_end":1713,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::de::SeqAccess::size_hint","value":"pub fn size_hint(&Self) -> Option<usize>","parent":{"krate":0,"index":1138},"children":[],"decl_id":null,"docs":" Returns the number of elements remaining in the sequence, if known.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements remaining in the sequence, if known.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":82481,"byte_end":82552,"line_start":1711,"line_end":1711,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":82557,"byte_end":82566,"line_start":1712,"line_end":1712,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1156},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84006,"byte_end":84015,"line_start":1766,"line_end":1766,"column_start":11,"column_end":20},"name":"MapAccess","qualname":"::de::MapAccess","value":"MapAccess<'de>","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1173}],"decl_id":null,"docs":" Provides a `Visitor` access to each entry of a map in the input.","sig":null,"attributes":[{"value":"/ Provides a `Visitor` access to each entry of a map in the input.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83280,"byte_end":83348,"line_start":1748,"line_end":1748,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83349,"byte_end":83352,"line_start":1749,"line_end":1749,"column_start":1,"column_end":4}},{"value":"/ This is a trait that a `Deserializer` passes to a `Visitor` implementation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83353,"byte_end":83432,"line_start":1750,"line_end":1750,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83433,"byte_end":83436,"line_start":1751,"line_end":1751,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83437,"byte_end":83451,"line_start":1752,"line_end":1752,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83452,"byte_end":83455,"line_start":1753,"line_end":1753,"column_start":1,"column_end":4}},{"value":"/ The `'de` lifetime of this trait is the lifetime of data that may be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83456,"byte_end":83528,"line_start":1754,"line_end":1754,"column_start":1,"column_end":73}},{"value":"/ borrowed by deserialized map entries. See the page [Understanding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83529,"byte_end":83598,"line_start":1755,"line_end":1755,"column_start":1,"column_end":70}},{"value":"/ deserializer lifetimes] for a more detailed explanation of these lifetimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83599,"byte_end":83678,"line_start":1756,"line_end":1756,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83679,"byte_end":83682,"line_start":1757,"line_end":1757,"column_start":1,"column_end":4}},{"value":"/ [Understanding deserializer lifetimes]: https://serde.rs/lifetimes.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83683,"byte_end":83758,"line_start":1758,"line_end":1758,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83759,"byte_end":83762,"line_start":1759,"line_end":1759,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83763,"byte_end":83791,"line_start":1760,"line_end":1760,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83792,"byte_end":83795,"line_start":1761,"line_end":1761,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83796,"byte_end":83866,"line_start":1762,"line_end":1762,"column_start":1,"column_end":71}},{"value":"/ implementation of `MapAccess` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83867,"byte_end":83930,"line_start":1763,"line_end":1763,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83931,"byte_end":83934,"line_start":1764,"line_end":1764,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":83935,"byte_end":83995,"line_start":1765,"line_end":1765,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1158},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84129,"byte_end":84134,"line_start":1769,"line_end":1769,"column_start":10,"column_end":15},"name":"Error","qualname":"::de::MapAccess::Error","value":"type Error: Error;","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" The error type that can be returned if some error occurs during\n deserialization.\n","sig":null,"attributes":[{"value":"/ The error type that can be returned if some error occurs during","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84027,"byte_end":84094,"line_start":1767,"line_end":1767,"column_start":5,"column_end":72}},{"value":"/ deserialization.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84099,"byte_end":84119,"line_start":1768,"line_end":1768,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84412,"byte_end":84425,"line_start":1776,"line_end":1776,"column_start":8,"column_end":21},"name":"next_key_seed","qualname":"::de::MapAccess::next_key_seed","value":"pub fn next_key_seed<K>(&mut Self, K) -> Result<Option<K::Value>, Self::Error>\nwhere K: DeserializeSeed","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)`\n if there are no more remaining entries.","sig":null,"attributes":[{"value":"/ This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84148,"byte_end":84223,"line_start":1771,"line_end":1771,"column_start":5,"column_end":80}},{"value":"/ if there are no more remaining entries.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84228,"byte_end":84271,"line_start":1772,"line_end":1772,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84276,"byte_end":84279,"line_start":1773,"line_end":1773,"column_start":5,"column_end":8}},{"value":"/ `Deserialize` implementations should typically use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84284,"byte_end":84338,"line_start":1774,"line_end":1774,"column_start":5,"column_end":59}},{"value":"/ `MapAccess::next_key` or `MapAccess::next_entry` instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84343,"byte_end":84404,"line_start":1775,"line_end":1775,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84875,"byte_end":84890,"line_start":1789,"line_end":1789,"column_start":8,"column_end":23},"name":"next_value_seed","qualname":"::de::MapAccess::next_value_seed","value":"pub fn next_value_seed<V>(&mut Self, V) -> Result<V::Value, Self::Error> where\nV: DeserializeSeed","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" This returns a `Ok(value)` for the next value in the map.","sig":null,"attributes":[{"value":"/ This returns a `Ok(value)` for the next value in the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84538,"byte_end":84599,"line_start":1780,"line_end":1780,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84604,"byte_end":84607,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ `Deserialize` implementations should typically use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84612,"byte_end":84666,"line_start":1782,"line_end":1782,"column_start":5,"column_end":59}},{"value":"/ `MapAccess::next_value` instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84671,"byte_end":84707,"line_start":1783,"line_end":1783,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84712,"byte_end":84715,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84720,"byte_end":84732,"line_start":1785,"line_end":1785,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84737,"byte_end":84740,"line_start":1786,"line_end":1786,"column_start":5,"column_end":8}},{"value":"/ Calling `next_value_seed` before `next_key_seed` is incorrect and is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84745,"byte_end":84817,"line_start":1787,"line_end":1787,"column_start":5,"column_end":77}},{"value":"/ allowed to panic or return bogus results.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84822,"byte_end":84867,"line_start":1788,"line_end":1788,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85405,"byte_end":85420,"line_start":1802,"line_end":1802,"column_start":8,"column_end":23},"name":"next_entry_seed","qualname":"::de::MapAccess::next_entry_seed","value":"pub fn next_entry_seed<K, V>(&mut Self, K, V)\n-> Result<Option<(K::Value, V::Value)>, Self::Error> where K: DeserializeSeed,\nV: DeserializeSeed","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" This returns `Ok(Some((key, value)))` for the next (key-value) pair in\n the map, or `Ok(None)` if there are no more remaining items.","sig":null,"attributes":[{"value":"/ This returns `Ok(Some((key, value)))` for the next (key-value) pair in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":84995,"byte_end":85069,"line_start":1793,"line_end":1793,"column_start":5,"column_end":79}},{"value":"/ the map, or `Ok(None)` if there are no more remaining items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85074,"byte_end":85138,"line_start":1794,"line_end":1794,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85143,"byte_end":85146,"line_start":1795,"line_end":1795,"column_start":5,"column_end":8}},{"value":"/ `MapAccess` implementations should override the default behavior if a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85151,"byte_end":85224,"line_start":1796,"line_end":1796,"column_start":5,"column_end":78}},{"value":"/ more efficient implementation is possible.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85229,"byte_end":85275,"line_start":1797,"line_end":1797,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85280,"byte_end":85283,"line_start":1798,"line_end":1798,"column_start":5,"column_end":8}},{"value":"/ `Deserialize` implementations should typically use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85288,"byte_end":85342,"line_start":1799,"line_end":1799,"column_start":5,"column_end":59}},{"value":"/ `MapAccess::next_entry` instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85347,"byte_end":85383,"line_start":1800,"line_end":1800,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85388,"byte_end":85397,"line_start":1801,"line_end":1801,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86176,"byte_end":86184,"line_start":1826,"line_end":1826,"column_start":8,"column_end":16},"name":"next_key","qualname":"::de::MapAccess::next_key","value":"pub fn next_key<K>(&mut Self) -> Result<Option<K>, Self::Error> where\nK: Deserialize","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)`\n if there are no more remaining entries.","sig":null,"attributes":[{"value":"/ This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85866,"byte_end":85941,"line_start":1820,"line_end":1820,"column_start":5,"column_end":80}},{"value":"/ if there are no more remaining entries.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85946,"byte_end":85989,"line_start":1821,"line_end":1821,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":85994,"byte_end":85997,"line_start":1822,"line_end":1822,"column_start":5,"column_end":8}},{"value":"/ This method exists as a convenience for `Deserialize` implementations.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86002,"byte_end":86076,"line_start":1823,"line_end":1823,"column_start":5,"column_end":79}},{"value":"/ `MapAccess` implementations should not override the default behavior.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86081,"byte_end":86154,"line_start":1824,"line_end":1824,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86159,"byte_end":86168,"line_start":1825,"line_end":1825,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86727,"byte_end":86737,"line_start":1843,"line_end":1843,"column_start":8,"column_end":18},"name":"next_value","qualname":"::de::MapAccess::next_value","value":"pub fn next_value<V>(&mut Self) -> Result<V, Self::Error> where V: Deserialize","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" This returns a `Ok(value)` for the next value in the map.","sig":null,"attributes":[{"value":"/ This returns a `Ok(value)` for the next value in the map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86329,"byte_end":86390,"line_start":1833,"line_end":1833,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86395,"byte_end":86398,"line_start":1834,"line_end":1834,"column_start":5,"column_end":8}},{"value":"/ This method exists as a convenience for `Deserialize` implementations.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86403,"byte_end":86477,"line_start":1835,"line_end":1835,"column_start":5,"column_end":79}},{"value":"/ `MapAccess` implementations should not override the default behavior.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86482,"byte_end":86555,"line_start":1836,"line_end":1836,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86560,"byte_end":86563,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86568,"byte_end":86580,"line_start":1838,"line_end":1838,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86585,"byte_end":86588,"line_start":1839,"line_end":1839,"column_start":5,"column_end":8}},{"value":"/ Calling `next_value` before `next_key` is incorrect and is allowed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86593,"byte_end":86666,"line_start":1840,"line_end":1840,"column_start":5,"column_end":78}},{"value":"/ panic or return bogus results.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86671,"byte_end":86705,"line_start":1841,"line_end":1841,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86710,"byte_end":86719,"line_start":1842,"line_end":1842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":87206,"byte_end":87216,"line_start":1856,"line_end":1856,"column_start":8,"column_end":18},"name":"next_entry","qualname":"::de::MapAccess::next_entry","value":"pub fn next_entry<K, V>(&mut Self) -> Result<Option<(K, V)>, Self::Error>\nwhere K: Deserialize, V: Deserialize","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" This returns `Ok(Some((key, value)))` for the next (key-value) pair in\n the map, or `Ok(None)` if there are no more remaining items.","sig":null,"attributes":[{"value":"/ This returns `Ok(Some((key, value)))` for the next (key-value) pair in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86876,"byte_end":86950,"line_start":1850,"line_end":1850,"column_start":5,"column_end":79}},{"value":"/ the map, or `Ok(None)` if there are no more remaining items.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":86955,"byte_end":87019,"line_start":1851,"line_end":1851,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":87024,"byte_end":87027,"line_start":1852,"line_end":1852,"column_start":5,"column_end":8}},{"value":"/ This method exists as a convenience for `Deserialize` implementations.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":87032,"byte_end":87106,"line_start":1853,"line_end":1853,"column_start":5,"column_end":79}},{"value":"/ `MapAccess` implementations should not override the default behavior.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":87111,"byte_end":87184,"line_start":1854,"line_end":1854,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":87189,"byte_end":87198,"line_start":1855,"line_end":1855,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":87500,"byte_end":87509,"line_start":1866,"line_end":1866,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::de::MapAccess::size_hint","value":"pub fn size_hint(&Self) -> Option<usize>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Returns the number of entries remaining in the map, if known.\n","sig":null,"attributes":[{"value":"/ Returns the number of entries remaining in the map, if known.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":87413,"byte_end":87478,"line_start":1864,"line_end":1864,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":87483,"byte_end":87492,"line_start":1865,"line_end":1865,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1194},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89821,"byte_end":89831,"line_start":1958,"line_end":1958,"column_start":11,"column_end":21},"name":"EnumAccess","qualname":"::de::EnumAccess","value":"EnumAccess<'de>: Sized","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1200}],"decl_id":null,"docs":" Provides a `Visitor` access to the data of an enum in the input.","sig":null,"attributes":[{"value":"/ Provides a `Visitor` access to the data of an enum in the input.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89025,"byte_end":89093,"line_start":1939,"line_end":1939,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89094,"byte_end":89097,"line_start":1940,"line_end":1940,"column_start":1,"column_end":4}},{"value":"/ `EnumAccess` is created by the `Deserializer` and passed to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89098,"byte_end":89165,"line_start":1941,"line_end":1941,"column_start":1,"column_end":68}},{"value":"/ `Visitor` in order to identify which variant of an enum to deserialize.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89166,"byte_end":89241,"line_start":1942,"line_end":1942,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89242,"byte_end":89245,"line_start":1943,"line_end":1943,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89246,"byte_end":89260,"line_start":1944,"line_end":1944,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89261,"byte_end":89264,"line_start":1945,"line_end":1945,"column_start":1,"column_end":4}},{"value":"/ The `'de` lifetime of this trait is the lifetime of data that may be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89265,"byte_end":89337,"line_start":1946,"line_end":1946,"column_start":1,"column_end":73}},{"value":"/ borrowed by the deserialized enum variant. See the page [Understanding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89338,"byte_end":89412,"line_start":1947,"line_end":1947,"column_start":1,"column_end":75}},{"value":"/ deserializer lifetimes] for a more detailed explanation of these lifetimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89413,"byte_end":89492,"line_start":1948,"line_end":1948,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89493,"byte_end":89496,"line_start":1949,"line_end":1949,"column_start":1,"column_end":4}},{"value":"/ [Understanding deserializer lifetimes]: https://serde.rs/lifetimes.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89497,"byte_end":89572,"line_start":1950,"line_end":1950,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89573,"byte_end":89576,"line_start":1951,"line_end":1951,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89577,"byte_end":89605,"line_start":1952,"line_end":1952,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89606,"byte_end":89609,"line_start":1953,"line_end":1953,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89610,"byte_end":89680,"line_start":1954,"line_end":1954,"column_start":1,"column_end":71}},{"value":"/ implementation of `EnumAccess` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89681,"byte_end":89745,"line_start":1955,"line_end":1955,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89746,"byte_end":89749,"line_start":1956,"line_end":1956,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89750,"byte_end":89810,"line_start":1957,"line_end":1957,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1196},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89952,"byte_end":89957,"line_start":1961,"line_end":1961,"column_start":10,"column_end":15},"name":"Error","qualname":"::de::EnumAccess::Error","value":"type Error: Error;","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" The error type that can be returned if some error occurs during\n deserialization.\n","sig":null,"attributes":[{"value":"/ The error type that can be returned if some error occurs during","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89850,"byte_end":89917,"line_start":1959,"line_end":1959,"column_start":5,"column_end":72}},{"value":"/ deserialization.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89922,"byte_end":89942,"line_start":1960,"line_end":1960,"column_start":5,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":1197},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90071,"byte_end":90078,"line_start":1964,"line_end":1964,"column_start":10,"column_end":17},"name":"Variant","qualname":"::de::EnumAccess::Variant","value":"type Variant: VariantAccess<'de, Error = Self::Error>;","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" The `Visitor` that will be used to deserialize the content of the enum\n variant.\n","sig":null,"attributes":[{"value":"/ The `Visitor` that will be used to deserialize the content of the enum","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89970,"byte_end":90044,"line_start":1962,"line_end":1962,"column_start":5,"column_end":79}},{"value":"/ variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90049,"byte_end":90061,"line_start":1963,"line_end":1963,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90305,"byte_end":90317,"line_start":1970,"line_end":1970,"column_start":8,"column_end":20},"name":"variant_seed","qualname":"::de::EnumAccess::variant_seed","value":"pub fn variant_seed<V>(Self, V)\n-> Result<(V::Value, Self::Variant), Self::Error> where V: DeserializeSeed","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" `variant` is called to identify which variant to deserialize.","sig":null,"attributes":[{"value":"/ `variant` is called to identify which variant to deserialize.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90126,"byte_end":90191,"line_start":1966,"line_end":1966,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90196,"byte_end":90199,"line_start":1967,"line_end":1967,"column_start":5,"column_end":8}},{"value":"/ `Deserialize` implementations should typically use `EnumAccess::variant`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90204,"byte_end":90280,"line_start":1968,"line_end":1968,"column_start":5,"column_end":81}},{"value":"/ instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90285,"byte_end":90297,"line_start":1969,"line_end":1969,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90687,"byte_end":90694,"line_start":1979,"line_end":1979,"column_start":8,"column_end":15},"name":"variant","qualname":"::de::EnumAccess::variant","value":"pub fn variant<V>(Self) -> Result<(V, Self::Variant), Self::Error> where\nV: Deserialize","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" `variant` is called to identify which variant to deserialize.","sig":null,"attributes":[{"value":"/ `variant` is called to identify which variant to deserialize.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90434,"byte_end":90499,"line_start":1974,"line_end":1974,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90504,"byte_end":90507,"line_start":1975,"line_end":1975,"column_start":5,"column_end":8}},{"value":"/ This method exists as a convenience for `Deserialize` implementations.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90512,"byte_end":90586,"line_start":1976,"line_end":1976,"column_start":5,"column_end":79}},{"value":"/ `EnumAccess` implementations should not override the default behavior.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90591,"byte_end":90665,"line_start":1977,"line_end":1977,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90670,"byte_end":90679,"line_start":1978,"line_end":1978,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1202},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91590,"byte_end":91603,"line_start":2005,"line_end":2005,"column_start":11,"column_end":24},"name":"VariantAccess","qualname":"::de::VariantAccess","value":"VariantAccess<'de>: Sized","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212}],"decl_id":null,"docs":" `VariantAccess` is a visitor that is created by the `Deserializer` and\n passed to the `Deserialize` to deserialize the content of a particular enum\n variant.","sig":null,"attributes":[{"value":"/ `VariantAccess` is a visitor that is created by the `Deserializer` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90840,"byte_end":90914,"line_start":1987,"line_end":1987,"column_start":1,"column_end":75}},{"value":"/ passed to the `Deserialize` to deserialize the content of a particular enum","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90915,"byte_end":90994,"line_start":1988,"line_end":1988,"column_start":1,"column_end":80}},{"value":"/ variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":90995,"byte_end":91007,"line_start":1989,"line_end":1989,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91008,"byte_end":91011,"line_start":1990,"line_end":1990,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91012,"byte_end":91026,"line_start":1991,"line_end":1991,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91027,"byte_end":91030,"line_start":1992,"line_end":1992,"column_start":1,"column_end":4}},{"value":"/ The `'de` lifetime of this trait is the lifetime of data that may be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91031,"byte_end":91103,"line_start":1993,"line_end":1993,"column_start":1,"column_end":73}},{"value":"/ borrowed by the deserialized enum variant. See the page [Understanding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91104,"byte_end":91178,"line_start":1994,"line_end":1994,"column_start":1,"column_end":75}},{"value":"/ deserializer lifetimes] for a more detailed explanation of these lifetimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91179,"byte_end":91258,"line_start":1995,"line_end":1995,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91259,"byte_end":91262,"line_start":1996,"line_end":1996,"column_start":1,"column_end":4}},{"value":"/ [Understanding deserializer lifetimes]: https://serde.rs/lifetimes.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91263,"byte_end":91338,"line_start":1997,"line_end":1997,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91339,"byte_end":91342,"line_start":1998,"line_end":1998,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91343,"byte_end":91371,"line_start":1999,"line_end":1999,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91372,"byte_end":91375,"line_start":2000,"line_end":2000,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91376,"byte_end":91446,"line_start":2001,"line_end":2001,"column_start":1,"column_end":71}},{"value":"/ implementation of `VariantAccess` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91447,"byte_end":91514,"line_start":2002,"line_end":2002,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91515,"byte_end":91518,"line_start":2003,"line_end":2003,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91519,"byte_end":91579,"line_start":2004,"line_end":2004,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1204},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91771,"byte_end":91776,"line_start":2008,"line_end":2008,"column_start":10,"column_end":15},"name":"Error","qualname":"::de::VariantAccess::Error","value":"type Error: Error;","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" The error type that can be returned if some error occurs during\n deserialization. Must match the error type of our `EnumAccess`.\n","sig":null,"attributes":[{"value":"/ The error type that can be returned if some error occurs during","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91622,"byte_end":91689,"line_start":2006,"line_end":2006,"column_start":5,"column_end":72}},{"value":"/ deserialization. Must match the error type of our `EnumAccess`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91694,"byte_end":91761,"line_start":2007,"line_end":2007,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93110,"byte_end":93122,"line_start":2045,"line_end":2045,"column_start":8,"column_end":20},"name":"unit_variant","qualname":"::de::VariantAccess::unit_variant","value":"pub fn unit_variant(Self) -> Result<(), Self::Error>","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" Called when deserializing a variant with no values.","sig":null,"attributes":[{"value":"/ Called when deserializing a variant with no values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91790,"byte_end":91845,"line_start":2010,"line_end":2010,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91850,"byte_end":91853,"line_start":2011,"line_end":2011,"column_start":5,"column_end":8}},{"value":"/ If the data contains a different type of variant, the following","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91858,"byte_end":91925,"line_start":2012,"line_end":2012,"column_start":5,"column_end":72}},{"value":"/ `invalid_type` error should be constructed:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91930,"byte_end":91977,"line_start":2013,"line_end":2013,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91982,"byte_end":91985,"line_start":2014,"line_end":2014,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91990,"byte_end":92008,"line_start":2015,"line_end":2015,"column_start":5,"column_end":23}},{"value":"/ # use serde::de::{self, value, DeserializeSeed, Visitor, VariantAccess, Unexpected};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92013,"byte_end":92101,"line_start":2016,"line_end":2016,"column_start":5,"column_end":93}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92106,"byte_end":92111,"line_start":2017,"line_end":2017,"column_start":5,"column_end":10}},{"value":"/ # struct X;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92116,"byte_end":92131,"line_start":2018,"line_end":2018,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92136,"byte_end":92141,"line_start":2019,"line_end":2019,"column_start":5,"column_end":10}},{"value":"/ # impl<'de> VariantAccess<'de> for X {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92146,"byte_end":92188,"line_start":2020,"line_end":2020,"column_start":5,"column_end":47}},{"value":"/ #     type Error = value::Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92193,"byte_end":92229,"line_start":2021,"line_end":2021,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92234,"byte_end":92239,"line_start":2022,"line_end":2022,"column_start":5,"column_end":10}},{"value":"/ fn unit_variant(self) -> Result<(), Self::Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92244,"byte_end":92298,"line_start":2023,"line_end":2023,"column_start":5,"column_end":59}},{"value":"/     // What the data actually contained; suppose it is a tuple variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92303,"byte_end":92378,"line_start":2024,"line_end":2024,"column_start":5,"column_end":80}},{"value":"/     let unexp = Unexpected::TupleVariant;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92383,"byte_end":92428,"line_start":2025,"line_end":2025,"column_start":5,"column_end":50}},{"value":"/     Err(de::Error::invalid_type(unexp, &\"unit variant\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92433,"byte_end":92493,"line_start":2026,"line_end":2026,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92498,"byte_end":92503,"line_start":2027,"line_end":2027,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92508,"byte_end":92513,"line_start":2028,"line_end":2028,"column_start":5,"column_end":10}},{"value":"/ #     fn newtype_variant_seed<T>(self, _: T) -> Result<T::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92518,"byte_end":92599,"line_start":2029,"line_end":2029,"column_start":5,"column_end":86}},{"value":"/ #     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92604,"byte_end":92619,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"/ #         T: DeserializeSeed<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92624,"byte_end":92662,"line_start":2031,"line_end":2031,"column_start":5,"column_end":43}},{"value":"/ #     { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92667,"byte_end":92697,"line_start":2032,"line_end":2032,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92702,"byte_end":92707,"line_start":2033,"line_end":2033,"column_start":5,"column_end":10}},{"value":"/ #     fn tuple_variant<V>(self, _: usize, _: V) -> Result<V::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92712,"byte_end":92796,"line_start":2034,"line_end":2034,"column_start":5,"column_end":89}},{"value":"/ #     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92801,"byte_end":92816,"line_start":2035,"line_end":2035,"column_start":5,"column_end":20}},{"value":"/ #         V: Visitor<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92821,"byte_end":92851,"line_start":2036,"line_end":2036,"column_start":5,"column_end":35}},{"value":"/ #     { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92856,"byte_end":92886,"line_start":2037,"line_end":2037,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92891,"byte_end":92896,"line_start":2038,"line_end":2038,"column_start":5,"column_end":10}},{"value":"/ #     fn struct_variant<V>(self, _: &[&str], _: V) -> Result<V::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92901,"byte_end":92988,"line_start":2039,"line_end":2039,"column_start":5,"column_end":92}},{"value":"/ #     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":92993,"byte_end":93008,"line_start":2040,"line_end":2040,"column_start":5,"column_end":20}},{"value":"/ #         V: Visitor<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93013,"byte_end":93043,"line_start":2041,"line_end":2041,"column_start":5,"column_end":35}},{"value":"/ #     { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93048,"byte_end":93078,"line_start":2042,"line_end":2042,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93083,"byte_end":93090,"line_start":2043,"line_end":2043,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93095,"byte_end":93102,"line_start":2044,"line_end":2044,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94623,"byte_end":94643,"line_start":2087,"line_end":2087,"column_start":8,"column_end":28},"name":"newtype_variant_seed","qualname":"::de::VariantAccess::newtype_variant_seed","value":"pub fn newtype_variant_seed<T>(Self, T) -> Result<T::Value, Self::Error> where\nT: DeserializeSeed","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" Called when deserializing a variant with a single value.","sig":null,"attributes":[{"value":"/ Called when deserializing a variant with a single value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93162,"byte_end":93222,"line_start":2047,"line_end":2047,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93227,"byte_end":93230,"line_start":2048,"line_end":2048,"column_start":5,"column_end":8}},{"value":"/ `Deserialize` implementations should typically use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93235,"byte_end":93289,"line_start":2049,"line_end":2049,"column_start":5,"column_end":59}},{"value":"/ `VariantAccess::newtype_variant` instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93294,"byte_end":93339,"line_start":2050,"line_end":2050,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93344,"byte_end":93347,"line_start":2051,"line_end":2051,"column_start":5,"column_end":8}},{"value":"/ If the data contains a different type of variant, the following","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93352,"byte_end":93419,"line_start":2052,"line_end":2052,"column_start":5,"column_end":72}},{"value":"/ `invalid_type` error should be constructed:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93424,"byte_end":93471,"line_start":2053,"line_end":2053,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93476,"byte_end":93479,"line_start":2054,"line_end":2054,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93484,"byte_end":93502,"line_start":2055,"line_end":2055,"column_start":5,"column_end":23}},{"value":"/ # use serde::de::{self, value, DeserializeSeed, Visitor, VariantAccess, Unexpected};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93507,"byte_end":93595,"line_start":2056,"line_end":2056,"column_start":5,"column_end":93}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93600,"byte_end":93605,"line_start":2057,"line_end":2057,"column_start":5,"column_end":10}},{"value":"/ # struct X;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93610,"byte_end":93625,"line_start":2058,"line_end":2058,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93630,"byte_end":93635,"line_start":2059,"line_end":2059,"column_start":5,"column_end":10}},{"value":"/ # impl<'de> VariantAccess<'de> for X {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93640,"byte_end":93682,"line_start":2060,"line_end":2060,"column_start":5,"column_end":47}},{"value":"/ #     type Error = value::Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93687,"byte_end":93723,"line_start":2061,"line_end":2061,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93728,"byte_end":93733,"line_start":2062,"line_end":2062,"column_start":5,"column_end":10}},{"value":"/ #     fn unit_variant(self) -> Result<(), Self::Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93738,"byte_end":93798,"line_start":2063,"line_end":2063,"column_start":5,"column_end":65}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93803,"byte_end":93833,"line_start":2064,"line_end":2064,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93838,"byte_end":93849,"line_start":2065,"line_end":2065,"column_start":5,"column_end":16}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93854,"byte_end":93859,"line_start":2066,"line_end":2066,"column_start":5,"column_end":10}},{"value":"/ fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93864,"byte_end":93943,"line_start":2067,"line_end":2067,"column_start":5,"column_end":84}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93948,"byte_end":93957,"line_start":2068,"line_end":2068,"column_start":5,"column_end":14}},{"value":"/     T: DeserializeSeed<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93962,"byte_end":93994,"line_start":2069,"line_end":2069,"column_start":5,"column_end":37}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":93999,"byte_end":94004,"line_start":2070,"line_end":2070,"column_start":5,"column_end":10}},{"value":"/     // What the data actually contained; suppose it is a unit variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94009,"byte_end":94083,"line_start":2071,"line_end":2071,"column_start":5,"column_end":79}},{"value":"/     let unexp = Unexpected::UnitVariant;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94088,"byte_end":94132,"line_start":2072,"line_end":2072,"column_start":5,"column_end":49}},{"value":"/     Err(de::Error::invalid_type(unexp, &\"newtype variant\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94137,"byte_end":94200,"line_start":2073,"line_end":2073,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94205,"byte_end":94210,"line_start":2074,"line_end":2074,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94215,"byte_end":94220,"line_start":2075,"line_end":2075,"column_start":5,"column_end":10}},{"value":"/ #     fn tuple_variant<V>(self, _: usize, _: V) -> Result<V::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94225,"byte_end":94309,"line_start":2076,"line_end":2076,"column_start":5,"column_end":89}},{"value":"/ #     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94314,"byte_end":94329,"line_start":2077,"line_end":2077,"column_start":5,"column_end":20}},{"value":"/ #         V: Visitor<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94334,"byte_end":94364,"line_start":2078,"line_end":2078,"column_start":5,"column_end":35}},{"value":"/ #     { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94369,"byte_end":94399,"line_start":2079,"line_end":2079,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94404,"byte_end":94409,"line_start":2080,"line_end":2080,"column_start":5,"column_end":10}},{"value":"/ #     fn struct_variant<V>(self, _: &[&str], _: V) -> Result<V::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94414,"byte_end":94501,"line_start":2081,"line_end":2081,"column_start":5,"column_end":92}},{"value":"/ #     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94506,"byte_end":94521,"line_start":2082,"line_end":2082,"column_start":5,"column_end":20}},{"value":"/ #         V: Visitor<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94526,"byte_end":94556,"line_start":2083,"line_end":2083,"column_start":5,"column_end":35}},{"value":"/ #     { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94561,"byte_end":94591,"line_start":2084,"line_end":2084,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94596,"byte_end":94603,"line_start":2085,"line_end":2085,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94608,"byte_end":94615,"line_start":2086,"line_end":2086,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95002,"byte_end":95017,"line_start":2097,"line_end":2097,"column_start":8,"column_end":23},"name":"newtype_variant","qualname":"::de::VariantAccess::newtype_variant","value":"pub fn newtype_variant<T>(Self) -> Result<T, Self::Error> where T: Deserialize","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" Called when deserializing a variant with a single value.","sig":null,"attributes":[{"value":"/ Called when deserializing a variant with a single value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94743,"byte_end":94803,"line_start":2091,"line_end":2091,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94808,"byte_end":94811,"line_start":2092,"line_end":2092,"column_start":5,"column_end":8}},{"value":"/ This method exists as a convenience for `Deserialize` implementations.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94816,"byte_end":94890,"line_start":2093,"line_end":2093,"column_start":5,"column_end":79}},{"value":"/ `VariantAccess` implementations should not override the default","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94895,"byte_end":94962,"line_start":2094,"line_end":2094,"column_start":5,"column_end":72}},{"value":"/ behavior.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94967,"byte_end":94980,"line_start":2095,"line_end":2095,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":94985,"byte_end":94994,"line_start":2096,"line_end":2096,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96623,"byte_end":96636,"line_start":2147,"line_end":2147,"column_start":8,"column_end":21},"name":"tuple_variant","qualname":"::de::VariantAccess::tuple_variant","value":"pub fn tuple_variant<V>(Self, usize, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" Called when deserializing a tuple-like variant.","sig":null,"attributes":[{"value":"/ Called when deserializing a tuple-like variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95156,"byte_end":95207,"line_start":2104,"line_end":2104,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95212,"byte_end":95215,"line_start":2105,"line_end":2105,"column_start":5,"column_end":8}},{"value":"/ The `len` is the number of fields expected in the tuple variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95220,"byte_end":95288,"line_start":2106,"line_end":2106,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95293,"byte_end":95296,"line_start":2107,"line_end":2107,"column_start":5,"column_end":8}},{"value":"/ If the data contains a different type of variant, the following","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95301,"byte_end":95368,"line_start":2108,"line_end":2108,"column_start":5,"column_end":72}},{"value":"/ `invalid_type` error should be constructed:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95373,"byte_end":95420,"line_start":2109,"line_end":2109,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95425,"byte_end":95428,"line_start":2110,"line_end":2110,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95433,"byte_end":95451,"line_start":2111,"line_end":2111,"column_start":5,"column_end":23}},{"value":"/ # use serde::de::{self, value, DeserializeSeed, Visitor, VariantAccess, Unexpected};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95456,"byte_end":95544,"line_start":2112,"line_end":2112,"column_start":5,"column_end":93}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95549,"byte_end":95554,"line_start":2113,"line_end":2113,"column_start":5,"column_end":10}},{"value":"/ # struct X;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95559,"byte_end":95574,"line_start":2114,"line_end":2114,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95579,"byte_end":95584,"line_start":2115,"line_end":2115,"column_start":5,"column_end":10}},{"value":"/ # impl<'de> VariantAccess<'de> for X {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95589,"byte_end":95631,"line_start":2116,"line_end":2116,"column_start":5,"column_end":47}},{"value":"/ #     type Error = value::Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95636,"byte_end":95672,"line_start":2117,"line_end":2117,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95677,"byte_end":95682,"line_start":2118,"line_end":2118,"column_start":5,"column_end":10}},{"value":"/ #     fn unit_variant(self) -> Result<(), Self::Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95687,"byte_end":95747,"line_start":2119,"line_end":2119,"column_start":5,"column_end":65}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95752,"byte_end":95782,"line_start":2120,"line_end":2120,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95787,"byte_end":95798,"line_start":2121,"line_end":2121,"column_start":5,"column_end":16}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95803,"byte_end":95808,"line_start":2122,"line_end":2122,"column_start":5,"column_end":10}},{"value":"/ #     fn newtype_variant_seed<T>(self, _: T) -> Result<T::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95813,"byte_end":95894,"line_start":2123,"line_end":2123,"column_start":5,"column_end":86}},{"value":"/ #     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95899,"byte_end":95914,"line_start":2124,"line_end":2124,"column_start":5,"column_end":20}},{"value":"/ #         T: DeserializeSeed<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95919,"byte_end":95957,"line_start":2125,"line_end":2125,"column_start":5,"column_end":43}},{"value":"/ #     { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95962,"byte_end":95992,"line_start":2126,"line_end":2126,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":95997,"byte_end":96002,"line_start":2127,"line_end":2127,"column_start":5,"column_end":10}},{"value":"/ fn tuple_variant<V>(","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96007,"byte_end":96031,"line_start":2128,"line_end":2128,"column_start":5,"column_end":29}},{"value":"/     self,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96036,"byte_end":96049,"line_start":2129,"line_end":2129,"column_start":5,"column_end":18}},{"value":"/     _len: usize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96054,"byte_end":96074,"line_start":2130,"line_end":2130,"column_start":5,"column_end":25}},{"value":"/     _visitor: V,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96079,"byte_end":96099,"line_start":2131,"line_end":2131,"column_start":5,"column_end":25}},{"value":"/ ) -> Result<V::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96104,"byte_end":96142,"line_start":2132,"line_end":2132,"column_start":5,"column_end":43}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96147,"byte_end":96156,"line_start":2133,"line_end":2133,"column_start":5,"column_end":14}},{"value":"/     V: Visitor<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96161,"byte_end":96185,"line_start":2134,"line_end":2134,"column_start":5,"column_end":29}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96190,"byte_end":96195,"line_start":2135,"line_end":2135,"column_start":5,"column_end":10}},{"value":"/     // What the data actually contained; suppose it is a unit variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96200,"byte_end":96274,"line_start":2136,"line_end":2136,"column_start":5,"column_end":79}},{"value":"/     let unexp = Unexpected::UnitVariant;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96279,"byte_end":96323,"line_start":2137,"line_end":2137,"column_start":5,"column_end":49}},{"value":"/     Err(de::Error::invalid_type(unexp, &\"tuple variant\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96328,"byte_end":96389,"line_start":2138,"line_end":2138,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96394,"byte_end":96399,"line_start":2139,"line_end":2139,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96404,"byte_end":96409,"line_start":2140,"line_end":2140,"column_start":5,"column_end":10}},{"value":"/ #     fn struct_variant<V>(self, _: &[&str], _: V) -> Result<V::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96414,"byte_end":96501,"line_start":2141,"line_end":2141,"column_start":5,"column_end":92}},{"value":"/ #     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96506,"byte_end":96521,"line_start":2142,"line_end":2142,"column_start":5,"column_end":20}},{"value":"/ #         V: Visitor<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96526,"byte_end":96556,"line_start":2143,"line_end":2143,"column_start":5,"column_end":35}},{"value":"/ #     { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96561,"byte_end":96591,"line_start":2144,"line_end":2144,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96596,"byte_end":96603,"line_start":2145,"line_end":2145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96608,"byte_end":96615,"line_start":2146,"line_end":2146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98230,"byte_end":98244,"line_start":2194,"line_end":2194,"column_start":8,"column_end":22},"name":"struct_variant","qualname":"::de::VariantAccess::struct_variant","value":"pub fn struct_variant<V>(Self, &'static [&'static str], V)\n-> Result<V::Value, Self::Error> where V: Visitor","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" Called when deserializing a struct-like variant.","sig":null,"attributes":[{"value":"/ Called when deserializing a struct-like variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96743,"byte_end":96795,"line_start":2151,"line_end":2151,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96800,"byte_end":96803,"line_start":2152,"line_end":2152,"column_start":5,"column_end":8}},{"value":"/ The `fields` are the names of the fields of the struct variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96808,"byte_end":96875,"line_start":2153,"line_end":2153,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96880,"byte_end":96883,"line_start":2154,"line_end":2154,"column_start":5,"column_end":8}},{"value":"/ If the data contains a different type of variant, the following","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96888,"byte_end":96955,"line_start":2155,"line_end":2155,"column_start":5,"column_end":72}},{"value":"/ `invalid_type` error should be constructed:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":96960,"byte_end":97007,"line_start":2156,"line_end":2156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97012,"byte_end":97015,"line_start":2157,"line_end":2157,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97020,"byte_end":97038,"line_start":2158,"line_end":2158,"column_start":5,"column_end":23}},{"value":"/ # use serde::de::{self, value, DeserializeSeed, Visitor, VariantAccess, Unexpected};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97043,"byte_end":97131,"line_start":2159,"line_end":2159,"column_start":5,"column_end":93}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97136,"byte_end":97141,"line_start":2160,"line_end":2160,"column_start":5,"column_end":10}},{"value":"/ # struct X;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97146,"byte_end":97161,"line_start":2161,"line_end":2161,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97166,"byte_end":97171,"line_start":2162,"line_end":2162,"column_start":5,"column_end":10}},{"value":"/ # impl<'de> VariantAccess<'de> for X {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97176,"byte_end":97218,"line_start":2163,"line_end":2163,"column_start":5,"column_end":47}},{"value":"/ #     type Error = value::Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97223,"byte_end":97259,"line_start":2164,"line_end":2164,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97264,"byte_end":97269,"line_start":2165,"line_end":2165,"column_start":5,"column_end":10}},{"value":"/ #     fn unit_variant(self) -> Result<(), Self::Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97274,"byte_end":97334,"line_start":2166,"line_end":2166,"column_start":5,"column_end":65}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97339,"byte_end":97369,"line_start":2167,"line_end":2167,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97374,"byte_end":97385,"line_start":2168,"line_end":2168,"column_start":5,"column_end":16}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97390,"byte_end":97395,"line_start":2169,"line_end":2169,"column_start":5,"column_end":10}},{"value":"/ #     fn newtype_variant_seed<T>(self, _: T) -> Result<T::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97400,"byte_end":97481,"line_start":2170,"line_end":2170,"column_start":5,"column_end":86}},{"value":"/ #     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97486,"byte_end":97501,"line_start":2171,"line_end":2171,"column_start":5,"column_end":20}},{"value":"/ #         T: DeserializeSeed<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97506,"byte_end":97544,"line_start":2172,"line_end":2172,"column_start":5,"column_end":43}},{"value":"/ #     { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97549,"byte_end":97579,"line_start":2173,"line_end":2173,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97584,"byte_end":97589,"line_start":2174,"line_end":2174,"column_start":5,"column_end":10}},{"value":"/ #     fn tuple_variant<V>(self, _: usize, _: V) -> Result<V::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97594,"byte_end":97678,"line_start":2175,"line_end":2175,"column_start":5,"column_end":89}},{"value":"/ #     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97683,"byte_end":97698,"line_start":2176,"line_end":2176,"column_start":5,"column_end":20}},{"value":"/ #         V: Visitor<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97703,"byte_end":97733,"line_start":2177,"line_end":2177,"column_start":5,"column_end":35}},{"value":"/ #     { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97738,"byte_end":97768,"line_start":2178,"line_end":2178,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97773,"byte_end":97778,"line_start":2179,"line_end":2179,"column_start":5,"column_end":10}},{"value":"/ fn struct_variant<V>(","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97783,"byte_end":97808,"line_start":2180,"line_end":2180,"column_start":5,"column_end":30}},{"value":"/     self,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97813,"byte_end":97826,"line_start":2181,"line_end":2181,"column_start":5,"column_end":18}},{"value":"/     _fields: &'static [&'static str],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97831,"byte_end":97872,"line_start":2182,"line_end":2182,"column_start":5,"column_end":46}},{"value":"/     _visitor: V,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97877,"byte_end":97897,"line_start":2183,"line_end":2183,"column_start":5,"column_end":25}},{"value":"/ ) -> Result<V::Value, Self::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97902,"byte_end":97940,"line_start":2184,"line_end":2184,"column_start":5,"column_end":43}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97945,"byte_end":97954,"line_start":2185,"line_end":2185,"column_start":5,"column_end":14}},{"value":"/     V: Visitor<'de>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97959,"byte_end":97983,"line_start":2186,"line_end":2186,"column_start":5,"column_end":29}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97988,"byte_end":97993,"line_start":2187,"line_end":2187,"column_start":5,"column_end":10}},{"value":"/     // What the data actually contained; suppose it is a unit variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":97998,"byte_end":98072,"line_start":2188,"line_end":2188,"column_start":5,"column_end":79}},{"value":"/     let unexp = Unexpected::UnitVariant;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98077,"byte_end":98121,"line_start":2189,"line_end":2189,"column_start":5,"column_end":49}},{"value":"/     Err(de::Error::invalid_type(unexp, &\"struct variant\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98126,"byte_end":98188,"line_start":2190,"line_end":2190,"column_start":5,"column_end":67}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98193,"byte_end":98198,"line_start":2191,"line_end":2191,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98203,"byte_end":98210,"line_start":2192,"line_end":2192,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98215,"byte_end":98222,"line_start":2193,"line_end":2193,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1214},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99357,"byte_end":99373,"line_start":2237,"line_end":2237,"column_start":11,"column_end":27},"name":"IntoDeserializer","qualname":"::de::IntoDeserializer","value":"IntoDeserializer<'de, E: Error = value::Error>","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218}],"decl_id":null,"docs":" Converts an existing value into a `Deserializer` from which other values can\n be deserialized.","sig":null,"attributes":[{"value":"/ Converts an existing value into a `Deserializer` from which other values can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98483,"byte_end":98563,"line_start":2205,"line_end":2205,"column_start":1,"column_end":81}},{"value":"/ be deserialized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98564,"byte_end":98584,"line_start":2206,"line_end":2206,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98585,"byte_end":98588,"line_start":2207,"line_end":2207,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98589,"byte_end":98603,"line_start":2208,"line_end":2208,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98604,"byte_end":98607,"line_start":2209,"line_end":2209,"column_start":1,"column_end":4}},{"value":"/ The `'de` lifetime of this trait is the lifetime of data that may be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98608,"byte_end":98680,"line_start":2210,"line_end":2210,"column_start":1,"column_end":73}},{"value":"/ borrowed from the resulting `Deserializer`. See the page [Understanding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98681,"byte_end":98756,"line_start":2211,"line_end":2211,"column_start":1,"column_end":76}},{"value":"/ deserializer lifetimes] for a more detailed explanation of these lifetimes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98757,"byte_end":98836,"line_start":2212,"line_end":2212,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98837,"byte_end":98840,"line_start":2213,"line_end":2213,"column_start":1,"column_end":4}},{"value":"/ [Understanding deserializer lifetimes]: https://serde.rs/lifetimes.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98841,"byte_end":98916,"line_start":2214,"line_end":2214,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98917,"byte_end":98920,"line_start":2215,"line_end":2215,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98921,"byte_end":98934,"line_start":2216,"line_end":2216,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98935,"byte_end":98938,"line_start":2217,"line_end":2217,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98939,"byte_end":98957,"line_start":2218,"line_end":2218,"column_start":1,"column_end":19}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98958,"byte_end":98984,"line_start":2219,"line_end":2219,"column_start":1,"column_end":27}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":98985,"byte_end":99012,"line_start":2220,"line_end":2220,"column_start":1,"column_end":28}},{"value":"/ use serde::de::{value, IntoDeserializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99013,"byte_end":99058,"line_start":2221,"line_end":2221,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99059,"byte_end":99062,"line_start":2222,"line_end":2222,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99063,"byte_end":99089,"line_start":2223,"line_end":2223,"column_start":1,"column_end":27}},{"value":"/ enum Setting {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99090,"byte_end":99108,"line_start":2224,"line_end":2224,"column_start":1,"column_end":19}},{"value":"/     On,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99109,"byte_end":99120,"line_start":2225,"line_end":2225,"column_start":1,"column_end":12}},{"value":"/     Off,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99121,"byte_end":99133,"line_start":2226,"line_end":2226,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99134,"byte_end":99139,"line_start":2227,"line_end":2227,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99140,"byte_end":99143,"line_start":2228,"line_end":2228,"column_start":1,"column_end":4}},{"value":"/ impl FromStr for Setting {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99144,"byte_end":99174,"line_start":2229,"line_end":2229,"column_start":1,"column_end":31}},{"value":"/     type Err = value::Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99175,"byte_end":99207,"line_start":2230,"line_end":2230,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99208,"byte_end":99211,"line_start":2231,"line_end":2231,"column_start":1,"column_end":4}},{"value":"/     fn from_str(s: &str) -> Result<Self, Self::Err> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99212,"byte_end":99269,"line_start":2232,"line_end":2232,"column_start":1,"column_end":58}},{"value":"/         Self::deserialize(s.into_deserializer())","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99270,"byte_end":99322,"line_start":2233,"line_end":2233,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99323,"byte_end":99332,"line_start":2234,"line_end":2234,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99333,"byte_end":99338,"line_start":2235,"line_end":2235,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99339,"byte_end":99346,"line_start":2236,"line_end":2236,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1217},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99474,"byte_end":99486,"line_start":2239,"line_end":2239,"column_start":10,"column_end":22},"name":"Deserializer","qualname":"::de::IntoDeserializer::Deserializer","value":"type Deserializer: Deserializer<'de, Error = E>;","parent":{"krate":0,"index":1214},"children":[],"decl_id":null,"docs":" The type of the deserializer being converted into.\n","sig":null,"attributes":[{"value":"/ The type of the deserializer being converted into.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99410,"byte_end":99464,"line_start":2238,"line_end":2238,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99574,"byte_end":99591,"line_start":2242,"line_end":2242,"column_start":8,"column_end":25},"name":"into_deserializer","qualname":"::de::IntoDeserializer::into_deserializer","value":"pub fn into_deserializer(Self) -> Self::Deserializer","parent":{"krate":0,"index":1214},"children":[],"decl_id":null,"docs":" Convert this value into a deserializer.\n","sig":null,"attributes":[{"value":"/ Convert this value into a deserializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99523,"byte_end":99566,"line_start":2241,"line_end":2241,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":1223},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1304},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":8094},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1438},{"krate":0,"index":1444},{"krate":0,"index":1450},{"krate":0,"index":1456},{"krate":0,"index":1462},{"krate":0,"index":1473},{"krate":0,"index":1480},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1492}],"decl_id":null,"docs":" Generic data structure serialization framework.","sig":null,"attributes":[{"value":"/ Generic data structure serialization framework.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234324,"byte_end":234375,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234376,"byte_end":234379,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The two most important traits in this module are [`Serialize`] and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234380,"byte_end":234450,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ [`Serializer`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234451,"byte_end":234470,"line_start":4,"line_end":4,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234471,"byte_end":234474,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/  - **A type that implements `Serialize` is a data structure** that can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234475,"byte_end":234552,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/    serialized to any data format supported by Serde, and conversely","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234553,"byte_end":234624,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/  - **A type that implements `Serializer` is a data format** that can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234625,"byte_end":234697,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/    serialize any data structure supported by Serde.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234698,"byte_end":234753,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234754,"byte_end":234757,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # The Serialize trait","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234758,"byte_end":234783,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234784,"byte_end":234787,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Serde provides [`Serialize`] implementations for many Rust primitive and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234788,"byte_end":234864,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ standard library types. The complete list is below. All of these can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234865,"byte_end":234940,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ serialized using Serde out of the box.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234941,"byte_end":234983,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234984,"byte_end":234987,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Additionally, Serde provides a procedural macro called [`serde_derive`] to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":234988,"byte_end":235066,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ automatically generate [`Serialize`] implementations for structs and enums","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235067,"byte_end":235145,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ in your program. See the [derive section of the manual] for how to use this.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235146,"byte_end":235226,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235227,"byte_end":235230,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In rare cases it may be necessary to implement [`Serialize`] manually for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235231,"byte_end":235308,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ some type in your program. See the [Implementing `Serialize`] section of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235309,"byte_end":235389,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ manual for more about this.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235390,"byte_end":235421,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235422,"byte_end":235425,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Third-party crates may provide [`Serialize`] implementations for types that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235426,"byte_end":235505,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ they expose. For example the [`linked-hash-map`] crate provides a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235506,"byte_end":235575,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ [`LinkedHashMap<K, V>`] type that is serializable by Serde because the crate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235576,"byte_end":235656,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ provides an implementation of [`Serialize`] for it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235657,"byte_end":235712,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235713,"byte_end":235716,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # The Serializer trait","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235717,"byte_end":235743,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235744,"byte_end":235747,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`Serializer`] implementations are provided by third-party crates, for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235748,"byte_end":235822,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ example [`serde_json`], [`serde_yaml`] and [`bincode`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235823,"byte_end":235882,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235883,"byte_end":235886,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A partial list of well-maintained formats is given on the [Serde","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235887,"byte_end":235955,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ website][data formats].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235956,"byte_end":235983,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235984,"byte_end":235987,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Implementations of Serialize provided by Serde","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":235988,"byte_end":236040,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236041,"byte_end":236044,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/  - **Primitive types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236045,"byte_end":236072,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/    - bool","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236073,"byte_end":236086,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/    - i8, i16, i32, i64, i128, isize","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236087,"byte_end":236126,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/    - u8, u16, u32, u64, u128, usize","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236127,"byte_end":236166,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/    - f32, f64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236167,"byte_end":236184,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/    - char","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236185,"byte_end":236198,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/    - str","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236199,"byte_end":236211,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/    - &T and &mut T","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236212,"byte_end":236234,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/  - **Compound types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236235,"byte_end":236261,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/    - \\[T\\]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236262,"byte_end":236276,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/    - \\[T; 0\\] through \\[T; 32\\]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236277,"byte_end":236312,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/    - tuples up to size 16","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236313,"byte_end":236342,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/  - **Common standard library types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236343,"byte_end":236384,"line_start":52,"line_end":52,"column_start":1,"column_end":42}},{"value":"/    - String","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236385,"byte_end":236400,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/    - Option\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236401,"byte_end":236421,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/    - Result\\<T, E\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236422,"byte_end":236445,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/    - PhantomData\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236446,"byte_end":236471,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/  - **Wrapper types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236472,"byte_end":236497,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"/    - Box\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236498,"byte_end":236515,"line_start":58,"line_end":58,"column_start":1,"column_end":18}},{"value":"/    - Cow\\<'a, T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236516,"byte_end":236537,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/    - Cell\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236538,"byte_end":236556,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/    - RefCell\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236557,"byte_end":236578,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/    - Mutex\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236579,"byte_end":236598,"line_start":62,"line_end":62,"column_start":1,"column_end":20}},{"value":"/    - RwLock\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236599,"byte_end":236619,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/    - Rc\\<T\\>&emsp;*(if* features = [\"rc\"] *is enabled)*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236620,"byte_end":236679,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/    - Arc\\<T\\>&emsp;*(if* features = [\"rc\"] *is enabled)*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236680,"byte_end":236740,"line_start":65,"line_end":65,"column_start":1,"column_end":61}},{"value":"/  - **Collection types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236741,"byte_end":236769,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/    - BTreeMap\\<K, V\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236770,"byte_end":236795,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/    - BTreeSet\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236796,"byte_end":236818,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"/    - BinaryHeap\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236819,"byte_end":236843,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/    - HashMap\\<K, V, H\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236844,"byte_end":236871,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"/    - HashSet\\<T, H\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236872,"byte_end":236896,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/    - LinkedList\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236897,"byte_end":236921,"line_start":72,"line_end":72,"column_start":1,"column_end":25}},{"value":"/    - VecDeque\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236922,"byte_end":236944,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"/    - Vec\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236945,"byte_end":236962,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/  - **FFI types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236963,"byte_end":236984,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/    - CStr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236985,"byte_end":236998,"line_start":76,"line_end":76,"column_start":1,"column_end":14}},{"value":"/    - CString","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":236999,"byte_end":237015,"line_start":77,"line_end":77,"column_start":1,"column_end":17}},{"value":"/    - OsStr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237016,"byte_end":237030,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/    - OsString","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237031,"byte_end":237048,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/  - **Miscellaneous standard library types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237049,"byte_end":237097,"line_start":80,"line_end":80,"column_start":1,"column_end":49}},{"value":"/    - Duration","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237098,"byte_end":237115,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/    - SystemTime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237116,"byte_end":237135,"line_start":82,"line_end":82,"column_start":1,"column_end":20}},{"value":"/    - Path","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237136,"byte_end":237149,"line_start":83,"line_end":83,"column_start":1,"column_end":14}},{"value":"/    - PathBuf","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237150,"byte_end":237166,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/    - Range\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237167,"byte_end":237186,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"/    - RangeInclusive\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237187,"byte_end":237215,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/    - Bound\\<T\\>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237216,"byte_end":237235,"line_start":87,"line_end":87,"column_start":1,"column_end":20}},{"value":"/    - num::NonZero*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237236,"byte_end":237258,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/    - `!` *(unstable)*","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237259,"byte_end":237284,"line_start":89,"line_end":89,"column_start":1,"column_end":26}},{"value":"/  - **Net types**:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237285,"byte_end":237306,"line_start":90,"line_end":90,"column_start":1,"column_end":22}},{"value":"/    - IpAddr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237307,"byte_end":237322,"line_start":91,"line_end":91,"column_start":1,"column_end":16}},{"value":"/    - Ipv4Addr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237323,"byte_end":237340,"line_start":92,"line_end":92,"column_start":1,"column_end":18}},{"value":"/    - Ipv6Addr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237341,"byte_end":237358,"line_start":93,"line_end":93,"column_start":1,"column_end":18}},{"value":"/    - SocketAddr","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237359,"byte_end":237378,"line_start":94,"line_end":94,"column_start":1,"column_end":20}},{"value":"/    - SocketAddrV4","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237379,"byte_end":237400,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/    - SocketAddrV6","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237401,"byte_end":237422,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237423,"byte_end":237426,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [Implementing `Serialize`]: https://serde.rs/impl-serialize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237427,"byte_end":237495,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/ [`LinkedHashMap<K, V>`]: https://docs.rs/linked-hash-map/*/linked_hash_map/struct.LinkedHashMap.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237496,"byte_end":237600,"line_start":99,"line_end":99,"column_start":1,"column_end":105}},{"value":"/ [`Serialize`]: ../trait.Serialize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237601,"byte_end":237643,"line_start":100,"line_end":100,"column_start":1,"column_end":43}},{"value":"/ [`Serializer`]: ../trait.Serializer.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237644,"byte_end":237688,"line_start":101,"line_end":101,"column_start":1,"column_end":45}},{"value":"/ [`bincode`]: https://github.com/TyOverby/bincode","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237689,"byte_end":237741,"line_start":102,"line_end":102,"column_start":1,"column_end":53}},{"value":"/ [`linked-hash-map`]: https://crates.io/crates/linked-hash-map","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237742,"byte_end":237807,"line_start":103,"line_end":103,"column_start":1,"column_end":66}},{"value":"/ [`serde_derive`]: https://crates.io/crates/serde_derive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237808,"byte_end":237867,"line_start":104,"line_end":104,"column_start":1,"column_end":60}},{"value":"/ [`serde_json`]: https://github.com/serde-rs/json","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237868,"byte_end":237920,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ [`serde_yaml`]: https://github.com/dtolnay/serde-yaml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237921,"byte_end":237978,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"/ [derive section of the manual]: https://serde.rs/derive.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":237979,"byte_end":238043,"line_start":107,"line_end":107,"column_start":1,"column_end":65}},{"value":"/ [data formats]: https://serde.rs/#data-formats","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":238044,"byte_end":238094,"line_start":108,"line_end":108,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1316},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325570,"byte_end":325580,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"Impossible","qualname":"::ser::impossible::Impossible","value":"Impossible {  }","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321}],"decl_id":null,"docs":" Helper type for implementing a `Serializer` that does not support\n serializing one of the compound types.","sig":null,"attributes":[{"value":"/ Helper type for implementing a `Serializer` that does not support","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":323590,"byte_end":323659,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ serializing one of the compound types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":323660,"byte_end":323702,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":323703,"byte_end":323706,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type cannot be instantiated, but implements every one of the traits","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":323707,"byte_end":323783,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ corresponding to the [`Serializer`] compound types: [`SerializeSeq`],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":323784,"byte_end":323857,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ [`SerializeTuple`], [`SerializeTupleStruct`], [`SerializeTupleVariant`],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":323858,"byte_end":323934,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ [`SerializeMap`], [`SerializeStruct`], and [`SerializeStructVariant`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":323935,"byte_end":324009,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324010,"byte_end":324013,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324014,"byte_end":324032,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ # use serde::ser::{Serializer, Impossible};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324033,"byte_end":324080,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ # use serde::private::ser::Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324081,"byte_end":324118,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324119,"byte_end":324124,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ # struct MySerializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324125,"byte_end":324151,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324152,"byte_end":324157,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ impl Serializer for MySerializer {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324158,"byte_end":324196,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/     type Ok = ();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324197,"byte_end":324218,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     type Error = Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324219,"byte_end":324246,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324247,"byte_end":324250,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     type SerializeSeq = Impossible<(), Error>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324251,"byte_end":324301,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     /* other associated types */","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324302,"byte_end":324338,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324339,"byte_end":324342,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     /// This data format does not support serializing sequences.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324343,"byte_end":324411,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/     fn serialize_seq(self,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324412,"byte_end":324442,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"/                      len: Option<usize>)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324443,"byte_end":324487,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/                      -> Result<Self::SerializeSeq, Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324488,"byte_end":324551,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         // Given Impossible cannot be instantiated, the only","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324552,"byte_end":324616,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/         // thing we can do here is to return an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324617,"byte_end":324675,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ #         stringify! {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324676,"byte_end":324702,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/         Err(...)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324703,"byte_end":324723,"line_start":38,"line_end":38,"column_start":1,"column_end":21}},{"value":"/ #         };","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324724,"byte_end":324740,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324741,"byte_end":324771,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324772,"byte_end":324781,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324782,"byte_end":324785,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     /* other Serializer methods */","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324786,"byte_end":324824,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ #     serde::__serialize_unimplemented! {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324825,"byte_end":324870,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/ #         bool i8 i16 i32 i64 u8 u16 u32 u64 f32 f64 char str bytes none some","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324871,"byte_end":324952,"line_start":45,"line_end":45,"column_start":1,"column_end":82}},{"value":"/ #         unit unit_struct unit_variant newtype_struct newtype_variant","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":324953,"byte_end":325027,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ #         tuple tuple_struct tuple_variant map struct struct_variant","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325028,"byte_end":325100,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325101,"byte_end":325112,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325113,"byte_end":325118,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325119,"byte_end":325126,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325127,"byte_end":325130,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`Serializer`]: trait.Serializer.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325131,"byte_end":325172,"line_start":52,"line_end":52,"column_start":1,"column_end":42}},{"value":"/ [`SerializeSeq`]: trait.SerializeSeq.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325173,"byte_end":325218,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/ [`SerializeTuple`]: trait.SerializeTuple.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325219,"byte_end":325268,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/ [`SerializeTupleStruct`]: trait.SerializeTupleStruct.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325269,"byte_end":325330,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/ [`SerializeTupleVariant`]: trait.SerializeTupleVariant.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325331,"byte_end":325394,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ [`SerializeMap`]: trait.SerializeMap.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325395,"byte_end":325440,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/ [`SerializeStruct`]: trait.SerializeStruct.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325441,"byte_end":325492,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/ [`SerializeStructVariant`]: trait.SerializeStructVariant.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325493,"byte_end":325558,"line_start":59,"line_end":59,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1384},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242249,"byte_end":242258,"line_start":215,"line_end":215,"column_start":11,"column_end":20},"name":"Serialize","qualname":"::ser::Serialize","value":"Serialize","parent":null,"children":[{"krate":0,"index":1385}],"decl_id":null,"docs":" A **data structure** that can be serialized into any data format supported\n by Serde.","sig":null,"attributes":[{"value":"/ A **data structure** that can be serialized into any data format supported","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":240798,"byte_end":240876,"line_start":189,"line_end":189,"column_start":1,"column_end":79}},{"value":"/ by Serde.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":240877,"byte_end":240890,"line_start":190,"line_end":190,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":240891,"byte_end":240894,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ Serde provides `Serialize` implementations for many Rust primitive and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":240895,"byte_end":240969,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ standard library types. The complete list is [here][ser]. All of these can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":240970,"byte_end":241048,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ be serialized using Serde out of the box.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241049,"byte_end":241094,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241095,"byte_end":241098,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Additionally, Serde provides a procedural macro called [`serde_derive`] to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241099,"byte_end":241177,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ automatically generate `Serialize` implementations for structs and enums in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241178,"byte_end":241257,"line_start":197,"line_end":197,"column_start":1,"column_end":80}},{"value":"/ your program. See the [derive section of the manual] for how to use this.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241258,"byte_end":241335,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241336,"byte_end":241339,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ In rare cases it may be necessary to implement `Serialize` manually for some","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241340,"byte_end":241420,"line_start":200,"line_end":200,"column_start":1,"column_end":81}},{"value":"/ type in your program. See the [Implementing `Serialize`] section of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241421,"byte_end":241496,"line_start":201,"line_end":201,"column_start":1,"column_end":76}},{"value":"/ manual for more about this.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241497,"byte_end":241528,"line_start":202,"line_end":202,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241529,"byte_end":241532,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Third-party crates may provide `Serialize` implementations for types that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241533,"byte_end":241610,"line_start":204,"line_end":204,"column_start":1,"column_end":78}},{"value":"/ they expose. For example the [`linked-hash-map`] crate provides a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241611,"byte_end":241680,"line_start":205,"line_end":205,"column_start":1,"column_end":70}},{"value":"/ [`LinkedHashMap<K, V>`] type that is serializable by Serde because the crate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241681,"byte_end":241761,"line_start":206,"line_end":206,"column_start":1,"column_end":81}},{"value":"/ provides an implementation of `Serialize` for it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241762,"byte_end":241815,"line_start":207,"line_end":207,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241816,"byte_end":241819,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [Implementing `Serialize`]: https://serde.rs/impl-serialize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241820,"byte_end":241888,"line_start":209,"line_end":209,"column_start":1,"column_end":69}},{"value":"/ [`LinkedHashMap<K, V>`]: https://docs.rs/linked-hash-map/*/linked_hash_map/struct.LinkedHashMap.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241889,"byte_end":241993,"line_start":210,"line_end":210,"column_start":1,"column_end":105}},{"value":"/ [`linked-hash-map`]: https://crates.io/crates/linked-hash-map","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":241994,"byte_end":242059,"line_start":211,"line_end":211,"column_start":1,"column_end":66}},{"value":"/ [`serde_derive`]: https://crates.io/crates/serde_derive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242060,"byte_end":242119,"line_start":212,"line_end":212,"column_start":1,"column_end":60}},{"value":"/ [derive section of the manual]: https://serde.rs/derive.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242120,"byte_end":242184,"line_start":213,"line_end":213,"column_start":1,"column_end":65}},{"value":"/ [ser]: https://docs.serde.rs/serde/ser/index.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242185,"byte_end":242238,"line_start":214,"line_end":214,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243314,"byte_end":243323,"line_start":246,"line_end":246,"column_start":8,"column_end":17},"name":"serialize","qualname":"::ser::Serialize::serialize","value":"pub fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":{"krate":0,"index":1384},"children":[],"decl_id":null,"docs":" Serialize this value into the given Serde serializer.","sig":null,"attributes":[{"value":"/ Serialize this value into the given Serde serializer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242265,"byte_end":242322,"line_start":216,"line_end":216,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242327,"byte_end":242330,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ See the [Implementing `Serialize`] section of the manual for more","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242335,"byte_end":242404,"line_start":218,"line_end":218,"column_start":5,"column_end":74}},{"value":"/ information about how to implement this method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242409,"byte_end":242460,"line_start":219,"line_end":219,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242465,"byte_end":242468,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242473,"byte_end":242491,"line_start":221,"line_end":221,"column_start":5,"column_end":23}},{"value":"/ use serde::ser::{Serialize, SerializeStruct, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242496,"byte_end":242557,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242562,"byte_end":242565,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ struct Person {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242570,"byte_end":242589,"line_start":224,"line_end":224,"column_start":5,"column_end":24}},{"value":"/     name: String,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242594,"byte_end":242615,"line_start":225,"line_end":225,"column_start":5,"column_end":26}},{"value":"/     age: u8,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242620,"byte_end":242636,"line_start":226,"line_end":226,"column_start":5,"column_end":21}},{"value":"/     phones: Vec<String>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242641,"byte_end":242669,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242674,"byte_end":242679,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242684,"byte_end":242687,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ // This is what #[derive(Serialize)] would generate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242692,"byte_end":242748,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/ impl Serialize for Person {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242753,"byte_end":242784,"line_start":231,"line_end":231,"column_start":5,"column_end":36}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242789,"byte_end":242861,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242866,"byte_end":242879,"line_start":233,"line_end":233,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242884,"byte_end":242910,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242915,"byte_end":242924,"line_start":235,"line_end":235,"column_start":5,"column_end":14}},{"value":"/         let mut s = serializer.serialize_struct(\"Person\", 3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":242929,"byte_end":242995,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/         s.serialize_field(\"name\", &self.name)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243000,"byte_end":243051,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"/         s.serialize_field(\"age\", &self.age)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243056,"byte_end":243105,"line_start":238,"line_end":238,"column_start":5,"column_end":54}},{"value":"/         s.serialize_field(\"phones\", &self.phones)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243110,"byte_end":243165,"line_start":239,"line_end":239,"column_start":5,"column_end":60}},{"value":"/         s.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243170,"byte_end":243189,"line_start":240,"line_end":240,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243194,"byte_end":243203,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243208,"byte_end":243213,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243218,"byte_end":243225,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243230,"byte_end":243233,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ [Implementing `Serialize`]: https://serde.rs/impl-serialize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243238,"byte_end":243306,"line_start":245,"line_end":245,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":1387},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246989,"byte_end":246999,"line_start":330,"line_end":330,"column_start":11,"column_end":21},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer: Sized","parent":null,"children":[{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":8097},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":8098},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1434},{"krate":0,"index":1437}],"decl_id":null,"docs":" A **data format** that can serialize any data structure supported by Serde.","sig":null,"attributes":[{"value":"/ A **data format** that can serialize any data structure supported by Serde.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243494,"byte_end":243573,"line_start":253,"line_end":253,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243574,"byte_end":243577,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ The role of this trait is to define the serialization half of the [Serde","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243578,"byte_end":243654,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"/ data model], which is a way to categorize every Rust data structure into one","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243655,"byte_end":243735,"line_start":256,"line_end":256,"column_start":1,"column_end":81}},{"value":"/ of 29 possible types. Each method of the `Serializer` trait corresponds to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243736,"byte_end":243814,"line_start":257,"line_end":257,"column_start":1,"column_end":79}},{"value":"/ one of the types of the data model.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243815,"byte_end":243854,"line_start":258,"line_end":258,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243855,"byte_end":243858,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ Implementations of `Serialize` map themselves into this data model by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243859,"byte_end":243932,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ invoking exactly one of the `Serializer` methods.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243933,"byte_end":243986,"line_start":261,"line_end":261,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243987,"byte_end":243990,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ The types that make up the Serde data model are:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":243991,"byte_end":244043,"line_start":263,"line_end":263,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244044,"byte_end":244047,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/  - **14 primitive types**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244048,"byte_end":244077,"line_start":265,"line_end":265,"column_start":1,"column_end":30}},{"value":"/    - bool","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244078,"byte_end":244091,"line_start":266,"line_end":266,"column_start":1,"column_end":14}},{"value":"/    - i8, i16, i32, i64, i128","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244092,"byte_end":244124,"line_start":267,"line_end":267,"column_start":1,"column_end":33}},{"value":"/    - u8, u16, u32, u64, u128","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244125,"byte_end":244157,"line_start":268,"line_end":268,"column_start":1,"column_end":33}},{"value":"/    - f32, f64","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244158,"byte_end":244175,"line_start":269,"line_end":269,"column_start":1,"column_end":18}},{"value":"/    - char","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244176,"byte_end":244189,"line_start":270,"line_end":270,"column_start":1,"column_end":14}},{"value":"/  - **string**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244190,"byte_end":244207,"line_start":271,"line_end":271,"column_start":1,"column_end":18}},{"value":"/    - UTF-8 bytes with a length and no null terminator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244208,"byte_end":244266,"line_start":272,"line_end":272,"column_start":1,"column_end":59}},{"value":"/    - When serializing, all strings are handled equally. When deserializing,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244267,"byte_end":244346,"line_start":273,"line_end":273,"column_start":1,"column_end":80}},{"value":"/      there are three flavors of strings: transient, owned, and borrowed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244347,"byte_end":244423,"line_start":274,"line_end":274,"column_start":1,"column_end":77}},{"value":"/  - **byte array** - \\[u8\\]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244424,"byte_end":244454,"line_start":275,"line_end":275,"column_start":1,"column_end":31}},{"value":"/    - Similar to strings, during deserialization byte arrays can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244455,"byte_end":244525,"line_start":276,"line_end":276,"column_start":1,"column_end":71}},{"value":"/      transient, owned, or borrowed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244526,"byte_end":244565,"line_start":277,"line_end":277,"column_start":1,"column_end":40}},{"value":"/  - **option**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244566,"byte_end":244583,"line_start":278,"line_end":278,"column_start":1,"column_end":18}},{"value":"/    - Either none or some value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244584,"byte_end":244619,"line_start":279,"line_end":279,"column_start":1,"column_end":36}},{"value":"/  - **unit**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244620,"byte_end":244635,"line_start":280,"line_end":280,"column_start":1,"column_end":16}},{"value":"/    - The type of `()` in Rust. It represents an anonymous value containing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244636,"byte_end":244714,"line_start":281,"line_end":281,"column_start":1,"column_end":79}},{"value":"/      no data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244715,"byte_end":244732,"line_start":282,"line_end":282,"column_start":1,"column_end":18}},{"value":"/  - **unit_struct**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244733,"byte_end":244755,"line_start":283,"line_end":283,"column_start":1,"column_end":23}},{"value":"/    - For example `struct Unit` or `PhantomData<T>`. It represents a named","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244756,"byte_end":244833,"line_start":284,"line_end":284,"column_start":1,"column_end":78}},{"value":"/      value containing no data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244834,"byte_end":244868,"line_start":285,"line_end":285,"column_start":1,"column_end":35}},{"value":"/  - **unit_variant**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244869,"byte_end":244892,"line_start":286,"line_end":286,"column_start":1,"column_end":24}},{"value":"/    - For example the `E::A` and `E::B` in `enum E { A, B }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244893,"byte_end":244957,"line_start":287,"line_end":287,"column_start":1,"column_end":65}},{"value":"/  - **newtype_struct**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244958,"byte_end":244983,"line_start":288,"line_end":288,"column_start":1,"column_end":26}},{"value":"/    - For example `struct Millimeters(u8)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":244984,"byte_end":245030,"line_start":289,"line_end":289,"column_start":1,"column_end":47}},{"value":"/  - **newtype_variant**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245031,"byte_end":245057,"line_start":290,"line_end":290,"column_start":1,"column_end":27}},{"value":"/    - For example the `E::N` in `enum E { N(u8) }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245058,"byte_end":245112,"line_start":291,"line_end":291,"column_start":1,"column_end":55}},{"value":"/  - **seq**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245113,"byte_end":245127,"line_start":292,"line_end":292,"column_start":1,"column_end":15}},{"value":"/    - A variably sized heterogeneous sequence of values, for example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245128,"byte_end":245199,"line_start":293,"line_end":293,"column_start":1,"column_end":72}},{"value":"/      `Vec<T>` or `HashSet<T>`. When serializing, the length may or may not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245200,"byte_end":245278,"line_start":294,"line_end":294,"column_start":1,"column_end":79}},{"value":"/      be known before iterating through all the data. When deserializing,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245279,"byte_end":245355,"line_start":295,"line_end":295,"column_start":1,"column_end":77}},{"value":"/      the length is determined by looking at the serialized data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245356,"byte_end":245424,"line_start":296,"line_end":296,"column_start":1,"column_end":69}},{"value":"/  - **tuple**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245425,"byte_end":245441,"line_start":297,"line_end":297,"column_start":1,"column_end":17}},{"value":"/    - A statically sized heterogeneous sequence of values for which the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245442,"byte_end":245516,"line_start":298,"line_end":298,"column_start":1,"column_end":75}},{"value":"/      length will be known at deserialization time without looking at the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245517,"byte_end":245593,"line_start":299,"line_end":299,"column_start":1,"column_end":77}},{"value":"/      serialized data, for example `(u8,)` or `(String, u64, Vec<T>)` or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245594,"byte_end":245669,"line_start":300,"line_end":300,"column_start":1,"column_end":76}},{"value":"/      `[u64; 10]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245670,"byte_end":245691,"line_start":301,"line_end":301,"column_start":1,"column_end":22}},{"value":"/  - **tuple_struct**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245692,"byte_end":245715,"line_start":302,"line_end":302,"column_start":1,"column_end":24}},{"value":"/    - A named tuple, for example `struct Rgb(u8, u8, u8)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245716,"byte_end":245777,"line_start":303,"line_end":303,"column_start":1,"column_end":62}},{"value":"/  - **tuple_variant**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245778,"byte_end":245802,"line_start":304,"line_end":304,"column_start":1,"column_end":25}},{"value":"/    - For example the `E::T` in `enum E { T(u8, u8) }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245803,"byte_end":245861,"line_start":305,"line_end":305,"column_start":1,"column_end":59}},{"value":"/  - **map**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245862,"byte_end":245876,"line_start":306,"line_end":306,"column_start":1,"column_end":15}},{"value":"/    - A heterogeneous key-value pairing, for example `BTreeMap<K, V>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245877,"byte_end":245950,"line_start":307,"line_end":307,"column_start":1,"column_end":74}},{"value":"/  - **struct**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245951,"byte_end":245968,"line_start":308,"line_end":308,"column_start":1,"column_end":18}},{"value":"/    - A heterogeneous key-value pairing in which the keys are strings and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":245969,"byte_end":246045,"line_start":309,"line_end":309,"column_start":1,"column_end":77}},{"value":"/      will be known at deserialization time without looking at the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246046,"byte_end":246115,"line_start":310,"line_end":310,"column_start":1,"column_end":70}},{"value":"/      serialized data, for example `struct S { r: u8, g: u8, b: u8 }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246116,"byte_end":246189,"line_start":311,"line_end":311,"column_start":1,"column_end":74}},{"value":"/  - **struct_variant**","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246190,"byte_end":246215,"line_start":312,"line_end":312,"column_start":1,"column_end":26}},{"value":"/    - For example the `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246216,"byte_end":246290,"line_start":313,"line_end":313,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246291,"byte_end":246294,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ Many Serde serializers produce text or binary data as output, for example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246295,"byte_end":246372,"line_start":315,"line_end":315,"column_start":1,"column_end":78}},{"value":"/ JSON or Bincode. This is not a requirement of the `Serializer` trait, and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246373,"byte_end":246450,"line_start":316,"line_end":316,"column_start":1,"column_end":78}},{"value":"/ there are serializers that do not produce text or binary output. One example","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246451,"byte_end":246531,"line_start":317,"line_end":317,"column_start":1,"column_end":81}},{"value":"/ is the `serde_json::value::Serializer` (distinct from the main `serde_json`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246532,"byte_end":246611,"line_start":318,"line_end":318,"column_start":1,"column_end":80}},{"value":"/ serializer) that produces a `serde_json::Value` data structure in memory as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246612,"byte_end":246691,"line_start":319,"line_end":319,"column_start":1,"column_end":80}},{"value":"/ output.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246692,"byte_end":246703,"line_start":320,"line_end":320,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246704,"byte_end":246707,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ [Serde data model]: https://serde.rs/data-model.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246708,"byte_end":246764,"line_start":322,"line_end":322,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246765,"byte_end":246768,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246769,"byte_end":246797,"line_start":324,"line_end":324,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246798,"byte_end":246801,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website contains example code for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246802,"byte_end":246882,"line_start":326,"line_end":326,"column_start":1,"column_end":81}},{"value":"/ a basic JSON `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246883,"byte_end":246913,"line_start":327,"line_end":327,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246914,"byte_end":246917,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":246918,"byte_end":246978,"line_start":329,"line_end":329,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1388},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247510,"byte_end":247512,"line_start":339,"line_end":339,"column_start":10,"column_end":12},"name":"Ok","qualname":"::ser::Serializer::Ok","value":"type Ok;","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" The output type produced by this `Serializer` during successful\n serialization. Most serializers that produce text or binary output\n should set `Ok = ()` and serialize into an [`io::Write`] or buffer\n contained within the `Serializer` instance. Serializers that build\n in-memory data structures may be simplified by using `Ok` to propagate\n the data structure around.","sig":null,"attributes":[{"value":"/ The output type produced by this `Serializer` during successful","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247013,"byte_end":247080,"line_start":331,"line_end":331,"column_start":5,"column_end":72}},{"value":"/ serialization. Most serializers that produce text or binary output","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247085,"byte_end":247155,"line_start":332,"line_end":332,"column_start":5,"column_end":75}},{"value":"/ should set `Ok = ()` and serialize into an [`io::Write`] or buffer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247160,"byte_end":247230,"line_start":333,"line_end":333,"column_start":5,"column_end":75}},{"value":"/ contained within the `Serializer` instance. Serializers that build","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247235,"byte_end":247305,"line_start":334,"line_end":334,"column_start":5,"column_end":75}},{"value":"/ in-memory data structures may be simplified by using `Ok` to propagate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247310,"byte_end":247384,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ the data structure around.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247389,"byte_end":247419,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247424,"byte_end":247427,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [`io::Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247432,"byte_end":247500,"line_start":338,"line_end":338,"column_start":5,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":1389},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247592,"byte_end":247597,"line_start":342,"line_end":342,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::Serializer::Error","value":"type Error: Error;","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" The error type when some error occurs during serialization.\n","sig":null,"attributes":[{"value":"/ The error type when some error occurs during serialization.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247519,"byte_end":247582,"line_start":341,"line_end":341,"column_start":5,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1390},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247773,"byte_end":247785,"line_start":348,"line_end":348,"column_start":10,"column_end":22},"name":"SerializeSeq","qualname":"::ser::Serializer::SerializeSeq","value":"type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Type returned from [`serialize_seq`] for serializing the content of the\n sequence.","sig":null,"attributes":[{"value":"/ Type returned from [`serialize_seq`] for serializing the content of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247611,"byte_end":247686,"line_start":344,"line_end":344,"column_start":5,"column_end":80}},{"value":"/ sequence.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247691,"byte_end":247704,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247709,"byte_end":247712,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [`serialize_seq`]: #tymethod.serialize_seq","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247717,"byte_end":247763,"line_start":347,"line_end":347,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1391},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248007,"byte_end":248021,"line_start":354,"line_end":354,"column_start":10,"column_end":24},"name":"SerializeTuple","qualname":"::ser::Serializer::SerializeTuple","value":"type SerializeTuple: SerializeTuple<Ok = Self::Ok, Error = Self::Error>;","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Type returned from [`serialize_tuple`] for serializing the content of\n the tuple.","sig":null,"attributes":[{"value":"/ Type returned from [`serialize_tuple`] for serializing the content of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247842,"byte_end":247915,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ the tuple.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247920,"byte_end":247934,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247939,"byte_end":247942,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`serialize_tuple`]: #tymethod.serialize_tuple","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247947,"byte_end":247997,"line_start":353,"line_end":353,"column_start":5,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1392},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248273,"byte_end":248293,"line_start":360,"line_end":360,"column_start":10,"column_end":30},"name":"SerializeTupleStruct","qualname":"::ser::Serializer::SerializeTupleStruct","value":"type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Type returned from [`serialize_tuple_struct`] for serializing the\n content of the tuple struct.","sig":null,"attributes":[{"value":"/ Type returned from [`serialize_tuple_struct`] for serializing the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248080,"byte_end":248149,"line_start":356,"line_end":356,"column_start":5,"column_end":74}},{"value":"/ content of the tuple struct.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248154,"byte_end":248186,"line_start":357,"line_end":357,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248191,"byte_end":248194,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`serialize_tuple_struct`]: #tymethod.serialize_tuple_struct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248199,"byte_end":248263,"line_start":359,"line_end":359,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1393},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248555,"byte_end":248576,"line_start":366,"line_end":366,"column_start":10,"column_end":31},"name":"SerializeTupleVariant","qualname":"::ser::Serializer::SerializeTupleVariant","value":"type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Type returned from [`serialize_tuple_variant`] for serializing the\n content of the tuple variant.","sig":null,"attributes":[{"value":"/ Type returned from [`serialize_tuple_variant`] for serializing the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248358,"byte_end":248428,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/ content of the tuple variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248433,"byte_end":248466,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248471,"byte_end":248474,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ [`serialize_tuple_variant`]: #tymethod.serialize_tuple_variant","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248479,"byte_end":248545,"line_start":365,"line_end":365,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1394},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248799,"byte_end":248811,"line_start":372,"line_end":372,"column_start":10,"column_end":22},"name":"SerializeMap","qualname":"::ser::Serializer::SerializeMap","value":"type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Type returned from [`serialize_map`] for serializing the content of the\n map.","sig":null,"attributes":[{"value":"/ Type returned from [`serialize_map`] for serializing the content of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248642,"byte_end":248717,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248722,"byte_end":248730,"line_start":369,"line_end":369,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248735,"byte_end":248738,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ [`serialize_map`]: #tymethod.serialize_map","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248743,"byte_end":248789,"line_start":371,"line_end":371,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1395},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249037,"byte_end":249052,"line_start":378,"line_end":378,"column_start":10,"column_end":25},"name":"SerializeStruct","qualname":"::ser::Serializer::SerializeStruct","value":"type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Type returned from [`serialize_struct`] for serializing the content of\n the struct.","sig":null,"attributes":[{"value":"/ Type returned from [`serialize_struct`] for serializing the content of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248868,"byte_end":248942,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ the struct.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248947,"byte_end":248962,"line_start":375,"line_end":375,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248967,"byte_end":248970,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ [`serialize_struct`]: #tymethod.serialize_struct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":248975,"byte_end":249027,"line_start":377,"line_end":377,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1396},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249313,"byte_end":249335,"line_start":384,"line_end":384,"column_start":10,"column_end":32},"name":"SerializeStructVariant","qualname":"::ser::Serializer::SerializeStructVariant","value":"type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Type returned from [`serialize_struct_variant`] for serializing the\n content of the struct variant.","sig":null,"attributes":[{"value":"/ Type returned from [`serialize_struct_variant`] for serializing the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249112,"byte_end":249183,"line_start":380,"line_end":380,"column_start":5,"column_end":76}},{"value":"/ content of the struct variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249188,"byte_end":249222,"line_start":381,"line_end":381,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249227,"byte_end":249230,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`serialize_struct_variant`]: #tymethod.serialize_struct_variant","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249235,"byte_end":249303,"line_start":383,"line_end":383,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249823,"byte_end":249837,"line_start":402,"line_end":402,"column_start":8,"column_end":22},"name":"serialize_bool","qualname":"::ser::Serializer::serialize_bool","value":"pub fn serialize_bool(Self, bool) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a `bool` value.","sig":null,"attributes":[{"value":"/ Serialize a `bool` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249402,"byte_end":249431,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249436,"byte_end":249439,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249444,"byte_end":249462,"line_start":388,"line_end":388,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249467,"byte_end":249495,"line_start":389,"line_end":389,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249500,"byte_end":249505,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249510,"byte_end":249546,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249551,"byte_end":249556,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for bool {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249561,"byte_end":249590,"line_start":393,"line_end":393,"column_start":5,"column_end":34}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249595,"byte_end":249667,"line_start":394,"line_end":394,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249672,"byte_end":249685,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249690,"byte_end":249716,"line_start":396,"line_end":396,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249721,"byte_end":249730,"line_start":397,"line_end":397,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_bool(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249735,"byte_end":249779,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249784,"byte_end":249793,"line_start":399,"line_end":399,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249798,"byte_end":249803,"line_start":400,"line_end":400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249808,"byte_end":249815,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250497,"byte_end":250509,"line_start":424,"line_end":424,"column_start":8,"column_end":20},"name":"serialize_i8","qualname":"::ser::Serializer::serialize_i8","value":"pub fn serialize_i8(Self, i8) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize an `i8` value.","sig":null,"attributes":[{"value":"/ Serialize an `i8` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249892,"byte_end":249920,"line_start":404,"line_end":404,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249925,"byte_end":249928,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ If the format does not differentiate between `i8` and `i64`, a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":249933,"byte_end":249999,"line_start":406,"line_end":406,"column_start":5,"column_end":71}},{"value":"/ reasonable implementation would be to cast the value to `i64` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250004,"byte_end":250073,"line_start":407,"line_end":407,"column_start":5,"column_end":74}},{"value":"/ forward to `serialize_i64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250078,"byte_end":250109,"line_start":408,"line_end":408,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250114,"byte_end":250117,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250122,"byte_end":250140,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250145,"byte_end":250173,"line_start":411,"line_end":411,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250178,"byte_end":250183,"line_start":412,"line_end":412,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250188,"byte_end":250224,"line_start":413,"line_end":413,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250229,"byte_end":250234,"line_start":414,"line_end":414,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for i8 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250239,"byte_end":250266,"line_start":415,"line_end":415,"column_start":5,"column_end":32}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250271,"byte_end":250343,"line_start":416,"line_end":416,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250348,"byte_end":250361,"line_start":417,"line_end":417,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250366,"byte_end":250392,"line_start":418,"line_end":418,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250397,"byte_end":250406,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_i8(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250411,"byte_end":250453,"line_start":420,"line_end":420,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250458,"byte_end":250467,"line_start":421,"line_end":421,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250472,"byte_end":250477,"line_start":422,"line_end":422,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250482,"byte_end":250489,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251171,"byte_end":251184,"line_start":446,"line_end":446,"column_start":8,"column_end":21},"name":"serialize_i16","qualname":"::ser::Serializer::serialize_i16","value":"pub fn serialize_i16(Self, i16) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize an `i16` value.","sig":null,"attributes":[{"value":"/ Serialize an `i16` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250562,"byte_end":250591,"line_start":426,"line_end":426,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250596,"byte_end":250599,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ If the format does not differentiate between `i16` and `i64`, a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250604,"byte_end":250671,"line_start":428,"line_end":428,"column_start":5,"column_end":72}},{"value":"/ reasonable implementation would be to cast the value to `i64` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250676,"byte_end":250745,"line_start":429,"line_end":429,"column_start":5,"column_end":74}},{"value":"/ forward to `serialize_i64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250750,"byte_end":250781,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250786,"byte_end":250789,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250794,"byte_end":250812,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250817,"byte_end":250845,"line_start":433,"line_end":433,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250850,"byte_end":250855,"line_start":434,"line_end":434,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250860,"byte_end":250896,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250901,"byte_end":250906,"line_start":436,"line_end":436,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for i16 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250911,"byte_end":250939,"line_start":437,"line_end":437,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":250944,"byte_end":251016,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251021,"byte_end":251034,"line_start":439,"line_end":439,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251039,"byte_end":251065,"line_start":440,"line_end":440,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251070,"byte_end":251079,"line_start":441,"line_end":441,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_i16(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251084,"byte_end":251127,"line_start":442,"line_end":442,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251132,"byte_end":251141,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251146,"byte_end":251151,"line_start":444,"line_end":444,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251156,"byte_end":251163,"line_start":445,"line_end":445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251847,"byte_end":251860,"line_start":468,"line_end":468,"column_start":8,"column_end":21},"name":"serialize_i32","qualname":"::ser::Serializer::serialize_i32","value":"pub fn serialize_i32(Self, i32) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize an `i32` value.","sig":null,"attributes":[{"value":"/ Serialize an `i32` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251238,"byte_end":251267,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251272,"byte_end":251275,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ If the format does not differentiate between `i32` and `i64`, a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251280,"byte_end":251347,"line_start":450,"line_end":450,"column_start":5,"column_end":72}},{"value":"/ reasonable implementation would be to cast the value to `i64` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251352,"byte_end":251421,"line_start":451,"line_end":451,"column_start":5,"column_end":74}},{"value":"/ forward to `serialize_i64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251426,"byte_end":251457,"line_start":452,"line_end":452,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251462,"byte_end":251465,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251470,"byte_end":251488,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251493,"byte_end":251521,"line_start":455,"line_end":455,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251526,"byte_end":251531,"line_start":456,"line_end":456,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251536,"byte_end":251572,"line_start":457,"line_end":457,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251577,"byte_end":251582,"line_start":458,"line_end":458,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for i32 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251587,"byte_end":251615,"line_start":459,"line_end":459,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251620,"byte_end":251692,"line_start":460,"line_end":460,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251697,"byte_end":251710,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251715,"byte_end":251741,"line_start":462,"line_end":462,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251746,"byte_end":251755,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_i32(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251760,"byte_end":251803,"line_start":464,"line_end":464,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251808,"byte_end":251817,"line_start":465,"line_end":465,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251822,"byte_end":251827,"line_start":466,"line_end":466,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251832,"byte_end":251839,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252333,"byte_end":252346,"line_start":486,"line_end":486,"column_start":8,"column_end":21},"name":"serialize_i64","qualname":"::ser::Serializer::serialize_i64","value":"pub fn serialize_i64(Self, i64) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize an `i64` value.","sig":null,"attributes":[{"value":"/ Serialize an `i64` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251914,"byte_end":251943,"line_start":470,"line_end":470,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251948,"byte_end":251951,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251956,"byte_end":251974,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":251979,"byte_end":252007,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252012,"byte_end":252017,"line_start":474,"line_end":474,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252022,"byte_end":252058,"line_start":475,"line_end":475,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252063,"byte_end":252068,"line_start":476,"line_end":476,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for i64 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252073,"byte_end":252101,"line_start":477,"line_end":477,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252106,"byte_end":252178,"line_start":478,"line_end":478,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252183,"byte_end":252196,"line_start":479,"line_end":479,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252201,"byte_end":252227,"line_start":480,"line_end":480,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252232,"byte_end":252241,"line_start":481,"line_end":481,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_i64(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252246,"byte_end":252289,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252294,"byte_end":252303,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252308,"byte_end":252313,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":252318,"byte_end":252325,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8097},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253072,"byte_end":253086,"line_start":508,"line_end":508,"column_start":12,"column_end":26},"name":"serialize_i128","qualname":"::ser::Serializer::serialize_i128","value":"pub fn serialize_i128(Self, i128) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize an `i128` value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253841,"byte_end":253853,"line_start":534,"line_end":534,"column_start":8,"column_end":20},"name":"serialize_u8","qualname":"::ser::Serializer::serialize_u8","value":"pub fn serialize_u8(Self, u8) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a `u8` value.","sig":null,"attributes":[{"value":"/ Serialize a `u8` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253237,"byte_end":253264,"line_start":514,"line_end":514,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253269,"byte_end":253272,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ If the format does not differentiate between `u8` and `u64`, a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253277,"byte_end":253343,"line_start":516,"line_end":516,"column_start":5,"column_end":71}},{"value":"/ reasonable implementation would be to cast the value to `u64` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253348,"byte_end":253417,"line_start":517,"line_end":517,"column_start":5,"column_end":74}},{"value":"/ forward to `serialize_u64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253422,"byte_end":253453,"line_start":518,"line_end":518,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253458,"byte_end":253461,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253466,"byte_end":253484,"line_start":520,"line_end":520,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253489,"byte_end":253517,"line_start":521,"line_end":521,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253522,"byte_end":253527,"line_start":522,"line_end":522,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253532,"byte_end":253568,"line_start":523,"line_end":523,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253573,"byte_end":253578,"line_start":524,"line_end":524,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for u8 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253583,"byte_end":253610,"line_start":525,"line_end":525,"column_start":5,"column_end":32}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253615,"byte_end":253687,"line_start":526,"line_end":526,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253692,"byte_end":253705,"line_start":527,"line_end":527,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253710,"byte_end":253736,"line_start":528,"line_end":528,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253741,"byte_end":253750,"line_start":529,"line_end":529,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_u8(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253755,"byte_end":253797,"line_start":530,"line_end":530,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253802,"byte_end":253811,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253816,"byte_end":253821,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253826,"byte_end":253833,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254514,"byte_end":254527,"line_start":556,"line_end":556,"column_start":8,"column_end":21},"name":"serialize_u16","qualname":"::ser::Serializer::serialize_u16","value":"pub fn serialize_u16(Self, u16) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a `u16` value.","sig":null,"attributes":[{"value":"/ Serialize a `u16` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253906,"byte_end":253934,"line_start":536,"line_end":536,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253939,"byte_end":253942,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ If the format does not differentiate between `u16` and `u64`, a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":253947,"byte_end":254014,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/ reasonable implementation would be to cast the value to `u64` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254019,"byte_end":254088,"line_start":539,"line_end":539,"column_start":5,"column_end":74}},{"value":"/ forward to `serialize_u64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254093,"byte_end":254124,"line_start":540,"line_end":540,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254129,"byte_end":254132,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254137,"byte_end":254155,"line_start":542,"line_end":542,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254160,"byte_end":254188,"line_start":543,"line_end":543,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254193,"byte_end":254198,"line_start":544,"line_end":544,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254203,"byte_end":254239,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254244,"byte_end":254249,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for u16 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254254,"byte_end":254282,"line_start":547,"line_end":547,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254287,"byte_end":254359,"line_start":548,"line_end":548,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254364,"byte_end":254377,"line_start":549,"line_end":549,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254382,"byte_end":254408,"line_start":550,"line_end":550,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254413,"byte_end":254422,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_u16(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254427,"byte_end":254470,"line_start":552,"line_end":552,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254475,"byte_end":254484,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254489,"byte_end":254494,"line_start":554,"line_end":554,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254499,"byte_end":254506,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255189,"byte_end":255202,"line_start":578,"line_end":578,"column_start":8,"column_end":21},"name":"serialize_u32","qualname":"::ser::Serializer::serialize_u32","value":"pub fn serialize_u32(Self, u32) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a `u32` value.","sig":null,"attributes":[{"value":"/ Serialize a `u32` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254581,"byte_end":254609,"line_start":558,"line_end":558,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254614,"byte_end":254617,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ If the format does not differentiate between `u32` and `u64`, a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254622,"byte_end":254689,"line_start":560,"line_end":560,"column_start":5,"column_end":72}},{"value":"/ reasonable implementation would be to cast the value to `u64` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254694,"byte_end":254763,"line_start":561,"line_end":561,"column_start":5,"column_end":74}},{"value":"/ forward to `serialize_u64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254768,"byte_end":254799,"line_start":562,"line_end":562,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254804,"byte_end":254807,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254812,"byte_end":254830,"line_start":564,"line_end":564,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254835,"byte_end":254863,"line_start":565,"line_end":565,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254868,"byte_end":254873,"line_start":566,"line_end":566,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254878,"byte_end":254914,"line_start":567,"line_end":567,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254919,"byte_end":254924,"line_start":568,"line_end":568,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for u32 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254929,"byte_end":254957,"line_start":569,"line_end":569,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":254962,"byte_end":255034,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255039,"byte_end":255052,"line_start":571,"line_end":571,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255057,"byte_end":255083,"line_start":572,"line_end":572,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255088,"byte_end":255097,"line_start":573,"line_end":573,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_u32(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255102,"byte_end":255145,"line_start":574,"line_end":574,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255150,"byte_end":255159,"line_start":575,"line_end":575,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255164,"byte_end":255169,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255174,"byte_end":255181,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255674,"byte_end":255687,"line_start":596,"line_end":596,"column_start":8,"column_end":21},"name":"serialize_u64","qualname":"::ser::Serializer::serialize_u64","value":"pub fn serialize_u64(Self, u64) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a `u64` value.","sig":null,"attributes":[{"value":"/ Serialize a `u64` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255256,"byte_end":255284,"line_start":580,"line_end":580,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255289,"byte_end":255292,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255297,"byte_end":255315,"line_start":582,"line_end":582,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255320,"byte_end":255348,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255353,"byte_end":255358,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255363,"byte_end":255399,"line_start":585,"line_end":585,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255404,"byte_end":255409,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for u64 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255414,"byte_end":255442,"line_start":587,"line_end":587,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255447,"byte_end":255519,"line_start":588,"line_end":588,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255524,"byte_end":255537,"line_start":589,"line_end":589,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255542,"byte_end":255568,"line_start":590,"line_end":590,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255573,"byte_end":255582,"line_start":591,"line_end":591,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_u64(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255587,"byte_end":255630,"line_start":592,"line_end":592,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255635,"byte_end":255644,"line_start":593,"line_end":593,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255649,"byte_end":255654,"line_start":594,"line_end":594,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":255659,"byte_end":255666,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8098},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256412,"byte_end":256426,"line_start":618,"line_end":618,"column_start":12,"column_end":26},"name":"serialize_u128","qualname":"::ser::Serializer::serialize_u128","value":"pub fn serialize_u128(Self, u128) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a `u128` value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257186,"byte_end":257199,"line_start":644,"line_end":644,"column_start":8,"column_end":21},"name":"serialize_f32","qualname":"::ser::Serializer::serialize_f32","value":"pub fn serialize_f32(Self, f32) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize an `f32` value.","sig":null,"attributes":[{"value":"/ Serialize an `f32` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256577,"byte_end":256606,"line_start":624,"line_end":624,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256611,"byte_end":256614,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ If the format does not differentiate between `f32` and `f64`, a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256619,"byte_end":256686,"line_start":626,"line_end":626,"column_start":5,"column_end":72}},{"value":"/ reasonable implementation would be to cast the value to `f64` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256691,"byte_end":256760,"line_start":627,"line_end":627,"column_start":5,"column_end":74}},{"value":"/ forward to `serialize_f64`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256765,"byte_end":256796,"line_start":628,"line_end":628,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256801,"byte_end":256804,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256809,"byte_end":256827,"line_start":630,"line_end":630,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256832,"byte_end":256860,"line_start":631,"line_end":631,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256865,"byte_end":256870,"line_start":632,"line_end":632,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256875,"byte_end":256911,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256916,"byte_end":256921,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for f32 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256926,"byte_end":256954,"line_start":635,"line_end":635,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":256959,"byte_end":257031,"line_start":636,"line_end":636,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257036,"byte_end":257049,"line_start":637,"line_end":637,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257054,"byte_end":257080,"line_start":638,"line_end":638,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257085,"byte_end":257094,"line_start":639,"line_end":639,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_f32(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257099,"byte_end":257142,"line_start":640,"line_end":640,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257147,"byte_end":257156,"line_start":641,"line_end":641,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257161,"byte_end":257166,"line_start":642,"line_end":642,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257171,"byte_end":257178,"line_start":643,"line_end":643,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257672,"byte_end":257685,"line_start":662,"line_end":662,"column_start":8,"column_end":21},"name":"serialize_f64","qualname":"::ser::Serializer::serialize_f64","value":"pub fn serialize_f64(Self, f64) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize an `f64` value.","sig":null,"attributes":[{"value":"/ Serialize an `f64` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257253,"byte_end":257282,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257287,"byte_end":257290,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257295,"byte_end":257313,"line_start":648,"line_end":648,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257318,"byte_end":257346,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257351,"byte_end":257356,"line_start":650,"line_end":650,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257361,"byte_end":257397,"line_start":651,"line_end":651,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257402,"byte_end":257407,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for f64 {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257412,"byte_end":257440,"line_start":653,"line_end":653,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257445,"byte_end":257517,"line_start":654,"line_end":654,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257522,"byte_end":257535,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257540,"byte_end":257566,"line_start":656,"line_end":656,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257571,"byte_end":257580,"line_start":657,"line_end":657,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_f64(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257585,"byte_end":257628,"line_start":658,"line_end":658,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257633,"byte_end":257642,"line_start":659,"line_end":659,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257647,"byte_end":257652,"line_start":660,"line_end":660,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257657,"byte_end":257664,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258295,"byte_end":258309,"line_start":683,"line_end":683,"column_start":8,"column_end":22},"name":"serialize_char","qualname":"::ser::Serializer::serialize_char","value":"pub fn serialize_char(Self, char) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a character.","sig":null,"attributes":[{"value":"/ Serialize a character.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257739,"byte_end":257765,"line_start":664,"line_end":664,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257770,"byte_end":257773,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ If the format does not support characters, it is reasonable to serialize","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257778,"byte_end":257854,"line_start":666,"line_end":666,"column_start":5,"column_end":81}},{"value":"/ it as a single element `str` or a `u32`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257859,"byte_end":257903,"line_start":667,"line_end":667,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257908,"byte_end":257911,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257916,"byte_end":257934,"line_start":669,"line_end":669,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257939,"byte_end":257967,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257972,"byte_end":257977,"line_start":671,"line_end":671,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":257982,"byte_end":258018,"line_start":672,"line_end":672,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258023,"byte_end":258028,"line_start":673,"line_end":673,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for char {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258033,"byte_end":258062,"line_start":674,"line_end":674,"column_start":5,"column_end":34}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258067,"byte_end":258139,"line_start":675,"line_end":675,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258144,"byte_end":258157,"line_start":676,"line_end":676,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258162,"byte_end":258188,"line_start":677,"line_end":677,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258193,"byte_end":258202,"line_start":678,"line_end":678,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_char(*self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258207,"byte_end":258251,"line_start":679,"line_end":679,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258256,"byte_end":258265,"line_start":680,"line_end":680,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258270,"byte_end":258275,"line_start":681,"line_end":681,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258280,"byte_end":258287,"line_start":682,"line_end":682,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258776,"byte_end":258789,"line_start":701,"line_end":701,"column_start":8,"column_end":21},"name":"serialize_str","qualname":"::ser::Serializer::serialize_str","value":"pub fn serialize_str(Self, &str) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a `&str`.","sig":null,"attributes":[{"value":"/ Serialize a `&str`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258364,"byte_end":258387,"line_start":685,"line_end":685,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258392,"byte_end":258395,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258400,"byte_end":258418,"line_start":687,"line_end":687,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258423,"byte_end":258451,"line_start":688,"line_end":688,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258456,"byte_end":258461,"line_start":689,"line_end":689,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258466,"byte_end":258502,"line_start":690,"line_end":690,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258507,"byte_end":258512,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for str {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258517,"byte_end":258545,"line_start":692,"line_end":692,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258550,"byte_end":258622,"line_start":693,"line_end":693,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258627,"byte_end":258640,"line_start":694,"line_end":694,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258645,"byte_end":258671,"line_start":695,"line_end":695,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258676,"byte_end":258685,"line_start":696,"line_end":696,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_str(self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258690,"byte_end":258732,"line_start":697,"line_end":697,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258737,"byte_end":258746,"line_start":698,"line_end":698,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258751,"byte_end":258756,"line_start":699,"line_end":699,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258761,"byte_end":258768,"line_start":700,"line_end":700,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260112,"byte_end":260127,"line_start":736,"line_end":736,"column_start":8,"column_end":23},"name":"serialize_bytes","qualname":"::ser::Serializer::serialize_bytes","value":"pub fn serialize_bytes(Self, &[u8]) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a chunk of raw byte data.","sig":null,"attributes":[{"value":"/ Serialize a chunk of raw byte data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258844,"byte_end":258883,"line_start":703,"line_end":703,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258888,"byte_end":258891,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ Enables serializers to serialize byte slices more compactly or more","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258896,"byte_end":258967,"line_start":705,"line_end":705,"column_start":5,"column_end":76}},{"value":"/ efficiently than other types of slices. If no efficient implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":258972,"byte_end":259046,"line_start":706,"line_end":706,"column_start":5,"column_end":79}},{"value":"/ is available, a reasonable implementation would be to forward to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259051,"byte_end":259119,"line_start":707,"line_end":707,"column_start":5,"column_end":73}},{"value":"/ `serialize_seq`. If forwarded, the implementation looks usually just","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259124,"byte_end":259196,"line_start":708,"line_end":708,"column_start":5,"column_end":77}},{"value":"/ like this:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259201,"byte_end":259215,"line_start":709,"line_end":709,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259220,"byte_end":259223,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259228,"byte_end":259246,"line_start":711,"line_end":711,"column_start":5,"column_end":23}},{"value":"/ # use serde::ser::{Serializer, SerializeSeq};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259251,"byte_end":259300,"line_start":712,"line_end":712,"column_start":5,"column_end":54}},{"value":"/ # use serde::private::ser::Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259305,"byte_end":259342,"line_start":713,"line_end":713,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259347,"byte_end":259352,"line_start":714,"line_end":714,"column_start":5,"column_end":10}},{"value":"/ # struct MySerializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259357,"byte_end":259383,"line_start":715,"line_end":715,"column_start":5,"column_end":31}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259388,"byte_end":259393,"line_start":716,"line_end":716,"column_start":5,"column_end":10}},{"value":"/ # impl Serializer for MySerializer {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259398,"byte_end":259438,"line_start":717,"line_end":717,"column_start":5,"column_end":45}},{"value":"/ #     type Ok = ();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259443,"byte_end":259466,"line_start":718,"line_end":718,"column_start":5,"column_end":28}},{"value":"/ #     type Error = Error;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259471,"byte_end":259500,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259505,"byte_end":259510,"line_start":720,"line_end":720,"column_start":5,"column_end":10}},{"value":"/ fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok, Self::Error> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259515,"byte_end":259588,"line_start":721,"line_end":721,"column_start":5,"column_end":78}},{"value":"/     let mut seq = self.serialize_seq(Some(v.len()))?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259593,"byte_end":259650,"line_start":722,"line_end":722,"column_start":5,"column_end":62}},{"value":"/     for b in v {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259655,"byte_end":259675,"line_start":723,"line_end":723,"column_start":5,"column_end":25}},{"value":"/         seq.serialize_element(b)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259680,"byte_end":259718,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259723,"byte_end":259732,"line_start":725,"line_end":725,"column_start":5,"column_end":14}},{"value":"/     seq.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259737,"byte_end":259754,"line_start":726,"line_end":726,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259759,"byte_end":259764,"line_start":727,"line_end":727,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259769,"byte_end":259774,"line_start":728,"line_end":728,"column_start":5,"column_end":10}},{"value":"/ #     serde::__serialize_unimplemented! {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259779,"byte_end":259824,"line_start":729,"line_end":729,"column_start":5,"column_end":50}},{"value":"/ #         bool i8 i16 i32 i64 u8 u16 u32 u64 f32 f64 char str none some","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259829,"byte_end":259904,"line_start":730,"line_end":730,"column_start":5,"column_end":80}},{"value":"/ #         unit unit_struct unit_variant newtype_struct newtype_variant","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259909,"byte_end":259983,"line_start":731,"line_end":731,"column_start":5,"column_end":79}},{"value":"/ #         seq tuple tuple_struct tuple_variant map struct struct_variant","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":259988,"byte_end":260064,"line_start":732,"line_end":732,"column_start":5,"column_end":81}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260069,"byte_end":260080,"line_start":733,"line_end":733,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260085,"byte_end":260092,"line_start":734,"line_end":734,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260097,"byte_end":260104,"line_start":735,"line_end":735,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261023,"byte_end":261037,"line_start":769,"line_end":769,"column_start":8,"column_end":22},"name":"serialize_none","qualname":"::ser::Serializer::serialize_none","value":"pub fn serialize_none(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a [`None`] value.","sig":null,"attributes":[{"value":"/ Serialize a [`None`] value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260183,"byte_end":260214,"line_start":738,"line_end":738,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260219,"byte_end":260222,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260227,"byte_end":260245,"line_start":740,"line_end":740,"column_start":5,"column_end":23}},{"value":"/ # use serde::{Serialize, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260250,"byte_end":260291,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260296,"byte_end":260301,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ # enum Option<T> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260306,"byte_end":260328,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/ #     Some(T),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260333,"byte_end":260351,"line_start":744,"line_end":744,"column_start":5,"column_end":23}},{"value":"/ #     None,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260356,"byte_end":260371,"line_start":745,"line_end":745,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260376,"byte_end":260383,"line_start":746,"line_end":746,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260388,"byte_end":260393,"line_start":747,"line_end":747,"column_start":5,"column_end":10}},{"value":"/ # use self::Option::{Some, None};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260398,"byte_end":260435,"line_start":748,"line_end":748,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260440,"byte_end":260445,"line_start":749,"line_end":749,"column_start":5,"column_end":10}},{"value":"/ impl<T> Serialize for Option<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260450,"byte_end":260485,"line_start":750,"line_end":750,"column_start":5,"column_end":40}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260490,"byte_end":260499,"line_start":751,"line_end":751,"column_start":5,"column_end":14}},{"value":"/     T: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260504,"byte_end":260525,"line_start":752,"line_end":752,"column_start":5,"column_end":26}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260530,"byte_end":260535,"line_start":753,"line_end":753,"column_start":5,"column_end":10}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260540,"byte_end":260612,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260617,"byte_end":260630,"line_start":755,"line_end":755,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260635,"byte_end":260661,"line_start":756,"line_end":756,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260666,"byte_end":260675,"line_start":757,"line_end":757,"column_start":5,"column_end":14}},{"value":"/         match *self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260680,"byte_end":260705,"line_start":758,"line_end":758,"column_start":5,"column_end":30}},{"value":"/             Some(ref value) => serializer.serialize_some(value),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260710,"byte_end":260778,"line_start":759,"line_end":759,"column_start":5,"column_end":73}},{"value":"/             None => serializer.serialize_none(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260783,"byte_end":260835,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260840,"byte_end":260853,"line_start":761,"line_end":761,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260858,"byte_end":260867,"line_start":762,"line_end":762,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260872,"byte_end":260877,"line_start":763,"line_end":763,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260882,"byte_end":260887,"line_start":764,"line_end":764,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260892,"byte_end":260910,"line_start":765,"line_end":765,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260915,"byte_end":260922,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260927,"byte_end":260930,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":260935,"byte_end":261015,"line_start":768,"line_end":768,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261929,"byte_end":261943,"line_start":802,"line_end":802,"column_start":8,"column_end":22},"name":"serialize_some","qualname":"::ser::Serializer::serialize_some","value":"pub fn serialize_some<T: ?Sized>(Self, &T) -> Result<Self::Ok, Self::Error>\nwhere T: Serialize","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a [`Some(T)`] value.","sig":null,"attributes":[{"value":"/ Serialize a [`Some(T)`] value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261083,"byte_end":261117,"line_start":771,"line_end":771,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261122,"byte_end":261125,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261130,"byte_end":261148,"line_start":773,"line_end":773,"column_start":5,"column_end":23}},{"value":"/ # use serde::{Serialize, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261153,"byte_end":261194,"line_start":774,"line_end":774,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261199,"byte_end":261204,"line_start":775,"line_end":775,"column_start":5,"column_end":10}},{"value":"/ # enum Option<T> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261209,"byte_end":261231,"line_start":776,"line_end":776,"column_start":5,"column_end":27}},{"value":"/ #     Some(T),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261236,"byte_end":261254,"line_start":777,"line_end":777,"column_start":5,"column_end":23}},{"value":"/ #     None,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261259,"byte_end":261274,"line_start":778,"line_end":778,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261279,"byte_end":261286,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261291,"byte_end":261296,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/ # use self::Option::{Some, None};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261301,"byte_end":261338,"line_start":781,"line_end":781,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261343,"byte_end":261348,"line_start":782,"line_end":782,"column_start":5,"column_end":10}},{"value":"/ impl<T> Serialize for Option<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261353,"byte_end":261388,"line_start":783,"line_end":783,"column_start":5,"column_end":40}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261393,"byte_end":261402,"line_start":784,"line_end":784,"column_start":5,"column_end":14}},{"value":"/     T: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261407,"byte_end":261428,"line_start":785,"line_end":785,"column_start":5,"column_end":26}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261433,"byte_end":261438,"line_start":786,"line_end":786,"column_start":5,"column_end":10}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261443,"byte_end":261515,"line_start":787,"line_end":787,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261520,"byte_end":261533,"line_start":788,"line_end":788,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261538,"byte_end":261564,"line_start":789,"line_end":789,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261569,"byte_end":261578,"line_start":790,"line_end":790,"column_start":5,"column_end":14}},{"value":"/         match *self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261583,"byte_end":261608,"line_start":791,"line_end":791,"column_start":5,"column_end":30}},{"value":"/             Some(ref value) => serializer.serialize_some(value),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261613,"byte_end":261681,"line_start":792,"line_end":792,"column_start":5,"column_end":73}},{"value":"/             None => serializer.serialize_none(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261686,"byte_end":261738,"line_start":793,"line_end":793,"column_start":5,"column_end":57}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261743,"byte_end":261756,"line_start":794,"line_end":794,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261761,"byte_end":261770,"line_start":795,"line_end":795,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261775,"byte_end":261780,"line_start":796,"line_end":796,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261785,"byte_end":261790,"line_start":797,"line_end":797,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261795,"byte_end":261813,"line_start":798,"line_end":798,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261818,"byte_end":261825,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261830,"byte_end":261833,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ [`Some(T)`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":261838,"byte_end":261921,"line_start":801,"line_end":801,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262454,"byte_end":262468,"line_start":822,"line_end":822,"column_start":8,"column_end":22},"name":"serialize_unit","qualname":"::ser::Serializer::serialize_unit","value":"pub fn serialize_unit(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a `()` value.","sig":null,"attributes":[{"value":"/ Serialize a `()` value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262042,"byte_end":262069,"line_start":806,"line_end":806,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262074,"byte_end":262077,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262082,"byte_end":262100,"line_start":808,"line_end":808,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serializer;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262105,"byte_end":262133,"line_start":809,"line_end":809,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262138,"byte_end":262143,"line_start":810,"line_end":810,"column_start":5,"column_end":10}},{"value":"/ # serde::__private_serialize!();","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262148,"byte_end":262184,"line_start":811,"line_end":811,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262189,"byte_end":262194,"line_start":812,"line_end":812,"column_start":5,"column_end":10}},{"value":"/ impl Serialize for () {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262199,"byte_end":262226,"line_start":813,"line_end":813,"column_start":5,"column_end":32}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262231,"byte_end":262303,"line_start":814,"line_end":814,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262308,"byte_end":262321,"line_start":815,"line_end":815,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262326,"byte_end":262352,"line_start":816,"line_end":816,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262357,"byte_end":262366,"line_start":817,"line_end":817,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_unit()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262371,"byte_end":262410,"line_start":818,"line_end":818,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262415,"byte_end":262424,"line_start":819,"line_end":819,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262429,"byte_end":262434,"line_start":820,"line_end":820,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262439,"byte_end":262446,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263062,"byte_end":263083,"line_start":842,"line_end":842,"column_start":8,"column_end":29},"name":"serialize_unit_struct","qualname":"::ser::Serializer::serialize_unit_struct","value":"pub fn serialize_unit_struct(Self, &'static str)\n-> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a unit struct like `struct Unit` or `PhantomData<T>`.","sig":null,"attributes":[{"value":"/ Serialize a unit struct like `struct Unit` or `PhantomData<T>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262514,"byte_end":262581,"line_start":824,"line_end":824,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262586,"byte_end":262589,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ A reasonable implementation would be to forward to `serialize_unit`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262594,"byte_end":262666,"line_start":826,"line_end":826,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262671,"byte_end":262674,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262679,"byte_end":262697,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/ use serde::{Serialize, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262702,"byte_end":262741,"line_start":829,"line_end":829,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262746,"byte_end":262749,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ struct Nothing;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262754,"byte_end":262773,"line_start":831,"line_end":831,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262778,"byte_end":262781,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for Nothing {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262786,"byte_end":262818,"line_start":833,"line_end":833,"column_start":5,"column_end":37}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262823,"byte_end":262895,"line_start":834,"line_end":834,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262900,"byte_end":262913,"line_start":835,"line_end":835,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262918,"byte_end":262944,"line_start":836,"line_end":836,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262949,"byte_end":262958,"line_start":837,"line_end":837,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_unit_struct(\"Nothing\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":262963,"byte_end":263018,"line_start":838,"line_end":838,"column_start":5,"column_end":60}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263023,"byte_end":263032,"line_start":839,"line_end":839,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263037,"byte_end":263042,"line_start":840,"line_end":840,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263047,"byte_end":263054,"line_start":841,"line_end":841,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263954,"byte_end":263976,"line_start":870,"line_end":870,"column_start":8,"column_end":30},"name":"serialize_unit_variant","qualname":"::ser::Serializer::serialize_unit_variant","value":"pub fn serialize_unit_variant(Self, &'static str, u32, &'static str)\n-> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a unit variant like `E::A` in `enum E { A, B }`.","sig":null,"attributes":[{"value":"/ Serialize a unit variant like `E::A` in `enum E { A, B }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263149,"byte_end":263211,"line_start":844,"line_end":844,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263216,"byte_end":263219,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ The `name` is the name of the enum, the `variant_index` is the index of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263224,"byte_end":263299,"line_start":846,"line_end":846,"column_start":5,"column_end":80}},{"value":"/ this variant within the enum, and the `variant` is the name of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263304,"byte_end":263374,"line_start":847,"line_end":847,"column_start":5,"column_end":75}},{"value":"/ variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263379,"byte_end":263391,"line_start":848,"line_end":848,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263396,"byte_end":263399,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263404,"byte_end":263422,"line_start":850,"line_end":850,"column_start":5,"column_end":23}},{"value":"/ use serde::{Serialize, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263427,"byte_end":263466,"line_start":851,"line_end":851,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263471,"byte_end":263474,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ enum E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263479,"byte_end":263491,"line_start":853,"line_end":853,"column_start":5,"column_end":17}},{"value":"/     A,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263496,"byte_end":263506,"line_start":854,"line_end":854,"column_start":5,"column_end":15}},{"value":"/     B,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263511,"byte_end":263521,"line_start":855,"line_end":855,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263526,"byte_end":263531,"line_start":856,"line_end":856,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263536,"byte_end":263539,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263544,"byte_end":263570,"line_start":858,"line_end":858,"column_start":5,"column_end":31}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263575,"byte_end":263647,"line_start":859,"line_end":859,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263652,"byte_end":263665,"line_start":860,"line_end":860,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263670,"byte_end":263696,"line_start":861,"line_end":861,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263701,"byte_end":263710,"line_start":862,"line_end":862,"column_start":5,"column_end":14}},{"value":"/         match *self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263715,"byte_end":263740,"line_start":863,"line_end":863,"column_start":5,"column_end":30}},{"value":"/             E::A => serializer.serialize_unit_variant(\"E\", 0, \"A\"),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263745,"byte_end":263816,"line_start":864,"line_end":864,"column_start":5,"column_end":76}},{"value":"/             E::B => serializer.serialize_unit_variant(\"E\", 1, \"B\"),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263821,"byte_end":263892,"line_start":865,"line_end":865,"column_start":5,"column_end":76}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263897,"byte_end":263910,"line_start":866,"line_end":866,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263915,"byte_end":263924,"line_start":867,"line_end":867,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263929,"byte_end":263934,"line_start":868,"line_end":868,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":263939,"byte_end":263946,"line_start":869,"line_end":869,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264825,"byte_end":264849,"line_start":897,"line_end":897,"column_start":8,"column_end":32},"name":"serialize_newtype_struct","qualname":"::ser::Serializer::serialize_newtype_struct","value":"pub fn serialize_newtype_struct<T: ?Sized>(Self, &'static str, &T)\n-> Result<Self::Ok, Self::Error> where T: Serialize","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a newtype struct like `struct Millimeters(u8)`.","sig":null,"attributes":[{"value":"/ Serialize a newtype struct like `struct Millimeters(u8)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264124,"byte_end":264185,"line_start":877,"line_end":877,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264190,"byte_end":264193,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ Serializers are encouraged to treat newtype structs as insignificant","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264198,"byte_end":264270,"line_start":879,"line_end":879,"column_start":5,"column_end":77}},{"value":"/ wrappers around the data they contain. A reasonable implementation would","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264275,"byte_end":264351,"line_start":880,"line_end":880,"column_start":5,"column_end":81}},{"value":"/ be to forward to `value.serialize(self)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264356,"byte_end":264401,"line_start":881,"line_end":881,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264406,"byte_end":264409,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264414,"byte_end":264432,"line_start":883,"line_end":883,"column_start":5,"column_end":23}},{"value":"/ use serde::{Serialize, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264437,"byte_end":264476,"line_start":884,"line_end":884,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264481,"byte_end":264484,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ struct Millimeters(u8);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264489,"byte_end":264516,"line_start":886,"line_end":886,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264521,"byte_end":264524,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for Millimeters {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264529,"byte_end":264565,"line_start":888,"line_end":888,"column_start":5,"column_end":41}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264570,"byte_end":264642,"line_start":889,"line_end":889,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264647,"byte_end":264660,"line_start":890,"line_end":890,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264665,"byte_end":264691,"line_start":891,"line_end":891,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264696,"byte_end":264705,"line_start":892,"line_end":892,"column_start":5,"column_end":14}},{"value":"/         serializer.serialize_newtype_struct(\"Millimeters\", &self.0)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264710,"byte_end":264781,"line_start":893,"line_end":893,"column_start":5,"column_end":76}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264786,"byte_end":264795,"line_start":894,"line_end":894,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264800,"byte_end":264805,"line_start":895,"line_end":895,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264810,"byte_end":264817,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265906,"byte_end":265931,"line_start":931,"line_end":931,"column_start":8,"column_end":33},"name":"serialize_newtype_variant","qualname":"::ser::Serializer::serialize_newtype_variant","value":"pub fn serialize_newtype_variant<T: ?Sized>(Self, &'static str, u32,\n                                            &'static str, &T)\n-> Result<Self::Ok, Self::Error> where T: Serialize","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.","sig":null,"attributes":[{"value":"/ Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":264999,"byte_end":265065,"line_start":905,"line_end":905,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265070,"byte_end":265073,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ The `name` is the name of the enum, the `variant_index` is the index of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265078,"byte_end":265153,"line_start":907,"line_end":907,"column_start":5,"column_end":80}},{"value":"/ this variant within the enum, and the `variant` is the name of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265158,"byte_end":265228,"line_start":908,"line_end":908,"column_start":5,"column_end":75}},{"value":"/ variant. The `value` is the data contained within this newtype variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265233,"byte_end":265308,"line_start":909,"line_end":909,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265313,"byte_end":265316,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265321,"byte_end":265339,"line_start":911,"line_end":911,"column_start":5,"column_end":23}},{"value":"/ use serde::{Serialize, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265344,"byte_end":265383,"line_start":912,"line_end":912,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265388,"byte_end":265391,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ enum E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265396,"byte_end":265408,"line_start":914,"line_end":914,"column_start":5,"column_end":17}},{"value":"/     M(String),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265413,"byte_end":265431,"line_start":915,"line_end":915,"column_start":5,"column_end":23}},{"value":"/     N(u8),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265436,"byte_end":265450,"line_start":916,"line_end":916,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265455,"byte_end":265460,"line_start":917,"line_end":917,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265465,"byte_end":265468,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265473,"byte_end":265499,"line_start":919,"line_end":919,"column_start":5,"column_end":31}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265504,"byte_end":265576,"line_start":920,"line_end":920,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265581,"byte_end":265594,"line_start":921,"line_end":921,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265599,"byte_end":265625,"line_start":922,"line_end":922,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265630,"byte_end":265639,"line_start":923,"line_end":923,"column_start":5,"column_end":14}},{"value":"/         match *self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265644,"byte_end":265669,"line_start":924,"line_end":924,"column_start":5,"column_end":30}},{"value":"/             E::M(ref s) => serializer.serialize_newtype_variant(\"E\", 0, \"M\", s),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265674,"byte_end":265758,"line_start":925,"line_end":925,"column_start":5,"column_end":89}},{"value":"/             E::N(n) => serializer.serialize_newtype_variant(\"E\", 1, \"N\", &n),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265763,"byte_end":265844,"line_start":926,"line_end":926,"column_start":5,"column_end":86}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265849,"byte_end":265862,"line_start":927,"line_end":927,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265867,"byte_end":265876,"line_start":928,"line_end":928,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265881,"byte_end":265886,"line_start":929,"line_end":929,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":265891,"byte_end":265898,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267631,"byte_end":267644,"line_start":987,"line_end":987,"column_start":8,"column_end":21},"name":"serialize_seq","qualname":"::ser::Serializer::serialize_seq","value":"pub fn serialize_seq(Self, Option<usize>)\n-> Result<Self::SerializeSeq, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Begin to serialize a variably sized sequence. This call must be\n followed by zero or more calls to `serialize_element`, then a call to\n `end`.","sig":null,"attributes":[{"value":"/ Begin to serialize a variably sized sequence. This call must be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266140,"byte_end":266207,"line_start":941,"line_end":941,"column_start":5,"column_end":72}},{"value":"/ followed by zero or more calls to `serialize_element`, then a call to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266212,"byte_end":266285,"line_start":942,"line_end":942,"column_start":5,"column_end":78}},{"value":"/ `end`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266290,"byte_end":266300,"line_start":943,"line_end":943,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266305,"byte_end":266308,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ The argument is the number of elements in the sequence, which may or may","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266313,"byte_end":266389,"line_start":945,"line_end":945,"column_start":5,"column_end":81}},{"value":"/ not be computable before the sequence is iterated. Some serializers only","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266394,"byte_end":266470,"line_start":946,"line_end":946,"column_start":5,"column_end":81}},{"value":"/ support sequences whose length is known up front.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266475,"byte_end":266528,"line_start":947,"line_end":947,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266533,"byte_end":266536,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266541,"byte_end":266559,"line_start":949,"line_end":949,"column_start":5,"column_end":23}},{"value":"/ # use std::marker::PhantomData;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266564,"byte_end":266599,"line_start":950,"line_end":950,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266604,"byte_end":266609,"line_start":951,"line_end":951,"column_start":5,"column_end":10}},{"value":"/ # struct Vec<T>(PhantomData<T>);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266614,"byte_end":266650,"line_start":952,"line_end":952,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266655,"byte_end":266660,"line_start":953,"line_end":953,"column_start":5,"column_end":10}},{"value":"/ # impl<T> Vec<T> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266665,"byte_end":266687,"line_start":954,"line_end":954,"column_start":5,"column_end":27}},{"value":"/ #     fn len(&self) -> usize {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266692,"byte_end":266726,"line_start":955,"line_end":955,"column_start":5,"column_end":39}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266731,"byte_end":266761,"line_start":956,"line_end":956,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266766,"byte_end":266777,"line_start":957,"line_end":957,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266782,"byte_end":266789,"line_start":958,"line_end":958,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266794,"byte_end":266799,"line_start":959,"line_end":959,"column_start":5,"column_end":10}},{"value":"/ # impl<'a, T> IntoIterator for &'a Vec<T> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266804,"byte_end":266851,"line_start":960,"line_end":960,"column_start":5,"column_end":52}},{"value":"/ #     type Item = &'a T;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266856,"byte_end":266884,"line_start":961,"line_end":961,"column_start":5,"column_end":33}},{"value":"/ #     type IntoIter = Box<Iterator<Item = &'a T>>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266889,"byte_end":266943,"line_start":962,"line_end":962,"column_start":5,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266948,"byte_end":266953,"line_start":963,"line_end":963,"column_start":5,"column_end":10}},{"value":"/ #     fn into_iter(self) -> Self::IntoIter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":266958,"byte_end":267006,"line_start":964,"line_end":964,"column_start":5,"column_end":53}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267011,"byte_end":267041,"line_start":965,"line_end":965,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267046,"byte_end":267057,"line_start":966,"line_end":966,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267062,"byte_end":267069,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267074,"byte_end":267079,"line_start":968,"line_end":968,"column_start":5,"column_end":10}},{"value":"/ use serde::ser::{Serialize, Serializer, SerializeSeq};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267084,"byte_end":267142,"line_start":969,"line_end":969,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267147,"byte_end":267150,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ impl<T> Serialize for Vec<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267155,"byte_end":267187,"line_start":971,"line_end":971,"column_start":5,"column_end":37}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267192,"byte_end":267201,"line_start":972,"line_end":972,"column_start":5,"column_end":14}},{"value":"/     T: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267206,"byte_end":267227,"line_start":973,"line_end":973,"column_start":5,"column_end":26}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267232,"byte_end":267237,"line_start":974,"line_end":974,"column_start":5,"column_end":10}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267242,"byte_end":267314,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267319,"byte_end":267332,"line_start":976,"line_end":976,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267337,"byte_end":267363,"line_start":977,"line_end":977,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267368,"byte_end":267377,"line_start":978,"line_end":978,"column_start":5,"column_end":14}},{"value":"/         let mut seq = serializer.serialize_seq(Some(self.len()))?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267382,"byte_end":267452,"line_start":979,"line_end":979,"column_start":5,"column_end":75}},{"value":"/         for element in self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267457,"byte_end":267490,"line_start":980,"line_end":980,"column_start":5,"column_end":38}},{"value":"/             seq.serialize_element(element)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267495,"byte_end":267543,"line_start":981,"line_end":981,"column_start":5,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267548,"byte_end":267561,"line_start":982,"line_end":982,"column_start":5,"column_end":18}},{"value":"/         seq.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267566,"byte_end":267587,"line_start":983,"line_end":983,"column_start":5,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267592,"byte_end":267601,"line_start":984,"line_end":984,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267606,"byte_end":267611,"line_start":985,"line_end":985,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267616,"byte_end":267623,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269462,"byte_end":269477,"line_start":1043,"line_end":1043,"column_start":8,"column_end":23},"name":"serialize_tuple","qualname":"::ser::Serializer::serialize_tuple","value":"pub fn serialize_tuple(Self, usize)\n-> Result<Self::SerializeTuple, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Begin to serialize a statically sized sequence whose length will be\n known at deserialization time without looking at the serialized data.\n This call must be followed by zero or more calls to `serialize_element`,\n then a call to `end`.","sig":null,"attributes":[{"value":"/ Begin to serialize a statically sized sequence whose length will be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267720,"byte_end":267791,"line_start":989,"line_end":989,"column_start":5,"column_end":76}},{"value":"/ known at deserialization time without looking at the serialized data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267796,"byte_end":267869,"line_start":990,"line_end":990,"column_start":5,"column_end":78}},{"value":"/ This call must be followed by zero or more calls to `serialize_element`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267874,"byte_end":267950,"line_start":991,"line_end":991,"column_start":5,"column_end":81}},{"value":"/ then a call to `end`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267955,"byte_end":267980,"line_start":992,"line_end":992,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267985,"byte_end":267988,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":267993,"byte_end":268011,"line_start":994,"line_end":994,"column_start":5,"column_end":23}},{"value":"/ use serde::ser::{Serialize, Serializer, SerializeTuple};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268016,"byte_end":268076,"line_start":995,"line_end":995,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268081,"byte_end":268084,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ # mod fool {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268089,"byte_end":268105,"line_start":997,"line_end":997,"column_start":5,"column_end":21}},{"value":"/ #     trait Serialize {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268110,"byte_end":268138,"line_start":998,"line_end":998,"column_start":5,"column_end":33}},{"value":"/ impl<A, B, C> Serialize for (A, B, C)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268143,"byte_end":268184,"line_start":999,"line_end":999,"column_start":5,"column_end":46}},{"value":"/ #     {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268189,"byte_end":268201,"line_start":1000,"line_end":1000,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268206,"byte_end":268213,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268218,"byte_end":268223,"line_start":1002,"line_end":1002,"column_start":5,"column_end":10}},{"value":"/ # struct Tuple3<A, B, C>(A, B, C);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268228,"byte_end":268266,"line_start":1003,"line_end":1003,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268271,"byte_end":268276,"line_start":1004,"line_end":1004,"column_start":5,"column_end":10}},{"value":"/ # impl<A, B, C> Serialize for Tuple3<A, B, C>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268281,"byte_end":268330,"line_start":1005,"line_end":1005,"column_start":5,"column_end":54}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268335,"byte_end":268344,"line_start":1006,"line_end":1006,"column_start":5,"column_end":14}},{"value":"/     A: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268349,"byte_end":268370,"line_start":1007,"line_end":1007,"column_start":5,"column_end":26}},{"value":"/     B: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268375,"byte_end":268396,"line_start":1008,"line_end":1008,"column_start":5,"column_end":26}},{"value":"/     C: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268401,"byte_end":268422,"line_start":1009,"line_end":1009,"column_start":5,"column_end":26}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268427,"byte_end":268432,"line_start":1010,"line_end":1010,"column_start":5,"column_end":10}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268437,"byte_end":268509,"line_start":1011,"line_end":1011,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268514,"byte_end":268527,"line_start":1012,"line_end":1012,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268532,"byte_end":268558,"line_start":1013,"line_end":1013,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268563,"byte_end":268572,"line_start":1014,"line_end":1014,"column_start":5,"column_end":14}},{"value":"/         let mut tup = serializer.serialize_tuple(3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268577,"byte_end":268634,"line_start":1015,"line_end":1015,"column_start":5,"column_end":62}},{"value":"/         tup.serialize_element(&self.0)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268639,"byte_end":268683,"line_start":1016,"line_end":1016,"column_start":5,"column_end":49}},{"value":"/         tup.serialize_element(&self.1)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268688,"byte_end":268732,"line_start":1017,"line_end":1017,"column_start":5,"column_end":49}},{"value":"/         tup.serialize_element(&self.2)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268737,"byte_end":268781,"line_start":1018,"line_end":1018,"column_start":5,"column_end":49}},{"value":"/         tup.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268786,"byte_end":268807,"line_start":1019,"line_end":1019,"column_start":5,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268812,"byte_end":268821,"line_start":1020,"line_end":1020,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268826,"byte_end":268831,"line_start":1021,"line_end":1021,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268836,"byte_end":268843,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268848,"byte_end":268851,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268856,"byte_end":268874,"line_start":1024,"line_end":1024,"column_start":5,"column_end":23}},{"value":"/ use serde::ser::{Serialize, SerializeTuple, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268879,"byte_end":268939,"line_start":1025,"line_end":1025,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268944,"byte_end":268947,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ const VRAM_SIZE: usize = 386;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268952,"byte_end":268985,"line_start":1027,"line_end":1027,"column_start":5,"column_end":38}},{"value":"/ struct Vram([u16; VRAM_SIZE]);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":268990,"byte_end":269024,"line_start":1028,"line_end":1028,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269029,"byte_end":269032,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for Vram {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269037,"byte_end":269066,"line_start":1030,"line_end":1030,"column_start":5,"column_end":34}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269071,"byte_end":269143,"line_start":1031,"line_end":1031,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269148,"byte_end":269161,"line_start":1032,"line_end":1032,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269166,"byte_end":269192,"line_start":1033,"line_end":1033,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269197,"byte_end":269206,"line_start":1034,"line_end":1034,"column_start":5,"column_end":14}},{"value":"/         let mut seq = serializer.serialize_tuple(VRAM_SIZE)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269211,"byte_end":269276,"line_start":1035,"line_end":1035,"column_start":5,"column_end":70}},{"value":"/         for element in &self.0[..] {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269281,"byte_end":269321,"line_start":1036,"line_end":1036,"column_start":5,"column_end":45}},{"value":"/             seq.serialize_element(element)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269326,"byte_end":269374,"line_start":1037,"line_end":1037,"column_start":5,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269379,"byte_end":269392,"line_start":1038,"line_end":1038,"column_start":5,"column_end":18}},{"value":"/         seq.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269397,"byte_end":269418,"line_start":1039,"line_end":1039,"column_start":5,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269423,"byte_end":269432,"line_start":1040,"line_end":1040,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269437,"byte_end":269442,"line_start":1041,"line_end":1041,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269447,"byte_end":269454,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270464,"byte_end":270486,"line_start":1070,"line_end":1070,"column_start":8,"column_end":30},"name":"serialize_tuple_struct","qualname":"::ser::Serializer::serialize_tuple_struct","value":"pub fn serialize_tuple_struct(Self, &'static str, usize)\n-> Result<Self::SerializeTupleStruct, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This\n call must be followed by zero or more calls to `serialize_field`, then a\n call to `end`.","sig":null,"attributes":[{"value":"/ Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269547,"byte_end":269620,"line_start":1045,"line_end":1045,"column_start":5,"column_end":78}},{"value":"/ call must be followed by zero or more calls to `serialize_field`, then a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269625,"byte_end":269701,"line_start":1046,"line_end":1046,"column_start":5,"column_end":81}},{"value":"/ call to `end`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269706,"byte_end":269724,"line_start":1047,"line_end":1047,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269729,"byte_end":269732,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ The `name` is the name of the tuple struct and the `len` is the number","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269737,"byte_end":269811,"line_start":1049,"line_end":1049,"column_start":5,"column_end":79}},{"value":"/ of data fields that will be serialized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269816,"byte_end":269859,"line_start":1050,"line_end":1050,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269864,"byte_end":269867,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269872,"byte_end":269890,"line_start":1052,"line_end":1052,"column_start":5,"column_end":23}},{"value":"/ use serde::ser::{Serialize, SerializeTupleStruct, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269895,"byte_end":269961,"line_start":1053,"line_end":1053,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269966,"byte_end":269969,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ struct Rgb(u8, u8, u8);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":269974,"byte_end":270001,"line_start":1055,"line_end":1055,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270006,"byte_end":270009,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for Rgb {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270014,"byte_end":270042,"line_start":1057,"line_end":1057,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270047,"byte_end":270119,"line_start":1058,"line_end":1058,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270124,"byte_end":270137,"line_start":1059,"line_end":1059,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270142,"byte_end":270168,"line_start":1060,"line_end":1060,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270173,"byte_end":270182,"line_start":1061,"line_end":1061,"column_start":5,"column_end":14}},{"value":"/         let mut ts = serializer.serialize_tuple_struct(\"Rgb\", 3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270187,"byte_end":270257,"line_start":1062,"line_end":1062,"column_start":5,"column_end":75}},{"value":"/         ts.serialize_field(&self.0)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270262,"byte_end":270303,"line_start":1063,"line_end":1063,"column_start":5,"column_end":46}},{"value":"/         ts.serialize_field(&self.1)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270308,"byte_end":270349,"line_start":1064,"line_end":1064,"column_start":5,"column_end":46}},{"value":"/         ts.serialize_field(&self.2)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270354,"byte_end":270395,"line_start":1065,"line_end":1065,"column_start":5,"column_end":46}},{"value":"/         ts.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270400,"byte_end":270420,"line_start":1066,"line_end":1066,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270425,"byte_end":270434,"line_start":1067,"line_end":1067,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270439,"byte_end":270444,"line_start":1068,"line_end":1068,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270449,"byte_end":270456,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272133,"byte_end":272156,"line_start":1115,"line_end":1115,"column_start":8,"column_end":31},"name":"serialize_tuple_variant","qualname":"::ser::Serializer::serialize_tuple_variant","value":"pub fn serialize_tuple_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeTupleVariant, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8)\n }`. This call must be followed by zero or more calls to\n `serialize_field`, then a call to `end`.","sig":null,"attributes":[{"value":"/ Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270613,"byte_end":270686,"line_start":1076,"line_end":1076,"column_start":5,"column_end":78}},{"value":"/ }`. This call must be followed by zero or more calls to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270691,"byte_end":270750,"line_start":1077,"line_end":1077,"column_start":5,"column_end":64}},{"value":"/ `serialize_field`, then a call to `end`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270755,"byte_end":270799,"line_start":1078,"line_end":1078,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270804,"byte_end":270807,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ The `name` is the name of the enum, the `variant_index` is the index of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270812,"byte_end":270887,"line_start":1080,"line_end":1080,"column_start":5,"column_end":80}},{"value":"/ this variant within the enum, the `variant` is the name of the variant,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270892,"byte_end":270967,"line_start":1081,"line_end":1081,"column_start":5,"column_end":80}},{"value":"/ and the `len` is the number of data fields that will be serialized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":270972,"byte_end":271043,"line_start":1082,"line_end":1082,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271048,"byte_end":271051,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271056,"byte_end":271074,"line_start":1084,"line_end":1084,"column_start":5,"column_end":23}},{"value":"/ use serde::ser::{Serialize, SerializeTupleVariant, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271079,"byte_end":271146,"line_start":1085,"line_end":1085,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271151,"byte_end":271154,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ enum E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271159,"byte_end":271171,"line_start":1087,"line_end":1087,"column_start":5,"column_end":17}},{"value":"/     T(u8, u8),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271176,"byte_end":271194,"line_start":1088,"line_end":1088,"column_start":5,"column_end":23}},{"value":"/     U(String, u32, u32),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271199,"byte_end":271227,"line_start":1089,"line_end":1089,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271232,"byte_end":271237,"line_start":1090,"line_end":1090,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271242,"byte_end":271245,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271250,"byte_end":271276,"line_start":1092,"line_end":1092,"column_start":5,"column_end":31}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271281,"byte_end":271353,"line_start":1093,"line_end":1093,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271358,"byte_end":271371,"line_start":1094,"line_end":1094,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271376,"byte_end":271402,"line_start":1095,"line_end":1095,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271407,"byte_end":271416,"line_start":1096,"line_end":1096,"column_start":5,"column_end":14}},{"value":"/         match *self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271421,"byte_end":271446,"line_start":1097,"line_end":1097,"column_start":5,"column_end":30}},{"value":"/             E::T(ref a, ref b) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271451,"byte_end":271490,"line_start":1098,"line_end":1098,"column_start":5,"column_end":44}},{"value":"/                 let mut tv = serializer.serialize_tuple_variant(\"E\", 0, \"T\", 2)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271495,"byte_end":271580,"line_start":1099,"line_end":1099,"column_start":5,"column_end":90}},{"value":"/                 tv.serialize_field(a)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271585,"byte_end":271628,"line_start":1100,"line_end":1100,"column_start":5,"column_end":48}},{"value":"/                 tv.serialize_field(b)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271633,"byte_end":271676,"line_start":1101,"line_end":1101,"column_start":5,"column_end":48}},{"value":"/                 tv.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271681,"byte_end":271709,"line_start":1102,"line_end":1102,"column_start":5,"column_end":33}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271714,"byte_end":271731,"line_start":1103,"line_end":1103,"column_start":5,"column_end":22}},{"value":"/             E::U(ref a, ref b, ref c) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271736,"byte_end":271782,"line_start":1104,"line_end":1104,"column_start":5,"column_end":51}},{"value":"/                 let mut tv = serializer.serialize_tuple_variant(\"E\", 1, \"U\", 3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271787,"byte_end":271872,"line_start":1105,"line_end":1105,"column_start":5,"column_end":90}},{"value":"/                 tv.serialize_field(a)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271877,"byte_end":271920,"line_start":1106,"line_end":1106,"column_start":5,"column_end":48}},{"value":"/                 tv.serialize_field(b)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271925,"byte_end":271968,"line_start":1107,"line_end":1107,"column_start":5,"column_end":48}},{"value":"/                 tv.serialize_field(c)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":271973,"byte_end":272016,"line_start":1108,"line_end":1108,"column_start":5,"column_end":48}},{"value":"/                 tv.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272021,"byte_end":272049,"line_start":1109,"line_end":1109,"column_start":5,"column_end":33}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272054,"byte_end":272071,"line_start":1110,"line_end":1110,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272076,"byte_end":272089,"line_start":1111,"line_end":1111,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272094,"byte_end":272103,"line_start":1112,"line_end":1112,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272108,"byte_end":272113,"line_start":1113,"line_end":1113,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272118,"byte_end":272125,"line_start":1114,"line_end":1114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273900,"byte_end":273913,"line_start":1169,"line_end":1169,"column_start":8,"column_end":21},"name":"serialize_map","qualname":"::ser::Serializer::serialize_map","value":"pub fn serialize_map(Self, Option<usize>)\n-> Result<Self::SerializeMap, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Begin to serialize a map. This call must be followed by zero or more\n calls to `serialize_key` and `serialize_value`, then a call to `end`.","sig":null,"attributes":[{"value":"/ Begin to serialize a map. This call must be followed by zero or more","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272343,"byte_end":272415,"line_start":1123,"line_end":1123,"column_start":5,"column_end":77}},{"value":"/ calls to `serialize_key` and `serialize_value`, then a call to `end`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272420,"byte_end":272493,"line_start":1124,"line_end":1124,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272498,"byte_end":272501,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ The argument is the number of elements in the map, which may or may not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272506,"byte_end":272581,"line_start":1126,"line_end":1126,"column_start":5,"column_end":80}},{"value":"/ be computable before the map is iterated. Some serializers only support","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272586,"byte_end":272661,"line_start":1127,"line_end":1127,"column_start":5,"column_end":80}},{"value":"/ maps whose length is known up front.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272666,"byte_end":272706,"line_start":1128,"line_end":1128,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272711,"byte_end":272714,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272719,"byte_end":272737,"line_start":1130,"line_end":1130,"column_start":5,"column_end":23}},{"value":"/ # use std::marker::PhantomData;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272742,"byte_end":272777,"line_start":1131,"line_end":1131,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272782,"byte_end":272787,"line_start":1132,"line_end":1132,"column_start":5,"column_end":10}},{"value":"/ # struct HashMap<K, V>(PhantomData<K>, PhantomData<V>);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272792,"byte_end":272851,"line_start":1133,"line_end":1133,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272856,"byte_end":272861,"line_start":1134,"line_end":1134,"column_start":5,"column_end":10}},{"value":"/ # impl<K, V> HashMap<K, V> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272866,"byte_end":272898,"line_start":1135,"line_end":1135,"column_start":5,"column_end":37}},{"value":"/ #     fn len(&self) -> usize {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272903,"byte_end":272937,"line_start":1136,"line_end":1136,"column_start":5,"column_end":39}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272942,"byte_end":272972,"line_start":1137,"line_end":1137,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272977,"byte_end":272988,"line_start":1138,"line_end":1138,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":272993,"byte_end":273000,"line_start":1139,"line_end":1139,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273005,"byte_end":273010,"line_start":1140,"line_end":1140,"column_start":5,"column_end":10}},{"value":"/ # impl<'a, K, V> IntoIterator for &'a HashMap<K, V> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273015,"byte_end":273072,"line_start":1141,"line_end":1141,"column_start":5,"column_end":62}},{"value":"/ #     type Item = (&'a K, &'a V);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273077,"byte_end":273114,"line_start":1142,"line_end":1142,"column_start":5,"column_end":42}},{"value":"/ #     type IntoIter = Box<Iterator<Item = (&'a K, &'a V)>>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273119,"byte_end":273182,"line_start":1143,"line_end":1143,"column_start":5,"column_end":68}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273187,"byte_end":273192,"line_start":1144,"line_end":1144,"column_start":5,"column_end":10}},{"value":"/ #     fn into_iter(self) -> Self::IntoIter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273197,"byte_end":273245,"line_start":1145,"line_end":1145,"column_start":5,"column_end":53}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273250,"byte_end":273280,"line_start":1146,"line_end":1146,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273285,"byte_end":273296,"line_start":1147,"line_end":1147,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273301,"byte_end":273308,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273313,"byte_end":273318,"line_start":1149,"line_end":1149,"column_start":5,"column_end":10}},{"value":"/ use serde::ser::{Serialize, Serializer, SerializeMap};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273323,"byte_end":273381,"line_start":1150,"line_end":1150,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273386,"byte_end":273389,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ impl<K, V> Serialize for HashMap<K, V>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273394,"byte_end":273436,"line_start":1152,"line_end":1152,"column_start":5,"column_end":47}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273441,"byte_end":273450,"line_start":1153,"line_end":1153,"column_start":5,"column_end":14}},{"value":"/     K: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273455,"byte_end":273476,"line_start":1154,"line_end":1154,"column_start":5,"column_end":26}},{"value":"/     V: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273481,"byte_end":273502,"line_start":1155,"line_end":1155,"column_start":5,"column_end":26}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273507,"byte_end":273512,"line_start":1156,"line_end":1156,"column_start":5,"column_end":10}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273517,"byte_end":273589,"line_start":1157,"line_end":1157,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273594,"byte_end":273607,"line_start":1158,"line_end":1158,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273612,"byte_end":273638,"line_start":1159,"line_end":1159,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273643,"byte_end":273652,"line_start":1160,"line_end":1160,"column_start":5,"column_end":14}},{"value":"/         let mut map = serializer.serialize_map(Some(self.len()))?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273657,"byte_end":273727,"line_start":1161,"line_end":1161,"column_start":5,"column_end":75}},{"value":"/         for (k, v) in self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273732,"byte_end":273764,"line_start":1162,"line_end":1162,"column_start":5,"column_end":37}},{"value":"/             map.serialize_entry(k, v)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273769,"byte_end":273812,"line_start":1163,"line_end":1163,"column_start":5,"column_end":48}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273817,"byte_end":273830,"line_start":1164,"line_end":1164,"column_start":5,"column_end":18}},{"value":"/         map.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273835,"byte_end":273856,"line_start":1165,"line_end":1165,"column_start":5,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273861,"byte_end":273870,"line_start":1166,"line_end":1166,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273875,"byte_end":273880,"line_start":1167,"line_end":1167,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273885,"byte_end":273892,"line_start":1168,"line_end":1168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274971,"byte_end":274987,"line_start":1200,"line_end":1200,"column_start":8,"column_end":24},"name":"serialize_struct","qualname":"::ser::Serializer::serialize_struct","value":"pub fn serialize_struct(Self, &'static str, usize)\n-> Result<Self::SerializeStruct, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`.\n This call must be followed by zero or more calls to `serialize_field`,\n then a call to `end`.","sig":null,"attributes":[{"value":"/ Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":273989,"byte_end":274063,"line_start":1171,"line_end":1171,"column_start":5,"column_end":79}},{"value":"/ This call must be followed by zero or more calls to `serialize_field`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274068,"byte_end":274142,"line_start":1172,"line_end":1172,"column_start":5,"column_end":79}},{"value":"/ then a call to `end`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274147,"byte_end":274172,"line_start":1173,"line_end":1173,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274177,"byte_end":274180,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ The `name` is the name of the struct and the `len` is the number of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274185,"byte_end":274256,"line_start":1175,"line_end":1175,"column_start":5,"column_end":76}},{"value":"/ data fields that will be serialized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274261,"byte_end":274301,"line_start":1176,"line_end":1176,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274306,"byte_end":274309,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274314,"byte_end":274332,"line_start":1178,"line_end":1178,"column_start":5,"column_end":23}},{"value":"/ use serde::ser::{Serialize, SerializeStruct, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274337,"byte_end":274398,"line_start":1179,"line_end":1179,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274403,"byte_end":274406,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ struct Rgb {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274411,"byte_end":274427,"line_start":1181,"line_end":1181,"column_start":5,"column_end":21}},{"value":"/     r: u8,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274432,"byte_end":274446,"line_start":1182,"line_end":1182,"column_start":5,"column_end":19}},{"value":"/     g: u8,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274451,"byte_end":274465,"line_start":1183,"line_end":1183,"column_start":5,"column_end":19}},{"value":"/     b: u8,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274470,"byte_end":274484,"line_start":1184,"line_end":1184,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274489,"byte_end":274494,"line_start":1185,"line_end":1185,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274499,"byte_end":274502,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for Rgb {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274507,"byte_end":274535,"line_start":1187,"line_end":1187,"column_start":5,"column_end":33}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274540,"byte_end":274612,"line_start":1188,"line_end":1188,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274617,"byte_end":274630,"line_start":1189,"line_end":1189,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274635,"byte_end":274661,"line_start":1190,"line_end":1190,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274666,"byte_end":274675,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14}},{"value":"/         let mut rgb = serializer.serialize_struct(\"Rgb\", 3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274680,"byte_end":274745,"line_start":1192,"line_end":1192,"column_start":5,"column_end":70}},{"value":"/         rgb.serialize_field(\"r\", &self.r)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274750,"byte_end":274797,"line_start":1193,"line_end":1193,"column_start":5,"column_end":52}},{"value":"/         rgb.serialize_field(\"g\", &self.g)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274802,"byte_end":274849,"line_start":1194,"line_end":1194,"column_start":5,"column_end":52}},{"value":"/         rgb.serialize_field(\"b\", &self.b)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274854,"byte_end":274901,"line_start":1195,"line_end":1195,"column_start":5,"column_end":52}},{"value":"/         rgb.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274906,"byte_end":274927,"line_start":1196,"line_end":1196,"column_start":5,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274932,"byte_end":274941,"line_start":1197,"line_end":1197,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274946,"byte_end":274951,"line_start":1198,"line_end":1198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":274956,"byte_end":274963,"line_start":1199,"line_end":1199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276457,"byte_end":276481,"line_start":1242,"line_end":1242,"column_start":8,"column_end":32},"name":"serialize_struct_variant","qualname":"::ser::Serializer::serialize_struct_variant","value":"pub fn serialize_struct_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeStructVariant, Self::Error>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8,\n g: u8, b: u8 } }`. This call must be followed by zero or more calls to\n `serialize_field`, then a call to `end`.","sig":null,"attributes":[{"value":"/ Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275109,"byte_end":275184,"line_start":1206,"line_end":1206,"column_start":5,"column_end":80}},{"value":"/ g: u8, b: u8 } }`. This call must be followed by zero or more calls to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275189,"byte_end":275263,"line_start":1207,"line_end":1207,"column_start":5,"column_end":79}},{"value":"/ `serialize_field`, then a call to `end`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275268,"byte_end":275312,"line_start":1208,"line_end":1208,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275317,"byte_end":275320,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ The `name` is the name of the enum, the `variant_index` is the index of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275325,"byte_end":275400,"line_start":1210,"line_end":1210,"column_start":5,"column_end":80}},{"value":"/ this variant within the enum, the `variant` is the name of the variant,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275405,"byte_end":275480,"line_start":1211,"line_end":1211,"column_start":5,"column_end":80}},{"value":"/ and the `len` is the number of data fields that will be serialized.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275485,"byte_end":275556,"line_start":1212,"line_end":1212,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275561,"byte_end":275564,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275569,"byte_end":275587,"line_start":1214,"line_end":1214,"column_start":5,"column_end":23}},{"value":"/ use serde::ser::{Serialize, SerializeStructVariant, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275592,"byte_end":275660,"line_start":1215,"line_end":1215,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275665,"byte_end":275668,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ enum E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275673,"byte_end":275685,"line_start":1217,"line_end":1217,"column_start":5,"column_end":17}},{"value":"/     S { r: u8, g: u8, b: u8 },","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275690,"byte_end":275724,"line_start":1218,"line_end":1218,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275729,"byte_end":275734,"line_start":1219,"line_end":1219,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275739,"byte_end":275742,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275747,"byte_end":275773,"line_start":1221,"line_end":1221,"column_start":5,"column_end":31}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275778,"byte_end":275850,"line_start":1222,"line_end":1222,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275855,"byte_end":275868,"line_start":1223,"line_end":1223,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275873,"byte_end":275899,"line_start":1224,"line_end":1224,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275904,"byte_end":275913,"line_start":1225,"line_end":1225,"column_start":5,"column_end":14}},{"value":"/         match *self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275918,"byte_end":275943,"line_start":1226,"line_end":1226,"column_start":5,"column_end":30}},{"value":"/             E::S {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275948,"byte_end":275970,"line_start":1227,"line_end":1227,"column_start":5,"column_end":27}},{"value":"/                 ref r,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":275975,"byte_end":276001,"line_start":1228,"line_end":1228,"column_start":5,"column_end":31}},{"value":"/                 ref g,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276006,"byte_end":276032,"line_start":1229,"line_end":1229,"column_start":5,"column_end":31}},{"value":"/                 ref b,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276037,"byte_end":276063,"line_start":1230,"line_end":1230,"column_start":5,"column_end":31}},{"value":"/             } => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276068,"byte_end":276090,"line_start":1231,"line_end":1231,"column_start":5,"column_end":27}},{"value":"/                 let mut sv = serializer.serialize_struct_variant(\"E\", 0, \"S\", 3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276095,"byte_end":276181,"line_start":1232,"line_end":1232,"column_start":5,"column_end":91}},{"value":"/                 sv.serialize_field(\"r\", r)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276186,"byte_end":276234,"line_start":1233,"line_end":1233,"column_start":5,"column_end":53}},{"value":"/                 sv.serialize_field(\"g\", g)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276239,"byte_end":276287,"line_start":1234,"line_end":1234,"column_start":5,"column_end":53}},{"value":"/                 sv.serialize_field(\"b\", b)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276292,"byte_end":276340,"line_start":1235,"line_end":1235,"column_start":5,"column_end":53}},{"value":"/                 sv.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276345,"byte_end":276373,"line_start":1236,"line_end":1236,"column_start":5,"column_end":33}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276378,"byte_end":276395,"line_start":1237,"line_end":1237,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276400,"byte_end":276413,"line_start":1238,"line_end":1238,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276418,"byte_end":276427,"line_start":1239,"line_end":1239,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276432,"byte_end":276437,"line_start":1240,"line_end":1240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276442,"byte_end":276449,"line_start":1241,"line_end":1241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277416,"byte_end":277427,"line_start":1274,"line_end":1274,"column_start":8,"column_end":19},"name":"collect_seq","qualname":"::ser::Serializer::collect_seq","value":"pub fn collect_seq<I>(Self, I) -> Result<Self::Ok, Self::Error> where\nI: IntoIterator, <I as IntoIterator>::Item: Serialize","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Collect an iterator as a sequence.","sig":null,"attributes":[{"value":"/ Collect an iterator as a sequence.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276669,"byte_end":276707,"line_start":1250,"line_end":1250,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276712,"byte_end":276715,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ The default implementation serializes each item yielded by the iterator","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276720,"byte_end":276795,"line_start":1252,"line_end":1252,"column_start":5,"column_end":80}},{"value":"/ using [`serialize_seq`]. Implementors should not need to override this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276800,"byte_end":276874,"line_start":1253,"line_end":1253,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276879,"byte_end":276890,"line_start":1254,"line_end":1254,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276895,"byte_end":276898,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276903,"byte_end":276921,"line_start":1256,"line_end":1256,"column_start":5,"column_end":23}},{"value":"/ use serde::{Serialize, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276926,"byte_end":276965,"line_start":1257,"line_end":1257,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276970,"byte_end":276973,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ struct SecretlyOneHigher {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":276978,"byte_end":277008,"line_start":1259,"line_end":1259,"column_start":5,"column_end":35}},{"value":"/     data: Vec<i32>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277013,"byte_end":277036,"line_start":1260,"line_end":1260,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277041,"byte_end":277046,"line_start":1261,"line_end":1261,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277051,"byte_end":277054,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for SecretlyOneHigher {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277059,"byte_end":277101,"line_start":1263,"line_end":1263,"column_start":5,"column_end":47}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277106,"byte_end":277178,"line_start":1264,"line_end":1264,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277183,"byte_end":277196,"line_start":1265,"line_end":1265,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277201,"byte_end":277227,"line_start":1266,"line_end":1266,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277232,"byte_end":277241,"line_start":1267,"line_end":1267,"column_start":5,"column_end":14}},{"value":"/         serializer.collect_seq(self.data.iter().map(|x| x + 1))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277246,"byte_end":277313,"line_start":1268,"line_end":1268,"column_start":5,"column_end":72}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277318,"byte_end":277327,"line_start":1269,"line_end":1269,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277332,"byte_end":277337,"line_start":1270,"line_end":1270,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277342,"byte_end":277349,"line_start":1271,"line_end":1271,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277354,"byte_end":277357,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ [`serialize_seq`]: #tymethod.serialize_seq","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277362,"byte_end":277408,"line_start":1273,"line_end":1273,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278641,"byte_end":278652,"line_start":1313,"line_end":1313,"column_start":8,"column_end":19},"name":"collect_map","qualname":"::ser::Serializer::collect_map","value":"pub fn collect_map<K, V, I>(Self, I) -> Result<Self::Ok, Self::Error> where\nK: Serialize, V: Serialize, I: IntoIterator<Item = (K, V)>","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Collect an iterator as a map.","sig":null,"attributes":[{"value":"/ Collect an iterator as a map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277803,"byte_end":277836,"line_start":1287,"line_end":1287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277841,"byte_end":277844,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ The default implementation serializes each pair yielded by the iterator","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277849,"byte_end":277924,"line_start":1289,"line_end":1289,"column_start":5,"column_end":80}},{"value":"/ using [`serialize_map`]. Implementors should not need to override this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":277929,"byte_end":278003,"line_start":1290,"line_end":1290,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278008,"byte_end":278019,"line_start":1291,"line_end":1291,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278024,"byte_end":278027,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278032,"byte_end":278050,"line_start":1293,"line_end":1293,"column_start":5,"column_end":23}},{"value":"/ use serde::{Serialize, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278055,"byte_end":278094,"line_start":1294,"line_end":1294,"column_start":5,"column_end":44}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278099,"byte_end":278134,"line_start":1295,"line_end":1295,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278139,"byte_end":278142,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ struct MapToUnit {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278147,"byte_end":278169,"line_start":1297,"line_end":1297,"column_start":5,"column_end":27}},{"value":"/     keys: BTreeSet<i32>,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278174,"byte_end":278202,"line_start":1298,"line_end":1298,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278207,"byte_end":278212,"line_start":1299,"line_end":1299,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278217,"byte_end":278220,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ // Serializes as a map in which the values are all unit.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278225,"byte_end":278285,"line_start":1301,"line_end":1301,"column_start":5,"column_end":65}},{"value":"/ impl Serialize for MapToUnit {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278290,"byte_end":278324,"line_start":1302,"line_end":1302,"column_start":5,"column_end":39}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278329,"byte_end":278401,"line_start":1303,"line_end":1303,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278406,"byte_end":278419,"line_start":1304,"line_end":1304,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278424,"byte_end":278450,"line_start":1305,"line_end":1305,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278455,"byte_end":278464,"line_start":1306,"line_end":1306,"column_start":5,"column_end":14}},{"value":"/         serializer.collect_map(self.keys.iter().map(|k| (k, ())))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278469,"byte_end":278538,"line_start":1307,"line_end":1307,"column_start":5,"column_end":74}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278543,"byte_end":278552,"line_start":1308,"line_end":1308,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278557,"byte_end":278562,"line_start":1309,"line_end":1309,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278567,"byte_end":278574,"line_start":1310,"line_end":1310,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278579,"byte_end":278582,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ [`serialize_map`]: #tymethod.serialize_map","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":278587,"byte_end":278633,"line_start":1312,"line_end":1312,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":280216,"byte_end":280227,"line_start":1358,"line_end":1358,"column_start":8,"column_end":19},"name":"collect_str","qualname":"::ser::Serializer::collect_str","value":"pub fn collect_str<T: ?Sized>(Self, &T) -> Result<Self::Ok, Self::Error> where\nT: Display","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Serialize a string produced by an implementation of `Display`.","sig":null,"attributes":[{"value":"/ Serialize a string produced by an implementation of `Display`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279060,"byte_end":279126,"line_start":1327,"line_end":1327,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279131,"byte_end":279134,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ The default implementation builds a heap-allocated [`String`] and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279139,"byte_end":279208,"line_start":1329,"line_end":1329,"column_start":5,"column_end":74}},{"value":"/ delegates to [`serialize_str`]. Serializers are encouraged to provide a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279213,"byte_end":279288,"line_start":1330,"line_end":1330,"column_start":5,"column_end":80}},{"value":"/ more efficient implementation if possible.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279293,"byte_end":279339,"line_start":1331,"line_end":1331,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279344,"byte_end":279347,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279352,"byte_end":279370,"line_start":1333,"line_end":1333,"column_start":5,"column_end":23}},{"value":"/ # struct DateTime;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279375,"byte_end":279397,"line_start":1334,"line_end":1334,"column_start":5,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279402,"byte_end":279407,"line_start":1335,"line_end":1335,"column_start":5,"column_end":10}},{"value":"/ # impl DateTime {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279412,"byte_end":279433,"line_start":1336,"line_end":1336,"column_start":5,"column_end":26}},{"value":"/ #     fn naive_local(&self) -> () { () }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279438,"byte_end":279482,"line_start":1337,"line_end":1337,"column_start":5,"column_end":49}},{"value":"/ #     fn offset(&self) -> () { () }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279487,"byte_end":279526,"line_start":1338,"line_end":1338,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279531,"byte_end":279538,"line_start":1339,"line_end":1339,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279543,"byte_end":279548,"line_start":1340,"line_end":1340,"column_start":5,"column_end":10}},{"value":"/ use serde::{Serialize, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279553,"byte_end":279592,"line_start":1341,"line_end":1341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279597,"byte_end":279600,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for DateTime {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279605,"byte_end":279638,"line_start":1343,"line_end":1343,"column_start":5,"column_end":38}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279643,"byte_end":279715,"line_start":1344,"line_end":1344,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279720,"byte_end":279733,"line_start":1345,"line_end":1345,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279738,"byte_end":279764,"line_start":1346,"line_end":1346,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279769,"byte_end":279778,"line_start":1347,"line_end":1347,"column_start":5,"column_end":14}},{"value":"/         serializer.collect_str(&format_args!(\"{:?}{:?}\",","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279783,"byte_end":279843,"line_start":1348,"line_end":1348,"column_start":5,"column_end":65}},{"value":"/                                              self.naive_local(),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279848,"byte_end":279916,"line_start":1349,"line_end":1349,"column_start":5,"column_end":73}},{"value":"/                                              self.offset()))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279921,"byte_end":279985,"line_start":1350,"line_end":1350,"column_start":5,"column_end":69}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":279990,"byte_end":279999,"line_start":1351,"line_end":1351,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":280004,"byte_end":280009,"line_start":1352,"line_end":1352,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":280014,"byte_end":280021,"line_start":1353,"line_end":1353,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":280026,"byte_end":280029,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":280034,"byte_end":280105,"line_start":1355,"line_end":1355,"column_start":5,"column_end":76}},{"value":"/ [`serialize_str`]: #tymethod.serialize_str","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":280110,"byte_end":280156,"line_start":1356,"line_end":1356,"column_start":5,"column_end":51}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":280161,"byte_end":280208,"line_start":1357,"line_end":1357,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283611,"byte_end":283628,"line_start":1449,"line_end":1449,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"::ser::Serializer::is_human_readable","value":"pub fn is_human_readable(&Self) -> bool","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" Determine whether `Serialize` implementations should serialize in\n human-readable form.","sig":null,"attributes":[{"value":"/ Determine whether `Serialize` implementations should serialize in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":281621,"byte_end":281690,"line_start":1400,"line_end":1400,"column_start":5,"column_end":74}},{"value":"/ human-readable form.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":281695,"byte_end":281719,"line_start":1401,"line_end":1401,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":281724,"byte_end":281727,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ Some types have a human-readable form that may be somewhat expensive to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":281732,"byte_end":281807,"line_start":1403,"line_end":1403,"column_start":5,"column_end":80}},{"value":"/ construct, as well as a binary form that is compact and efficient.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":281812,"byte_end":281882,"line_start":1404,"line_end":1404,"column_start":5,"column_end":75}},{"value":"/ Generally text-based formats like JSON and YAML will prefer to use the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":281887,"byte_end":281961,"line_start":1405,"line_end":1405,"column_start":5,"column_end":79}},{"value":"/ human-readable one and binary formats like Bincode will prefer the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":281966,"byte_end":282036,"line_start":1406,"line_end":1406,"column_start":5,"column_end":75}},{"value":"/ compact one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282041,"byte_end":282057,"line_start":1407,"line_end":1407,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282062,"byte_end":282065,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282070,"byte_end":282088,"line_start":1409,"line_end":1409,"column_start":5,"column_end":23}},{"value":"/ # use std::fmt::{self, Display};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282093,"byte_end":282129,"line_start":1410,"line_end":1410,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282134,"byte_end":282139,"line_start":1411,"line_end":1411,"column_start":5,"column_end":10}},{"value":"/ # struct Timestamp;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282144,"byte_end":282167,"line_start":1412,"line_end":1412,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282172,"byte_end":282177,"line_start":1413,"line_end":1413,"column_start":5,"column_end":10}},{"value":"/ # impl Timestamp {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282182,"byte_end":282204,"line_start":1414,"line_end":1414,"column_start":5,"column_end":27}},{"value":"/ #     fn seconds_since_epoch(&self) -> u64 { unimplemented!() }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282209,"byte_end":282276,"line_start":1415,"line_end":1415,"column_start":5,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282281,"byte_end":282288,"line_start":1416,"line_end":1416,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282293,"byte_end":282298,"line_start":1417,"line_end":1417,"column_start":5,"column_end":10}},{"value":"/ # impl Display for Timestamp {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282303,"byte_end":282337,"line_start":1418,"line_end":1418,"column_start":5,"column_end":39}},{"value":"/ #     fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282342,"byte_end":282414,"line_start":1419,"line_end":1419,"column_start":5,"column_end":77}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282419,"byte_end":282449,"line_start":1420,"line_end":1420,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282454,"byte_end":282465,"line_start":1421,"line_end":1421,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282470,"byte_end":282477,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282482,"byte_end":282487,"line_start":1423,"line_end":1423,"column_start":5,"column_end":10}},{"value":"/ use serde::{Serialize, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282492,"byte_end":282531,"line_start":1424,"line_end":1424,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282536,"byte_end":282539,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ impl Serialize for Timestamp {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282544,"byte_end":282578,"line_start":1426,"line_end":1426,"column_start":5,"column_end":39}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282583,"byte_end":282655,"line_start":1427,"line_end":1427,"column_start":5,"column_end":77}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282660,"byte_end":282673,"line_start":1428,"line_end":1428,"column_start":5,"column_end":18}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282678,"byte_end":282704,"line_start":1429,"line_end":1429,"column_start":5,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282709,"byte_end":282718,"line_start":1430,"line_end":1430,"column_start":5,"column_end":14}},{"value":"/         if serializer.is_human_readable() {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282723,"byte_end":282770,"line_start":1431,"line_end":1431,"column_start":5,"column_end":52}},{"value":"/             // Serialize to a human-readable string \"2015-05-15T17:01:00Z\".","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282775,"byte_end":282854,"line_start":1432,"line_end":1432,"column_start":5,"column_end":84}},{"value":"/             self.to_string().serialize(serializer)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282859,"byte_end":282913,"line_start":1433,"line_end":1433,"column_start":5,"column_end":59}},{"value":"/         } else {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282918,"byte_end":282938,"line_start":1434,"line_end":1434,"column_start":5,"column_end":25}},{"value":"/             // Serialize to a compact binary representation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":282943,"byte_end":283007,"line_start":1435,"line_end":1435,"column_start":5,"column_end":69}},{"value":"/             self.seconds_since_epoch().serialize(serializer)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283012,"byte_end":283076,"line_start":1436,"line_end":1436,"column_start":5,"column_end":69}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283081,"byte_end":283094,"line_start":1437,"line_end":1437,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283099,"byte_end":283108,"line_start":1438,"line_end":1438,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283113,"byte_end":283118,"line_start":1439,"line_end":1439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283123,"byte_end":283130,"line_start":1440,"line_end":1440,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283135,"byte_end":283138,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method returns `true`. Data formats","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283143,"byte_end":283217,"line_start":1442,"line_end":1442,"column_start":5,"column_end":79}},{"value":"/ may override this to `false` to request a compact form for types that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283222,"byte_end":283295,"line_start":1443,"line_end":1443,"column_start":5,"column_end":78}},{"value":"/ support one. Note that modifying this method to change a format from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283300,"byte_end":283372,"line_start":1444,"line_end":1444,"column_start":5,"column_end":77}},{"value":"/ human-readable to compact or vice versa should be regarded as a breaking","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283377,"byte_end":283453,"line_start":1445,"line_end":1445,"column_start":5,"column_end":81}},{"value":"/ change, as a value serialized in human-readable mode is not required to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283458,"byte_end":283533,"line_start":1446,"line_end":1446,"column_start":5,"column_end":80}},{"value":"/ deserialize from the same data in compact mode.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283538,"byte_end":283589,"line_start":1447,"line_end":1447,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283594,"byte_end":283603,"line_start":1448,"line_end":1448,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1438},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284920,"byte_end":284932,"line_start":1502,"line_end":1502,"column_start":11,"column_end":23},"name":"SerializeSeq","qualname":"::ser::SerializeSeq","value":"SerializeSeq","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1443}],"decl_id":null,"docs":" Returned from `Serializer::serialize_seq`.","sig":null,"attributes":[{"value":"/ Returned from `Serializer::serialize_seq`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283668,"byte_end":283714,"line_start":1454,"line_end":1454,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283715,"byte_end":283718,"line_start":1455,"line_end":1455,"column_start":1,"column_end":4}},{"value":"/ # Example use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283719,"byte_end":283736,"line_start":1456,"line_end":1456,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283737,"byte_end":283740,"line_start":1457,"line_end":1457,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283741,"byte_end":283759,"line_start":1458,"line_end":1458,"column_start":1,"column_end":19}},{"value":"/ # use std::marker::PhantomData;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283760,"byte_end":283795,"line_start":1459,"line_end":1459,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283796,"byte_end":283801,"line_start":1460,"line_end":1460,"column_start":1,"column_end":6}},{"value":"/ # struct Vec<T>(PhantomData<T>);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283802,"byte_end":283838,"line_start":1461,"line_end":1461,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283839,"byte_end":283844,"line_start":1462,"line_end":1462,"column_start":1,"column_end":6}},{"value":"/ # impl<T> Vec<T> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283845,"byte_end":283867,"line_start":1463,"line_end":1463,"column_start":1,"column_end":23}},{"value":"/ #     fn len(&self) -> usize {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283868,"byte_end":283902,"line_start":1464,"line_end":1464,"column_start":1,"column_end":35}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283903,"byte_end":283933,"line_start":1465,"line_end":1465,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283934,"byte_end":283945,"line_start":1466,"line_end":1466,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283946,"byte_end":283953,"line_start":1467,"line_end":1467,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283954,"byte_end":283959,"line_start":1468,"line_end":1468,"column_start":1,"column_end":6}},{"value":"/ # impl<'a, T> IntoIterator for &'a Vec<T> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":283960,"byte_end":284007,"line_start":1469,"line_end":1469,"column_start":1,"column_end":48}},{"value":"/ #     type Item = &'a T;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284008,"byte_end":284036,"line_start":1470,"line_end":1470,"column_start":1,"column_end":29}},{"value":"/ #     type IntoIter = Box<Iterator<Item = &'a T>>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284037,"byte_end":284091,"line_start":1471,"line_end":1471,"column_start":1,"column_end":55}},{"value":"/ #     fn into_iter(self) -> Self::IntoIter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284092,"byte_end":284140,"line_start":1472,"line_end":1472,"column_start":1,"column_end":49}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284141,"byte_end":284171,"line_start":1473,"line_end":1473,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284172,"byte_end":284183,"line_start":1474,"line_end":1474,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284184,"byte_end":284191,"line_start":1475,"line_end":1475,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284192,"byte_end":284197,"line_start":1476,"line_end":1476,"column_start":1,"column_end":6}},{"value":"/ use serde::ser::{Serialize, Serializer, SerializeSeq};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284198,"byte_end":284256,"line_start":1477,"line_end":1477,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284257,"byte_end":284260,"line_start":1478,"line_end":1478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Serialize for Vec<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284261,"byte_end":284293,"line_start":1479,"line_end":1479,"column_start":1,"column_end":33}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284294,"byte_end":284303,"line_start":1480,"line_end":1480,"column_start":1,"column_end":10}},{"value":"/     T: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284304,"byte_end":284325,"line_start":1481,"line_end":1481,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284326,"byte_end":284331,"line_start":1482,"line_end":1482,"column_start":1,"column_end":6}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284332,"byte_end":284404,"line_start":1483,"line_end":1483,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284405,"byte_end":284418,"line_start":1484,"line_end":1484,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284419,"byte_end":284445,"line_start":1485,"line_end":1485,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284446,"byte_end":284455,"line_start":1486,"line_end":1486,"column_start":1,"column_end":10}},{"value":"/         let mut seq = serializer.serialize_seq(Some(self.len()))?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284456,"byte_end":284526,"line_start":1487,"line_end":1487,"column_start":1,"column_end":71}},{"value":"/         for element in self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284527,"byte_end":284560,"line_start":1488,"line_end":1488,"column_start":1,"column_end":34}},{"value":"/             seq.serialize_element(element)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284561,"byte_end":284609,"line_start":1489,"line_end":1489,"column_start":1,"column_end":49}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284610,"byte_end":284623,"line_start":1490,"line_end":1490,"column_start":1,"column_end":14}},{"value":"/         seq.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284624,"byte_end":284645,"line_start":1491,"line_end":1491,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284646,"byte_end":284655,"line_start":1492,"line_end":1492,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284656,"byte_end":284661,"line_start":1493,"line_end":1493,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284662,"byte_end":284669,"line_start":1494,"line_end":1494,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284670,"byte_end":284673,"line_start":1495,"line_end":1495,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284674,"byte_end":284702,"line_start":1496,"line_end":1496,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284703,"byte_end":284706,"line_start":1497,"line_end":1497,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284707,"byte_end":284777,"line_start":1498,"line_end":1498,"column_start":1,"column_end":71}},{"value":"/ implementation of `SerializeSeq` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284778,"byte_end":284844,"line_start":1499,"line_end":1499,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284845,"byte_end":284848,"line_start":1500,"line_end":1500,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284849,"byte_end":284909,"line_start":1501,"line_end":1501,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1439},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284998,"byte_end":285000,"line_start":1504,"line_end":1504,"column_start":10,"column_end":12},"name":"Ok","qualname":"::ser::SerializeSeq::Ok","value":"type Ok;","parent":{"krate":0,"index":1438},"children":[],"decl_id":null,"docs":" Must match the `Ok` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Ok` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":284939,"byte_end":284988,"line_start":1503,"line_end":1503,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1440},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285069,"byte_end":285074,"line_start":1507,"line_end":1507,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::SerializeSeq::Error","value":"type Error: Error;","parent":{"krate":0,"index":1438},"children":[],"decl_id":null,"docs":" Must match the `Error` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Error` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285007,"byte_end":285059,"line_start":1506,"line_end":1506,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285129,"byte_end":285146,"line_start":1510,"line_end":1510,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"::ser::SerializeSeq::serialize_element","value":"pub fn serialize_element<T: ?Sized>(&mut Self, &T) -> Result<(), Self::Error>\nwhere T: Serialize","parent":{"krate":0,"index":1438},"children":[],"decl_id":null,"docs":" Serialize a sequence element.\n","sig":null,"attributes":[{"value":"/ Serialize a sequence element.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285088,"byte_end":285121,"line_start":1509,"line_end":1509,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285286,"byte_end":285289,"line_start":1515,"line_end":1515,"column_start":8,"column_end":11},"name":"end","qualname":"::ser::SerializeSeq::end","value":"pub fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1438},"children":[],"decl_id":null,"docs":" Finish serializing a sequence.\n","sig":null,"attributes":[{"value":"/ Finish serializing a sequence.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285244,"byte_end":285278,"line_start":1514,"line_end":1514,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1444},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287439,"byte_end":287453,"line_start":1602,"line_end":1602,"column_start":11,"column_end":25},"name":"SerializeTuple","qualname":"::ser::SerializeTuple","value":"SerializeTuple","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1449}],"decl_id":null,"docs":" Returned from `Serializer::serialize_tuple`.","sig":null,"attributes":[{"value":"/ Returned from `Serializer::serialize_tuple`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285333,"byte_end":285381,"line_start":1518,"line_end":1518,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285382,"byte_end":285385,"line_start":1519,"line_end":1519,"column_start":1,"column_end":4}},{"value":"/ # Example use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285386,"byte_end":285403,"line_start":1520,"line_end":1520,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285404,"byte_end":285407,"line_start":1521,"line_end":1521,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285408,"byte_end":285426,"line_start":1522,"line_end":1522,"column_start":1,"column_end":19}},{"value":"/ use serde::ser::{Serialize, Serializer, SerializeTuple};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285427,"byte_end":285487,"line_start":1523,"line_end":1523,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285488,"byte_end":285491,"line_start":1524,"line_end":1524,"column_start":1,"column_end":4}},{"value":"/ # mod fool {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285492,"byte_end":285508,"line_start":1525,"line_end":1525,"column_start":1,"column_end":17}},{"value":"/ #     trait Serialize {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285509,"byte_end":285537,"line_start":1526,"line_end":1526,"column_start":1,"column_end":29}},{"value":"/ impl<A, B, C> Serialize for (A, B, C)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285538,"byte_end":285579,"line_start":1527,"line_end":1527,"column_start":1,"column_end":42}},{"value":"/ #     {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285580,"byte_end":285592,"line_start":1528,"line_end":1528,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285593,"byte_end":285600,"line_start":1529,"line_end":1529,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285601,"byte_end":285606,"line_start":1530,"line_end":1530,"column_start":1,"column_end":6}},{"value":"/ # struct Tuple3<A, B, C>(A, B, C);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285607,"byte_end":285645,"line_start":1531,"line_end":1531,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285646,"byte_end":285651,"line_start":1532,"line_end":1532,"column_start":1,"column_end":6}},{"value":"/ # impl<A, B, C> Serialize for Tuple3<A, B, C>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285652,"byte_end":285701,"line_start":1533,"line_end":1533,"column_start":1,"column_end":50}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285702,"byte_end":285711,"line_start":1534,"line_end":1534,"column_start":1,"column_end":10}},{"value":"/     A: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285712,"byte_end":285733,"line_start":1535,"line_end":1535,"column_start":1,"column_end":22}},{"value":"/     B: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285734,"byte_end":285755,"line_start":1536,"line_end":1536,"column_start":1,"column_end":22}},{"value":"/     C: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285756,"byte_end":285777,"line_start":1537,"line_end":1537,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285778,"byte_end":285783,"line_start":1538,"line_end":1538,"column_start":1,"column_end":6}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285784,"byte_end":285856,"line_start":1539,"line_end":1539,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285857,"byte_end":285870,"line_start":1540,"line_end":1540,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285871,"byte_end":285897,"line_start":1541,"line_end":1541,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285898,"byte_end":285907,"line_start":1542,"line_end":1542,"column_start":1,"column_end":10}},{"value":"/         let mut tup = serializer.serialize_tuple(3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285908,"byte_end":285965,"line_start":1543,"line_end":1543,"column_start":1,"column_end":58}},{"value":"/         tup.serialize_element(&self.0)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":285966,"byte_end":286010,"line_start":1544,"line_end":1544,"column_start":1,"column_end":45}},{"value":"/         tup.serialize_element(&self.1)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286011,"byte_end":286055,"line_start":1545,"line_end":1545,"column_start":1,"column_end":45}},{"value":"/         tup.serialize_element(&self.2)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286056,"byte_end":286100,"line_start":1546,"line_end":1546,"column_start":1,"column_end":45}},{"value":"/         tup.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286101,"byte_end":286122,"line_start":1547,"line_end":1547,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286123,"byte_end":286132,"line_start":1548,"line_end":1548,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286133,"byte_end":286138,"line_start":1549,"line_end":1549,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286139,"byte_end":286146,"line_start":1550,"line_end":1550,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286147,"byte_end":286150,"line_start":1551,"line_end":1551,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286151,"byte_end":286169,"line_start":1552,"line_end":1552,"column_start":1,"column_end":19}},{"value":"/ # use std::marker::PhantomData;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286170,"byte_end":286205,"line_start":1553,"line_end":1553,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286206,"byte_end":286211,"line_start":1554,"line_end":1554,"column_start":1,"column_end":6}},{"value":"/ # struct Array<T>(PhantomData<T>);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286212,"byte_end":286250,"line_start":1555,"line_end":1555,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286251,"byte_end":286256,"line_start":1556,"line_end":1556,"column_start":1,"column_end":6}},{"value":"/ # impl<T> Array<T> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286257,"byte_end":286281,"line_start":1557,"line_end":1557,"column_start":1,"column_end":25}},{"value":"/ #     fn len(&self) -> usize {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286282,"byte_end":286316,"line_start":1558,"line_end":1558,"column_start":1,"column_end":35}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286317,"byte_end":286347,"line_start":1559,"line_end":1559,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286348,"byte_end":286359,"line_start":1560,"line_end":1560,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286360,"byte_end":286367,"line_start":1561,"line_end":1561,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286368,"byte_end":286373,"line_start":1562,"line_end":1562,"column_start":1,"column_end":6}},{"value":"/ # impl<'a, T> IntoIterator for &'a Array<T> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286374,"byte_end":286423,"line_start":1563,"line_end":1563,"column_start":1,"column_end":50}},{"value":"/ #     type Item = &'a T;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286424,"byte_end":286452,"line_start":1564,"line_end":1564,"column_start":1,"column_end":29}},{"value":"/ #     type IntoIter = Box<Iterator<Item = &'a T>>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286453,"byte_end":286507,"line_start":1565,"line_end":1565,"column_start":1,"column_end":55}},{"value":"/ #     fn into_iter(self) -> Self::IntoIter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286508,"byte_end":286556,"line_start":1566,"line_end":1566,"column_start":1,"column_end":49}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286557,"byte_end":286587,"line_start":1567,"line_end":1567,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286588,"byte_end":286599,"line_start":1568,"line_end":1568,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286600,"byte_end":286607,"line_start":1569,"line_end":1569,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286608,"byte_end":286613,"line_start":1570,"line_end":1570,"column_start":1,"column_end":6}},{"value":"/ use serde::ser::{Serialize, Serializer, SerializeTuple};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286614,"byte_end":286674,"line_start":1571,"line_end":1571,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286675,"byte_end":286678,"line_start":1572,"line_end":1572,"column_start":1,"column_end":4}},{"value":"/ # mod fool {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286679,"byte_end":286695,"line_start":1573,"line_end":1573,"column_start":1,"column_end":17}},{"value":"/ #     trait Serialize {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286696,"byte_end":286724,"line_start":1574,"line_end":1574,"column_start":1,"column_end":29}},{"value":"/ impl<T> Serialize for [T; 16]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286725,"byte_end":286758,"line_start":1575,"line_end":1575,"column_start":1,"column_end":34}},{"value":"/ #     {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286759,"byte_end":286771,"line_start":1576,"line_end":1576,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286772,"byte_end":286779,"line_start":1577,"line_end":1577,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286780,"byte_end":286785,"line_start":1578,"line_end":1578,"column_start":1,"column_end":6}},{"value":"/ # impl<T> Serialize for Array<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286786,"byte_end":286822,"line_start":1579,"line_end":1579,"column_start":1,"column_end":37}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286823,"byte_end":286832,"line_start":1580,"line_end":1580,"column_start":1,"column_end":10}},{"value":"/     T: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286833,"byte_end":286854,"line_start":1581,"line_end":1581,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286855,"byte_end":286860,"line_start":1582,"line_end":1582,"column_start":1,"column_end":6}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286861,"byte_end":286933,"line_start":1583,"line_end":1583,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286934,"byte_end":286947,"line_start":1584,"line_end":1584,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286948,"byte_end":286974,"line_start":1585,"line_end":1585,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286975,"byte_end":286984,"line_start":1586,"line_end":1586,"column_start":1,"column_end":10}},{"value":"/         let mut seq = serializer.serialize_tuple(16)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":286985,"byte_end":287043,"line_start":1587,"line_end":1587,"column_start":1,"column_end":59}},{"value":"/         for element in self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287044,"byte_end":287077,"line_start":1588,"line_end":1588,"column_start":1,"column_end":34}},{"value":"/             seq.serialize_element(element)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287078,"byte_end":287126,"line_start":1589,"line_end":1589,"column_start":1,"column_end":49}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287127,"byte_end":287140,"line_start":1590,"line_end":1590,"column_start":1,"column_end":14}},{"value":"/         seq.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287141,"byte_end":287162,"line_start":1591,"line_end":1591,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287163,"byte_end":287172,"line_start":1592,"line_end":1592,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287173,"byte_end":287178,"line_start":1593,"line_end":1593,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287179,"byte_end":287186,"line_start":1594,"line_end":1594,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287187,"byte_end":287190,"line_start":1595,"line_end":1595,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287191,"byte_end":287219,"line_start":1596,"line_end":1596,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287220,"byte_end":287223,"line_start":1597,"line_end":1597,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287224,"byte_end":287294,"line_start":1598,"line_end":1598,"column_start":1,"column_end":71}},{"value":"/ implementation of `SerializeTuple` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287295,"byte_end":287363,"line_start":1599,"line_end":1599,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287364,"byte_end":287367,"line_start":1600,"line_end":1600,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287368,"byte_end":287428,"line_start":1601,"line_end":1601,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1445},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287519,"byte_end":287521,"line_start":1604,"line_end":1604,"column_start":10,"column_end":12},"name":"Ok","qualname":"::ser::SerializeTuple::Ok","value":"type Ok;","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":" Must match the `Ok` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Ok` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287460,"byte_end":287509,"line_start":1603,"line_end":1603,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1446},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287590,"byte_end":287595,"line_start":1607,"line_end":1607,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::SerializeTuple::Error","value":"type Error: Error;","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":" Must match the `Error` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Error` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287528,"byte_end":287580,"line_start":1606,"line_end":1606,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287647,"byte_end":287664,"line_start":1610,"line_end":1610,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"::ser::SerializeTuple::serialize_element","value":"pub fn serialize_element<T: ?Sized>(&mut Self, &T) -> Result<(), Self::Error>\nwhere T: Serialize","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":" Serialize a tuple element.\n","sig":null,"attributes":[{"value":"/ Serialize a tuple element.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287609,"byte_end":287639,"line_start":1609,"line_end":1609,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287801,"byte_end":287804,"line_start":1615,"line_end":1615,"column_start":8,"column_end":11},"name":"end","qualname":"::ser::SerializeTuple::end","value":"pub fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":" Finish serializing a tuple.\n","sig":null,"attributes":[{"value":"/ Finish serializing a tuple.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287762,"byte_end":287793,"line_start":1614,"line_end":1614,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1450},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288705,"byte_end":288725,"line_start":1647,"line_end":1647,"column_start":11,"column_end":31},"name":"SerializeTupleStruct","qualname":"::ser::SerializeTupleStruct","value":"SerializeTupleStruct","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1455}],"decl_id":null,"docs":" Returned from `Serializer::serialize_tuple_struct`.","sig":null,"attributes":[{"value":"/ Returned from `Serializer::serialize_tuple_struct`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287848,"byte_end":287903,"line_start":1618,"line_end":1618,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287904,"byte_end":287907,"line_start":1619,"line_end":1619,"column_start":1,"column_end":4}},{"value":"/ # Example use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287908,"byte_end":287925,"line_start":1620,"line_end":1620,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287926,"byte_end":287929,"line_start":1621,"line_end":1621,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287930,"byte_end":287948,"line_start":1622,"line_end":1622,"column_start":1,"column_end":19}},{"value":"/ use serde::ser::{Serialize, SerializeTupleStruct, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":287949,"byte_end":288015,"line_start":1623,"line_end":1623,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288016,"byte_end":288019,"line_start":1624,"line_end":1624,"column_start":1,"column_end":4}},{"value":"/ struct Rgb(u8, u8, u8);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288020,"byte_end":288047,"line_start":1625,"line_end":1625,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288048,"byte_end":288051,"line_start":1626,"line_end":1626,"column_start":1,"column_end":4}},{"value":"/ impl Serialize for Rgb {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288052,"byte_end":288080,"line_start":1627,"line_end":1627,"column_start":1,"column_end":29}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288081,"byte_end":288153,"line_start":1628,"line_end":1628,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288154,"byte_end":288167,"line_start":1629,"line_end":1629,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288168,"byte_end":288194,"line_start":1630,"line_end":1630,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288195,"byte_end":288204,"line_start":1631,"line_end":1631,"column_start":1,"column_end":10}},{"value":"/         let mut ts = serializer.serialize_tuple_struct(\"Rgb\", 3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288205,"byte_end":288275,"line_start":1632,"line_end":1632,"column_start":1,"column_end":71}},{"value":"/         ts.serialize_field(&self.0)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288276,"byte_end":288317,"line_start":1633,"line_end":1633,"column_start":1,"column_end":42}},{"value":"/         ts.serialize_field(&self.1)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288318,"byte_end":288359,"line_start":1634,"line_end":1634,"column_start":1,"column_end":42}},{"value":"/         ts.serialize_field(&self.2)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288360,"byte_end":288401,"line_start":1635,"line_end":1635,"column_start":1,"column_end":42}},{"value":"/         ts.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288402,"byte_end":288422,"line_start":1636,"line_end":1636,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288423,"byte_end":288432,"line_start":1637,"line_end":1637,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288433,"byte_end":288438,"line_start":1638,"line_end":1638,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288439,"byte_end":288446,"line_start":1639,"line_end":1639,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288447,"byte_end":288450,"line_start":1640,"line_end":1640,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288451,"byte_end":288479,"line_start":1641,"line_end":1641,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288480,"byte_end":288483,"line_start":1642,"line_end":1642,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288484,"byte_end":288554,"line_start":1643,"line_end":1643,"column_start":1,"column_end":71}},{"value":"/ implementation of `SerializeTupleStruct` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288555,"byte_end":288629,"line_start":1644,"line_end":1644,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288630,"byte_end":288633,"line_start":1645,"line_end":1645,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288634,"byte_end":288694,"line_start":1646,"line_end":1646,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1451},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288791,"byte_end":288793,"line_start":1649,"line_end":1649,"column_start":10,"column_end":12},"name":"Ok","qualname":"::ser::SerializeTupleStruct::Ok","value":"type Ok;","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":" Must match the `Ok` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Ok` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288732,"byte_end":288781,"line_start":1648,"line_end":1648,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1452},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288862,"byte_end":288867,"line_start":1652,"line_end":1652,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::SerializeTupleStruct::Error","value":"type Error: Error;","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":" Must match the `Error` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Error` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288800,"byte_end":288852,"line_start":1651,"line_end":1651,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288924,"byte_end":288939,"line_start":1655,"line_end":1655,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"::ser::SerializeTupleStruct::serialize_field","value":"pub fn serialize_field<T: ?Sized>(&mut Self, &T) -> Result<(), Self::Error>\nwhere T: Serialize","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":" Serialize a tuple struct field.\n","sig":null,"attributes":[{"value":"/ Serialize a tuple struct field.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":288881,"byte_end":288916,"line_start":1654,"line_end":1654,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289083,"byte_end":289086,"line_start":1660,"line_end":1660,"column_start":8,"column_end":11},"name":"end","qualname":"::ser::SerializeTupleStruct::end","value":"pub fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":" Finish serializing a tuple struct.\n","sig":null,"attributes":[{"value":"/ Finish serializing a tuple struct.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289037,"byte_end":289075,"line_start":1659,"line_end":1659,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":1456},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290422,"byte_end":290443,"line_start":1705,"line_end":1705,"column_start":11,"column_end":32},"name":"SerializeTupleVariant","qualname":"::ser::SerializeTupleVariant","value":"SerializeTupleVariant","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1461}],"decl_id":null,"docs":" Returned from `Serializer::serialize_tuple_variant`.","sig":null,"attributes":[{"value":"/ Returned from `Serializer::serialize_tuple_variant`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289130,"byte_end":289186,"line_start":1663,"line_end":1663,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289187,"byte_end":289190,"line_start":1664,"line_end":1664,"column_start":1,"column_end":4}},{"value":"/ # Example use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289191,"byte_end":289208,"line_start":1665,"line_end":1665,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289209,"byte_end":289212,"line_start":1666,"line_end":1666,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289213,"byte_end":289231,"line_start":1667,"line_end":1667,"column_start":1,"column_end":19}},{"value":"/ use serde::ser::{Serialize, SerializeTupleVariant, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289232,"byte_end":289299,"line_start":1668,"line_end":1668,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289300,"byte_end":289303,"line_start":1669,"line_end":1669,"column_start":1,"column_end":4}},{"value":"/ enum E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289304,"byte_end":289316,"line_start":1670,"line_end":1670,"column_start":1,"column_end":13}},{"value":"/     T(u8, u8),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289317,"byte_end":289335,"line_start":1671,"line_end":1671,"column_start":1,"column_end":19}},{"value":"/     U(String, u32, u32),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289336,"byte_end":289364,"line_start":1672,"line_end":1672,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289365,"byte_end":289370,"line_start":1673,"line_end":1673,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289371,"byte_end":289374,"line_start":1674,"line_end":1674,"column_start":1,"column_end":4}},{"value":"/ impl Serialize for E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289375,"byte_end":289401,"line_start":1675,"line_end":1675,"column_start":1,"column_end":27}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289402,"byte_end":289474,"line_start":1676,"line_end":1676,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289475,"byte_end":289488,"line_start":1677,"line_end":1677,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289489,"byte_end":289515,"line_start":1678,"line_end":1678,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289516,"byte_end":289525,"line_start":1679,"line_end":1679,"column_start":1,"column_end":10}},{"value":"/         match *self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289526,"byte_end":289551,"line_start":1680,"line_end":1680,"column_start":1,"column_end":26}},{"value":"/             E::T(ref a, ref b) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289552,"byte_end":289591,"line_start":1681,"line_end":1681,"column_start":1,"column_end":40}},{"value":"/                 let mut tv = serializer.serialize_tuple_variant(\"E\", 0, \"T\", 2)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289592,"byte_end":289677,"line_start":1682,"line_end":1682,"column_start":1,"column_end":86}},{"value":"/                 tv.serialize_field(a)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289678,"byte_end":289721,"line_start":1683,"line_end":1683,"column_start":1,"column_end":44}},{"value":"/                 tv.serialize_field(b)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289722,"byte_end":289765,"line_start":1684,"line_end":1684,"column_start":1,"column_end":44}},{"value":"/                 tv.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289766,"byte_end":289794,"line_start":1685,"line_end":1685,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289795,"byte_end":289812,"line_start":1686,"line_end":1686,"column_start":1,"column_end":18}},{"value":"/             E::U(ref a, ref b, ref c) => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289813,"byte_end":289859,"line_start":1687,"line_end":1687,"column_start":1,"column_end":47}},{"value":"/                 let mut tv = serializer.serialize_tuple_variant(\"E\", 1, \"U\", 3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289860,"byte_end":289945,"line_start":1688,"line_end":1688,"column_start":1,"column_end":86}},{"value":"/                 tv.serialize_field(a)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289946,"byte_end":289989,"line_start":1689,"line_end":1689,"column_start":1,"column_end":44}},{"value":"/                 tv.serialize_field(b)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":289990,"byte_end":290033,"line_start":1690,"line_end":1690,"column_start":1,"column_end":44}},{"value":"/                 tv.serialize_field(c)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290034,"byte_end":290077,"line_start":1691,"line_end":1691,"column_start":1,"column_end":44}},{"value":"/                 tv.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290078,"byte_end":290106,"line_start":1692,"line_end":1692,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290107,"byte_end":290124,"line_start":1693,"line_end":1693,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290125,"byte_end":290138,"line_start":1694,"line_end":1694,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290139,"byte_end":290148,"line_start":1695,"line_end":1695,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290149,"byte_end":290154,"line_start":1696,"line_end":1696,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290155,"byte_end":290162,"line_start":1697,"line_end":1697,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290163,"byte_end":290166,"line_start":1698,"line_end":1698,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290167,"byte_end":290195,"line_start":1699,"line_end":1699,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290196,"byte_end":290199,"line_start":1700,"line_end":1700,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290200,"byte_end":290270,"line_start":1701,"line_end":1701,"column_start":1,"column_end":71}},{"value":"/ implementation of `SerializeTupleVariant` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290271,"byte_end":290346,"line_start":1702,"line_end":1702,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290347,"byte_end":290350,"line_start":1703,"line_end":1703,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290351,"byte_end":290411,"line_start":1704,"line_end":1704,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1457},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290509,"byte_end":290511,"line_start":1707,"line_end":1707,"column_start":10,"column_end":12},"name":"Ok","qualname":"::ser::SerializeTupleVariant::Ok","value":"type Ok;","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":" Must match the `Ok` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Ok` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290450,"byte_end":290499,"line_start":1706,"line_end":1706,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1458},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290580,"byte_end":290585,"line_start":1710,"line_end":1710,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::SerializeTupleVariant::Error","value":"type Error: Error;","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":" Must match the `Error` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Error` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290518,"byte_end":290570,"line_start":1709,"line_end":1709,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290643,"byte_end":290658,"line_start":1713,"line_end":1713,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"::ser::SerializeTupleVariant::serialize_field","value":"pub fn serialize_field<T: ?Sized>(&mut Self, &T) -> Result<(), Self::Error>\nwhere T: Serialize","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":" Serialize a tuple variant field.\n","sig":null,"attributes":[{"value":"/ Serialize a tuple variant field.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290599,"byte_end":290635,"line_start":1712,"line_end":1712,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290803,"byte_end":290806,"line_start":1718,"line_end":1718,"column_start":8,"column_end":11},"name":"end","qualname":"::ser::SerializeTupleVariant::end","value":"pub fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":" Finish serializing a tuple variant.\n","sig":null,"attributes":[{"value":"/ Finish serializing a tuple variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290756,"byte_end":290795,"line_start":1717,"line_end":1717,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":1462},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292195,"byte_end":292207,"line_start":1771,"line_end":1771,"column_start":11,"column_end":23},"name":"SerializeMap","qualname":"::ser::SerializeMap","value":"SerializeMap","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":1472}],"decl_id":null,"docs":" Returned from `Serializer::serialize_map`.","sig":null,"attributes":[{"value":"/ Returned from `Serializer::serialize_map`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290850,"byte_end":290896,"line_start":1721,"line_end":1721,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290897,"byte_end":290900,"line_start":1722,"line_end":1722,"column_start":1,"column_end":4}},{"value":"/ # Example use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290901,"byte_end":290918,"line_start":1723,"line_end":1723,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290919,"byte_end":290922,"line_start":1724,"line_end":1724,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290923,"byte_end":290941,"line_start":1725,"line_end":1725,"column_start":1,"column_end":19}},{"value":"/ # use std::marker::PhantomData;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290942,"byte_end":290977,"line_start":1726,"line_end":1726,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290978,"byte_end":290983,"line_start":1727,"line_end":1727,"column_start":1,"column_end":6}},{"value":"/ # struct HashMap<K, V>(PhantomData<K>, PhantomData<V>);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":290984,"byte_end":291043,"line_start":1728,"line_end":1728,"column_start":1,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291044,"byte_end":291049,"line_start":1729,"line_end":1729,"column_start":1,"column_end":6}},{"value":"/ # impl<K, V> HashMap<K, V> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291050,"byte_end":291082,"line_start":1730,"line_end":1730,"column_start":1,"column_end":33}},{"value":"/ #     fn len(&self) -> usize {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291083,"byte_end":291117,"line_start":1731,"line_end":1731,"column_start":1,"column_end":35}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291118,"byte_end":291148,"line_start":1732,"line_end":1732,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291149,"byte_end":291160,"line_start":1733,"line_end":1733,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291161,"byte_end":291168,"line_start":1734,"line_end":1734,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291169,"byte_end":291174,"line_start":1735,"line_end":1735,"column_start":1,"column_end":6}},{"value":"/ # impl<'a, K, V> IntoIterator for &'a HashMap<K, V> {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291175,"byte_end":291232,"line_start":1736,"line_end":1736,"column_start":1,"column_end":58}},{"value":"/ #     type Item = (&'a K, &'a V);","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291233,"byte_end":291270,"line_start":1737,"line_end":1737,"column_start":1,"column_end":38}},{"value":"/ #     type IntoIter = Box<Iterator<Item = (&'a K, &'a V)>>;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291271,"byte_end":291334,"line_start":1738,"line_end":1738,"column_start":1,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291335,"byte_end":291340,"line_start":1739,"line_end":1739,"column_start":1,"column_end":6}},{"value":"/ #     fn into_iter(self) -> Self::IntoIter {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291341,"byte_end":291389,"line_start":1740,"line_end":1740,"column_start":1,"column_end":49}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291390,"byte_end":291420,"line_start":1741,"line_end":1741,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291421,"byte_end":291432,"line_start":1742,"line_end":1742,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291433,"byte_end":291440,"line_start":1743,"line_end":1743,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291441,"byte_end":291446,"line_start":1744,"line_end":1744,"column_start":1,"column_end":6}},{"value":"/ use serde::ser::{Serialize, Serializer, SerializeMap};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291447,"byte_end":291505,"line_start":1745,"line_end":1745,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291506,"byte_end":291509,"line_start":1746,"line_end":1746,"column_start":1,"column_end":4}},{"value":"/ impl<K, V> Serialize for HashMap<K, V>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291510,"byte_end":291552,"line_start":1747,"line_end":1747,"column_start":1,"column_end":43}},{"value":"/ where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291553,"byte_end":291562,"line_start":1748,"line_end":1748,"column_start":1,"column_end":10}},{"value":"/     K: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291563,"byte_end":291584,"line_start":1749,"line_end":1749,"column_start":1,"column_end":22}},{"value":"/     V: Serialize,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291585,"byte_end":291606,"line_start":1750,"line_end":1750,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291607,"byte_end":291612,"line_start":1751,"line_end":1751,"column_start":1,"column_end":6}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291613,"byte_end":291685,"line_start":1752,"line_end":1752,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291686,"byte_end":291699,"line_start":1753,"line_end":1753,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291700,"byte_end":291726,"line_start":1754,"line_end":1754,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291727,"byte_end":291736,"line_start":1755,"line_end":1755,"column_start":1,"column_end":10}},{"value":"/         let mut map = serializer.serialize_map(Some(self.len()))?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291737,"byte_end":291807,"line_start":1756,"line_end":1756,"column_start":1,"column_end":71}},{"value":"/         for (k, v) in self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291808,"byte_end":291840,"line_start":1757,"line_end":1757,"column_start":1,"column_end":33}},{"value":"/             map.serialize_entry(k, v)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291841,"byte_end":291884,"line_start":1758,"line_end":1758,"column_start":1,"column_end":44}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291885,"byte_end":291898,"line_start":1759,"line_end":1759,"column_start":1,"column_end":14}},{"value":"/         map.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291899,"byte_end":291920,"line_start":1760,"line_end":1760,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291921,"byte_end":291930,"line_start":1761,"line_end":1761,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291931,"byte_end":291936,"line_start":1762,"line_end":1762,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291937,"byte_end":291944,"line_start":1763,"line_end":1763,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291945,"byte_end":291948,"line_start":1764,"line_end":1764,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291949,"byte_end":291977,"line_start":1765,"line_end":1765,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291978,"byte_end":291981,"line_start":1766,"line_end":1766,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":291982,"byte_end":292052,"line_start":1767,"line_end":1767,"column_start":1,"column_end":71}},{"value":"/ implementation of `SerializeMap` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292053,"byte_end":292119,"line_start":1768,"line_end":1768,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292120,"byte_end":292123,"line_start":1769,"line_end":1769,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292124,"byte_end":292184,"line_start":1770,"line_end":1770,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1463},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292273,"byte_end":292275,"line_start":1773,"line_end":1773,"column_start":10,"column_end":12},"name":"Ok","qualname":"::ser::SerializeMap::Ok","value":"type Ok;","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Must match the `Ok` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Ok` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292214,"byte_end":292263,"line_start":1772,"line_end":1772,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1464},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292344,"byte_end":292349,"line_start":1776,"line_end":1776,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::SerializeMap::Error","value":"type Error: Error;","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Must match the `Error` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Error` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292282,"byte_end":292334,"line_start":1775,"line_end":1775,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292652,"byte_end":292665,"line_start":1784,"line_end":1784,"column_start":8,"column_end":21},"name":"serialize_key","qualname":"::ser::SerializeMap::serialize_key","value":"pub fn serialize_key<T: ?Sized>(&mut Self, &T) -> Result<(), Self::Error>\nwhere T: Serialize","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Serialize a map key.","sig":null,"attributes":[{"value":"/ Serialize a map key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292363,"byte_end":292387,"line_start":1778,"line_end":1778,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292392,"byte_end":292395,"line_start":1779,"line_end":1779,"column_start":5,"column_end":8}},{"value":"/ If possible, `Serialize` implementations are encouraged to use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292400,"byte_end":292466,"line_start":1780,"line_end":1780,"column_start":5,"column_end":71}},{"value":"/ `serialize_entry` instead as it may be implemented more efficiently in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292471,"byte_end":292545,"line_start":1781,"line_end":1781,"column_start":5,"column_end":79}},{"value":"/ some formats compared to a pair of calls to `serialize_key` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292550,"byte_end":292617,"line_start":1782,"line_end":1782,"column_start":5,"column_end":72}},{"value":"/ `serialize_value`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292622,"byte_end":292644,"line_start":1783,"line_end":1783,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292956,"byte_end":292971,"line_start":1794,"line_end":1794,"column_start":8,"column_end":23},"name":"serialize_value","qualname":"::ser::SerializeMap::serialize_value","value":"pub fn serialize_value<T: ?Sized>(&mut Self, &T) -> Result<(), Self::Error>\nwhere T: Serialize","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Serialize a map value.","sig":null,"attributes":[{"value":"/ Serialize a map value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292761,"byte_end":292787,"line_start":1788,"line_end":1788,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292792,"byte_end":292795,"line_start":1789,"line_end":1789,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292800,"byte_end":292812,"line_start":1790,"line_end":1790,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292817,"byte_end":292820,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ Calling `serialize_value` before `serialize_key` is incorrect and is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292825,"byte_end":292897,"line_start":1792,"line_end":1792,"column_start":5,"column_end":77}},{"value":"/ allowed to panic or produce bogus results.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":292902,"byte_end":292948,"line_start":1793,"line_end":1793,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294013,"byte_end":294028,"line_start":1815,"line_end":1815,"column_start":8,"column_end":23},"name":"serialize_entry","qualname":"::ser::SerializeMap::serialize_entry","value":"pub fn serialize_entry<K: ?Sized, V: ?Sized>(&mut Self, &K, &V)\n-> Result<(), Self::Error> where K: Serialize, V: Serialize","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Serialize a map entry consisting of a key and a value.","sig":null,"attributes":[{"value":"/ Serialize a map entry consisting of a key and a value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293069,"byte_end":293127,"line_start":1798,"line_end":1798,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293132,"byte_end":293135,"line_start":1799,"line_end":1799,"column_start":5,"column_end":8}},{"value":"/ Some [`Serialize`] types are not able to hold a key and value in memory","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293140,"byte_end":293215,"line_start":1800,"line_end":1800,"column_start":5,"column_end":80}},{"value":"/ at the same time so `SerializeMap` implementations are required to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293220,"byte_end":293290,"line_start":1801,"line_end":1801,"column_start":5,"column_end":75}},{"value":"/ support [`serialize_key`] and [`serialize_value`] individually. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293295,"byte_end":293366,"line_start":1802,"line_end":1802,"column_start":5,"column_end":76}},{"value":"/ `serialize_entry` method allows serializers to optimize for the case","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293371,"byte_end":293443,"line_start":1803,"line_end":1803,"column_start":5,"column_end":77}},{"value":"/ where key and value are both available. [`Serialize`] implementations","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293448,"byte_end":293521,"line_start":1804,"line_end":1804,"column_start":5,"column_end":78}},{"value":"/ are encouraged to use `serialize_entry` if possible.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293526,"byte_end":293582,"line_start":1805,"line_end":1805,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293587,"byte_end":293590,"line_start":1806,"line_end":1806,"column_start":5,"column_end":8}},{"value":"/ The default implementation delegates to [`serialize_key`] and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293595,"byte_end":293660,"line_start":1807,"line_end":1807,"column_start":5,"column_end":70}},{"value":"/ [`serialize_value`]. This is appropriate for serializers that do not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293665,"byte_end":293737,"line_start":1808,"line_end":1808,"column_start":5,"column_end":77}},{"value":"/ care about performance or are not able to optimize `serialize_entry` any","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293742,"byte_end":293818,"line_start":1809,"line_end":1809,"column_start":5,"column_end":81}},{"value":"/ better than this.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293823,"byte_end":293844,"line_start":1810,"line_end":1810,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293849,"byte_end":293852,"line_start":1811,"line_end":1811,"column_start":5,"column_end":8}},{"value":"/ [`Serialize`]: ../trait.Serialize.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293857,"byte_end":293899,"line_start":1812,"line_end":1812,"column_start":5,"column_end":47}},{"value":"/ [`serialize_key`]: #tymethod.serialize_key","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293904,"byte_end":293950,"line_start":1813,"line_end":1813,"column_start":5,"column_end":51}},{"value":"/ [`serialize_value`]: #tymethod.serialize_value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":293955,"byte_end":294005,"line_start":1814,"line_end":1814,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294323,"byte_end":294326,"line_start":1829,"line_end":1829,"column_start":8,"column_end":11},"name":"end","qualname":"::ser::SerializeMap::end","value":"pub fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Finish serializing a map.\n","sig":null,"attributes":[{"value":"/ Finish serializing a map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294286,"byte_end":294315,"line_start":1828,"line_end":1828,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":1473},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295265,"byte_end":295280,"line_start":1865,"line_end":1865,"column_start":11,"column_end":26},"name":"SerializeStruct","qualname":"::ser::SerializeStruct","value":"SerializeStruct","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1479}],"decl_id":null,"docs":" Returned from `Serializer::serialize_struct`.","sig":null,"attributes":[{"value":"/ Returned from `Serializer::serialize_struct`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294370,"byte_end":294419,"line_start":1832,"line_end":1832,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294420,"byte_end":294423,"line_start":1833,"line_end":1833,"column_start":1,"column_end":4}},{"value":"/ # Example use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294424,"byte_end":294441,"line_start":1834,"line_end":1834,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294442,"byte_end":294445,"line_start":1835,"line_end":1835,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294446,"byte_end":294464,"line_start":1836,"line_end":1836,"column_start":1,"column_end":19}},{"value":"/ use serde::ser::{Serialize, SerializeStruct, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294465,"byte_end":294526,"line_start":1837,"line_end":1837,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294527,"byte_end":294530,"line_start":1838,"line_end":1838,"column_start":1,"column_end":4}},{"value":"/ struct Rgb {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294531,"byte_end":294547,"line_start":1839,"line_end":1839,"column_start":1,"column_end":17}},{"value":"/     r: u8,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294548,"byte_end":294562,"line_start":1840,"line_end":1840,"column_start":1,"column_end":15}},{"value":"/     g: u8,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294563,"byte_end":294577,"line_start":1841,"line_end":1841,"column_start":1,"column_end":15}},{"value":"/     b: u8,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294578,"byte_end":294592,"line_start":1842,"line_end":1842,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294593,"byte_end":294598,"line_start":1843,"line_end":1843,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294599,"byte_end":294602,"line_start":1844,"line_end":1844,"column_start":1,"column_end":4}},{"value":"/ impl Serialize for Rgb {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294603,"byte_end":294631,"line_start":1845,"line_end":1845,"column_start":1,"column_end":29}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294632,"byte_end":294704,"line_start":1846,"line_end":1846,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294705,"byte_end":294718,"line_start":1847,"line_end":1847,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294719,"byte_end":294745,"line_start":1848,"line_end":1848,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294746,"byte_end":294755,"line_start":1849,"line_end":1849,"column_start":1,"column_end":10}},{"value":"/         let mut rgb = serializer.serialize_struct(\"Rgb\", 3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294756,"byte_end":294821,"line_start":1850,"line_end":1850,"column_start":1,"column_end":66}},{"value":"/         rgb.serialize_field(\"r\", &self.r)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294822,"byte_end":294869,"line_start":1851,"line_end":1851,"column_start":1,"column_end":48}},{"value":"/         rgb.serialize_field(\"g\", &self.g)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294870,"byte_end":294917,"line_start":1852,"line_end":1852,"column_start":1,"column_end":48}},{"value":"/         rgb.serialize_field(\"b\", &self.b)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294918,"byte_end":294965,"line_start":1853,"line_end":1853,"column_start":1,"column_end":48}},{"value":"/         rgb.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294966,"byte_end":294987,"line_start":1854,"line_end":1854,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294988,"byte_end":294997,"line_start":1855,"line_end":1855,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":294998,"byte_end":295003,"line_start":1856,"line_end":1856,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295004,"byte_end":295011,"line_start":1857,"line_end":1857,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295012,"byte_end":295015,"line_start":1858,"line_end":1858,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295016,"byte_end":295044,"line_start":1859,"line_end":1859,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295045,"byte_end":295048,"line_start":1860,"line_end":1860,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295049,"byte_end":295119,"line_start":1861,"line_end":1861,"column_start":1,"column_end":71}},{"value":"/ implementation of `SerializeStruct` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295120,"byte_end":295189,"line_start":1862,"line_end":1862,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295190,"byte_end":295193,"line_start":1863,"line_end":1863,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295194,"byte_end":295254,"line_start":1864,"line_end":1864,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1474},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295346,"byte_end":295348,"line_start":1867,"line_end":1867,"column_start":10,"column_end":12},"name":"Ok","qualname":"::ser::SerializeStruct::Ok","value":"type Ok;","parent":{"krate":0,"index":1473},"children":[],"decl_id":null,"docs":" Must match the `Ok` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Ok` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295287,"byte_end":295336,"line_start":1866,"line_end":1866,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1475},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295417,"byte_end":295422,"line_start":1870,"line_end":1870,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::SerializeStruct::Error","value":"type Error: Error;","parent":{"krate":0,"index":1473},"children":[],"decl_id":null,"docs":" Must match the `Error` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Error` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295355,"byte_end":295407,"line_start":1869,"line_end":1869,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295473,"byte_end":295488,"line_start":1873,"line_end":1873,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"::ser::SerializeStruct::serialize_field","value":"pub fn serialize_field<T: ?Sized>(&mut Self, &'static str, &T)\n-> Result<(), Self::Error> where T: Serialize","parent":{"krate":0,"index":1473},"children":[],"decl_id":null,"docs":" Serialize a struct field.\n","sig":null,"attributes":[{"value":"/ Serialize a struct field.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295436,"byte_end":295465,"line_start":1872,"line_end":1872,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295708,"byte_end":295718,"line_start":1883,"line_end":1883,"column_start":8,"column_end":18},"name":"skip_field","qualname":"::ser::SerializeStruct::skip_field","value":"pub fn skip_field(&mut Self, &'static str) -> Result<(), Self::Error>","parent":{"krate":0,"index":1473},"children":[],"decl_id":null,"docs":" Indicate that a struct field has been skipped.\n","sig":null,"attributes":[{"value":"/ Indicate that a struct field has been skipped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295636,"byte_end":295686,"line_start":1881,"line_end":1881,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295691,"byte_end":295700,"line_start":1882,"line_end":1882,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295865,"byte_end":295868,"line_start":1889,"line_end":1889,"column_start":8,"column_end":11},"name":"end","qualname":"::ser::SerializeStruct::end","value":"pub fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1473},"children":[],"decl_id":null,"docs":" Finish serializing a struct.\n","sig":null,"attributes":[{"value":"/ Finish serializing a struct.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295825,"byte_end":295857,"line_start":1888,"line_end":1888,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":1480},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297029,"byte_end":297051,"line_start":1931,"line_end":1931,"column_start":11,"column_end":33},"name":"SerializeStructVariant","qualname":"::ser::SerializeStructVariant","value":"SerializeStructVariant","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1486}],"decl_id":null,"docs":" Returned from `Serializer::serialize_struct_variant`.","sig":null,"attributes":[{"value":"/ Returned from `Serializer::serialize_struct_variant`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295912,"byte_end":295969,"line_start":1892,"line_end":1892,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295970,"byte_end":295973,"line_start":1893,"line_end":1893,"column_start":1,"column_end":4}},{"value":"/ # Example use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295974,"byte_end":295991,"line_start":1894,"line_end":1894,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295992,"byte_end":295995,"line_start":1895,"line_end":1895,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":295996,"byte_end":296014,"line_start":1896,"line_end":1896,"column_start":1,"column_end":19}},{"value":"/ use serde::ser::{Serialize, SerializeStructVariant, Serializer};","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296015,"byte_end":296083,"line_start":1897,"line_end":1897,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296084,"byte_end":296087,"line_start":1898,"line_end":1898,"column_start":1,"column_end":4}},{"value":"/ enum E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296088,"byte_end":296100,"line_start":1899,"line_end":1899,"column_start":1,"column_end":13}},{"value":"/     S { r: u8, g: u8, b: u8 },","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296101,"byte_end":296135,"line_start":1900,"line_end":1900,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296136,"byte_end":296141,"line_start":1901,"line_end":1901,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296142,"byte_end":296145,"line_start":1902,"line_end":1902,"column_start":1,"column_end":4}},{"value":"/ impl Serialize for E {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296146,"byte_end":296172,"line_start":1903,"line_end":1903,"column_start":1,"column_end":27}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296173,"byte_end":296245,"line_start":1904,"line_end":1904,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296246,"byte_end":296259,"line_start":1905,"line_end":1905,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296260,"byte_end":296286,"line_start":1906,"line_end":1906,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296287,"byte_end":296296,"line_start":1907,"line_end":1907,"column_start":1,"column_end":10}},{"value":"/         match *self {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296297,"byte_end":296322,"line_start":1908,"line_end":1908,"column_start":1,"column_end":26}},{"value":"/             E::S {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296323,"byte_end":296345,"line_start":1909,"line_end":1909,"column_start":1,"column_end":23}},{"value":"/                 ref r,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296346,"byte_end":296372,"line_start":1910,"line_end":1910,"column_start":1,"column_end":27}},{"value":"/                 ref g,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296373,"byte_end":296399,"line_start":1911,"line_end":1911,"column_start":1,"column_end":27}},{"value":"/                 ref b,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296400,"byte_end":296426,"line_start":1912,"line_end":1912,"column_start":1,"column_end":27}},{"value":"/             } => {","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296427,"byte_end":296449,"line_start":1913,"line_end":1913,"column_start":1,"column_end":23}},{"value":"/                 let mut sv = serializer.serialize_struct_variant(\"E\", 0, \"S\", 3)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296450,"byte_end":296536,"line_start":1914,"line_end":1914,"column_start":1,"column_end":87}},{"value":"/                 sv.serialize_field(\"r\", r)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296537,"byte_end":296585,"line_start":1915,"line_end":1915,"column_start":1,"column_end":49}},{"value":"/                 sv.serialize_field(\"g\", g)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296586,"byte_end":296634,"line_start":1916,"line_end":1916,"column_start":1,"column_end":49}},{"value":"/                 sv.serialize_field(\"b\", b)?;","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296635,"byte_end":296683,"line_start":1917,"line_end":1917,"column_start":1,"column_end":49}},{"value":"/                 sv.end()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296684,"byte_end":296712,"line_start":1918,"line_end":1918,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296713,"byte_end":296730,"line_start":1919,"line_end":1919,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296731,"byte_end":296744,"line_start":1920,"line_end":1920,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296745,"byte_end":296754,"line_start":1921,"line_end":1921,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296755,"byte_end":296760,"line_start":1922,"line_end":1922,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296761,"byte_end":296768,"line_start":1923,"line_end":1923,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296769,"byte_end":296772,"line_start":1924,"line_end":1924,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296773,"byte_end":296801,"line_start":1925,"line_end":1925,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296802,"byte_end":296805,"line_start":1926,"line_end":1926,"column_start":1,"column_end":4}},{"value":"/ The [example data format] presented on the website demonstrates an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296806,"byte_end":296876,"line_start":1927,"line_end":1927,"column_start":1,"column_end":71}},{"value":"/ implementation of `SerializeStructVariant` for a basic JSON data format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296877,"byte_end":296953,"line_start":1928,"line_end":1928,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296954,"byte_end":296957,"line_start":1929,"line_end":1929,"column_start":1,"column_end":4}},{"value":"/ [example data format]: https://serde.rs/data-format.html","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":296958,"byte_end":297018,"line_start":1930,"line_end":1930,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1481},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297117,"byte_end":297119,"line_start":1933,"line_end":1933,"column_start":10,"column_end":12},"name":"Ok","qualname":"::ser::SerializeStructVariant::Ok","value":"type Ok;","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Must match the `Ok` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Ok` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297058,"byte_end":297107,"line_start":1932,"line_end":1932,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1482},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297188,"byte_end":297193,"line_start":1936,"line_end":1936,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::SerializeStructVariant::Error","value":"type Error: Error;","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Must match the `Error` type of our `Serializer`.\n","sig":null,"attributes":[{"value":"/ Must match the `Error` type of our `Serializer`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297126,"byte_end":297178,"line_start":1935,"line_end":1935,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297252,"byte_end":297267,"line_start":1939,"line_end":1939,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"::ser::SerializeStructVariant::serialize_field","value":"pub fn serialize_field<T: ?Sized>(&mut Self, &'static str, &T)\n-> Result<(), Self::Error> where T: Serialize","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Serialize a struct variant field.\n","sig":null,"attributes":[{"value":"/ Serialize a struct variant field.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297207,"byte_end":297244,"line_start":1938,"line_end":1938,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297495,"byte_end":297505,"line_start":1949,"line_end":1949,"column_start":8,"column_end":18},"name":"skip_field","qualname":"::ser::SerializeStructVariant::skip_field","value":"pub fn skip_field(&mut Self, &'static str) -> Result<(), Self::Error>","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Indicate that a struct variant field has been skipped.\n","sig":null,"attributes":[{"value":"/ Indicate that a struct variant field has been skipped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297415,"byte_end":297473,"line_start":1947,"line_end":1947,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297478,"byte_end":297487,"line_start":1948,"line_end":1948,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297660,"byte_end":297663,"line_start":1955,"line_end":1955,"column_start":8,"column_end":11},"name":"end","qualname":"::ser::SerializeStructVariant::end","value":"pub fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Finish serializing a struct variant.\n","sig":null,"attributes":[{"value":"/ Finish serializing a struct variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297612,"byte_end":297652,"line_start":1954,"line_end":1954,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":1500},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"export","qualname":"::export","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":8972},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":8978},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":8984},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":8988},{"krate":0,"index":1513},{"krate":0,"index":8990},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":8994},{"krate":0,"index":1517},{"krate":0,"index":8996},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1525},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":329131,"byte_end":329146,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"from_utf8_lossy","qualname":"::export::string::from_utf8_lossy","value":"pub fn from_utf8_lossy(&[u8]) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/export.rs","byte_start":329072,"byte_end":329119,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1526},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"private","qualname":"::private","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/mod.rs","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1533},{"krate":0,"index":2390}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1533},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::private::de","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1574},{"krate":0,"index":1596},{"krate":0,"index":1618},{"krate":0,"index":1624},{"krate":0,"index":2242},{"krate":0,"index":2247},{"krate":0,"index":2252},{"krate":0,"index":2257},{"krate":0,"index":2262},{"krate":0,"index":2269},{"krate":0,"index":2274},{"krate":0,"index":2279},{"krate":0,"index":2286},{"krate":0,"index":2291},{"krate":0,"index":2298},{"krate":0,"index":2305},{"krate":0,"index":2312},{"krate":0,"index":2330},{"krate":0,"index":2337},{"krate":0,"index":2342},{"krate":0,"index":2351},{"krate":0,"index":2359},{"krate":0,"index":2364},{"krate":0,"index":2374},{"krate":0,"index":2381}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1557},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":335246,"byte_end":335259,"line_start":17,"line_end":17,"column_start":8,"column_end":21},"name":"missing_field","qualname":"::private::de::missing_field","value":"pub fn missing_field<'de, V, E>(&'static str) -> Result<V, E> where\nV: Deserialize, E: Error","parent":null,"children":[],"decl_id":null,"docs":" If the missing field is of type `Option<T>` then treat is as `None`,\n otherwise it is an error.\n","sig":null,"attributes":[{"value":"/ If the missing field is of type `Option<T>` then treat is as `None`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":335136,"byte_end":335208,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ otherwise it is an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":335209,"byte_end":335238,"line_start":16,"line_end":16,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1574},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":336344,"byte_end":336358,"line_start":56,"line_end":56,"column_start":8,"column_end":22},"name":"borrow_cow_str","qualname":"::private::de::borrow_cow_str","value":"pub fn borrow_cow_str<'de:'a, 'a, D>(D) -> Result<Cow, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":336289,"byte_end":336336,"line_start":55,"line_end":55,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":1596},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":338315,"byte_end":338331,"line_start":128,"line_end":128,"column_start":8,"column_end":24},"name":"borrow_cow_bytes","qualname":"::private::de::borrow_cow_bytes","value":"pub fn borrow_cow_bytes<'de:'a, 'a, D>(D) -> Result<Cow, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":338260,"byte_end":338307,"line_start":127,"line_end":127,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":1618},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":339766,"byte_end":339775,"line_start":187,"line_end":187,"column_start":9,"column_end":18},"name":"size_hint","qualname":"::private::de::size_hint","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1623}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1620},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":339806,"byte_end":339817,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"from_bounds","qualname":"::private::de::size_hint::from_bounds","value":"pub fn from_bounds<I>(&I) -> Option<usize> where I: Iterator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1622},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":339950,"byte_end":339958,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"cautious","qualname":"::private::de::size_hint::cautious","value":"pub fn cautious(Option<usize>) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":339929,"byte_end":339938,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8159},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341204,"byte_end":341208,"line_start":236,"line_end":236,"column_start":9,"column_end":13},"name":"Bool","qualname":"::private::de::content::Content::Bool","value":"Content::Bool(bool)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8162},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341225,"byte_end":341227,"line_start":238,"line_end":238,"column_start":9,"column_end":11},"name":"U8","qualname":"::private::de::content::Content::U8","value":"Content::U8(u8)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8165},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341241,"byte_end":341244,"line_start":239,"line_end":239,"column_start":9,"column_end":12},"name":"U16","qualname":"::private::de::content::Content::U16","value":"Content::U16(u16)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8168},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341259,"byte_end":341262,"line_start":240,"line_end":240,"column_start":9,"column_end":12},"name":"U32","qualname":"::private::de::content::Content::U32","value":"Content::U32(u32)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8171},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341277,"byte_end":341280,"line_start":241,"line_end":241,"column_start":9,"column_end":12},"name":"U64","qualname":"::private::de::content::Content::U64","value":"Content::U64(u64)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8174},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341296,"byte_end":341298,"line_start":243,"line_end":243,"column_start":9,"column_end":11},"name":"I8","qualname":"::private::de::content::Content::I8","value":"Content::I8(i8)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8177},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341312,"byte_end":341315,"line_start":244,"line_end":244,"column_start":9,"column_end":12},"name":"I16","qualname":"::private::de::content::Content::I16","value":"Content::I16(i16)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8180},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341330,"byte_end":341333,"line_start":245,"line_end":245,"column_start":9,"column_end":12},"name":"I32","qualname":"::private::de::content::Content::I32","value":"Content::I32(i32)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8183},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341348,"byte_end":341351,"line_start":246,"line_end":246,"column_start":9,"column_end":12},"name":"I64","qualname":"::private::de::content::Content::I64","value":"Content::I64(i64)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8186},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341367,"byte_end":341370,"line_start":248,"line_end":248,"column_start":9,"column_end":12},"name":"F32","qualname":"::private::de::content::Content::F32","value":"Content::F32(f32)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8189},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341385,"byte_end":341388,"line_start":249,"line_end":249,"column_start":9,"column_end":12},"name":"F64","qualname":"::private::de::content::Content::F64","value":"Content::F64(f64)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8192},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341404,"byte_end":341408,"line_start":251,"line_end":251,"column_start":9,"column_end":13},"name":"Char","qualname":"::private::de::content::Content::Char","value":"Content::Char(char)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8195},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341424,"byte_end":341430,"line_start":252,"line_end":252,"column_start":9,"column_end":15},"name":"String","qualname":"::private::de::content::Content::String","value":"Content::String(String)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8198},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341448,"byte_end":341451,"line_start":253,"line_end":253,"column_start":9,"column_end":12},"name":"Str","qualname":"::private::de::content::Content::Str","value":"Content::Str(&'de str)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8201},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341471,"byte_end":341478,"line_start":254,"line_end":254,"column_start":9,"column_end":16},"name":"ByteBuf","qualname":"::private::de::content::Content::ByteBuf","value":"Content::ByteBuf(Vec<u8>)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8204},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341497,"byte_end":341502,"line_start":255,"line_end":255,"column_start":9,"column_end":14},"name":"Bytes","qualname":"::private::de::content::Content::Bytes","value":"Content::Bytes(&'de [u8])","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8207},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341524,"byte_end":341528,"line_start":257,"line_end":257,"column_start":9,"column_end":13},"name":"None","qualname":"::private::de::content::Content::None","value":"Content::None","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8209},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341538,"byte_end":341542,"line_start":258,"line_end":258,"column_start":9,"column_end":13},"name":"Some","qualname":"::private::de::content::Content::Some","value":"Content::Some(Box<Content>)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8212},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341572,"byte_end":341576,"line_start":260,"line_end":260,"column_start":9,"column_end":13},"name":"Unit","qualname":"::private::de::content::Content::Unit","value":"Content::Unit","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8214},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341586,"byte_end":341593,"line_start":261,"line_end":261,"column_start":9,"column_end":16},"name":"Newtype","qualname":"::private::de::content::Content::Newtype","value":"Content::Newtype(Box<Content>)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8217},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341622,"byte_end":341625,"line_start":262,"line_end":262,"column_start":9,"column_end":12},"name":"Seq","qualname":"::private::de::content::Content::Seq","value":"Content::Seq(Vec<Content>)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8220},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341654,"byte_end":341657,"line_start":263,"line_end":263,"column_start":9,"column_end":12},"name":"Map","qualname":"::private::de::content::Content::Map","value":"Content::Map(Vec<(Content, Content)>)","parent":{"krate":0,"index":8157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8157},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341181,"byte_end":341188,"line_start":235,"line_end":235,"column_start":14,"column_end":21},"name":"Content","qualname":"::private::de::content::Content","value":"pub enum Content<'de> {\n    Bool(bool),\n    U8(u8),\n    U16(u16),\n    U32(u32),\n    U64(u64),\n    I8(i8),\n    I16(i16),\n    I32(i32),\n    I64(i64),\n    F32(f32),\n    F64(f64),\n    Char(char),\n    String(String),\n    Str(&'de str),\n    ByteBuf(Vec<u8>),\n    Bytes(&'de [u8]),\n    None,\n    Some(Box<Content>),\n    Unit,\n    Newtype(Box<Content>),\n    Seq(Vec<Content>),\n    Map(Vec<(Content, Content)>),\n}","parent":null,"children":[{"krate":0,"index":8159},{"krate":0,"index":8162},{"krate":0,"index":8165},{"krate":0,"index":8168},{"krate":0,"index":8171},{"krate":0,"index":8174},{"krate":0,"index":8177},{"krate":0,"index":8180},{"krate":0,"index":8183},{"krate":0,"index":8186},{"krate":0,"index":8189},{"krate":0,"index":8192},{"krate":0,"index":8195},{"krate":0,"index":8198},{"krate":0,"index":8201},{"krate":0,"index":8204},{"krate":0,"index":8207},{"krate":0,"index":8209},{"krate":0,"index":8212},{"krate":0,"index":8214},{"krate":0,"index":8217},{"krate":0,"index":8220}],"decl_id":null,"docs":" Used from generated code to buffer the contents of the Deserializer when\n deserializing untagged enums and internally tagged enums.","sig":null,"attributes":[{"value":"/ Used from generated code to buffer the contents of the Deserializer when","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":340947,"byte_end":341023,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ deserializing untagged enums and internally tagged enums.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341028,"byte_end":341089,"line_start":231,"line_end":231,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341094,"byte_end":341097,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Not public API. Use serde-value instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341102,"byte_end":341146,"line_start":233,"line_end":233,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341745,"byte_end":341751,"line_start":267,"line_end":267,"column_start":16,"column_end":22},"name":"as_str","qualname":"<Content>::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1782},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357456,"byte_end":357469,"line_start":815,"line_end":815,"column_start":16,"column_end":29},"name":"TaggedContent","qualname":"::private::de::content::TaggedContent","value":"TaggedContent { tag, content }","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786}],"decl_id":null,"docs":" Used by generated code to deserialize an internally tagged enum.","sig":null,"attributes":[{"value":"/ Used by generated code to deserialize an internally tagged enum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357340,"byte_end":357408,"line_start":812,"line_end":812,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357413,"byte_end":357416,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357421,"byte_end":357440,"line_start":814,"line_end":814,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1785},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357492,"byte_end":357495,"line_start":816,"line_end":816,"column_start":13,"column_end":16},"name":"tag","qualname":"::private::de::content::TaggedContent::tag","value":"T","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1786},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357512,"byte_end":357519,"line_start":817,"line_end":817,"column_start":13,"column_end":20},"name":"content","qualname":"::private::de::content::TaggedContent::content","value":"private::de::content::Content<'de>","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1787},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357581,"byte_end":357601,"line_start":821,"line_end":821,"column_start":16,"column_end":36},"name":"TaggedContentVisitor","qualname":"::private::de::content::TaggedContentVisitor","value":"TaggedContentVisitor {  }","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791}],"decl_id":null,"docs":" Not public API.\n","sig":null,"attributes":[{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357546,"byte_end":357565,"line_start":820,"line_end":820,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357867,"byte_end":357870,"line_start":829,"line_end":829,"column_start":16,"column_end":19},"name":"new","qualname":"<TaggedContentVisitor>::new","value":"pub fn new(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Visitor for the content of an internally tagged enum with the given\n tag name.\n","sig":null,"attributes":[{"value":"/ Visitor for the content of an internally tagged enum with the given","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357758,"byte_end":357829,"line_start":827,"line_end":827,"column_start":9,"column_end":80}},{"value":"/ tag name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357838,"byte_end":357851,"line_start":828,"line_end":828,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1812},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360615,"byte_end":360618,"line_start":914,"line_end":914,"column_start":9,"column_end":12},"name":"Tag","qualname":"::private::de::content::TagOrContentField::Tag","value":"TagOrContentField::Tag","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1814},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360628,"byte_end":360635,"line_start":915,"line_end":915,"column_start":9,"column_end":16},"name":"Content","qualname":"::private::de::content::TagOrContentField::Content","value":"TagOrContentField::Content","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1811},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360587,"byte_end":360604,"line_start":913,"line_end":913,"column_start":14,"column_end":31},"name":"TagOrContentField","qualname":"::private::de::content::TagOrContentField","value":"pub enum TagOrContentField { Tag, Content, }","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1814}],"decl_id":null,"docs":" Used by generated code to deserialize an adjacently tagged enum.","sig":null,"attributes":[{"value":"/ Used by generated code to deserialize an adjacently tagged enum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360473,"byte_end":360541,"line_start":910,"line_end":910,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360546,"byte_end":360549,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360554,"byte_end":360573,"line_start":912,"line_end":912,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1816},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360683,"byte_end":360707,"line_start":919,"line_end":919,"column_start":16,"column_end":40},"name":"TagOrContentFieldVisitor","qualname":"::private::de::content::TagOrContentFieldVisitor","value":"TagOrContentFieldVisitor { tag, content }","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818}],"decl_id":null,"docs":" Not public API.\n","sig":null,"attributes":[{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360648,"byte_end":360667,"line_start":918,"line_end":918,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1817},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360722,"byte_end":360725,"line_start":920,"line_end":920,"column_start":13,"column_end":16},"name":"tag","qualname":"::private::de::content::TagOrContentFieldVisitor::tag","value":"&'static str","parent":{"krate":0,"index":1816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1818},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360753,"byte_end":360760,"line_start":921,"line_end":921,"column_start":13,"column_end":20},"name":"content","qualname":"::private::de::content::TagOrContentFieldVisitor::content","value":"&'static str","parent":{"krate":0,"index":1816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1831},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":361969,"byte_end":361972,"line_start":961,"line_end":961,"column_start":9,"column_end":12},"name":"Tag","qualname":"::private::de::content::TagContentOtherField::Tag","value":"TagContentOtherField::Tag","parent":{"krate":0,"index":1830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1833},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":361982,"byte_end":361989,"line_start":962,"line_end":962,"column_start":9,"column_end":16},"name":"Content","qualname":"::private::de::content::TagContentOtherField::Content","value":"TagContentOtherField::Content","parent":{"krate":0,"index":1830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1835},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":361999,"byte_end":362004,"line_start":963,"line_end":963,"column_start":9,"column_end":14},"name":"Other","qualname":"::private::de::content::TagContentOtherField::Other","value":"TagContentOtherField::Other","parent":{"krate":0,"index":1830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1830},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":361938,"byte_end":361958,"line_start":960,"line_end":960,"column_start":14,"column_end":34},"name":"TagContentOtherField","qualname":"::private::de::content::TagContentOtherField","value":"pub enum TagContentOtherField { Tag, Content, Other, }","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1835}],"decl_id":null,"docs":" Used by generated code to deserialize an adjacently tagged enum when\n ignoring unrelated fields is allowed.","sig":null,"attributes":[{"value":"/ Used by generated code to deserialize an adjacently tagged enum when","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":361774,"byte_end":361846,"line_start":956,"line_end":956,"column_start":5,"column_end":77}},{"value":"/ ignoring unrelated fields is allowed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":361851,"byte_end":361892,"line_start":957,"line_end":957,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":361897,"byte_end":361900,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":361905,"byte_end":361924,"line_start":959,"line_end":959,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1837},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":362052,"byte_end":362079,"line_start":967,"line_end":967,"column_start":16,"column_end":43},"name":"TagContentOtherFieldVisitor","qualname":"::private::de::content::TagContentOtherFieldVisitor","value":"TagContentOtherFieldVisitor { tag, content }","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839}],"decl_id":null,"docs":" Not public API.\n","sig":null,"attributes":[{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":362017,"byte_end":362036,"line_start":966,"line_end":966,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1838},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":362094,"byte_end":362097,"line_start":968,"line_end":968,"column_start":13,"column_end":16},"name":"tag","qualname":"::private::de::content::TagContentOtherFieldVisitor::tag","value":"&'static str","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1839},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":362125,"byte_end":362132,"line_start":969,"line_end":969,"column_start":13,"column_end":20},"name":"content","qualname":"::private::de::content::TagContentOtherFieldVisitor::content","value":"&'static str","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1851},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":363254,"byte_end":363273,"line_start":1009,"line_end":1009,"column_start":16,"column_end":35},"name":"ContentDeserializer","qualname":"::private::de::content::ContentDeserializer","value":"ContentDeserializer {  }","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855}],"decl_id":null,"docs":" Not public API\n","sig":null,"attributes":[{"value":"/ Not public API","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":363220,"byte_end":363238,"line_start":1008,"line_end":1008,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":377984,"byte_end":377987,"line_start":1439,"line_end":1439,"column_start":16,"column_end":19},"name":"new","qualname":"<ContentDeserializer>::new","value":"pub fn new(Content) -> Self","parent":null,"children":[],"decl_id":null,"docs":" private API, don't use\n","sig":null,"attributes":[{"value":"/ private API, don't use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":377942,"byte_end":377968,"line_start":1438,"line_end":1438,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1937},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":378169,"byte_end":378185,"line_start":1447,"line_end":1447,"column_start":16,"column_end":32},"name":"EnumDeserializer","qualname":"::private::de::content::EnumDeserializer","value":"EnumDeserializer {  }","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":378431,"byte_end":378434,"line_start":1460,"line_end":1460,"column_start":16,"column_end":19},"name":"new","qualname":"<EnumDeserializer>::new","value":"pub fn new(Content, Option<Content>) -> EnumDeserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1955},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":379287,"byte_end":379306,"line_start":1489,"line_end":1489,"column_start":16,"column_end":35},"name":"VariantDeserializer","qualname":"::private::de::content::VariantDeserializer","value":"VariantDeserializer {  }","parent":null,"children":[{"krate":0,"index":1958},{"krate":0,"index":1959}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2018},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":386038,"byte_end":386060,"line_start":1720,"line_end":1720,"column_start":16,"column_end":38},"name":"ContentRefDeserializer","qualname":"::private::de::content::ContentRefDeserializer","value":"ContentRefDeserializer {  }","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023}],"decl_id":null,"docs":" Not public API.\n","sig":null,"attributes":[{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":386003,"byte_end":386022,"line_start":1719,"line_end":1719,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":400360,"byte_end":400363,"line_start":2142,"line_end":2142,"column_start":16,"column_end":19},"name":"new","qualname":"<ContentRefDeserializer>::new","value":"pub fn new(&'a Content) -> Self","parent":null,"children":[],"decl_id":null,"docs":" private API, don't use\n","sig":null,"attributes":[{"value":"/ private API, don't use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":400318,"byte_end":400344,"line_start":2141,"line_end":2141,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2210},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":408885,"byte_end":408912,"line_start":2436,"line_end":2436,"column_start":16,"column_end":43},"name":"InternallyTaggedUnitVisitor","qualname":"::private::de::content::InternallyTaggedUnitVisitor","value":"InternallyTaggedUnitVisitor {  }","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213}],"decl_id":null,"docs":" Visitor for deserializing an internally tagged unit variant.","sig":null,"attributes":[{"value":"/ Visitor for deserializing an internally tagged unit variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":408773,"byte_end":408837,"line_start":2433,"line_end":2433,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":408842,"byte_end":408845,"line_start":2434,"line_end":2434,"column_start":5,"column_end":8}},{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":408850,"byte_end":408869,"line_start":2435,"line_end":2435,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":409075,"byte_end":409078,"line_start":2443,"line_end":2443,"column_start":16,"column_end":19},"name":"new","qualname":"<InternallyTaggedUnitVisitor>::new","value":"pub fn new(&'a str, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Not public API.\n","sig":null,"attributes":[{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":409040,"byte_end":409059,"line_start":2442,"line_end":2442,"column_start":9,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2226},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":410119,"byte_end":410138,"line_start":2481,"line_end":2481,"column_start":16,"column_end":35},"name":"UntaggedUnitVisitor","qualname":"::private::de::content::UntaggedUnitVisitor","value":"UntaggedUnitVisitor {  }","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2229}],"decl_id":null,"docs":" Visitor for deserializing an untagged unit variant.","sig":null,"attributes":[{"value":"/ Visitor for deserializing an untagged unit variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":410016,"byte_end":410071,"line_start":2478,"line_end":2478,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":410076,"byte_end":410079,"line_start":2479,"line_end":2479,"column_start":5,"column_end":8}},{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":410084,"byte_end":410103,"line_start":2480,"line_end":2480,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":410293,"byte_end":410296,"line_start":2488,"line_end":2488,"column_start":16,"column_end":19},"name":"new","qualname":"<UntaggedUnitVisitor>::new","value":"pub fn new(&'a str, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Not public API.\n","sig":null,"attributes":[{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":410258,"byte_end":410277,"line_start":2487,"line_end":2487,"column_start":9,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":2242},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":411495,"byte_end":411517,"line_start":2535,"line_end":2535,"column_start":11,"column_end":33},"name":"IdentifierDeserializer","qualname":"::private::de::IdentifierDeserializer","value":"IdentifierDeserializer<'de, E: Error>","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2245},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":411544,"byte_end":411556,"line_start":2536,"line_end":2536,"column_start":10,"column_end":22},"name":"Deserializer","qualname":"::private::de::IdentifierDeserializer::Deserializer","value":"type Deserializer: Deserializer<'de, Error = E>;","parent":{"krate":0,"index":2242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":411596,"byte_end":411600,"line_start":2538,"line_end":2538,"column_start":8,"column_end":12},"name":"from","qualname":"::private::de::IdentifierDeserializer::from","value":"pub fn from(Self) -> Self::Deserializer","parent":{"krate":0,"index":2242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2252},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":411876,"byte_end":411891,"line_start":2552,"line_end":2552,"column_start":12,"column_end":27},"name":"StrDeserializer","qualname":"::private::de::StrDeserializer","value":"StrDeserializer {  }","parent":null,"children":[{"krate":0,"index":2255},{"krate":0,"index":2256}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2269},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":412753,"byte_end":412770,"line_start":2591,"line_end":2591,"column_start":12,"column_end":29},"name":"BytesDeserializer","qualname":"::private::de::BytesDeserializer","value":"BytesDeserializer {  }","parent":null,"children":[{"krate":0,"index":2272},{"krate":0,"index":2273}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2286},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":413791,"byte_end":413802,"line_start":2633,"line_end":2633,"column_start":12,"column_end":23},"name":"InPlaceSeed","qualname":"::private::de::InPlaceSeed","value":"","parent":null,"children":[],"decl_id":null,"docs":" A DeserializeSeed helper for implementing deserialize_in_place Visitors.","sig":null,"attributes":[{"value":"/ A DeserializeSeed helper for implementing deserialize_in_place Visitors.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":413631,"byte_end":413707,"line_start":2630,"line_end":2630,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":413708,"byte_end":413711,"line_start":2631,"line_end":2631,"column_start":1,"column_end":4}},{"value":"/ Wraps a mutable reference and calls deserialize_in_place on it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":413712,"byte_end":413779,"line_start":2632,"line_end":2632,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2290},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":413814,"byte_end":413827,"line_start":2633,"line_end":2633,"column_start":35,"column_end":48},"name":"0","qualname":"::private::de::InPlaceSeed::0","value":"&'a mut T","parent":{"krate":0,"index":2286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2298},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":414192,"byte_end":414211,"line_start":2649,"line_end":2649,"column_start":12,"column_end":31},"name":"FlatMapDeserializer","qualname":"::private::de::FlatMapDeserializer","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":414133,"byte_end":414180,"line_start":2648,"line_end":2648,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2303},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":414233,"byte_end":414286,"line_start":2650,"line_end":2650,"column_start":5,"column_end":58},"name":"0","qualname":"::private::de::FlatMapDeserializer::0","value":"&'a mut alloc::vec::Vec<core::option::Option<(private::de::content::Content<'de>, private::de::content::Content<'de>)>>","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2304},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":414292,"byte_end":414310,"line_start":2651,"line_end":2651,"column_start":5,"column_end":23},"name":"1","qualname":"::private::de::FlatMapDeserializer::1","value":"core::marker::PhantomData<E>","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2330},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":418065,"byte_end":418078,"line_start":2790,"line_end":2790,"column_start":12,"column_end":25},"name":"FlatMapAccess","qualname":"::private::de::FlatMapAccess","value":"FlatMapAccess {  }","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":418006,"byte_end":418053,"line_start":2789,"line_end":2789,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2351},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":419634,"byte_end":419650,"line_start":2842,"line_end":2842,"column_start":12,"column_end":28},"name":"FlatStructAccess","qualname":"::private::de::FlatStructAccess","value":"FlatStructAccess {  }","parent":null,"children":[{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":419575,"byte_end":419622,"line_start":2841,"line_end":2841,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2374},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":421704,"byte_end":421730,"line_start":2905,"line_end":2905,"column_start":12,"column_end":38},"name":"FlatInternallyTaggedAccess","qualname":"::private::de::FlatInternallyTaggedAccess","value":"FlatInternallyTaggedAccess {  }","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":421645,"byte_end":421692,"line_start":2904,"line_end":2904,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":2390},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::private::ser","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2406},{"krate":0,"index":2409},{"krate":0,"index":2416},{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":8633},{"krate":0,"index":8635},{"krate":0,"index":2490},{"krate":0,"index":2493},{"krate":0,"index":2495},{"krate":0,"index":2679},{"krate":0,"index":2684},{"krate":0,"index":2688},{"krate":0,"index":2731},{"krate":0,"index":2736},{"krate":0,"index":2746},{"krate":0,"index":2751},{"krate":0,"index":2759},{"krate":0,"index":2765},{"krate":0,"index":2769}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2404},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":423456,"byte_end":423465,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"constrain","qualname":"::private::ser::constrain","value":"pub fn constrain<T: ?Sized>(&T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Used to check that serde(getter) attributes return the expected type.\n Not public API.\n","sig":null,"attributes":[{"value":"/ Used to check that serde(getter) attributes return the expected type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":423355,"byte_end":423428,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":423429,"byte_end":423448,"line_start":11,"line_end":11,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2406},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":423528,"byte_end":423552,"line_start":17,"line_end":17,"column_start":8,"column_end":32},"name":"serialize_tagged_newtype","qualname":"::private::ser::serialize_tagged_newtype","value":"pub fn serialize_tagged_newtype<S,\n                                T>(S, &'static str, &'static str,\n                                   &'static str, &'static str, &T)\n-> Result<S::Ok, S::Error> where S: Serializer, T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Not public API.\n","sig":null,"attributes":[{"value":"/ Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":423501,"byte_end":423520,"line_start":16,"line_end":16,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8633},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":433532,"byte_end":433537,"line_start":341,"line_end":341,"column_start":12,"column_end":17},"name":"Error","qualname":"::private::ser::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used only by Serde doc tests. Not public API.\n","sig":null,"attributes":[{"value":"/ Used only by Serde doc tests. Not public API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":433439,"byte_end":433488,"line_start":338,"line_end":338,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2679},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":453611,"byte_end":453628,"line_start":1028,"line_end":1028,"column_start":12,"column_end":29},"name":"FlatMapSerializer","qualname":"::private::ser::FlatMapSerializer","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":453552,"byte_end":453599,"line_start":1027,"line_end":1027,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2683},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":453640,"byte_end":453653,"line_start":1028,"line_end":1028,"column_start":41,"column_end":54},"name":"0","qualname":"::private::ser::FlatMapSerializer::0","value":"&'a mut M","parent":{"krate":0,"index":2679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2731},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":459102,"byte_end":459121,"line_start":1222,"line_end":1222,"column_start":12,"column_end":31},"name":"FlatMapSerializeMap","qualname":"::private::ser::FlatMapSerializeMap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":459043,"byte_end":459090,"line_start":1221,"line_end":1221,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2746},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":459788,"byte_end":459810,"line_start":1252,"line_end":1252,"column_start":12,"column_end":34},"name":"FlatMapSerializeStruct","qualname":"::private::ser::FlatMapSerializeStruct","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":459729,"byte_end":459776,"line_start":1251,"line_end":1251,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2759},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":460380,"byte_end":460419,"line_start":1279,"line_end":1279,"column_start":12,"column_end":51},"name":"FlatMapSerializeStructVariantAsMapValue","qualname":"::private::ser::FlatMapSerializeStructVariantAsMapValue","value":"FlatMapSerializeStructVariantAsMapValue {  }","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":460321,"byte_end":460368,"line_start":1278,"line_end":1278,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2781},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462809,"byte_end":462814,"line_start":43,"line_end":43,"column_start":11,"column_end":16},"name":"Error","qualname":"::std_error::Error","value":"Error: Debug + Display","parent":null,"children":[{"krate":0,"index":2782}],"decl_id":null,"docs":" Either a re-export of std::error::Error or a new identical trait, depending\n on whether Serde's \"std\" feature is enabled.","sig":null,"attributes":[{"value":"/ Either a re-export of std::error::Error or a new identical trait, depending","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":461648,"byte_end":461727,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ on whether Serde's \"std\" feature is enabled.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":461728,"byte_end":461776,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":461777,"byte_end":461780,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Serde's error traits [`serde::ser::Error`] and [`serde::de::Error`] require","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":461781,"byte_end":461860,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ [`std::error::Error`] as a supertrait, but only when Serde is built with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":461861,"byte_end":461937,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ \"std\" enabled. Data formats that don't care about no\\_std support should","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":461938,"byte_end":462014,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ generally provide their error types with a `std::error::Error` impl","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462015,"byte_end":462086,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ directly:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462087,"byte_end":462100,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462101,"byte_end":462104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462105,"byte_end":462123,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462124,"byte_end":462144,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/ struct MySerError {...}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462145,"byte_end":462172,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462173,"byte_end":462176,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ impl serde::ser::Error for MySerError {...}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462177,"byte_end":462224,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462225,"byte_end":462228,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ impl std::fmt::Display for MySerError {...}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462229,"byte_end":462276,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462277,"byte_end":462280,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // We don't support no_std!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462281,"byte_end":462312,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ impl std::error::Error for MySerError {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462313,"byte_end":462357,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462358,"byte_end":462365,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462366,"byte_end":462369,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Data formats that *do* support no\\_std may either have a \"std\" feature of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462370,"byte_end":462447,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ their own:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462448,"byte_end":462462,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462463,"byte_end":462466,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462467,"byte_end":462478,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ [features]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462479,"byte_end":462493,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ std = [\"serde/std\"]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462494,"byte_end":462517,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462518,"byte_end":462525,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462526,"byte_end":462529,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462530,"byte_end":462548,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ #[cfg(feature = \"std\")]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462549,"byte_end":462576,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/ impl std::error::Error for MySerError {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462577,"byte_end":462621,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462622,"byte_end":462629,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462630,"byte_end":462633,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ... or else provide the std Error impl unconditionally via Serde's","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462634,"byte_end":462704,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ re-export:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462705,"byte_end":462719,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462720,"byte_end":462723,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462724,"byte_end":462742,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ impl serde::ser::StdError for MySerError {}","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462743,"byte_end":462790,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462791,"byte_end":462798,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462893,"byte_end":462899,"line_start":45,"line_end":45,"column_start":8,"column_end":14},"name":"source","qualname":"::std_error::Error::source","value":"pub fn source(&Self) -> Option<&Error + 'static>","parent":{"krate":0,"index":2781},"children":[],"decl_id":null,"docs":" The underlying cause of this error, if any.\n","sig":null,"attributes":[{"value":"/ The underlying cause of this error, if any.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462838,"byte_end":462885,"line_start":44,"line_end":44,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":102187,"byte_end":102192,"line_start":61,"line_end":61,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":102626,"byte_end":102631,"line_start":84,"line_end":84,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":102772,"byte_end":102777,"line_start":94,"line_end":94,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":103802,"byte_end":103818,"line_start":136,"line_end":136,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2826},{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2842},{"krate":0,"index":2844},{"krate":0,"index":2846},{"krate":0,"index":2848},{"krate":0,"index":2850},{"krate":0,"index":2852},{"krate":0,"index":2854},{"krate":0,"index":2856},{"krate":0,"index":2858},{"krate":0,"index":2860},{"krate":0,"index":2862},{"krate":0,"index":114},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":108458,"byte_end":108473,"line_start":297,"line_end":297,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":4121},{"krate":0,"index":4123},{"krate":0,"index":4125},{"krate":0,"index":4127},{"krate":0,"index":4129},{"krate":0,"index":4131},{"krate":0,"index":4133},{"krate":0,"index":4135},{"krate":0,"index":4137},{"krate":0,"index":4139},{"krate":0,"index":4141},{"krate":0,"index":4143},{"krate":0,"index":4145},{"krate":0,"index":4147},{"krate":0,"index":4149},{"krate":0,"index":4151},{"krate":0,"index":4153},{"krate":0,"index":4155},{"krate":0,"index":4157},{"krate":0,"index":4159},{"krate":0,"index":4161},{"krate":0,"index":4163},{"krate":0,"index":4165},{"krate":0,"index":4167},{"krate":0,"index":4169},{"krate":0,"index":4171},{"krate":0,"index":4173},{"krate":0,"index":4175},{"krate":0,"index":4177},{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":109272,"byte_end":109287,"line_start":331,"line_end":331,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":110182,"byte_end":110197,"line_start":371,"line_end":371,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":4195},{"krate":0,"index":4197},{"krate":0,"index":4199},{"krate":0,"index":4201},{"krate":0,"index":4203},{"krate":0,"index":4205},{"krate":0,"index":4207},{"krate":0,"index":4209},{"krate":0,"index":4211},{"krate":0,"index":4213},{"krate":0,"index":4215},{"krate":0,"index":4217},{"krate":0,"index":4219},{"krate":0,"index":4221},{"krate":0,"index":4223},{"krate":0,"index":4225},{"krate":0,"index":4227},{"krate":0,"index":4229},{"krate":0,"index":4231},{"krate":0,"index":4233},{"krate":0,"index":4235},{"krate":0,"index":4237},{"krate":0,"index":4239},{"krate":0,"index":4241},{"krate":0,"index":4243},{"krate":0,"index":4245},{"krate":0,"index":4247},{"krate":0,"index":4249},{"krate":0,"index":4251}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111004,"byte_end":111019,"line_start":405,"line_end":405,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111664,"byte_end":111687,"line_start":432,"line_end":432,"column_start":14,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111984,"byte_end":112007,"line_start":442,"line_end":442,"column_start":40,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":4269},{"krate":0,"index":4271},{"krate":0,"index":4273},{"krate":0,"index":4275},{"krate":0,"index":4277},{"krate":0,"index":4279},{"krate":0,"index":4281},{"krate":0,"index":4283},{"krate":0,"index":4285},{"krate":0,"index":4287},{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":4293},{"krate":0,"index":4295},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4301},{"krate":0,"index":4303},{"krate":0,"index":4305},{"krate":0,"index":4307},{"krate":0,"index":4309},{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4315},{"krate":0,"index":4317},{"krate":0,"index":4319},{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4325}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":112820,"byte_end":112843,"line_start":476,"line_end":476,"column_start":38,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":113482,"byte_end":113500,"line_start":502,"line_end":502,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":113746,"byte_end":113752,"line_start":512,"line_end":512,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":114078,"byte_end":114096,"line_start":527,"line_end":527,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":4334},{"krate":0,"index":4336},{"krate":0,"index":4338},{"krate":0,"index":4340},{"krate":0,"index":4342},{"krate":0,"index":4344},{"krate":0,"index":4346},{"krate":0,"index":4348},{"krate":0,"index":4350},{"krate":0,"index":4352},{"krate":0,"index":4354},{"krate":0,"index":4356},{"krate":0,"index":4358},{"krate":0,"index":4360},{"krate":0,"index":4362},{"krate":0,"index":4364},{"krate":0,"index":4366},{"krate":0,"index":4368},{"krate":0,"index":4370},{"krate":0,"index":4372},{"krate":0,"index":4374},{"krate":0,"index":4376},{"krate":0,"index":4378},{"krate":0,"index":4380},{"krate":0,"index":4382},{"krate":0,"index":4384},{"krate":0,"index":4386},{"krate":0,"index":4388},{"krate":0,"index":4390}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":114950,"byte_end":114968,"line_start":562,"line_end":562,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":115618,"byte_end":115636,"line_start":588,"line_end":588,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":115890,"byte_end":115893,"line_start":598,"line_end":598,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":116240,"byte_end":116258,"line_start":613,"line_end":613,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":4401},{"krate":0,"index":4403},{"krate":0,"index":4405},{"krate":0,"index":4407},{"krate":0,"index":4409},{"krate":0,"index":4411},{"krate":0,"index":4413},{"krate":0,"index":4415},{"krate":0,"index":4417},{"krate":0,"index":4419},{"krate":0,"index":4421},{"krate":0,"index":4423},{"krate":0,"index":4425},{"krate":0,"index":4427},{"krate":0,"index":4429},{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4437},{"krate":0,"index":4439},{"krate":0,"index":4441},{"krate":0,"index":4443},{"krate":0,"index":4445},{"krate":0,"index":4447},{"krate":0,"index":4449},{"krate":0,"index":4451},{"krate":0,"index":4453},{"krate":0,"index":4455},{"krate":0,"index":4457}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":117240,"byte_end":117258,"line_start":651,"line_end":651,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":117909,"byte_end":117934,"line_start":678,"line_end":678,"column_start":14,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":118240,"byte_end":118265,"line_start":688,"line_end":688,"column_start":40,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":4475},{"krate":0,"index":4477},{"krate":0,"index":4479},{"krate":0,"index":4481},{"krate":0,"index":4483},{"krate":0,"index":4485},{"krate":0,"index":4487},{"krate":0,"index":4489},{"krate":0,"index":4491},{"krate":0,"index":4493},{"krate":0,"index":4495},{"krate":0,"index":4497},{"krate":0,"index":4499},{"krate":0,"index":4501},{"krate":0,"index":4503},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4509},{"krate":0,"index":4511},{"krate":0,"index":4513},{"krate":0,"index":4515},{"krate":0,"index":4517},{"krate":0,"index":4519},{"krate":0,"index":4521},{"krate":0,"index":4523},{"krate":0,"index":4525},{"krate":0,"index":4527},{"krate":0,"index":4529},{"krate":0,"index":4531},{"krate":0,"index":4533}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119027,"byte_end":119042,"line_start":718,"line_end":718,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119299,"byte_end":119314,"line_start":732,"line_end":732,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119976,"byte_end":119991,"line_start":754,"line_end":754,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":4549},{"krate":0,"index":4551},{"krate":0,"index":4553},{"krate":0,"index":4555},{"krate":0,"index":4557},{"krate":0,"index":4559},{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":4565},{"krate":0,"index":4567},{"krate":0,"index":4569},{"krate":0,"index":4571},{"krate":0,"index":4573},{"krate":0,"index":4575},{"krate":0,"index":4577},{"krate":0,"index":4579},{"krate":0,"index":4581},{"krate":0,"index":4583},{"krate":0,"index":4585},{"krate":0,"index":4587},{"krate":0,"index":4589},{"krate":0,"index":4591},{"krate":0,"index":4593},{"krate":0,"index":4595},{"krate":0,"index":4597},{"krate":0,"index":4599},{"krate":0,"index":4601},{"krate":0,"index":4603},{"krate":0,"index":4605},{"krate":0,"index":4607}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":120624,"byte_end":120639,"line_start":778,"line_end":778,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":121264,"byte_end":121277,"line_start":806,"line_end":806,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":121703,"byte_end":121706,"line_start":819,"line_end":819,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":122052,"byte_end":122060,"line_start":832,"line_end":832,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":122900,"byte_end":122921,"line_start":866,"line_end":866,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":123103,"byte_end":123124,"line_start":873,"line_end":873,"column_start":40,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":4618},{"krate":0,"index":4620},{"krate":0,"index":4622},{"krate":0,"index":4624},{"krate":0,"index":4626},{"krate":0,"index":4628},{"krate":0,"index":4630},{"krate":0,"index":4632},{"krate":0,"index":4634},{"krate":0,"index":4636},{"krate":0,"index":4638},{"krate":0,"index":4640},{"krate":0,"index":4642},{"krate":0,"index":4644},{"krate":0,"index":4646},{"krate":0,"index":4648},{"krate":0,"index":4650},{"krate":0,"index":4652},{"krate":0,"index":4654},{"krate":0,"index":4656},{"krate":0,"index":4658},{"krate":0,"index":4660},{"krate":0,"index":4662},{"krate":0,"index":4664},{"krate":0,"index":4666},{"krate":0,"index":4668},{"krate":0,"index":4670},{"krate":0,"index":4672},{"krate":0,"index":4674},{"krate":0,"index":4676}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":123987,"byte_end":124002,"line_start":908,"line_end":908,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":124356,"byte_end":124371,"line_start":925,"line_end":925,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":125037,"byte_end":125052,"line_start":948,"line_end":948,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":125432,"byte_end":125447,"line_start":964,"line_end":964,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":4678},{"krate":0,"index":4680},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":4686},{"krate":0,"index":4688},{"krate":0,"index":4690},{"krate":0,"index":4692},{"krate":0,"index":4694},{"krate":0,"index":4696},{"krate":0,"index":4698},{"krate":0,"index":4700},{"krate":0,"index":4702},{"krate":0,"index":4704},{"krate":0,"index":4706},{"krate":0,"index":4708},{"krate":0,"index":4710},{"krate":0,"index":4712},{"krate":0,"index":4714},{"krate":0,"index":4716},{"krate":0,"index":4718},{"krate":0,"index":4720},{"krate":0,"index":4722},{"krate":0,"index":4724},{"krate":0,"index":4726},{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":4732}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":126593,"byte_end":126608,"line_start":1007,"line_end":1007,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":128303,"byte_end":128318,"line_start":1065,"line_end":1065,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":129085,"byte_end":129100,"line_start":1094,"line_end":1094,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":129551,"byte_end":129566,"line_start":1112,"line_end":1112,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":130235,"byte_end":130251,"line_start":1134,"line_end":1134,"column_start":46,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":4734},{"krate":0,"index":4736},{"krate":0,"index":4738},{"krate":0,"index":4740},{"krate":0,"index":4742},{"krate":0,"index":4744},{"krate":0,"index":4746},{"krate":0,"index":4748},{"krate":0,"index":4750},{"krate":0,"index":4752},{"krate":0,"index":4754},{"krate":0,"index":4756},{"krate":0,"index":4758},{"krate":0,"index":4760},{"krate":0,"index":4762},{"krate":0,"index":4764},{"krate":0,"index":4766},{"krate":0,"index":4768},{"krate":0,"index":4770},{"krate":0,"index":4772},{"krate":0,"index":4774},{"krate":0,"index":4776},{"krate":0,"index":4778},{"krate":0,"index":4780},{"krate":0,"index":4782},{"krate":0,"index":4784},{"krate":0,"index":4786},{"krate":0,"index":4788},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":132007,"byte_end":132018,"line_start":1187,"line_end":1187,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":132805,"byte_end":132818,"line_start":1221,"line_end":1221,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":133237,"byte_end":133245,"line_start":1234,"line_end":1234,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":134170,"byte_end":134191,"line_start":1270,"line_end":1270,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":134373,"byte_end":134394,"line_start":1277,"line_end":1277,"column_start":40,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":4799},{"krate":0,"index":4801},{"krate":0,"index":4803},{"krate":0,"index":4805},{"krate":0,"index":4807},{"krate":0,"index":4809},{"krate":0,"index":4811},{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4819},{"krate":0,"index":4821},{"krate":0,"index":4823},{"krate":0,"index":4825},{"krate":0,"index":4827},{"krate":0,"index":4829},{"krate":0,"index":4831},{"krate":0,"index":4833},{"krate":0,"index":4835},{"krate":0,"index":4837},{"krate":0,"index":4839},{"krate":0,"index":4841},{"krate":0,"index":4843},{"krate":0,"index":4845},{"krate":0,"index":4847},{"krate":0,"index":4849},{"krate":0,"index":4851},{"krate":0,"index":4853},{"krate":0,"index":4855}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":135161,"byte_end":135182,"line_start":1309,"line_end":1309,"column_start":38,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":136173,"byte_end":136181,"line_start":1348,"line_end":1348,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":137501,"byte_end":137510,"line_start":1402,"line_end":1402,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":138640,"byte_end":138656,"line_start":1447,"line_end":1447,"column_start":43,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":139060,"byte_end":139077,"line_start":1465,"line_end":1465,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149939,"byte_end":149949,"line_start":114,"line_end":114,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":152257,"byte_end":152267,"line_start":219,"line_end":219,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":152951,"byte_end":152962,"line_start":20,"line_end":20,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":153789,"byte_end":153800,"line_start":58,"line_end":58,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":157590,"byte_end":157606,"line_start":180,"line_end":180,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5338},{"krate":0,"index":5339},{"krate":0,"index":5358},{"krate":0,"index":5360},{"krate":0,"index":5362},{"krate":0,"index":5364},{"krate":0,"index":5366},{"krate":0,"index":5368},{"krate":0,"index":5370},{"krate":0,"index":5372},{"krate":0,"index":5340},{"krate":0,"index":5342}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":158839,"byte_end":158855,"line_start":222,"line_end":222,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5352},{"krate":0,"index":5353},{"krate":0,"index":5374},{"krate":0,"index":5376},{"krate":0,"index":5378},{"krate":0,"index":5380},{"krate":0,"index":5382},{"krate":0,"index":5384},{"krate":0,"index":5386},{"krate":0,"index":5388},{"krate":0,"index":5354},{"krate":0,"index":5356}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":159932,"byte_end":159943,"line_start":261,"line_end":261,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":161086,"byte_end":161099,"line_start":307,"line_end":307,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":162167,"byte_end":162187,"line_start":353,"line_end":353,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":163469,"byte_end":163475,"line_start":409,"line_end":409,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":163992,"byte_end":164002,"line_start":429,"line_end":429,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":164855,"byte_end":164867,"line_start":464,"line_end":464,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":167920,"byte_end":167933,"line_start":590,"line_end":590,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":168804,"byte_end":168810,"line_start":633,"line_end":633,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":169583,"byte_end":169601,"line_start":659,"line_end":659,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":169933,"byte_end":169944,"line_start":675,"line_end":675,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":175150,"byte_end":175153,"line_start":838,"line_end":838,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":175417,"byte_end":175427,"line_start":850,"line_end":850,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":176456,"byte_end":176473,"line_start":886,"line_end":886,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":177906,"byte_end":177918,"line_start":935,"line_end":935,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":178052,"byte_end":178064,"line_start":943,"line_end":943,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":204202,"byte_end":204205,"line_start":1727,"line_end":1727,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":207346,"byte_end":207350,"line_start":1828,"line_end":1828,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":208119,"byte_end":208127,"line_start":1859,"line_end":1859,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":208536,"byte_end":208541,"line_start":1873,"line_end":1873,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":208768,"byte_end":208780,"line_start":1880,"line_end":1880,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":210199,"byte_end":210214,"line_start":1919,"line_end":1919,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":217858,"byte_end":217863,"line_start":2124,"line_end":2124,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":218357,"byte_end":218371,"line_start":2145,"line_end":2145,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":219278,"byte_end":219283,"line_start":2181,"line_end":2181,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":219486,"byte_end":219498,"line_start":2188,"line_end":2188,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":220874,"byte_end":220886,"line_start":2230,"line_end":2230,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":223156,"byte_end":223161,"line_start":2297,"line_end":2297,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":223447,"byte_end":223452,"line_start":2311,"line_end":2311,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":223701,"byte_end":223713,"line_start":2319,"line_end":2319,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":226092,"byte_end":226104,"line_start":2377,"line_end":2377,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":228378,"byte_end":228384,"line_start":2459,"line_end":2459,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":228826,"byte_end":228831,"line_start":2477,"line_end":2477,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":229080,"byte_end":229092,"line_start":2485,"line_end":2485,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":231217,"byte_end":231230,"line_start":2540,"line_end":2540,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/utf8.rs","byte_start":234216,"byte_end":234222,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":35372,"byte_end":35382,"line_start":395,"line_end":395,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38379,"byte_end":38380,"line_start":476,"line_end":476,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43250,"byte_end":43251,"line_start":604,"line_end":604,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49401,"byte_end":49412,"line_start":775,"line_end":775,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99936,"byte_end":99941,"line_start":2258,"line_end":2258,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":299914,"byte_end":299920,"line_start":54,"line_end":54,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":300121,"byte_end":300130,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":300946,"byte_end":300952,"line_start":99,"line_end":99,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":301371,"byte_end":301382,"line_start":117,"line_end":117,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":304107,"byte_end":304112,"line_start":224,"line_end":224,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":304634,"byte_end":304648,"line_start":243,"line_end":243,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":305199,"byte_end":305204,"line_start":262,"line_end":262,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":312652,"byte_end":312656,"line_start":513,"line_end":513,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":312873,"byte_end":312880,"line_start":525,"line_end":525,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":314058,"byte_end":314064,"line_start":574,"line_end":574,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":314644,"byte_end":314652,"line_start":595,"line_end":595,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":322377,"byte_end":322384,"line_start":843,"line_end":843,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325716,"byte_end":325726,"line_start":68,"line_end":68,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":326097,"byte_end":326107,"line_start":88,"line_end":88,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":326484,"byte_end":326494,"line_start":108,"line_end":108,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":326870,"byte_end":326880,"line_start":128,"line_end":128,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":327247,"byte_end":327257,"line_start":148,"line_end":148,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":327793,"byte_end":327803,"line_start":176,"line_end":176,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":328220,"byte_end":328230,"line_start":197,"line_end":197,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297797,"byte_end":297798,"line_start":1962,"line_end":1962,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":335465,"byte_end":335489,"line_start":24,"line_end":24,"column_start":40,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":8099},{"krate":0,"index":8101},{"krate":0,"index":8103},{"krate":0,"index":8105},{"krate":0,"index":8107},{"krate":0,"index":8109},{"krate":0,"index":8111},{"krate":0,"index":8113},{"krate":0,"index":8115},{"krate":0,"index":8117},{"krate":0,"index":8119},{"krate":0,"index":8121},{"krate":0,"index":8123},{"krate":0,"index":8125},{"krate":0,"index":8127},{"krate":0,"index":8129},{"krate":0,"index":8131},{"krate":0,"index":8133},{"krate":0,"index":8135},{"krate":0,"index":8137},{"krate":0,"index":8139},{"krate":0,"index":8141},{"krate":0,"index":8143},{"krate":0,"index":8145},{"krate":0,"index":8147},{"krate":0,"index":8149},{"krate":0,"index":8151},{"krate":0,"index":8153},{"krate":0,"index":8155}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":336516,"byte_end":336529,"line_start":62,"line_end":62,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":338492,"byte_end":338507,"line_start":134,"line_end":134,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341715,"byte_end":341722,"line_start":266,"line_end":266,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":343512,"byte_end":343519,"line_start":305,"line_end":305,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":343996,"byte_end":344010,"line_start":321,"line_end":321,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":344143,"byte_end":344157,"line_start":327,"line_end":327,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":349505,"byte_end":349524,"line_start":533,"line_end":533,"column_start":15,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":349745,"byte_end":349764,"line_start":542,"line_end":542,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":350149,"byte_end":350168,"line_start":555,"line_end":555,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357719,"byte_end":357739,"line_start":826,"line_end":826,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":358077,"byte_end":358097,"line_start":837,"line_end":837,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1799},{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":358535,"byte_end":358555,"line_start":853,"line_end":853,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360822,"byte_end":360846,"line_start":924,"line_end":924,"column_start":40,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":361125,"byte_end":361149,"line_start":935,"line_end":935,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":362194,"byte_end":362221,"line_start":972,"line_end":972,"column_start":40,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":362503,"byte_end":362530,"line_start":983,"line_end":983,"column_start":32,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":363368,"byte_end":363387,"line_start":1014,"line_end":1014,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1859},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":365381,"byte_end":365400,"line_start":1072,"line_end":1072,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1929},{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":377904,"byte_end":377923,"line_start":1437,"line_end":1437,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":378353,"byte_end":378369,"line_start":1456,"line_end":1456,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":378718,"byte_end":378734,"line_start":1469,"line_end":1469,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":379470,"byte_end":379489,"line_start":1497,"line_end":1497,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":381984,"byte_end":381999,"line_start":1577,"line_end":1577,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":382272,"byte_end":382287,"line_start":1589,"line_end":1589,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":8226},{"krate":0,"index":8228},{"krate":0,"index":8230},{"krate":0,"index":8232},{"krate":0,"index":8234},{"krate":0,"index":8236},{"krate":0,"index":8238},{"krate":0,"index":8240},{"krate":0,"index":8242},{"krate":0,"index":8244},{"krate":0,"index":8246},{"krate":0,"index":8248},{"krate":0,"index":8250},{"krate":0,"index":8252},{"krate":0,"index":8254},{"krate":0,"index":8256},{"krate":0,"index":8258},{"krate":0,"index":8260},{"krate":0,"index":8262},{"krate":0,"index":8264},{"krate":0,"index":8266},{"krate":0,"index":8268},{"krate":0,"index":8270},{"krate":0,"index":8272},{"krate":0,"index":8274},{"krate":0,"index":8276},{"krate":0,"index":8278},{"krate":0,"index":8280},{"krate":0,"index":8282},{"krate":0,"index":8284}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":383285,"byte_end":383300,"line_start":1621,"line_end":1621,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":384069,"byte_end":384084,"line_start":1651,"line_end":1651,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":384399,"byte_end":384414,"line_start":1664,"line_end":1664,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":385433,"byte_end":385448,"line_start":1698,"line_end":1698,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":8286},{"krate":0,"index":8288},{"krate":0,"index":8290},{"krate":0,"index":8292},{"krate":0,"index":8294},{"krate":0,"index":8296},{"krate":0,"index":8298},{"krate":0,"index":8300},{"krate":0,"index":8302},{"krate":0,"index":8304},{"krate":0,"index":8306},{"krate":0,"index":8308},{"krate":0,"index":8310},{"krate":0,"index":8312},{"krate":0,"index":8314},{"krate":0,"index":8316},{"krate":0,"index":8318},{"krate":0,"index":8320},{"krate":0,"index":8322},{"krate":0,"index":8324},{"krate":0,"index":8326},{"krate":0,"index":8328},{"krate":0,"index":8330},{"krate":0,"index":8332},{"krate":0,"index":8334},{"krate":0,"index":8336},{"krate":0,"index":8338},{"krate":0,"index":8340},{"krate":0,"index":8342},{"krate":0,"index":8344}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":386171,"byte_end":386193,"line_start":1725,"line_end":1725,"column_start":22,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2028},{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":388290,"byte_end":388312,"line_start":1789,"line_end":1789,"column_start":44,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":400273,"byte_end":400295,"line_start":2140,"line_end":2140,"column_start":22,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":400779,"byte_end":400798,"line_start":2159,"line_end":2159,"column_start":46,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":401576,"byte_end":401598,"line_start":2187,"line_end":2187,"column_start":49,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":404143,"byte_end":404161,"line_start":2267,"line_end":2267,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":404445,"byte_end":404463,"line_start":2279,"line_end":2279,"column_start":48,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":8346},{"krate":0,"index":8348},{"krate":0,"index":8350},{"krate":0,"index":8352},{"krate":0,"index":8354},{"krate":0,"index":8356},{"krate":0,"index":8358},{"krate":0,"index":8360},{"krate":0,"index":8362},{"krate":0,"index":8364},{"krate":0,"index":8366},{"krate":0,"index":8368},{"krate":0,"index":8370},{"krate":0,"index":8372},{"krate":0,"index":8374},{"krate":0,"index":8376},{"krate":0,"index":8378},{"krate":0,"index":8380},{"krate":0,"index":8382},{"krate":0,"index":8384},{"krate":0,"index":8386},{"krate":0,"index":8388},{"krate":0,"index":8390},{"krate":0,"index":8392},{"krate":0,"index":8394},{"krate":0,"index":8396},{"krate":0,"index":8398},{"krate":0,"index":8400},{"krate":0,"index":8402},{"krate":0,"index":8404}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":405469,"byte_end":405487,"line_start":2311,"line_end":2311,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":406325,"byte_end":406343,"line_start":2343,"line_end":2343,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":406665,"byte_end":406683,"line_start":2356,"line_end":2356,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":407725,"byte_end":407743,"line_start":2390,"line_end":2390,"column_start":48,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":8406},{"krate":0,"index":8408},{"krate":0,"index":8410},{"krate":0,"index":8412},{"krate":0,"index":8414},{"krate":0,"index":8416},{"krate":0,"index":8418},{"krate":0,"index":8420},{"krate":0,"index":8422},{"krate":0,"index":8424},{"krate":0,"index":8426},{"krate":0,"index":8428},{"krate":0,"index":8430},{"krate":0,"index":8432},{"krate":0,"index":8434},{"krate":0,"index":8436},{"krate":0,"index":8438},{"krate":0,"index":8440},{"krate":0,"index":8442},{"krate":0,"index":8444},{"krate":0,"index":8446},{"krate":0,"index":8448},{"krate":0,"index":8450},{"krate":0,"index":8452},{"krate":0,"index":8454},{"krate":0,"index":8456},{"krate":0,"index":8458},{"krate":0,"index":8460},{"krate":0,"index":8462},{"krate":0,"index":8464}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":408348,"byte_end":408367,"line_start":2411,"line_end":2411,"column_start":51,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2202},{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":408582,"byte_end":408604,"line_start":2422,"line_end":2422,"column_start":55,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":408998,"byte_end":409025,"line_start":2441,"line_end":2441,"column_start":14,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":409322,"byte_end":409349,"line_start":2451,"line_end":2451,"column_start":36,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2224}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":410224,"byte_end":410243,"line_start":2486,"line_end":2486,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":410532,"byte_end":410551,"line_start":2496,"line_end":2496,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":412261,"byte_end":412276,"line_start":2571,"line_end":2571,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":8466},{"krate":0,"index":8468},{"krate":0,"index":8470},{"krate":0,"index":8472},{"krate":0,"index":8474},{"krate":0,"index":8476},{"krate":0,"index":8478},{"krate":0,"index":8480},{"krate":0,"index":8482},{"krate":0,"index":8484},{"krate":0,"index":8486},{"krate":0,"index":8488},{"krate":0,"index":8490},{"krate":0,"index":8492},{"krate":0,"index":8494},{"krate":0,"index":8496},{"krate":0,"index":8498},{"krate":0,"index":8500},{"krate":0,"index":8502},{"krate":0,"index":8504},{"krate":0,"index":8506},{"krate":0,"index":8508},{"krate":0,"index":8510},{"krate":0,"index":8512},{"krate":0,"index":8514},{"krate":0,"index":8516},{"krate":0,"index":8518},{"krate":0,"index":8520},{"krate":0,"index":8522},{"krate":0,"index":8524}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":413146,"byte_end":413163,"line_start":2610,"line_end":2610,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":8526},{"krate":0,"index":8528},{"krate":0,"index":8530},{"krate":0,"index":8532},{"krate":0,"index":8534},{"krate":0,"index":8536},{"krate":0,"index":8538},{"krate":0,"index":8540},{"krate":0,"index":8542},{"krate":0,"index":8544},{"krate":0,"index":8546},{"krate":0,"index":8548},{"krate":0,"index":8550},{"krate":0,"index":8552},{"krate":0,"index":8554},{"krate":0,"index":8556},{"krate":0,"index":8558},{"krate":0,"index":8560},{"krate":0,"index":8562},{"krate":0,"index":8564},{"krate":0,"index":8566},{"krate":0,"index":8568},{"krate":0,"index":8570},{"krate":0,"index":8572},{"krate":0,"index":8574},{"krate":0,"index":8576},{"krate":0,"index":8578},{"krate":0,"index":8580},{"krate":0,"index":8582},{"krate":0,"index":8584}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":413873,"byte_end":413884,"line_start":2635,"line_end":2635,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":414381,"byte_end":414400,"line_start":2655,"line_end":2655,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":415020,"byte_end":415039,"line_start":2679,"line_end":2679,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2319},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2326},{"krate":0,"index":2328},{"krate":0,"index":8586},{"krate":0,"index":8588},{"krate":0,"index":8590},{"krate":0,"index":8592},{"krate":0,"index":8594},{"krate":0,"index":8596},{"krate":0,"index":8598},{"krate":0,"index":8600},{"krate":0,"index":8602},{"krate":0,"index":8604},{"krate":0,"index":8606},{"krate":0,"index":8608},{"krate":0,"index":8610},{"krate":0,"index":8612},{"krate":0,"index":8614},{"krate":0,"index":8616},{"krate":0,"index":8618},{"krate":0,"index":8620},{"krate":0,"index":8622},{"krate":0,"index":8624},{"krate":0,"index":8626},{"krate":0,"index":8628},{"krate":0,"index":8630}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":418306,"byte_end":418319,"line_start":2797,"line_end":2797,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":418672,"byte_end":418685,"line_start":2810,"line_end":2810,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":419914,"byte_end":419930,"line_start":2850,"line_end":2850,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":420361,"byte_end":420377,"line_start":2865,"line_end":2865,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":421972,"byte_end":421998,"line_start":2912,"line_end":2912,"column_start":37,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":424413,"byte_end":424424,"line_start":63,"line_end":63,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":425509,"byte_end":425525,"line_start":84,"line_end":84,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":425825,"byte_end":425841,"line_start":96,"line_end":96,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":433560,"byte_end":433565,"line_start":343,"line_end":343,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":433810,"byte_end":433815,"line_start":359,"line_end":359,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":434180,"byte_end":434211,"line_start":377,"line_end":377,"column_start":13,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":434509,"byte_end":434540,"line_start":387,"line_end":387,"column_start":44,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":435318,"byte_end":435350,"line_start":417,"line_end":417,"column_start":13,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":435650,"byte_end":435682,"line_start":427,"line_end":427,"column_start":45,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":437394,"byte_end":437401,"line_start":499,"line_end":499,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2532}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":441464,"byte_end":441481,"line_start":585,"line_end":585,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":441615,"byte_end":441632,"line_start":591,"line_end":591,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":447777,"byte_end":447789,"line_start":806,"line_end":806,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":448407,"byte_end":448421,"line_start":832,"line_end":832,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2609}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":449079,"byte_end":449099,"line_start":859,"line_end":859,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2621}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":449829,"byte_end":449850,"line_start":888,"line_end":888,"column_start":44,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":450631,"byte_end":450643,"line_start":920,"line_end":920,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2649},{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":452113,"byte_end":452128,"line_start":971,"line_end":971,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":452897,"byte_end":452919,"line_start":1000,"line_end":1000,"column_start":45,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":453717,"byte_end":453734,"line_start":1031,"line_end":1031,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2687}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":454036,"byte_end":454053,"line_start":1044,"line_end":1044,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":459228,"byte_end":459247,"line_start":1225,"line_end":1225,"column_start":35,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2743},{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":459920,"byte_end":459942,"line_start":1255,"line_end":1255,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2758}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":460582,"byte_end":460621,"line_start":1286,"line_end":1286,"column_start":13,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":461001,"byte_end":461040,"line_start":1300,"line_end":1300,"column_start":45,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":9369,"byte_end":9371,"line_start":243,"line_end":243,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":81}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":25023,"byte_end":25028,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":9381,"byte_end":9384,"line_start":244,"line_end":244,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1223}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":9584,"byte_end":9590,"line_start":253,"line_end":253,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1500}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/lib.rs","byte_start":9681,"byte_end":9688,"line_start":257,"line_end":257,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1526}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/mod.rs","byte_start":329901,"byte_end":329903,"line_start":3,"line_end":3,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1533}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/mod.rs","byte_start":329913,"byte_end":329916,"line_start":4,"line_end":4,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2390}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":102187,"byte_end":102192,"line_start":61,"line_end":61,"column_start":20,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2785},"to":{"krate":0,"index":7544}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":102626,"byte_end":102631,"line_start":84,"line_end":84,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2785},"to":{"krate":0,"index":8094}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":102772,"byte_end":102777,"line_start":94,"line_end":94,"column_start":18,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2785},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":103802,"byte_end":103818,"line_start":136,"line_end":136,"column_start":40,"column_end":56},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2795},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":108458,"byte_end":108473,"line_start":297,"line_end":297,"column_start":40,"column_end":55},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4109},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":109272,"byte_end":109287,"line_start":331,"line_end":331,"column_start":38,"column_end":53},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4109},"to":{"krate":0,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":110182,"byte_end":110197,"line_start":371,"line_end":371,"column_start":44,"column_end":59},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4179},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111004,"byte_end":111019,"line_start":405,"line_end":405,"column_start":42,"column_end":57},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4179},"to":{"krate":0,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111664,"byte_end":111687,"line_start":432,"line_end":432,"column_start":14,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":111984,"byte_end":112007,"line_start":442,"line_end":442,"column_start":40,"column_end":63},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4253},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":112820,"byte_end":112843,"line_start":476,"line_end":476,"column_start":38,"column_end":61},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4253},"to":{"krate":0,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":113482,"byte_end":113500,"line_start":502,"line_end":502,"column_start":19,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4327},"to":{"krate":1,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":113746,"byte_end":113752,"line_start":512,"line_end":512,"column_start":43,"column_end":49},"kind":{"Impl":{"id":28}},"from":{"krate":4,"index":5316},"to":{"krate":0,"index":1214}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":114078,"byte_end":114096,"line_start":527,"line_end":527,"column_start":40,"column_end":58},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4327},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":114950,"byte_end":114968,"line_start":562,"line_end":562,"column_start":42,"column_end":60},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4327},"to":{"krate":0,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":115618,"byte_end":115636,"line_start":588,"line_end":588,"column_start":23,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4392},"to":{"krate":1,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":115890,"byte_end":115893,"line_start":598,"line_end":598,"column_start":47,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":4,"index":345},"to":{"krate":0,"index":1214}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":116240,"byte_end":116258,"line_start":613,"line_end":613,"column_start":44,"column_end":62},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4392},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":117240,"byte_end":117258,"line_start":651,"line_end":651,"column_start":42,"column_end":60},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4392},"to":{"krate":0,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":117909,"byte_end":117934,"line_start":678,"line_end":678,"column_start":14,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":118240,"byte_end":118265,"line_start":688,"line_end":688,"column_start":40,"column_end":65},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4459},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119027,"byte_end":119042,"line_start":718,"line_end":718,"column_start":12,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119299,"byte_end":119314,"line_start":732,"line_end":732,"column_start":12,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":119976,"byte_end":119991,"line_start":754,"line_end":754,"column_start":46,"column_end":61},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4535},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":120624,"byte_end":120639,"line_start":778,"line_end":778,"column_start":43,"column_end":58},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4535},"to":{"krate":0,"index":1138}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":121264,"byte_end":121277,"line_start":806,"line_end":806,"column_start":19,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":267},"to":{"krate":0,"index":986}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":121703,"byte_end":121706,"line_start":819,"line_end":819,"column_start":46,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":4,"index":4556},"to":{"krate":0,"index":1214}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":122052,"byte_end":122060,"line_start":832,"line_end":832,"column_start":46,"column_end":54},"kind":{"Impl":{"id":43}},"from":{"krate":4,"index":5146},"to":{"krate":0,"index":1214}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":122900,"byte_end":122921,"line_start":866,"line_end":866,"column_start":9,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":123103,"byte_end":123124,"line_start":873,"line_end":873,"column_start":40,"column_end":61},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4609},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":123987,"byte_end":124002,"line_start":908,"line_end":908,"column_start":17,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":124356,"byte_end":124371,"line_start":925,"line_end":925,"column_start":17,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":125037,"byte_end":125052,"line_start":948,"line_end":948,"column_start":17,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":125432,"byte_end":125447,"line_start":964,"line_end":964,"column_start":43,"column_end":58},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":293},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":126593,"byte_end":126608,"line_start":1007,"line_end":1007,"column_start":40,"column_end":55},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":293},"to":{"krate":0,"index":1156}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":128303,"byte_end":128318,"line_start":1065,"line_end":1065,"column_start":40,"column_end":55},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":293},"to":{"krate":0,"index":1138}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":129085,"byte_end":129100,"line_start":1094,"line_end":1094,"column_start":27,"column_end":42},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":293},"to":{"krate":1,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":129551,"byte_end":129566,"line_start":1112,"line_end":1112,"column_start":27,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":293},"to":{"krate":1,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":130235,"byte_end":130251,"line_start":1134,"line_end":1134,"column_start":46,"column_end":62},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":359},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":132007,"byte_end":132018,"line_start":1187,"line_end":1187,"column_start":43,"column_end":54},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":1138}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":132805,"byte_end":132818,"line_start":1221,"line_end":1221,"column_start":19,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":396},"to":{"krate":0,"index":986}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":133237,"byte_end":133245,"line_start":1234,"line_end":1234,"column_start":49,"column_end":57},"kind":{"Impl":{"id":57}},"from":{"krate":4,"index":726},"to":{"krate":0,"index":1214}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":134170,"byte_end":134191,"line_start":1270,"line_end":1270,"column_start":9,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":134373,"byte_end":134394,"line_start":1277,"line_end":1277,"column_start":40,"column_end":61},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4790},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":135161,"byte_end":135182,"line_start":1309,"line_end":1309,"column_start":38,"column_end":59},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4790},"to":{"krate":0,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":136173,"byte_end":136181,"line_start":1348,"line_end":1348,"column_start":45,"column_end":53},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4857},"to":{"krate":0,"index":1202}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":137501,"byte_end":137510,"line_start":1402,"line_end":1402,"column_start":41,"column_end":50},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4866},"to":{"krate":0,"index":1202}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":138640,"byte_end":138656,"line_start":1447,"line_end":1447,"column_start":43,"column_end":59},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":463},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/value.rs","byte_start":139060,"byte_end":139077,"line_start":1465,"line_end":1465,"column_start":43,"column_end":60},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":473},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/from_primitive.rs","byte_start":140550,"byte_end":140555,"line_start":33,"line_end":33,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2043},"to":{"krate":0,"index":501}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":149939,"byte_end":149949,"line_start":114,"line_end":114,"column_start":28,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5001},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/ignored_any.rs","byte_start":152257,"byte_end":152267,"line_start":219,"line_end":219,"column_start":32,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5001},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":152951,"byte_end":152962,"line_start":20,"line_end":20,"column_start":28,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":573},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":153789,"byte_end":153800,"line_start":58,"line_end":58,"column_start":28,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":585},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":157590,"byte_end":157606,"line_start":180,"line_end":180,"column_start":40,"column_end":56},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5334},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":158839,"byte_end":158855,"line_start":222,"line_end":222,"column_start":40,"column_end":56},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5348},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":159932,"byte_end":159943,"line_start":261,"line_end":261,"column_start":28,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":600},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":161086,"byte_end":161099,"line_start":307,"line_end":307,"column_start":28,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":614},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":162167,"byte_end":162187,"line_start":353,"line_end":353,"column_start":32,"column_end":52},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":616},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":163469,"byte_end":163475,"line_start":409,"line_end":409,"column_start":32,"column_end":38},"kind":{"Impl":{"id":80}},"from":{"krate":4,"index":5316},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":163992,"byte_end":164002,"line_start":429,"line_end":429,"column_start":26,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":651},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":164855,"byte_end":164867,"line_start":464,"line_end":464,"column_start":26,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":667},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":167920,"byte_end":167933,"line_start":590,"line_end":590,"column_start":31,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":683},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":168804,"byte_end":168810,"line_start":633,"line_end":633,"column_start":35,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":1,"index":31858},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":169583,"byte_end":169601,"line_start":659,"line_end":659,"column_start":39,"column_end":57},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":704},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":169933,"byte_end":169944,"line_start":675,"line_end":675,"column_start":43,"column_end":54},"kind":{"Impl":{"id":87}},"from":{"krate":1,"index":2056},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":175150,"byte_end":175153,"line_start":838,"line_end":838,"column_start":35,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":4,"index":4556},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":175417,"byte_end":175427,"line_start":850,"line_end":850,"column_start":39,"column_end":49},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":176456,"byte_end":176473,"line_start":886,"line_end":886,"column_start":43,"column_end":60},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":739},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":177906,"byte_end":177918,"line_start":935,"line_end":935,"column_start":9,"column_end":21},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":178052,"byte_end":178064,"line_start":943,"line_end":943,"column_start":31,"column_end":43},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":752},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":204202,"byte_end":204205,"line_start":1727,"line_end":1727,"column_start":47,"column_end":50},"kind":{"Impl":{"id":96}},"from":{"krate":4,"index":345},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":207346,"byte_end":207350,"line_start":1828,"line_end":1828,"column_start":35,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":1,"index":2912},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":208119,"byte_end":208127,"line_start":1859,"line_end":1859,"column_start":32,"column_end":40},"kind":{"Impl":{"id":99}},"from":{"krate":1,"index":34378},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":208536,"byte_end":208541,"line_start":1873,"line_end":1873,"column_start":40,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":797},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":208768,"byte_end":208780,"line_start":1880,"line_end":1880,"column_start":44,"column_end":56},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":806},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":210199,"byte_end":210214,"line_start":1919,"line_end":1919,"column_start":36,"column_end":51},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":816},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":217858,"byte_end":217863,"line_start":2124,"line_end":2124,"column_start":37,"column_end":42},"kind":{"Impl":{"id":103}},"from":{"krate":1,"index":30584},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":218357,"byte_end":218371,"line_start":2145,"line_end":2145,"column_start":37,"column_end":51},"kind":{"Impl":{"id":104}},"from":{"krate":1,"index":30653},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":219278,"byte_end":219283,"line_start":2181,"line_end":2181,"column_start":36,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":847},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":219486,"byte_end":219498,"line_start":2188,"line_end":2188,"column_start":40,"column_end":52},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":856},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":220874,"byte_end":220886,"line_start":2230,"line_end":2230,"column_start":37,"column_end":49},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":866},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":223156,"byte_end":223161,"line_start":2297,"line_end":2297,"column_start":35,"column_end":40},"kind":{"Impl":{"id":108}},"from":{"krate":1,"index":30699},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":223447,"byte_end":223452,"line_start":2311,"line_end":2311,"column_start":40,"column_end":45},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":884},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":223701,"byte_end":223713,"line_start":2319,"line_end":2319,"column_start":44,"column_end":56},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":895},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":226092,"byte_end":226104,"line_start":2377,"line_end":2377,"column_start":39,"column_end":51},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":907},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":228378,"byte_end":228384,"line_start":2459,"line_end":2459,"column_start":38,"column_end":44},"kind":{"Impl":{"id":112}},"from":{"krate":1,"index":32017},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":228826,"byte_end":228831,"line_start":2477,"line_end":2477,"column_start":40,"column_end":45},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":927},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":229080,"byte_end":229092,"line_start":2485,"line_end":2485,"column_start":44,"column_end":56},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":936},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/impls.rs","byte_start":231217,"byte_end":231230,"line_start":2540,"line_end":2540,"column_start":42,"column_end":55},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":948},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/utf8.rs","byte_start":234216,"byte_end":234222,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32671,"byte_end":32676,"line_start":301,"line_end":301,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":6563},"to":{"krate":0,"index":7544}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":32679,"byte_end":32686,"line_start":301,"line_end":301,"column_start":45,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":6568},"to":{"krate":0,"index":7544}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":35372,"byte_end":35382,"line_start":395,"line_end":395,"column_start":27,"column_end":37},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7554},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":38379,"byte_end":38380,"line_start":476,"line_end":476,"column_start":27,"column_end":28},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":990},"to":{"krate":0,"index":986}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":40471,"byte_end":40476,"line_start":531,"line_end":531,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2043},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43201,"byte_end":43212,"line_start":603,"line_end":603,"column_start":38,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":998},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":43250,"byte_end":43251,"line_start":604,"line_end":604,"column_start":30,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1007},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49029,"byte_end":49034,"line_start":764,"line_end":764,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":2043},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":49401,"byte_end":49412,"line_start":775,"line_end":775,"column_start":39,"column_end":50},"kind":{"Impl":{"id":120}},"from":{"krate":1,"index":2056},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":54836,"byte_end":54841,"line_start":900,"line_end":900,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2043},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":68008,"byte_end":68013,"line_start":1263,"line_end":1263,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":2043},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":89838,"byte_end":89843,"line_start":1958,"line_end":1958,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":2043},"to":{"krate":0,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":91610,"byte_end":91615,"line_start":2005,"line_end":2005,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":2043},"to":{"krate":0,"index":1202}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/de/mod.rs","byte_start":99936,"byte_end":99941,"line_start":2258,"line_end":2258,"column_start":18,"column_end":23},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1219},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":299914,"byte_end":299920,"line_start":54,"line_end":54,"column_start":20,"column_end":26},"kind":{"Impl":{"id":123}},"from":{"krate":4,"index":5316},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":300121,"byte_end":300130,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":32908},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":300946,"byte_end":300952,"line_start":99,"line_end":99,"column_start":23,"column_end":29},"kind":{"Impl":{"id":125}},"from":{"krate":1,"index":31858},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":301371,"byte_end":301382,"line_start":117,"line_end":117,"column_start":31,"column_end":42},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":2056},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":304107,"byte_end":304112,"line_start":224,"line_end":224,"column_start":25,"column_end":30},"kind":{"Impl":{"id":127}},"from":{"krate":1,"index":30584},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":304634,"byte_end":304648,"line_start":243,"line_end":243,"column_start":25,"column_end":39},"kind":{"Impl":{"id":128}},"from":{"krate":1,"index":30653},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":305199,"byte_end":305204,"line_start":262,"line_end":262,"column_start":23,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":1,"index":30699},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":312652,"byte_end":312656,"line_start":513,"line_end":513,"column_start":23,"column_end":27},"kind":{"Impl":{"id":132}},"from":{"krate":1,"index":2912},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":312873,"byte_end":312880,"line_start":525,"line_end":525,"column_start":23,"column_end":30},"kind":{"Impl":{"id":133}},"from":{"krate":1,"index":2969},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":314058,"byte_end":314064,"line_start":574,"line_end":574,"column_start":26,"column_end":32},"kind":{"Impl":{"id":134}},"from":{"krate":1,"index":32017},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":314644,"byte_end":314652,"line_start":595,"line_end":595,"column_start":20,"column_end":28},"kind":{"Impl":{"id":135}},"from":{"krate":1,"index":34378},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impls.rs","byte_start":322377,"byte_end":322384,"line_start":843,"line_end":843,"column_start":23,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":1,"index":22742},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":325716,"byte_end":325726,"line_start":68,"line_end":68,"column_start":34,"column_end":44},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":1438}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":326097,"byte_end":326107,"line_start":88,"line_end":88,"column_start":36,"column_end":46},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":1444}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":326484,"byte_end":326494,"line_start":108,"line_end":108,"column_start":42,"column_end":52},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":1450}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":326870,"byte_end":326880,"line_start":128,"line_end":128,"column_start":43,"column_end":53},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":1456}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":327247,"byte_end":327257,"line_start":148,"line_end":148,"column_start":34,"column_end":44},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":1462}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":327793,"byte_end":327803,"line_start":176,"line_end":176,"column_start":37,"column_end":47},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":1473}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/impossible.rs","byte_start":328220,"byte_end":328230,"line_start":197,"line_end":197,"column_start":44,"column_end":54},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":1480}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":240697,"byte_end":240702,"line_start":185,"line_end":185,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":6563},"to":{"krate":0,"index":8094}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":240705,"byte_end":240712,"line_start":185,"line_end":185,"column_start":45,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":6568},"to":{"krate":0,"index":8094}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":247001,"byte_end":247006,"line_start":330,"line_end":330,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2043},"to":{"krate":0,"index":1387}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297722,"byte_end":297730,"line_start":1958,"line_end":1958,"column_start":16,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":5283},"to":{"krate":0,"index":1487}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/ser/mod.rs","byte_start":297797,"byte_end":297798,"line_start":1962,"line_end":1962,"column_start":21,"column_end":22},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1490},"to":{"krate":0,"index":1487}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":335465,"byte_end":335489,"line_start":24,"line_end":24,"column_start":40,"column_end":64},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1561},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":336516,"byte_end":336529,"line_start":62,"line_end":62,"column_start":30,"column_end":43},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1578},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":338492,"byte_end":338507,"line_start":134,"line_end":134,"column_start":30,"column_end":45},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1600},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":341715,"byte_end":341722,"line_start":266,"line_end":266,"column_start":15,"column_end":22},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":8157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":343512,"byte_end":343519,"line_start":305,"line_end":305,"column_start":36,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":8157},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":343996,"byte_end":344010,"line_start":321,"line_end":321,"column_start":15,"column_end":29},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":344143,"byte_end":344157,"line_start":327,"line_end":327,"column_start":32,"column_end":46},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1647},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":349505,"byte_end":349524,"line_start":533,"line_end":533,"column_start":15,"column_end":34},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":349745,"byte_end":349764,"line_start":542,"line_end":542,"column_start":40,"column_end":59},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1716},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":350149,"byte_end":350168,"line_start":555,"line_end":555,"column_start":32,"column_end":51},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1716},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":357719,"byte_end":357739,"line_start":826,"line_end":826,"column_start":18,"column_end":38},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":358077,"byte_end":358097,"line_start":837,"line_end":837,"column_start":43,"column_end":63},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1787},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":358535,"byte_end":358555,"line_start":853,"line_end":853,"column_start":35,"column_end":55},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1787},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":360822,"byte_end":360846,"line_start":924,"line_end":924,"column_start":40,"column_end":64},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1816},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":361125,"byte_end":361149,"line_start":935,"line_end":935,"column_start":32,"column_end":56},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1816},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":362194,"byte_end":362221,"line_start":972,"line_end":972,"column_start":40,"column_end":67},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1837},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":362503,"byte_end":362530,"line_start":983,"line_end":983,"column_start":32,"column_end":59},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1837},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":363368,"byte_end":363387,"line_start":1014,"line_end":1014,"column_start":18,"column_end":37},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":365381,"byte_end":365400,"line_start":1072,"line_end":1072,"column_start":40,"column_end":59},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1851},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":377904,"byte_end":377923,"line_start":1437,"line_end":1437,"column_start":18,"column_end":37},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":378353,"byte_end":378369,"line_start":1456,"line_end":1456,"column_start":18,"column_end":34},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":378718,"byte_end":378734,"line_start":1469,"line_end":1469,"column_start":42,"column_end":58},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1937},"to":{"krate":0,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":379470,"byte_end":379489,"line_start":1497,"line_end":1497,"column_start":45,"column_end":64},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1955},"to":{"krate":0,"index":1202}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":381984,"byte_end":381999,"line_start":1577,"line_end":1577,"column_start":18,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":382272,"byte_end":382287,"line_start":1589,"line_end":1589,"column_start":44,"column_end":59},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1971},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":383285,"byte_end":383300,"line_start":1621,"line_end":1621,"column_start":41,"column_end":56},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1971},"to":{"krate":0,"index":1138}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":384069,"byte_end":384084,"line_start":1651,"line_end":1651,"column_start":18,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":384399,"byte_end":384414,"line_start":1664,"line_end":1664,"column_start":41,"column_end":56},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1993},"to":{"krate":0,"index":1156}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":385433,"byte_end":385448,"line_start":1698,"line_end":1698,"column_start":44,"column_end":59},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1993},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":386171,"byte_end":386193,"line_start":1725,"line_end":1725,"column_start":22,"column_end":44},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":388290,"byte_end":388312,"line_start":1789,"line_end":1789,"column_start":44,"column_end":66},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2018},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":400273,"byte_end":400295,"line_start":2140,"line_end":2140,"column_start":22,"column_end":44},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":400779,"byte_end":400798,"line_start":2159,"line_end":2159,"column_start":46,"column_end":65},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2110},"to":{"krate":0,"index":1194}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":401576,"byte_end":401598,"line_start":2187,"line_end":2187,"column_start":49,"column_end":71},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2126},"to":{"krate":0,"index":1202}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":404143,"byte_end":404161,"line_start":2267,"line_end":2267,"column_start":22,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":404445,"byte_end":404463,"line_start":2279,"line_end":2279,"column_start":48,"column_end":66},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2144},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":405469,"byte_end":405487,"line_start":2311,"line_end":2311,"column_start":45,"column_end":63},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2144},"to":{"krate":0,"index":1138}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":406325,"byte_end":406343,"line_start":2343,"line_end":2343,"column_start":22,"column_end":40},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":406665,"byte_end":406683,"line_start":2356,"line_end":2356,"column_start":45,"column_end":63},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2170},"to":{"krate":0,"index":1156}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":407725,"byte_end":407743,"line_start":2390,"line_end":2390,"column_start":48,"column_end":66},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2170},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":408348,"byte_end":408367,"line_start":2411,"line_end":2411,"column_start":51,"column_end":70},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1851},"to":{"krate":0,"index":1214}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":408582,"byte_end":408604,"line_start":2422,"line_end":2422,"column_start":55,"column_end":77},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2018},"to":{"krate":0,"index":1214}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":408998,"byte_end":409025,"line_start":2441,"line_end":2441,"column_start":14,"column_end":41},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":409322,"byte_end":409349,"line_start":2451,"line_end":2451,"column_start":36,"column_end":63},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2210},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":410224,"byte_end":410243,"line_start":2486,"line_end":2486,"column_start":14,"column_end":33},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":410532,"byte_end":410551,"line_start":2496,"line_end":2496,"column_start":36,"column_end":55},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2226},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":412261,"byte_end":412276,"line_start":2571,"line_end":2571,"column_start":40,"column_end":55},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2252},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":413146,"byte_end":413163,"line_start":2610,"line_end":2610,"column_start":40,"column_end":57},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2269},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":413873,"byte_end":413884,"line_start":2635,"line_end":2635,"column_start":43,"column_end":54},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2286},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":414381,"byte_end":414400,"line_start":2655,"line_end":2655,"column_start":18,"column_end":37},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":415020,"byte_end":415039,"line_start":2679,"line_end":2679,"column_start":40,"column_end":59},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2298},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":418306,"byte_end":418319,"line_start":2797,"line_end":2797,"column_start":18,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":418672,"byte_end":418685,"line_start":2810,"line_end":2810,"column_start":37,"column_end":50},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2330},"to":{"krate":0,"index":1156}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":419914,"byte_end":419930,"line_start":2850,"line_end":2850,"column_start":18,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":420361,"byte_end":420377,"line_start":2865,"line_end":2865,"column_start":37,"column_end":53},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2351},"to":{"krate":0,"index":1156}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/de.rs","byte_start":421972,"byte_end":421998,"line_start":2912,"line_end":2912,"column_start":37,"column_end":63},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2374},"to":{"krate":0,"index":1156}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":424413,"byte_end":424424,"line_start":63,"line_end":63,"column_start":18,"column_end":29},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2416},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":425509,"byte_end":425525,"line_start":84,"line_end":84,"column_start":9,"column_end":25},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":425825,"byte_end":425841,"line_start":96,"line_end":96,"column_start":24,"column_end":40},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2409},"to":{"krate":0,"index":1387}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":433560,"byte_end":433565,"line_start":343,"line_end":343,"column_start":21,"column_end":26},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":8633},"to":{"krate":0,"index":8094}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":433810,"byte_end":433815,"line_start":359,"line_end":359,"column_start":18,"column_end":23},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":8633},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":434180,"byte_end":434211,"line_start":377,"line_end":377,"column_start":13,"column_end":44},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":434509,"byte_end":434540,"line_start":387,"line_end":387,"column_start":44,"column_end":75},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2501},"to":{"krate":0,"index":1456}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":435318,"byte_end":435350,"line_start":417,"line_end":417,"column_start":13,"column_end":45},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":435650,"byte_end":435682,"line_start":427,"line_end":427,"column_start":45,"column_end":77},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2516},"to":{"krate":0,"index":1480}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":437394,"byte_end":437401,"line_start":499,"line_end":499,"column_start":24,"column_end":31},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":8637},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":441464,"byte_end":441481,"line_start":585,"line_end":585,"column_start":13,"column_end":30},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":441615,"byte_end":441632,"line_start":591,"line_end":591,"column_start":28,"column_end":45},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2540},"to":{"krate":0,"index":1387}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":447777,"byte_end":447789,"line_start":806,"line_end":806,"column_start":35,"column_end":47},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2588},"to":{"krate":0,"index":1438}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":448407,"byte_end":448421,"line_start":832,"line_end":832,"column_start":37,"column_end":51},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2599},"to":{"krate":0,"index":1444}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":449079,"byte_end":449099,"line_start":859,"line_end":859,"column_start":43,"column_end":63},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2610},"to":{"krate":0,"index":1450}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":449829,"byte_end":449850,"line_start":888,"line_end":888,"column_start":44,"column_end":65},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2622},"to":{"krate":0,"index":1456}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":450631,"byte_end":450643,"line_start":920,"line_end":920,"column_start":35,"column_end":47},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2636},"to":{"krate":0,"index":1462}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":452113,"byte_end":452128,"line_start":971,"line_end":971,"column_start":38,"column_end":53},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2653},"to":{"krate":0,"index":1473}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":452897,"byte_end":452919,"line_start":1000,"line_end":1000,"column_start":45,"column_end":67},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2665},"to":{"krate":0,"index":1480}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":453717,"byte_end":453734,"line_start":1031,"line_end":1031,"column_start":13,"column_end":30},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":454036,"byte_end":454053,"line_start":1044,"line_end":1044,"column_start":28,"column_end":45},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":1387}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":459228,"byte_end":459247,"line_start":1225,"line_end":1225,"column_start":35,"column_end":54},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2731},"to":{"krate":0,"index":1462}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":459920,"byte_end":459942,"line_start":1255,"line_end":1255,"column_start":38,"column_end":60},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2746},"to":{"krate":0,"index":1473}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":460582,"byte_end":460621,"line_start":1286,"line_end":1286,"column_start":13,"column_end":52},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/private/ser.rs","byte_start":461001,"byte_end":461040,"line_start":1300,"line_end":1300,"column_start":45,"column_end":84},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2759},"to":{"krate":0,"index":1480}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462816,"byte_end":462821,"line_start":43,"line_end":43,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":6563},"to":{"krate":0,"index":2781}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/alt_serde-1.0.104/src/std_error.rs","byte_start":462824,"byte_end":462831,"line_start":43,"line_end":43,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":6568},"to":{"krate":0,"index":2781}}]}