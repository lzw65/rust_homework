{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_externalities","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=f1ab6969bc7bb774","-C","extra-filename=-f1ab6969bc7bb774","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps","--extern","environmental=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libenvironmental-b61bc334ea7d7d75.rmeta","--extern","codec=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libparity_scale_codec-c2a3c300da64cba4.rmeta","--extern","sp_std=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_std-e8e779e008c5c2c6.rmeta","--extern","sp_storage=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_storage-7829d328d902c6ec.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_externalities-f1ab6969bc7bb774.rmeta"},"prelude":{"crate_id":{"name":"sp_externalities","disambiguator":[18150108195161110747,13250564693672382873]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":18,"id":{"name":"sp_std","disambiguator":[7356154292131214206,15539128417196248828]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":19,"id":{"name":"sp_storage","disambiguator":[12878955236357233593,16822974782930621063]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":20,"id":{"name":"serde","disambiguator":[18094986483354249175,15403000118412511765]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":21,"id":{"name":"serde_derive","disambiguator":[2422799003874411447,4301428410593763920]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":22,"id":{"name":"sp_debug_derive","disambiguator":[11752057424767612336,6988741196861483299]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":23,"id":{"name":"ref_cast","disambiguator":[17238424032127906489,14681179534522775997]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":24,"id":{"name":"ref_cast_impl","disambiguator":[4857299677253861727,8902270623010207562]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":25,"id":{"name":"parity_scale_codec","disambiguator":[16439007312830197035,13769093477079864056]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":26,"id":{"name":"parity_scale_codec_derive","disambiguator":[15916895702609288415,13390909414312069258]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":27,"id":{"name":"arrayvec","disambiguator":[9711399210076819589,6533224003713073282]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":28,"id":{"name":"byte_slice_cast","disambiguator":[7351640255773626293,2315590138104183949]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","num":29,"id":{"name":"impl_serde","disambiguator":[6223019066819668752,3300984703168818873]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/scope_limited.rs","num":30,"id":{"name":"environmental","disambiguator":[17937490940284361027,13093274495722560157]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":686,"byte_end":10338,"line_start":18,"line_end":297,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1223,"byte_end":1253,"line_start":32,"line_end":32,"column_start":25,"column_end":55},"alias_span":null,"name":"set_and_run_with_externalities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1255,"byte_end":1273,"line_start":32,"line_end":32,"column_start":57,"column_end":75},"alias_span":null,"name":"with_externalities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1297,"byte_end":1306,"line_start":33,"line_end":33,"column_start":22,"column_end":31},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1308,"byte_end":1318,"line_start":33,"line_end":33,"column_start":33,"column_end":43},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1320,"byte_end":1334,"line_start":33,"line_end":33,"column_start":45,"column_end":59},"alias_span":null,"name":"ExtensionStore","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":686,"byte_end":10338,"line_start":18,"line_end":297,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":46},{"krate":0,"index":120},{"krate":0,"index":131},{"krate":0,"index":54},{"krate":0,"index":87},{"krate":0,"index":94}],"decl_id":null,"docs":" Substrate externalities abstraction","sig":null,"attributes":[{"value":"/ Substrate externalities abstraction","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":730,"byte_end":769,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":770,"byte_end":773,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The externalities mainly provide access to storage and to registered extensions. Extensions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":774,"byte_end":869,"line_start":22,"line_end":22,"column_start":1,"column_end":96}},{"value":"/ are for example the keystore or the offchain externalities. These externalities are used to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":870,"byte_end":965,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ access the node from the runtime via the runtime interfaces.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":966,"byte_end":1030,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1031,"byte_end":1034,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This crate exposes the main [`Externalities`] trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1035,"byte_end":1091,"line_start":26,"line_end":26,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11709,"byte_end":11718,"line_start":34,"line_end":34,"column_start":11,"column_end":20},"name":"Extension","qualname":"::extensions::Extension","value":"Extension: Send + Any","parent":null,"children":[{"krate":0,"index":31}],"decl_id":null,"docs":" Marker trait for types that should be registered as [`Externalities`](crate::Externalities) extension.","sig":null,"attributes":[{"value":"/ Marker trait for types that should be registered as [`Externalities`](crate::Externalities) extension.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11450,"byte_end":11556,"line_start":30,"line_end":30,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11557,"byte_end":11560,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ As extensions are stored as `Box<Any>`, this trait should give more confidence that the correct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11561,"byte_end":11660,"line_start":32,"line_end":32,"column_start":1,"column_end":100}},{"value":"/ type is registered and requested.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11661,"byte_end":11698,"line_start":33,"line_end":33,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11855,"byte_end":11865,"line_start":38,"line_end":38,"column_start":5,"column_end":15},"name":"as_mut_any","qualname":"::extensions::Extension::as_mut_any","value":"pub fn as_mut_any(&mut Self) -> &mut Any","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Return the extension as `&mut dyn Any`.","sig":null,"attributes":[{"value":"/ Return the extension as `&mut dyn Any`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11734,"byte_end":11777,"line_start":35,"line_end":35,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11779,"byte_end":11782,"line_start":36,"line_end":36,"column_start":2,"column_end":5}},{"value":"/ This is a trick to make the trait type castable into an `Any`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11784,"byte_end":11850,"line_start":37,"line_end":37,"column_start":2,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":12990,"byte_end":13004,"line_start":88,"line_end":88,"column_start":11,"column_end":25},"name":"ExtensionStore","qualname":"::extensions::ExtensionStore","value":"ExtensionStore","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" Something that provides access to the [`Extensions`] store.","sig":null,"attributes":[{"value":"/ Something that provides access to the [`Extensions`] store.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":12838,"byte_end":12901,"line_start":85,"line_end":85,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":12902,"byte_end":12905,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This is a super trait of the [`Externalities`](crate::Externalities).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":12906,"byte_end":12979,"line_start":87,"line_end":87,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13300,"byte_end":13320,"line_start":93,"line_end":93,"column_start":5,"column_end":25},"name":"extension_by_type_id","qualname":"::extensions::ExtensionStore::extension_by_type_id","value":"pub fn extension_by_type_id(&mut Self, TypeId) -> Option<&mut Any>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Tries to find a registered extension by the given `type_id` and returns it as a `&mut dyn Any`.","sig":null,"attributes":[{"value":"/ Tries to find a registered extension by the given `type_id` and returns it as a `&mut dyn Any`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13008,"byte_end":13107,"line_start":89,"line_end":89,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13109,"byte_end":13112,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ It is advised to use [`ExternalitiesExt::extension`](crate::ExternalitiesExt::extension)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13114,"byte_end":13206,"line_start":91,"line_end":91,"column_start":2,"column_end":94}},{"value":"/ instead of this function to get type system support and automatic type downcasting.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13208,"byte_end":13295,"line_start":92,"line_end":92,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13510,"byte_end":13541,"line_start":98,"line_end":98,"column_start":5,"column_end":36},"name":"register_extension_with_type_id","qualname":"::extensions::ExtensionStore::register_extension_with_type_id","value":"pub fn register_extension_with_type_id(&mut Self, TypeId, Box<Extension>)\n-> Result<(), Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Register extension `extension` with speciifed `type_id`.","sig":null,"attributes":[{"value":"/ Register extension `extension` with speciifed `type_id`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13376,"byte_end":13436,"line_start":95,"line_end":95,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13438,"byte_end":13441,"line_start":96,"line_end":96,"column_start":2,"column_end":5}},{"value":"/ It should return error if extension is already registered.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13443,"byte_end":13505,"line_start":97,"line_end":97,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13757,"byte_end":13788,"line_start":103,"line_end":103,"column_start":5,"column_end":36},"name":"deregister_extension_by_type_id","qualname":"::extensions::ExtensionStore::deregister_extension_by_type_id","value":"pub fn deregister_extension_by_type_id(&mut Self, TypeId) -> Result<(), Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Deregister extension with speicifed 'type_id' and drop it.","sig":null,"attributes":[{"value":"/ Deregister extension with speicifed 'type_id' and drop it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13625,"byte_end":13687,"line_start":100,"line_end":100,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13689,"byte_end":13692,"line_start":101,"line_end":101,"column_start":2,"column_end":5}},{"value":"/ It should return error if extension is not registered.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13694,"byte_end":13752,"line_start":102,"line_end":102,"column_start":2,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":101},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13951,"byte_end":13961,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"Extensions","qualname":"::extensions::Extensions","value":"Extensions {  }","parent":null,"children":[{"krate":0,"index":102}],"decl_id":null,"docs":" Stores extensions that should be made available through the externalities.\n","sig":null,"attributes":[{"value":"/ Stores extensions that should be made available through the externalities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":13842,"byte_end":13920,"line_start":106,"line_end":106,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14273,"byte_end":14276,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"name":"new","qualname":"<Extensions>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Create new instance of `Self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14230,"byte_end":14264,"line_start":120,"line_end":120,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14354,"byte_end":14362,"line_start":126,"line_end":126,"column_start":9,"column_end":17},"name":"register","qualname":"<Extensions>::register","value":"pub fn register<E: Extension>(&mut Self, E)","parent":null,"children":[],"decl_id":null,"docs":" Register the given extension.\n","sig":null,"attributes":[{"value":"/ Register the given extension.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14312,"byte_end":14345,"line_start":125,"line_end":125,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14497,"byte_end":14518,"line_start":131,"line_end":131,"column_start":9,"column_end":30},"name":"register_with_type_id","qualname":"<Extensions>::register_with_type_id","value":"pub fn register_with_type_id(&mut Self, TypeId, Box<Extension>)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Register extension `ext`.\n","sig":null,"attributes":[{"value":"/ Register extension `ext`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14459,"byte_end":14488,"line_start":130,"line_end":130,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14849,"byte_end":14856,"line_start":139,"line_end":139,"column_start":9,"column_end":16},"name":"get_mut","qualname":"<Extensions>::get_mut","value":"pub fn get_mut(&mut Self, TypeId) -> Option<&mut Any>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the requested extension.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the requested extension.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14782,"byte_end":14840,"line_start":138,"line_end":138,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":15058,"byte_end":15068,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"deregister","qualname":"<Extensions>::deregister","value":"pub fn deregister(&mut Self, TypeId) -> Option<Box<Extension>>","parent":null,"children":[],"decl_id":null,"docs":" Deregister extension of type `E`.\n","sig":null,"attributes":[{"value":"/ Deregister extension of type `E`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":15012,"byte_end":15049,"line_start":143,"line_end":143,"column_start":2,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/scope_limited.rs","byte_start":16791,"byte_end":16821,"line_start":27,"line_end":27,"column_start":8,"column_end":38},"name":"set_and_run_with_externalities","qualname":"::scope_limited::set_and_run_with_externalities","value":"pub fn set_and_run_with_externalities<F, R>(&mut Externalities, F) -> R where\nF: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Set the given externalities while executing the given closure. To get access to the externalities\n while executing the given closure [`with_externalities`] grants access to them. The externalities\n are only set for the same thread this function was called from.\n","sig":null,"attributes":[{"value":"/ Set the given externalities while executing the given closure. To get access to the externalities","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/scope_limited.rs","byte_start":16512,"byte_end":16613,"line_start":24,"line_end":24,"column_start":1,"column_end":102}},{"value":"/ while executing the given closure [`with_externalities`] grants access to them. The externalities","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/scope_limited.rs","byte_start":16614,"byte_end":16715,"line_start":25,"line_end":25,"column_start":1,"column_end":102}},{"value":"/ are only set for the same thread this function was called from.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/scope_limited.rs","byte_start":16716,"byte_end":16783,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/scope_limited.rs","byte_start":17088,"byte_end":17106,"line_start":36,"line_end":36,"column_start":8,"column_end":26},"name":"with_externalities","qualname":"::scope_limited::with_externalities","value":"pub fn with_externalities<F: FnOnce(&mut Externalities) -> R, R>(F)\n-> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure with the currently set externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure with the currently set externalities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/scope_limited.rs","byte_start":16917,"byte_end":16984,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/scope_limited.rs","byte_start":16985,"byte_end":16988,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if no externalities are set or `Some(_)` with the result of the closure.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/scope_limited.rs","byte_start":16989,"byte_end":17080,"line_start":35,"line_end":35,"column_start":1,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":121},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1482,"byte_end":1508,"line_start":42,"line_end":42,"column_start":2,"column_end":28},"name":"ExtensionAlreadyRegistered","qualname":"::Error::ExtensionAlreadyRegistered","value":"Error::ExtensionAlreadyRegistered","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Same extension cannot be registered twice.\n","sig":null,"attributes":[{"value":"/ Same extension cannot be registered twice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1434,"byte_end":1480,"line_start":41,"line_end":41,"column_start":2,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":123},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1546,"byte_end":1571,"line_start":44,"line_end":44,"column_start":2,"column_end":27},"name":"ExtensionsAreNotSupported","qualname":"::Error::ExtensionsAreNotSupported","value":"Error::ExtensionsAreNotSupported","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Extensions are not supported.\n","sig":null,"attributes":[{"value":"/ Extensions are not supported.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1511,"byte_end":1544,"line_start":43,"line_end":43,"column_start":2,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":125},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1617,"byte_end":1641,"line_start":46,"line_end":46,"column_start":2,"column_end":26},"name":"ExtensionIsNotRegistered","qualname":"::Error::ExtensionIsNotRegistered","value":"Error::ExtensionIsNotRegistered(TypeId)","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Extension `TypeId` is not registered.\n","sig":null,"attributes":[{"value":"/ Extension `TypeId` is not registered.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1574,"byte_end":1615,"line_start":45,"line_end":45,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":128},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1683,"byte_end":1702,"line_start":48,"line_end":48,"column_start":2,"column_end":21},"name":"StorageUpdateFailed","qualname":"::Error::StorageUpdateFailed","value":"Error::StorageUpdateFailed(&'static str)","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Failed to update storage,\n","sig":null,"attributes":[{"value":"/ Failed to update storage,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1652,"byte_end":1681,"line_start":47,"line_end":47,"column_start":2,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":120},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1425,"byte_end":1430,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n\n    /// Same extension cannot be registered twice.\n    ExtensionAlreadyRegistered,\n\n    /// Extensions are not supported.\n    ExtensionsAreNotSupported,\n\n    /// Extension `TypeId` is not registered.\n    ExtensionIsNotRegistered(TypeId),\n\n    /// Failed to update storage,\n    StorageUpdateFailed(&'static str),\n}","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":128}],"decl_id":null,"docs":" Externalities error.\n","sig":null,"attributes":[{"value":"/ Externalities error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1374,"byte_end":1398,"line_start":38,"line_end":38,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1839,"byte_end":1852,"line_start":54,"line_end":54,"column_start":11,"column_end":24},"name":"Externalities","qualname":"::Externalities","value":"Externalities: ExtensionStore","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86}],"decl_id":null,"docs":" The Substrate externalities.","sig":null,"attributes":[{"value":"/ The Substrate externalities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1721,"byte_end":1753,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1754,"byte_end":1757,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Provides access to the storage and to other registered extensions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1758,"byte_end":1828,"line_start":53,"line_end":53,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1937,"byte_end":1957,"line_start":56,"line_end":56,"column_start":5,"column_end":25},"name":"set_offchain_storage","qualname":"::Externalities::set_offchain_storage","value":"pub fn set_offchain_storage(&mut Self, &[u8], Option<&[u8]>)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Write a key value pair to the offchain storage database.\n","sig":null,"attributes":[{"value":"/ Write a key value pair to the offchain storage database.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1872,"byte_end":1932,"line_start":55,"line_end":55,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2036,"byte_end":2043,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"storage","qualname":"::Externalities::storage","value":"pub fn storage(&Self, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Read runtime storage.\n","sig":null,"attributes":[{"value":"/ Read runtime storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2006,"byte_end":2031,"line_start":58,"line_end":58,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2167,"byte_end":2179,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"storage_hash","qualname":"::Externalities::storage_hash","value":"pub fn storage_hash(&Self, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Get storage value hash.","sig":null,"attributes":[{"value":"/ Get storage value hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2085,"byte_end":2112,"line_start":61,"line_end":61,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2114,"byte_end":2117,"line_start":62,"line_end":62,"column_start":2,"column_end":5}},{"value":"/ This may be optimized for large values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2119,"byte_end":2162,"line_start":63,"line_end":63,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2374,"byte_end":2392,"line_start":71,"line_end":71,"column_start":5,"column_end":23},"name":"child_storage_hash","qualname":"::Externalities::child_storage_hash","value":"pub fn child_storage_hash(&Self, &ChildInfo, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Get child storage value hash.","sig":null,"attributes":[{"value":"/ Get child storage value hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2221,"byte_end":2254,"line_start":66,"line_end":66,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2256,"byte_end":2259,"line_start":67,"line_end":67,"column_start":2,"column_end":5}},{"value":"/ This may be optimized for large values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2261,"byte_end":2304,"line_start":68,"line_end":68,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2306,"byte_end":2309,"line_start":69,"line_end":69,"column_start":2,"column_end":5}},{"value":"/ Returns an `Option` that holds the SCALE encoded hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2311,"byte_end":2369,"line_start":70,"line_end":70,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2569,"byte_end":2582,"line_start":80,"line_end":80,"column_start":5,"column_end":18},"name":"child_storage","qualname":"::Externalities::child_storage","value":"pub fn child_storage(&Self, &ChildInfo, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Read child runtime storage.","sig":null,"attributes":[{"value":"/ Read child runtime storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2468,"byte_end":2499,"line_start":77,"line_end":77,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2501,"byte_end":2504,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ Returns an `Option` that holds the SCALE encoded hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2506,"byte_end":2564,"line_start":79,"line_end":79,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2748,"byte_end":2759,"line_start":87,"line_end":87,"column_start":5,"column_end":16},"name":"set_storage","qualname":"::Externalities::set_storage","value":"pub fn set_storage(&mut Self, Vec<u8>, Vec<u8>)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Set storage entry `key` of current contract being called (effective immediately).\n","sig":null,"attributes":[{"value":"/ Set storage entry `key` of current contract being called (effective immediately).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2658,"byte_end":2743,"line_start":86,"line_end":86,"column_start":2,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2944,"byte_end":2961,"line_start":92,"line_end":92,"column_start":5,"column_end":22},"name":"set_child_storage","qualname":"::Externalities::set_child_storage","value":"pub fn set_child_storage(&mut Self, &ChildInfo, Vec<u8>, Vec<u8>)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Set child storage entry `key` of current contract being called (effective immediately).\n","sig":null,"attributes":[{"value":"/ Set child storage entry `key` of current contract being called (effective immediately).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":2848,"byte_end":2939,"line_start":91,"line_end":91,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3199,"byte_end":3212,"line_start":102,"line_end":102,"column_start":5,"column_end":18},"name":"clear_storage","qualname":"::Externalities::clear_storage","value":"pub fn clear_storage(&mut Self, &[u8])","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Clear a storage entry (`key`) of current contract being called (effective immediately).\n","sig":null,"attributes":[{"value":"/ Clear a storage entry (`key`) of current contract being called (effective immediately).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3103,"byte_end":3194,"line_start":101,"line_end":101,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3387,"byte_end":3406,"line_start":107,"line_end":107,"column_start":5,"column_end":24},"name":"clear_child_storage","qualname":"::Externalities::clear_child_storage","value":"pub fn clear_child_storage(&mut Self, &ChildInfo, &[u8])","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Clear a child storage entry (`key`) of current contract being called (effective immediately).\n","sig":null,"attributes":[{"value":"/ Clear a child storage entry (`key`) of current contract being called (effective immediately).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3285,"byte_end":3382,"line_start":106,"line_end":106,"column_start":2,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3570,"byte_end":3584,"line_start":116,"line_end":116,"column_start":5,"column_end":19},"name":"exists_storage","qualname":"::Externalities::exists_storage","value":"pub fn exists_storage(&Self, &[u8]) -> bool","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Whether a storage entry exists.\n","sig":null,"attributes":[{"value":"/ Whether a storage entry exists.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3530,"byte_end":3565,"line_start":115,"line_end":115,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3695,"byte_end":3715,"line_start":121,"line_end":121,"column_start":5,"column_end":25},"name":"exists_child_storage","qualname":"::Externalities::exists_child_storage","value":"pub fn exists_child_storage(&Self, &ChildInfo, &[u8]) -> bool","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Whether a child storage entry exists.\n","sig":null,"attributes":[{"value":"/ Whether a child storage entry exists.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3649,"byte_end":3690,"line_start":120,"line_end":120,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3907,"byte_end":3923,"line_start":130,"line_end":130,"column_start":5,"column_end":21},"name":"next_storage_key","qualname":"::Externalities::next_storage_key","value":"pub fn next_storage_key(&Self, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Returns the key immediately following the given key, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the key immediately following the given key, if it exists.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3832,"byte_end":3902,"line_start":129,"line_end":129,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4058,"byte_end":4080,"line_start":133,"line_end":133,"column_start":5,"column_end":27},"name":"next_child_storage_key","qualname":"::Externalities::next_child_storage_key","value":"pub fn next_child_storage_key(&Self, &ChildInfo, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Returns the key immediately following the given key, if it exists, in child storage.\n","sig":null,"attributes":[{"value":"/ Returns the key immediately following the given key, if it exists, in child storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":3965,"byte_end":4053,"line_start":132,"line_end":132,"column_start":2,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4195,"byte_end":4213,"line_start":140,"line_end":140,"column_start":5,"column_end":23},"name":"kill_child_storage","qualname":"::Externalities::kill_child_storage","value":"pub fn kill_child_storage(&mut Self, &ChildInfo)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Clear an entire child storage.\n","sig":null,"attributes":[{"value":"/ Clear an entire child storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4156,"byte_end":4190,"line_start":139,"line_end":139,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4326,"byte_end":4338,"line_start":143,"line_end":143,"column_start":5,"column_end":17},"name":"clear_prefix","qualname":"::Externalities::clear_prefix","value":"pub fn clear_prefix(&mut Self, &[u8])","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Clear storage entries which keys are start with the given prefix.\n","sig":null,"attributes":[{"value":"/ Clear storage entries which keys are start with the given prefix.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4252,"byte_end":4321,"line_start":142,"line_end":142,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4448,"byte_end":4466,"line_start":146,"line_end":146,"column_start":5,"column_end":23},"name":"clear_child_prefix","qualname":"::Externalities::clear_child_prefix","value":"pub fn clear_child_prefix(&mut Self, &ChildInfo, &[u8])","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Clear child storage entries which keys are start with the given prefix.\n","sig":null,"attributes":[{"value":"/ Clear child storage entries which keys are start with the given prefix.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4368,"byte_end":4443,"line_start":145,"line_end":145,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4633,"byte_end":4646,"line_start":153,"line_end":153,"column_start":5,"column_end":18},"name":"place_storage","qualname":"::Externalities::place_storage","value":"pub fn place_storage(&mut Self, Vec<u8>, Option<Vec<u8>>)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Set or clear a storage entry (`key`) of current contract being called (effective immediately).\n","sig":null,"attributes":[{"value":"/ Set or clear a storage entry (`key`) of current contract being called (effective immediately).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4530,"byte_end":4628,"line_start":152,"line_end":152,"column_start":2,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4743,"byte_end":4762,"line_start":156,"line_end":156,"column_start":5,"column_end":24},"name":"place_child_storage","qualname":"::Externalities::place_child_storage","value":"pub fn place_child_storage(&mut Self, &ChildInfo, Vec<u8>, Option<Vec<u8>>)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Set or clear a child storage entry.\n","sig":null,"attributes":[{"value":"/ Set or clear a child storage entry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4699,"byte_end":4738,"line_start":155,"line_end":155,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4890,"byte_end":4898,"line_start":164,"line_end":164,"column_start":5,"column_end":13},"name":"chain_id","qualname":"::Externalities::chain_id","value":"pub fn chain_id(&Self) -> u64","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Get the identity of the chain.\n","sig":null,"attributes":[{"value":"/ Get the identity of the chain.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4851,"byte_end":4885,"line_start":163,"line_end":163,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5131,"byte_end":5143,"line_start":171,"line_end":171,"column_start":5,"column_end":17},"name":"storage_root","qualname":"::Externalities::storage_root","value":"pub fn storage_root(&mut Self) -> Vec<u8>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Get the trie root of the current storage map.","sig":null,"attributes":[{"value":"/ Get the trie root of the current storage map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4916,"byte_end":4965,"line_start":166,"line_end":166,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4967,"byte_end":4970,"line_start":167,"line_end":167,"column_start":2,"column_end":5}},{"value":"/ This will also update all child storage keys in the top-level storage map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":4972,"byte_end":5050,"line_start":168,"line_end":168,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5052,"byte_end":5055,"line_start":169,"line_end":169,"column_start":2,"column_end":5}},{"value":"/ The returned hash is defined by the `Block` and is SCALE encoded.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5057,"byte_end":5126,"line_start":170,"line_end":170,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5454,"byte_end":5472,"line_start":179,"line_end":179,"column_start":5,"column_end":23},"name":"child_storage_root","qualname":"::Externalities::child_storage_root","value":"pub fn child_storage_root(&mut Self, &ChildInfo) -> Vec<u8>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Get the trie root of a child storage map.","sig":null,"attributes":[{"value":"/ Get the trie root of a child storage map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5169,"byte_end":5214,"line_start":173,"line_end":173,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5216,"byte_end":5219,"line_start":174,"line_end":174,"column_start":2,"column_end":5}},{"value":"/ This will also update the value of the child storage keys in the top-level storage map.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5221,"byte_end":5312,"line_start":175,"line_end":175,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5314,"byte_end":5317,"line_start":176,"line_end":176,"column_start":2,"column_end":5}},{"value":"/ If the storage root equals the default hash as defined by the trie, the key in the top-level","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5319,"byte_end":5415,"line_start":177,"line_end":177,"column_start":2,"column_end":98}},{"value":"/ storage map will be removed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5417,"byte_end":5449,"line_start":178,"line_end":178,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5664,"byte_end":5678,"line_start":187,"line_end":187,"column_start":5,"column_end":19},"name":"storage_append","qualname":"::Externalities::storage_append","value":"pub fn storage_append(&mut Self, Vec<u8>, Vec<u8>)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Append storage item.","sig":null,"attributes":[{"value":"/ Append storage item.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5530,"byte_end":5554,"line_start":184,"line_end":184,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5556,"byte_end":5559,"line_start":185,"line_end":185,"column_start":2,"column_end":5}},{"value":"/ This assumes specific format of the storage item. Also there is no way to undo this operation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5561,"byte_end":5659,"line_start":186,"line_end":186,"column_start":2,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5955,"byte_end":5975,"line_start":198,"line_end":198,"column_start":5,"column_end":25},"name":"storage_changes_root","qualname":"::Externalities::storage_changes_root","value":"pub fn storage_changes_root(&mut Self, &[u8]) -> Result<Option<Vec<u8>>, ()>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Get the changes trie root of the current storage overlay at a block with given `parent`.","sig":null,"attributes":[{"value":"/ Get the changes trie root of the current storage overlay at a block with given `parent`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5733,"byte_end":5825,"line_start":193,"line_end":193,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5827,"byte_end":5830,"line_start":194,"line_end":194,"column_start":2,"column_end":5}},{"value":"/ `parent` expects a SCALE encoded hash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5832,"byte_end":5874,"line_start":195,"line_end":195,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5876,"byte_end":5879,"line_start":196,"line_end":196,"column_start":2,"column_end":5}},{"value":"/ The returned hash is defined by the `Block` and is SCALE encoded.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":5881,"byte_end":5950,"line_start":197,"line_end":197,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6529,"byte_end":6554,"line_start":209,"line_end":209,"column_start":5,"column_end":30},"name":"storage_start_transaction","qualname":"::Externalities::storage_start_transaction","value":"pub fn storage_start_transaction(&mut Self)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Start a new nested transaction.","sig":null,"attributes":[{"value":"/ Start a new nested transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6036,"byte_end":6071,"line_start":200,"line_end":200,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6073,"byte_end":6076,"line_start":201,"line_end":201,"column_start":2,"column_end":5}},{"value":"/ This allows to either commit or roll back all changes made after this call to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6078,"byte_end":6163,"line_start":202,"line_end":202,"column_start":2,"column_end":87}},{"value":"/ top changes or the default child changes. For every transaction there cam be a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6165,"byte_end":6247,"line_start":203,"line_end":203,"column_start":2,"column_end":84}},{"value":"/ matching call to either `storage_rollback_transaction` or `storage_commit_transaction`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6249,"byte_end":6340,"line_start":204,"line_end":204,"column_start":2,"column_end":93}},{"value":"/ Any transactions that are still open after returning from runtime are committed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6342,"byte_end":6425,"line_start":205,"line_end":205,"column_start":2,"column_end":85}},{"value":"/ automatically.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6427,"byte_end":6445,"line_start":206,"line_end":206,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6447,"byte_end":6450,"line_start":207,"line_end":207,"column_start":2,"column_end":5}},{"value":"/ Changes made without any open transaction are committed immediately.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6452,"byte_end":6524,"line_start":208,"line_end":208,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6791,"byte_end":6819,"line_start":215,"line_end":215,"column_start":5,"column_end":33},"name":"storage_rollback_transaction","qualname":"::Externalities::storage_rollback_transaction","value":"pub fn storage_rollback_transaction(&mut Self) -> Result<(), ()>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Rollback the last transaction started by `storage_start_transaction`.","sig":null,"attributes":[{"value":"/ Rollback the last transaction started by `storage_start_transaction`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6569,"byte_end":6642,"line_start":211,"line_end":211,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6644,"byte_end":6647,"line_start":212,"line_end":212,"column_start":2,"column_end":5}},{"value":"/ Any changes made during that storage transaction are discarded. Returns an error when","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6649,"byte_end":6738,"line_start":213,"line_end":213,"column_start":2,"column_end":91}},{"value":"/ no transaction is open that can be closed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6740,"byte_end":6786,"line_start":214,"line_end":214,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7072,"byte_end":7098,"line_start":221,"line_end":221,"column_start":5,"column_end":31},"name":"storage_commit_transaction","qualname":"::Externalities::storage_commit_transaction","value":"pub fn storage_commit_transaction(&mut Self) -> Result<(), ()>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Commit the last transaction started by `storage_start_transaction`.","sig":null,"attributes":[{"value":"/ Commit the last transaction started by `storage_start_transaction`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6852,"byte_end":6923,"line_start":217,"line_end":217,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6925,"byte_end":6928,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ Any changes made during that storage transaction are committed. Returns an error when","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":6930,"byte_end":7019,"line_start":219,"line_end":219,"column_start":2,"column_end":91}},{"value":"/ no transaction is open that can be closed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7021,"byte_end":7067,"line_start":220,"line_end":220,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7469,"byte_end":7473,"line_start":230,"line_end":230,"column_start":5,"column_end":9},"name":"wipe","qualname":"::Externalities::wipe","value":"pub fn wipe(&mut Self)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n Benchmarking related functionality and shouldn't be used anywhere else!\n !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","sig":null,"attributes":[{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7131,"byte_end":7206,"line_start":223,"line_end":223,"column_start":2,"column_end":77}},{"value":"/ Benchmarking related functionality and shouldn't be used anywhere else!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7208,"byte_end":7283,"line_start":224,"line_end":224,"column_start":2,"column_end":77}},{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7285,"byte_end":7360,"line_start":225,"line_end":225,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7362,"byte_end":7365,"line_start":226,"line_end":226,"column_start":2,"column_end":5}},{"value":"/ Wipes all changes from caches and the database.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7367,"byte_end":7418,"line_start":227,"line_end":227,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7420,"byte_end":7423,"line_start":228,"line_end":228,"column_start":2,"column_end":5}},{"value":"/ The state will be reset to genesis.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7425,"byte_end":7464,"line_start":229,"line_end":229,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7791,"byte_end":7797,"line_start":237,"line_end":237,"column_start":5,"column_end":11},"name":"commit","qualname":"::Externalities::commit","value":"pub fn commit(&mut Self)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n Benchmarking related functionality and shouldn't be used anywhere else!\n !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","sig":null,"attributes":[{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7488,"byte_end":7563,"line_start":232,"line_end":232,"column_start":2,"column_end":77}},{"value":"/ Benchmarking related functionality and shouldn't be used anywhere else!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7565,"byte_end":7640,"line_start":233,"line_end":233,"column_start":2,"column_end":77}},{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7642,"byte_end":7717,"line_start":234,"line_end":234,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7719,"byte_end":7722,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ Commits all changes to the database and clears all caches.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7724,"byte_end":7786,"line_start":236,"line_end":236,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8120,"byte_end":8136,"line_start":244,"line_end":244,"column_start":5,"column_end":21},"name":"read_write_count","qualname":"::Externalities::read_write_count","value":"pub fn read_write_count(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n Benchmarking related functionality and shouldn't be used anywhere else!\n !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","sig":null,"attributes":[{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7812,"byte_end":7887,"line_start":239,"line_end":239,"column_start":2,"column_end":77}},{"value":"/ Benchmarking related functionality and shouldn't be used anywhere else!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7889,"byte_end":7964,"line_start":240,"line_end":240,"column_start":2,"column_end":77}},{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":7966,"byte_end":8041,"line_start":241,"line_end":241,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8043,"byte_end":8046,"line_start":242,"line_end":242,"column_start":2,"column_end":5}},{"value":"/ Gets the current read/write count for the benchmarking process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8048,"byte_end":8115,"line_start":243,"line_end":243,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8469,"byte_end":8491,"line_start":251,"line_end":251,"column_start":5,"column_end":27},"name":"reset_read_write_count","qualname":"::Externalities::reset_read_write_count","value":"pub fn reset_read_write_count(&mut Self)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n Benchmarking related functionality and shouldn't be used anywhere else!\n !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","sig":null,"attributes":[{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8171,"byte_end":8246,"line_start":246,"line_end":246,"column_start":2,"column_end":77}},{"value":"/ Benchmarking related functionality and shouldn't be used anywhere else!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8248,"byte_end":8323,"line_start":247,"line_end":247,"column_start":2,"column_end":77}},{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8325,"byte_end":8400,"line_start":248,"line_end":248,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8402,"byte_end":8405,"line_start":249,"line_end":249,"column_start":2,"column_end":5}},{"value":"/ Resets read/write count for the benchmarking process.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8407,"byte_end":8464,"line_start":250,"line_end":250,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8790,"byte_end":8803,"line_start":258,"line_end":258,"column_start":5,"column_end":18},"name":"get_whitelist","qualname":"::Externalities::get_whitelist","value":"pub fn get_whitelist(&Self) -> Vec<TrackedStorageKey>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n Benchmarking related functionality and shouldn't be used anywhere else!\n !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","sig":null,"attributes":[{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8506,"byte_end":8581,"line_start":253,"line_end":253,"column_start":2,"column_end":77}},{"value":"/ Benchmarking related functionality and shouldn't be used anywhere else!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8583,"byte_end":8658,"line_start":254,"line_end":254,"column_start":2,"column_end":77}},{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8660,"byte_end":8735,"line_start":255,"line_end":255,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8737,"byte_end":8740,"line_start":256,"line_end":256,"column_start":2,"column_end":5}},{"value":"/ Gets the current DB tracking whitelist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8742,"byte_end":8785,"line_start":257,"line_end":257,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9136,"byte_end":9149,"line_start":265,"line_end":265,"column_start":5,"column_end":18},"name":"set_whitelist","qualname":"::Externalities::set_whitelist","value":"pub fn set_whitelist(&mut Self, Vec<TrackedStorageKey>)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n Benchmarking related functionality and shouldn't be used anywhere else!\n !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","sig":null,"attributes":[{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8840,"byte_end":8915,"line_start":260,"line_end":260,"column_start":2,"column_end":77}},{"value":"/ Benchmarking related functionality and shouldn't be used anywhere else!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8917,"byte_end":8992,"line_start":261,"line_end":261,"column_start":2,"column_end":77}},{"value":"/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":8994,"byte_end":9069,"line_start":262,"line_end":262,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9071,"byte_end":9074,"line_start":263,"line_end":263,"column_start":2,"column_end":5}},{"value":"/ Adds new storage keys to the DB tracking whitelist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9076,"byte_end":9131,"line_start":264,"line_end":264,"column_start":2,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9251,"byte_end":9267,"line_start":269,"line_end":269,"column_start":11,"column_end":27},"name":"ExternalitiesExt","qualname":"::ExternalitiesExt","value":"ExternalitiesExt","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92}],"decl_id":null,"docs":" Extension for the [`Externalities`] trait.\n","sig":null,"attributes":[{"value":"/ Extension for the [`Externalities`] trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9194,"byte_end":9240,"line_start":268,"line_end":268,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9349,"byte_end":9358,"line_start":271,"line_end":271,"column_start":5,"column_end":14},"name":"extension","qualname":"::ExternalitiesExt::extension","value":"pub fn extension<T: Any + Extension>(&mut Self) -> Option<&mut T>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Tries to find a registered extension and returns a mutable reference.\n","sig":null,"attributes":[{"value":"/ Tries to find a registered extension and returns a mutable reference.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9271,"byte_end":9344,"line_start":270,"line_end":270,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9543,"byte_end":9561,"line_start":276,"line_end":276,"column_start":5,"column_end":23},"name":"register_extension","qualname":"::ExternalitiesExt::register_extension","value":"pub fn register_extension<T: Extension>(&mut Self, T) -> Result<(), Error>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Register extension `ext`.","sig":null,"attributes":[{"value":"/ Register extension `ext`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9411,"byte_end":9440,"line_start":273,"line_end":273,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9442,"byte_end":9445,"line_start":274,"line_end":274,"column_start":2,"column_end":5}},{"value":"/ Should return error if extension is already registered or extensions are not supported.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9447,"byte_end":9538,"line_start":275,"line_end":275,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9781,"byte_end":9801,"line_start":282,"line_end":282,"column_start":5,"column_end":25},"name":"deregister_extension","qualname":"::ExternalitiesExt::deregister_extension","value":"pub fn deregister_extension<T: Extension>(&mut Self) -> Result<(), Error>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Deregister and drop extension of `T` type.","sig":null,"attributes":[{"value":"/ Deregister and drop extension of `T` type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9619,"byte_end":9665,"line_start":278,"line_end":278,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9667,"byte_end":9670,"line_start":279,"line_end":279,"column_start":2,"column_end":5}},{"value":"/ Should return error if extension of type `T` is not registered or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9672,"byte_end":9741,"line_start":280,"line_end":280,"column_start":2,"column_end":71}},{"value":"/ extensions are not supported.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":9743,"byte_end":9776,"line_start":281,"line_end":281,"column_start":2,"column_end":35}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14067,"byte_end":14077,"line_start":113,"line_end":113,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14216,"byte_end":14226,"line_start":119,"line_end":119,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11720,"byte_end":11724,"line_start":34,"line_end":34,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":30}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":11727,"byte_end":11730,"line_start":34,"line_end":34,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2555},"to":{"krate":0,"index":30}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14067,"byte_end":14077,"line_start":113,"line_end":113,"column_start":26,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/extensions.rs","byte_start":14216,"byte_end":14226,"line_start":119,"line_end":119,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-externalities-0.8.1/src/lib.rs","byte_start":1854,"byte_end":1868,"line_start":54,"line_end":54,"column_start":26,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":33},"to":{"krate":0,"index":54}}]}