{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","libp2p_swarm","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=ef6620432c96df89","-C","extra-filename=-ef6620432c96df89","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--extern","either=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libeither-b469d122274be84d.rmeta","--extern","futures=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libfutures-d778134cf68f607e.rmeta","--extern","libp2p_core=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/liblibp2p_core-5e855245c22ce92a.rmeta","--extern","log=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/liblog-d3884e8e45296dbc.rmeta","--extern","rand=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/librand-228073a7435082b8.rmeta","--extern","smallvec=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libsmallvec-ec7d1f646ba11906.rmeta","--extern","void=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libvoid-20e4497198d21dbe.rmeta","--extern","wasm_timer=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libwasm_timer-1901b3f1e98f81be.rmeta","--cap-lints","allow","-L","native=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/build/ring-a17f27a17c8dd09b/out","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/liblibp2p_swarm-ef6620432c96df89.rmeta"},"prelude":{"crate_id":{"name":"libp2p_swarm","disambiguator":[10555490920234215728,2215815523486834171]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":18,"id":{"name":"libp2p_core","disambiguator":[5559151049044397448,6084119012918782954]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":19,"id":{"name":"parity_multiaddr","disambiguator":[16556738659576055748,14839650701413210205]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":20,"id":{"name":"multihash","disambiguator":[2563940273511181391,2145599386484304867]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":21,"id":{"name":"unsigned_varint","disambiguator":[15050758532175817785,15773287988082815838]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":22,"id":{"name":"blake2b_simd","disambiguator":[16346167933737849615,1180688883178938227]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":23,"id":{"name":"arrayref","disambiguator":[12864533597306545026,8294063698849415262]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":24,"id":{"name":"arrayvec","disambiguator":[9711399210076819589,6533224003713073282]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":25,"id":{"name":"constant_time_eq","disambiguator":[4123012020743147552,17233470839404695501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":26,"id":{"name":"blake2s_simd","disambiguator":[5563710040198093256,3719349110481957167]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":27,"id":{"name":"sha1","disambiguator":[12612042681792079063,16742669209945415581]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":28,"id":{"name":"digest","disambiguator":[7153347457544459114,4850652739674458903]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":29,"id":{"name":"generic_array","disambiguator":[785913366860281496,3566111910551851268]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":30,"id":{"name":"typenum","disambiguator":[2877625186163250866,4188862493781366168]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":31,"id":{"name":"block_buffer","disambiguator":[11982380359334884818,10724970865856558599]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":32,"id":{"name":"block_padding","disambiguator":[8921324626424372814,6858420319058578685]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":33,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":34,"id":{"name":"cpuid_bool","disambiguator":[3944863459372053080,10012978824416111698]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":35,"id":{"name":"opaque_debug","disambiguator":[5955724391880543345,12225655711726523850]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":36,"id":{"name":"sha2","disambiguator":[13080494411688160082,149958801492828378]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":37,"id":{"name":"sha3","disambiguator":[11788229514457262392,376506758293940117]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":38,"id":{"name":"keccak","disambiguator":[7922441978553466502,10628234470639316489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":39,"id":{"name":"bs58","disambiguator":[12309999205253357938,3739916014622648498]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":40,"id":{"name":"byteorder","disambiguator":[12373744692856405815,8904304179335980839]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":41,"id":{"name":"data_encoding","disambiguator":[15555597864979115537,2334091982028367454]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":42,"id":{"name":"serde","disambiguator":[18094986483354249175,15403000118412511765]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":43,"id":{"name":"serde_derive","disambiguator":[2422799003874411447,4301428410593763920]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":44,"id":{"name":"static_assertions","disambiguator":[3780011359165158122,3262507017755003872]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":45,"id":{"name":"percent_encoding","disambiguator":[4191107805003336903,1295654285536293621]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":46,"id":{"name":"url","disambiguator":[12400503912792164045,16701257725098870431]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":47,"id":{"name":"matches","disambiguator":[5287378215073979129,18361979022213203125]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":48,"id":{"name":"form_urlencoded","disambiguator":[13223816708937490120,5480871345204455372]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":49,"id":{"name":"idna","disambiguator":[8311461285791839799,8583822457153787408]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":50,"id":{"name":"unicode_bidi","disambiguator":[4386989130962388746,6862610434622923317]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":51,"id":{"name":"unicode_normalization","disambiguator":[5195362221549747439,14521615614827495836]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":52,"id":{"name":"tinyvec","disambiguator":[14392653114268736918,7149426386502746538]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":53,"id":{"name":"tinyvec_macros","disambiguator":[12069190721701906036,1989476166457901195]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":54,"id":{"name":"bs58","disambiguator":[5677141421826884530,10365864718469382425]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":55,"id":{"name":"thiserror","disambiguator":[3504977165750721038,18438939481846699641]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":56,"id":{"name":"thiserror_impl","disambiguator":[7259669444938257673,2421612895268393449]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","num":57,"id":{"name":"rand","disambiguator":[7383846236653092870,5177629652404358757]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":58,"id":{"name":"rand_core","disambiguator":[7787386706198440185,12678578198977233203]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":59,"id":{"name":"getrandom","disambiguator":[12258613803940040387,911838537080231532]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":60,"id":{"name":"libc","disambiguator":[6571333170903906260,2103687221578517612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":61,"id":{"name":"rand_chacha","disambiguator":[4434170198255513034,5056478396886919284]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":62,"id":{"name":"ppv_lite86","disambiguator":[4955318928114684575,7768061473571892432]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":63,"id":{"name":"rand_pcg","disambiguator":[16660534335728405525,7074470424998610614]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","num":64,"id":{"name":"futures","disambiguator":[2667762410459537304,12668079678896007955]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":65,"id":{"name":"futures_core","disambiguator":[6091960194481922876,16111170612509824982]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":66,"id":{"name":"futures_util","disambiguator":[14692675012436110279,4755382690576314481]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":67,"id":{"name":"pin_utils","disambiguator":[14006933666536538846,10325894616585527374]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":68,"id":{"name":"proc_macro_hack","disambiguator":[16105205298844134494,461428951662562663]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":69,"id":{"name":"futures_task","disambiguator":[5915565091226735904,10965922465830280011]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":70,"id":{"name":"once_cell","disambiguator":[8114906871986815057,215681476928989787]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":71,"id":{"name":"parking_lot","disambiguator":[10061552480279027668,1018443910502703418]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":72,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":73,"id":{"name":"lock_api","disambiguator":[1370039747192521928,13370481355962836312]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":74,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":75,"id":{"name":"parking_lot_core","disambiguator":[6910326554005380636,13334944336695677100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","num":76,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":77,"id":{"name":"futures_sink","disambiguator":[8740317669186772490,9491136511499774314]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":78,"id":{"name":"pin_project_lite","disambiguator":[11050117765846224188,12097442257352640106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":79,"id":{"name":"futures_channel","disambiguator":[14121995652586820567,18396968508109721308]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":80,"id":{"name":"slab","disambiguator":[7754159738850082191,972067075306833933]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":81,"id":{"name":"futures_io","disambiguator":[5832703695225160921,17043717576790152055]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":82,"id":{"name":"futures_macro","disambiguator":[7362818316734880593,477739355724548135]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":83,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":84,"id":{"name":"futures_executor","disambiguator":[4755410773836412554,15037727782313357647]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":85,"id":{"name":"num_cpus","disambiguator":[17237370829952825392,8933627738761765040]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","num":86,"id":{"name":"log","disambiguator":[17254312244691266404,17120298729262202934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":87,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":88,"id":{"name":"fnv","disambiguator":[1250549230163845577,2434457741331400523]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","num":89,"id":{"name":"either","disambiguator":[18268444207400620830,9088587218662368046]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":90,"id":{"name":"pin_project","disambiguator":[13840549915822143229,6403863805138422196]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":91,"id":{"name":"pin_project_internal","disambiguator":[17419421631677812584,854478329694846382]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":92,"id":{"name":"ed25519_dalek","disambiguator":[9671761769947386921,15386505271326500475]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":93,"id":{"name":"ed25519","disambiguator":[17902604484033039668,17597880322881036383]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":94,"id":{"name":"signature","disambiguator":[11156352833949250189,12745597200273491384]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":95,"id":{"name":"curve25519_dalek","disambiguator":[14151111902074481590,6828491236281894059]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":96,"id":{"name":"zeroize","disambiguator":[4791449975734214507,10714331909719652202]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":97,"id":{"name":"zeroize_derive","disambiguator":[2502408763374724958,13277304647653553031]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":98,"id":{"name":"subtle","disambiguator":[17342818449220861691,9110388592586064331]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":99,"id":{"name":"asn1_der","disambiguator":[9036005053393433128,15169941623766711490]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":100,"id":{"name":"asn1_der_derive","disambiguator":[9098934246158196273,9826313640850496337]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":101,"id":{"name":"lazy_static","disambiguator":[16863586403248268720,14388819080293591203]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":102,"id":{"name":"ring","disambiguator":[11813856405306350463,4987985737393850857]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":103,"id":{"name":"untrusted","disambiguator":[15938100176474499099,8310548346299352350]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":104,"id":{"name":"spin","disambiguator":[2106412199603975452,2798120354283847135]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":105,"id":{"name":"sha2","disambiguator":[9178909885189487226,9728872866244502221]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":106,"id":{"name":"block_buffer","disambiguator":[9813375651810396536,155073316039863917]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":107,"id":{"name":"block_padding","disambiguator":[6536457226507187524,13096456614147870598]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":108,"id":{"name":"byte_tools","disambiguator":[4563776192090798664,13975107662144777646]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":109,"id":{"name":"generic_array","disambiguator":[10217328049382864786,4581712530308178966]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":110,"id":{"name":"fake_simd","disambiguator":[8529024942259881634,1036883736573479363]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":111,"id":{"name":"opaque_debug","disambiguator":[14296233586290889095,7185983566499738172]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":112,"id":{"name":"digest","disambiguator":[10339741361097660047,3253664700456863542]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":113,"id":{"name":"secp256k1","disambiguator":[8960387163599184832,3573419657546521836]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":114,"id":{"name":"crunchy","disambiguator":[8074030940710953961,6579732958665489341]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":115,"id":{"name":"hmac_drbg","disambiguator":[2354928866440715200,11965278983472350123]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":116,"id":{"name":"hmac","disambiguator":[13299399138808770209,8486335613303949460]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":117,"id":{"name":"crypto_mac","disambiguator":[5021103083656845048,9272942338553678022]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":118,"id":{"name":"subtle","disambiguator":[2461963045928777698,9783036260425898804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":119,"id":{"name":"prost","disambiguator":[14723283405306302894,8455346446528904687]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":120,"id":{"name":"prost_derive","disambiguator":[1314004770385514942,1413412371849766261]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":121,"id":{"name":"bytes","disambiguator":[11926726182971503316,16956388010612504231]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":122,"id":{"name":"parking_lot","disambiguator":[4673953683555930918,2566291569203134280]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":123,"id":{"name":"lock_api","disambiguator":[12216129644845520116,17168985521050561292]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":124,"id":{"name":"parking_lot_core","disambiguator":[9723357634030298779,6709165033563235635]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":125,"id":{"name":"rw_stream_sink","disambiguator":[11077756609674905955,9910370421249503661]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":126,"id":{"name":"futures_timer","disambiguator":[2866738109765334544,16421676189169513685]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":127,"id":{"name":"multistream_select","disambiguator":[4581995740609541529,7674023772695448945]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":128,"id":{"name":"pin_project","disambiguator":[4516522718064618682,13605147468581664646]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":129,"id":{"name":"pin_project_internal","disambiguator":[9916441545922032267,6684648573608469002]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/dummy.rs","num":130,"id":{"name":"void","disambiguator":[17234805795811232331,5440629598638708417]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","num":131,"id":{"name":"unsigned_varint","disambiguator":[7435245412390365442,11253858114740101992]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","num":132,"id":{"name":"wasm_timer","disambiguator":[5622162487196588135,18245341586426515704]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1124,"byte_end":56979,"line_start":21,"line_end":1353,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90711,"byte_end":90729,"line_start":49,"line_end":49,"column_start":5,"column_end":23},"alias_span":null,"name":"InboundUpgradeSend","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90735,"byte_end":90754,"line_start":50,"line_end":50,"column_start":5,"column_end":24},"alias_span":null,"name":"OutboundUpgradeSend","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90760,"byte_end":90775,"line_start":51,"line_end":51,"column_start":5,"column_end":20},"alias_span":null,"name":"UpgradeInfoSend","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":1199},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91007,"byte_end":91028,"line_start":63,"line_end":63,"column_start":16,"column_end":37},"alias_span":null,"name":"DummyProtocolsHandler","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":199},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91046,"byte_end":91056,"line_start":64,"line_end":64,"column_start":17,"column_end":27},"alias_span":null,"name":"MapInEvent","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91075,"byte_end":91086,"line_start":65,"line_end":65,"column_start":18,"column_end":29},"alias_span":null,"name":"MapOutEvent","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91111,"byte_end":91129,"line_start":66,"line_end":66,"column_start":24,"column_end":42},"alias_span":null,"name":"NodeHandlerWrapper","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91131,"byte_end":91156,"line_start":66,"line_end":66,"column_start":44,"column_end":69},"alias_span":null,"name":"NodeHandlerWrapperBuilder","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91158,"byte_end":91181,"line_start":66,"line_end":66,"column_start":71,"column_end":94},"alias_span":null,"name":"NodeHandlerWrapperError","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91203,"byte_end":91217,"line_start":67,"line_end":67,"column_start":20,"column_end":34},"alias_span":null,"name":"OneShotHandler","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":1215},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91219,"byte_end":91239,"line_start":67,"line_end":67,"column_start":36,"column_end":56},"alias_span":null,"name":"OneShotHandlerConfig","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91259,"byte_end":91285,"line_start":68,"line_end":68,"column_start":18,"column_end":44},"alias_span":null,"name":"IntoProtocolsHandlerSelect","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91287,"byte_end":91309,"line_start":68,"line_end":68,"column_start":46,"column_end":68},"alias_span":null,"name":"ProtocolsHandlerSelect","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2859,"byte_end":2875,"line_start":66,"line_end":66,"column_start":5,"column_end":21},"alias_span":null,"name":"NetworkBehaviour","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1115},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2881,"byte_end":2903,"line_start":67,"line_end":67,"column_start":5,"column_end":27},"alias_span":null,"name":"NetworkBehaviourAction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":46},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2909,"byte_end":2937,"line_start":68,"line_end":68,"column_start":5,"column_end":33},"alias_span":null,"name":"NetworkBehaviourEventProcess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2943,"byte_end":2957,"line_start":69,"line_end":69,"column_start":5,"column_end":19},"alias_span":null,"name":"PollParameters","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1140},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2963,"byte_end":2976,"line_start":70,"line_end":70,"column_start":5,"column_end":18},"alias_span":null,"name":"NotifyHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1152},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2982,"byte_end":2999,"line_start":71,"line_end":71,"column_start":5,"column_end":22},"alias_span":null,"name":"DialPeerCondition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":733},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":3036,"byte_end":3056,"line_start":74,"line_end":74,"column_start":5,"column_end":25},"alias_span":null,"name":"IntoProtocolsHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":3062,"byte_end":3088,"line_start":75,"line_end":75,"column_start":5,"column_end":31},"alias_span":null,"name":"IntoProtocolsHandlerSelect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1394},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":3094,"byte_end":3103,"line_start":76,"line_end":76,"column_start":5,"column_end":14},"alias_span":null,"name":"KeepAlive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":663},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":3109,"byte_end":3125,"line_start":77,"line_end":77,"column_start":5,"column_end":21},"alias_span":null,"name":"ProtocolsHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":3131,"byte_end":3152,"line_start":78,"line_end":78,"column_start":5,"column_end":26},"alias_span":null,"name":"ProtocolsHandlerEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":3158,"byte_end":3180,"line_start":79,"line_end":79,"column_start":5,"column_end":27},"alias_span":null,"name":"ProtocolsHandlerSelect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1382},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":3186,"byte_end":3209,"line_start":80,"line_end":80,"column_start":5,"column_end":28},"alias_span":null,"name":"ProtocolsHandlerUpgrErr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":3215,"byte_end":3229,"line_start":81,"line_end":81,"column_start":5,"column_end":19},"alias_span":null,"name":"OneShotHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1215},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":3235,"byte_end":3255,"line_start":82,"line_end":82,"column_start":5,"column_end":25},"alias_span":null,"name":"OneShotHandlerConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1296},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":3261,"byte_end":3278,"line_start":83,"line_end":83,"column_start":5,"column_end":22},"alias_span":null,"name":"SubstreamProtocol","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1124,"byte_end":56979,"line_start":21,"line_end":1353,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":60},{"krate":0,"index":88},{"krate":0,"index":146},{"krate":0,"index":752},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":1960},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":1414},{"krate":0,"index":1461},{"krate":0,"index":933},{"krate":0,"index":948},{"krate":0,"index":956},{"krate":0,"index":963},{"krate":0,"index":969},{"krate":0,"index":1007},{"krate":0,"index":1019},{"krate":0,"index":1023},{"krate":0,"index":1034},{"krate":0,"index":1045},{"krate":0,"index":1053},{"krate":0,"index":1060},{"krate":0,"index":1066},{"krate":0,"index":1075},{"krate":0,"index":1082},{"krate":0,"index":1465},{"krate":0,"index":1473},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1475},{"krate":0,"index":1478},{"krate":0,"index":1476},{"krate":0,"index":1103}],"decl_id":null,"docs":" High level manager of the network.","sig":null,"attributes":[{"value":"/ High level manager of the network.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1124,"byte_end":1162,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1163,"byte_end":1166,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A [`Swarm`] contains the state of the network as a whole. The entire","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1167,"byte_end":1239,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ behaviour of a libp2p network can be controlled through the `Swarm`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1240,"byte_end":1312,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ The `Swarm` struct contains all active and pending connections to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1313,"byte_end":1382,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ remotes and manages the state of all the substreams that have been","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1383,"byte_end":1453,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ opened, and all the upgrades that were built upon these substreams.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1454,"byte_end":1525,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1526,"byte_end":1529,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Initializing a Swarm","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1530,"byte_end":1556,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1557,"byte_end":1560,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Creating a `Swarm` requires three things:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1561,"byte_end":1606,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1607,"byte_end":1610,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/  1. A network identity of the local node in form of a [`PeerId`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1611,"byte_end":1680,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/  2. An implementation of the [`Transport`] trait. This is the type that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1681,"byte_end":1756,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/     will be used in order to reach nodes on the network based on their","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1757,"byte_end":1831,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/     address. See the `transport` module for more information.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1832,"byte_end":1897,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/  3. An implementation of the [`NetworkBehaviour`] trait. This is a state","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1898,"byte_end":1974,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/     machine that defines how the swarm should behave once it is connected","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":1975,"byte_end":2052,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/     to a node.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2053,"byte_end":2071,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2072,"byte_end":2075,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Network Behaviour","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2076,"byte_end":2099,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2100,"byte_end":2103,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The [`NetworkBehaviour`] trait is implemented on types that indicate to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2104,"byte_end":2179,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ the swarm how it should behave. This includes which protocols are supported","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2180,"byte_end":2259,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ and which nodes to try to connect to. It is the `NetworkBehaviour` that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2260,"byte_end":2335,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ controls what happens on the network. Multiple types that implement","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2336,"byte_end":2407,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ `NetworkBehaviour` can be composed into a single behaviour.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2408,"byte_end":2471,"line_start":47,"line_end":47,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2472,"byte_end":2475,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Protocols Handler","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2476,"byte_end":2499,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2500,"byte_end":2503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The [`ProtocolsHandler`] trait defines how each active connection to a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2504,"byte_end":2578,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ remote should behave: how to handle incoming substreams, which protocols","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2579,"byte_end":2655,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ are supported, when to open a new outbound substream, etc.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2656,"byte_end":2718,"line_start":53,"line_end":53,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2719,"byte_end":2722,"line_start":54,"line_end":54,"column_start":1,"column_end":4}}]},{"kind":"Trait","id":{"krate":0,"index":18},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60059,"byte_end":60075,"line_start":55,"line_end":55,"column_start":11,"column_end":27},"name":"NetworkBehaviour","qualname":"::behaviour::NetworkBehaviour","value":"NetworkBehaviour: Send + 'static","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" A behaviour for the network. Allows customizing the swarm.","sig":null,"attributes":[{"value":"/ A behaviour for the network. Allows customizing the swarm.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58317,"byte_end":58379,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58380,"byte_end":58383,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This trait has been designed to be composable. Multiple implementations can be combined into","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58384,"byte_end":58480,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ one that handles all the behaviours at once.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58481,"byte_end":58529,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58530,"byte_end":58533,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Deriving `NetworkBehaviour`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58534,"byte_end":58567,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58568,"byte_end":58571,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Crate users can implement this trait by using the the `#[derive(NetworkBehaviour)]`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58572,"byte_end":58659,"line_start":32,"line_end":32,"column_start":1,"column_end":88}},{"value":"/ proc macro re-exported by the `libp2p` crate. The macro generates a delegating `trait`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58660,"byte_end":58750,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"/ implementation for the `struct`, which delegates method calls to all trait members.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58751,"byte_end":58838,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58839,"byte_end":58842,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ By default the derive sets the [`NetworkBehaviour::OutEvent`] as `()` but this can be overridden","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58843,"byte_end":58943,"line_start":36,"line_end":36,"column_start":1,"column_end":101}},{"value":"/ with `#[behaviour(out_event = \"AnotherType\")]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58944,"byte_end":58995,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":58996,"byte_end":58999,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Struct members that don't implement [`NetworkBehaviour`] must be annotated with `#[behaviour(ignore)]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59000,"byte_end":59107,"line_start":39,"line_end":39,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59108,"byte_end":59111,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ By default, events generated by the remaining members are delegated to [`NetworkBehaviourEventProcess`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59112,"byte_end":59219,"line_start":41,"line_end":41,"column_start":1,"column_end":108}},{"value":"/ implementations. Those must be provided by the user on the type that [`NetworkBehaviour`] is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59220,"byte_end":59316,"line_start":42,"line_end":42,"column_start":1,"column_end":97}},{"value":"/ derived on.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59317,"byte_end":59332,"line_start":43,"line_end":43,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59333,"byte_end":59336,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Alternatively, users can specify `#[behaviour(event_process = false)]`. In this case, users","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59337,"byte_end":59432,"line_start":45,"line_end":45,"column_start":1,"column_end":96}},{"value":"/ should provide a custom `out_event` and implement [`From`] for each of the event types generated","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59433,"byte_end":59533,"line_start":46,"line_end":46,"column_start":1,"column_end":101}},{"value":"/ by the struct members.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59534,"byte_end":59560,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ Not processing events within the derived [`NetworkBehaviour`] will cause them to be emitted as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59561,"byte_end":59659,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ part of polling the swarm in [`SwarmEvent::Behaviour`](crate::SwarmEvent::Behaviour).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59660,"byte_end":59749,"line_start":49,"line_end":49,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59750,"byte_end":59753,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Optionally one can provide a custom `poll` function through the `#[behaviour(poll_method = \"poll\")]`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59754,"byte_end":59858,"line_start":51,"line_end":51,"column_start":1,"column_end":105}},{"value":"/ attribute.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59859,"byte_end":59873,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ This function must have the same signature as the [`NetworkBehaviour#poll`] function and will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59874,"byte_end":59971,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"/ be called last within the generated [`NetworkBehaviour`] implementation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":59972,"byte_end":60048,"line_start":54,"line_end":54,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":19},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60173,"byte_end":60189,"line_start":57,"line_end":57,"column_start":10,"column_end":26},"name":"ProtocolsHandler","qualname":"::behaviour::NetworkBehaviour::ProtocolsHandler","value":"type ProtocolsHandler: IntoProtocolsHandler;","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Handler for all the protocols the network behaviour supports.\n","sig":null,"attributes":[{"value":"/ Handler for all the protocols the network behaviour supports.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60098,"byte_end":60163,"line_start":56,"line_end":56,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60310,"byte_end":60318,"line_start":60,"line_end":60,"column_start":10,"column_end":18},"name":"OutEvent","qualname":"::behaviour::NetworkBehaviour::OutEvent","value":"type OutEvent: Send + 'static;","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Event generated by the `NetworkBehaviour` and that the swarm will report back.\n","sig":null,"attributes":[{"value":"/ Event generated by the `NetworkBehaviour` and that the swarm will report back.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60218,"byte_end":60300,"line_start":59,"line_end":59,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61088,"byte_end":61099,"line_start":74,"line_end":74,"column_start":8,"column_end":19},"name":"new_handler","qualname":"::behaviour::NetworkBehaviour::new_handler","value":"pub fn new_handler(&mut Self) -> Self::ProtocolsHandler","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Creates a new `ProtocolsHandler` for a connection with a peer.","sig":null,"attributes":[{"value":"/ Creates a new `ProtocolsHandler` for a connection with a peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60341,"byte_end":60407,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60412,"byte_end":60415,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Every time an incoming connection is opened, and every time we start dialing a node, this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60420,"byte_end":60513,"line_start":64,"line_end":64,"column_start":5,"column_end":98}},{"value":"/ method is called.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60518,"byte_end":60539,"line_start":65,"line_end":65,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60544,"byte_end":60547,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The returned object is a handler for that specific connection, and will be moved to a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60552,"byte_end":60641,"line_start":67,"line_end":67,"column_start":5,"column_end":94}},{"value":"/ background task dedicated to that connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60646,"byte_end":60695,"line_start":68,"line_end":68,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60700,"byte_end":60703,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The network behaviour (ie. the implementation of this trait) and the handlers it has","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60708,"byte_end":60796,"line_start":70,"line_end":70,"column_start":5,"column_end":93}},{"value":"/ spawned (ie. the objects returned by `new_handler`) can communicate by passing messages.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60801,"byte_end":60893,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ Messages sent from the handler to the behaviour are injected with `inject_event`, and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60898,"byte_end":60987,"line_start":72,"line_end":72,"column_start":5,"column_end":94}},{"value":"/ the behaviour can send a message to the handler by making `poll` return `SendEvent`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60992,"byte_end":61080,"line_start":73,"line_end":73,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61525,"byte_end":61542,"line_start":82,"line_end":82,"column_start":8,"column_end":25},"name":"addresses_of_peer","qualname":"::behaviour::NetworkBehaviour::addresses_of_peer","value":"pub fn addresses_of_peer(&mut Self, &PeerId) -> Vec<Multiaddr>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Addresses that this behaviour is aware of for this specific peer, and that may allow\n reaching the peer.","sig":null,"attributes":[{"value":"/ Addresses that this behaviour is aware of for this specific peer, and that may allow","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61143,"byte_end":61231,"line_start":76,"line_end":76,"column_start":5,"column_end":93}},{"value":"/ reaching the peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61236,"byte_end":61258,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61263,"byte_end":61266,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The addresses will be tried in the order returned by this function, which means that they","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61271,"byte_end":61364,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ should be ordered by decreasing likelihood of reachability. In other words, the first","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61369,"byte_end":61458,"line_start":80,"line_end":80,"column_start":5,"column_end":94}},{"value":"/ address should be the most likely to be reachable.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61463,"byte_end":61517,"line_start":81,"line_end":81,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61930,"byte_end":61946,"line_start":90,"line_end":90,"column_start":8,"column_end":24},"name":"inject_connected","qualname":"::behaviour::NetworkBehaviour::inject_connected","value":"pub fn inject_connected(&mut Self, &PeerId)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Indicates the behaviour that we connected to the node with the given peer id.","sig":null,"attributes":[{"value":"/ Indicates the behaviour that we connected to the node with the given peer id.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61596,"byte_end":61677,"line_start":84,"line_end":84,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61682,"byte_end":61685,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This node now has a handler (as spawned by `new_handler`) running in the background.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61690,"byte_end":61778,"line_start":86,"line_end":86,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61783,"byte_end":61786,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This method is only called when the connection to the peer is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61791,"byte_end":61856,"line_start":88,"line_end":88,"column_start":5,"column_end":70}},{"value":"/ established, preceded by `inject_connection_established`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61861,"byte_end":61922,"line_start":89,"line_end":89,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62388,"byte_end":62407,"line_start":99,"line_end":99,"column_start":8,"column_end":27},"name":"inject_disconnected","qualname":"::behaviour::NetworkBehaviour::inject_disconnected","value":"pub fn inject_disconnected(&mut Self, &PeerId)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Indicates the behaviour that we disconnected from the node with the given peer id.","sig":null,"attributes":[{"value":"/ Indicates the behaviour that we disconnected from the node with the given peer id.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":61982,"byte_end":62068,"line_start":92,"line_end":92,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62073,"byte_end":62076,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ There is no handler running anymore for this node. Any event that has been sent to it may","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62081,"byte_end":62174,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/ or may not have been processed by the handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62179,"byte_end":62229,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62234,"byte_end":62237,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This method is only called when the last established connection to the peer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62242,"byte_end":62321,"line_start":97,"line_end":97,"column_start":5,"column_end":84}},{"value":"/ is closed, preceded by `inject_connection_closed`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62326,"byte_end":62380,"line_start":98,"line_end":98,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62524,"byte_end":62553,"line_start":102,"line_end":102,"column_start":8,"column_end":37},"name":"inject_connection_established","qualname":"::behaviour::NetworkBehaviour::inject_connection_established","value":"pub fn inject_connection_established(&mut Self, &PeerId, &ConnectionId,\n                                     &ConnectedPoint)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Informs the behaviour about a newly established connection to a peer.\n","sig":null,"attributes":[{"value":"/ Informs the behaviour about a newly established connection to a peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62443,"byte_end":62516,"line_start":101,"line_end":101,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62875,"byte_end":62899,"line_start":110,"line_end":110,"column_start":8,"column_end":32},"name":"inject_connection_closed","qualname":"::behaviour::NetworkBehaviour::inject_connection_closed","value":"pub fn inject_connection_closed(&mut Self, &PeerId, &ConnectionId,\n                                &ConnectedPoint)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Informs the behaviour about a closed connection to a peer.","sig":null,"attributes":[{"value":"/ Informs the behaviour about a closed connection to a peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62627,"byte_end":62689,"line_start":105,"line_end":105,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62694,"byte_end":62697,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ A call to this method is always paired with an earlier call to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62702,"byte_end":62768,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/ `inject_connection_established` with the same peer ID, connection ID and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62773,"byte_end":62849,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ endpoint.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62854,"byte_end":62867,"line_start":109,"line_end":109,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63073,"byte_end":63094,"line_start":114,"line_end":114,"column_start":8,"column_end":29},"name":"inject_address_change","qualname":"::behaviour::NetworkBehaviour::inject_address_change","value":"pub fn inject_address_change(&mut Self, &PeerId, &ConnectionId,\n                             &ConnectedPoint, &ConnectedPoint)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Informs the behaviour that the [`ConnectedPoint`] of an existing connection has changed.\n","sig":null,"attributes":[{"value":"/ Informs the behaviour that the [`ConnectedPoint`] of an existing connection has changed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":62973,"byte_end":63065,"line_start":113,"line_end":113,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63545,"byte_end":63557,"line_start":127,"line_end":127,"column_start":8,"column_end":20},"name":"inject_event","qualname":"::behaviour::NetworkBehaviour::inject_event","value":"pub fn inject_event(&mut Self, PeerId, ConnectionId,\n                    <<Self::ProtocolsHandler as IntoProtocolsHandler>::Handler\n                    as ProtocolsHandler>::OutEvent)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Informs the behaviour about an event generated by the handler dedicated to the peer identified by `peer_id`.\n for the behaviour.","sig":null,"attributes":[{"value":"/ Informs the behaviour about an event generated by the handler dedicated to the peer identified by `peer_id`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63236,"byte_end":63348,"line_start":122,"line_end":122,"column_start":5,"column_end":117}},{"value":"/ for the behaviour.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63353,"byte_end":63375,"line_start":123,"line_end":123,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63380,"byte_end":63383,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The `peer_id` is guaranteed to be in a connected state. In other words, `inject_connected`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63388,"byte_end":63482,"line_start":125,"line_end":125,"column_start":5,"column_end":99}},{"value":"/ has previously been called with this `PeerId`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63487,"byte_end":63537,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64046,"byte_end":64071,"line_start":138,"line_end":138,"column_start":8,"column_end":33},"name":"inject_addr_reach_failure","qualname":"::behaviour::NetworkBehaviour::inject_addr_reach_failure","value":"pub fn inject_addr_reach_failure(&mut Self, Option<&PeerId>, &Multiaddr,\n                                 &error::Error)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Indicates to the behaviour that we tried to reach an address, but failed.","sig":null,"attributes":[{"value":"/ Indicates to the behaviour that we tried to reach an address, but failed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63754,"byte_end":63831,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63836,"byte_end":63839,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If we were trying to reach a specific node, its ID is passed as parameter. If this is the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63844,"byte_end":63937,"line_start":136,"line_end":136,"column_start":5,"column_end":98}},{"value":"/ last address to attempt for the given node, then `inject_dial_failure` is called afterwards.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":63942,"byte_end":64038,"line_start":137,"line_end":137,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64477,"byte_end":64496,"line_start":146,"line_end":146,"column_start":8,"column_end":27},"name":"inject_dial_failure","qualname":"::behaviour::NetworkBehaviour::inject_dial_failure","value":"pub fn inject_dial_failure(&mut Self, &PeerId)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Indicates to the behaviour that we tried to dial all the addresses known for a node, but\n failed.","sig":null,"attributes":[{"value":"/ Indicates to the behaviour that we tried to dial all the addresses known for a node, but","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64169,"byte_end":64261,"line_start":141,"line_end":141,"column_start":5,"column_end":97}},{"value":"/ failed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64266,"byte_end":64277,"line_start":142,"line_end":142,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64282,"byte_end":64285,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The `peer_id` is guaranteed to be in a disconnected state. In other words,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64290,"byte_end":64368,"line_start":144,"line_end":144,"column_start":5,"column_end":83}},{"value":"/ `inject_connected` has not been called, or `inject_disconnected` has been called since then.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64373,"byte_end":64469,"line_start":145,"line_end":145,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64629,"byte_end":64651,"line_start":150,"line_end":150,"column_start":8,"column_end":30},"name":"inject_new_listen_addr","qualname":"::behaviour::NetworkBehaviour::inject_new_listen_addr","value":"pub fn inject_new_listen_addr(&mut Self, &Multiaddr)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Indicates to the behaviour that we have started listening on a new multiaddr.\n","sig":null,"attributes":[{"value":"/ Indicates to the behaviour that we have started listening on a new multiaddr.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64540,"byte_end":64621,"line_start":149,"line_end":149,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64847,"byte_end":64873,"line_start":155,"line_end":155,"column_start":8,"column_end":34},"name":"inject_expired_listen_addr","qualname":"::behaviour::NetworkBehaviour::inject_expired_listen_addr","value":"pub fn inject_expired_listen_addr(&mut Self, &Multiaddr)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Indicates to the behaviour that a new multiaddr we were listening on has expired,\n which means that we are no longer listening in it.\n","sig":null,"attributes":[{"value":"/ Indicates to the behaviour that a new multiaddr we were listening on has expired,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64695,"byte_end":64780,"line_start":153,"line_end":153,"column_start":5,"column_end":90}},{"value":"/ which means that we are no longer listening in it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64785,"byte_end":64839,"line_start":154,"line_end":154,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65010,"byte_end":65034,"line_start":159,"line_end":159,"column_start":8,"column_end":32},"name":"inject_new_external_addr","qualname":"::behaviour::NetworkBehaviour::inject_new_external_addr","value":"pub fn inject_new_external_addr(&mut Self, &Multiaddr)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Indicates to the behaviour that we have discovered a new external address for us.\n","sig":null,"attributes":[{"value":"/ Indicates to the behaviour that we have discovered a new external address for us.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":64917,"byte_end":65002,"line_start":158,"line_end":158,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65122,"byte_end":65143,"line_start":163,"line_end":163,"column_start":8,"column_end":29},"name":"inject_listener_error","qualname":"::behaviour::NetworkBehaviour::inject_listener_error","value":"pub fn inject_listener_error(&mut Self, ListenerId,\n                             &std::error::Error + 'static)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" A listener experienced an error.\n","sig":null,"attributes":[{"value":"/ A listener experienced an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65078,"byte_end":65114,"line_start":162,"line_end":162,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65257,"byte_end":65279,"line_start":167,"line_end":167,"column_start":8,"column_end":30},"name":"inject_listener_closed","qualname":"::behaviour::NetworkBehaviour::inject_listener_closed","value":"pub fn inject_listener_closed(&mut Self, ListenerId,\n                              Result<(), &std::io::Error>)","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" A listener closed.\n","sig":null,"attributes":[{"value":"/ A listener closed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65227,"byte_end":65249,"line_start":166,"line_end":166,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65570,"byte_end":65574,"line_start":174,"line_end":174,"column_start":8,"column_end":12},"name":"poll","qualname":"::behaviour::NetworkBehaviour::poll","value":"pub fn poll<impl PollParameters: PollParameters>(&mut Self, &mut Context,\n                                                 &mut impl PollParameters)\n->\n    Poll<NetworkBehaviourAction<<<Self::ProtocolsHandler as\n                                 IntoProtocolsHandler>::Handler as\n                                ProtocolsHandler>::InEvent, Self::OutEvent>>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Polls for things that swarm should do.","sig":null,"attributes":[{"value":"/ Polls for things that swarm should do.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65359,"byte_end":65401,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65406,"byte_end":65409,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This API mimics the API of the `Stream` trait. The method may register the current task in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65414,"byte_end":65508,"line_start":172,"line_end":172,"column_start":5,"column_end":99}},{"value":"/ order to wake it up at a later point in time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65513,"byte_end":65562,"line_start":173,"line_end":173,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65880,"byte_end":65894,"line_start":179,"line_end":179,"column_start":11,"column_end":25},"name":"PollParameters","qualname":"::behaviour::PollParameters","value":"PollParameters","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":" Parameters passed to `poll()`, that the `NetworkBehaviour` has access to.\n","sig":null,"attributes":[{"value":"/ Parameters passed to `poll()`, that the `NetworkBehaviour` has access to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65792,"byte_end":65869,"line_start":178,"line_end":178,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":39},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65997,"byte_end":66019,"line_start":181,"line_end":181,"column_start":10,"column_end":32},"name":"SupportedProtocolsIter","qualname":"::behaviour::PollParameters::SupportedProtocolsIter","value":"type SupportedProtocolsIter: ExactSizeIterator<Item = Vec<u8>>;","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Iterator returned by [`supported_protocols`](PollParameters::supported_protocols).\n","sig":null,"attributes":[{"value":"/ Iterator returned by [`supported_protocols`](PollParameters::supported_protocols).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":65901,"byte_end":65987,"line_start":180,"line_end":180,"column_start":5,"column_end":91}}]},{"kind":"Type","id":{"krate":0,"index":40},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66154,"byte_end":66175,"line_start":183,"line_end":183,"column_start":10,"column_end":31},"name":"ListenedAddressesIter","qualname":"::behaviour::PollParameters::ListenedAddressesIter","value":"type ListenedAddressesIter: ExactSizeIterator<Item = Multiaddr>;","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Iterator returned by [`listened_addresses`](PollParameters::listened_addresses).\n","sig":null,"attributes":[{"value":"/ Iterator returned by [`listened_addresses`](PollParameters::listened_addresses).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66060,"byte_end":66144,"line_start":182,"line_end":182,"column_start":5,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66312,"byte_end":66333,"line_start":185,"line_end":185,"column_start":10,"column_end":31},"name":"ExternalAddressesIter","qualname":"::behaviour::PollParameters::ExternalAddressesIter","value":"type ExternalAddressesIter: ExactSizeIterator<Item = Multiaddr>;","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Iterator returned by [`external_addresses`](PollParameters::external_addresses).\n","sig":null,"attributes":[{"value":"/ Iterator returned by [`external_addresses`](PollParameters::external_addresses).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66218,"byte_end":66302,"line_start":184,"line_end":184,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66685,"byte_end":66704,"line_start":193,"line_end":193,"column_start":8,"column_end":27},"name":"supported_protocols","qualname":"::behaviour::PollParameters::supported_protocols","value":"pub fn supported_protocols(&Self) -> Self::SupportedProtocolsIter","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Returns the list of protocol the behaviour supports when a remote negotiates a protocol on\n an inbound substream.","sig":null,"attributes":[{"value":"/ Returns the list of protocol the behaviour supports when a remote negotiates a protocol on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66377,"byte_end":66471,"line_start":187,"line_end":187,"column_start":5,"column_end":99}},{"value":"/ an inbound substream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66476,"byte_end":66501,"line_start":188,"line_end":188,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66506,"byte_end":66509,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The iterator's elements are the ASCII names as reported on the wire.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66514,"byte_end":66586,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66591,"byte_end":66594,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that the list is computed once at initialization and never refreshed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66599,"byte_end":66677,"line_start":192,"line_end":192,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66815,"byte_end":66833,"line_start":196,"line_end":196,"column_start":8,"column_end":26},"name":"listened_addresses","qualname":"::behaviour::PollParameters::listened_addresses","value":"pub fn listened_addresses(&Self) -> Self::ListenedAddressesIter","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Returns the list of the addresses we're listening on.\n","sig":null,"attributes":[{"value":"/ Returns the list of the addresses we're listening on.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66750,"byte_end":66807,"line_start":195,"line_end":195,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66950,"byte_end":66968,"line_start":199,"line_end":199,"column_start":8,"column_end":26},"name":"external_addresses","qualname":"::behaviour::PollParameters::external_addresses","value":"pub fn external_addresses(&Self) -> Self::ExternalAddressesIter","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Returns the list of the addresses nodes can use to reach us.\n","sig":null,"attributes":[{"value":"/ Returns the list of the addresses nodes can use to reach us.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":66878,"byte_end":66942,"line_start":198,"line_end":198,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67063,"byte_end":67076,"line_start":202,"line_end":202,"column_start":8,"column_end":21},"name":"local_peer_id","qualname":"::behaviour::PollParameters::local_peer_id","value":"pub fn local_peer_id(&Self) -> &PeerId","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Returns the peer id of the local node.\n","sig":null,"attributes":[{"value":"/ Returns the peer id of the local node.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67013,"byte_end":67055,"line_start":201,"line_end":201,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67414,"byte_end":67442,"line_start":210,"line_end":210,"column_start":11,"column_end":39},"name":"NetworkBehaviourEventProcess","qualname":"::behaviour::NetworkBehaviourEventProcess","value":"NetworkBehaviourEventProcess<TEvent>","parent":null,"children":[{"krate":0,"index":48}],"decl_id":null,"docs":" When deriving [`NetworkBehaviour`] this trait must by default be implemented for all the\n possible event types generated by the inner behaviours.","sig":null,"attributes":[{"value":"/ When deriving [`NetworkBehaviour`] this trait must by default be implemented for all the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67099,"byte_end":67191,"line_start":205,"line_end":205,"column_start":1,"column_end":93}},{"value":"/ possible event types generated by the inner behaviours.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67192,"byte_end":67251,"line_start":206,"line_end":206,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67252,"byte_end":67255,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ You can opt out of this behaviour through `#[behaviour(event_process = false)]`. See the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67256,"byte_end":67348,"line_start":208,"line_end":208,"column_start":1,"column_end":93}},{"value":"/ documentation of [`NetworkBehaviour`] for details.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67349,"byte_end":67403,"line_start":209,"line_end":209,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67576,"byte_end":67588,"line_start":213,"line_end":213,"column_start":8,"column_end":20},"name":"inject_event","qualname":"::behaviour::NetworkBehaviourEventProcess::inject_event","value":"pub fn inject_event(&mut Self, TEvent)","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Called when one of the fields of the type you're deriving `NetworkBehaviour` on generates\n an event.\n","sig":null,"attributes":[{"value":"/ Called when one of the fields of the type you're deriving `NetworkBehaviour` on generates","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67457,"byte_end":67550,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ an event.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67555,"byte_end":67568,"line_start":212,"line_end":212,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1118},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67917,"byte_end":67930,"line_start":223,"line_end":223,"column_start":5,"column_end":18},"name":"GenerateEvent","qualname":"::behaviour::NetworkBehaviourAction::GenerateEvent","value":"NetworkBehaviourAction::GenerateEvent(TOutEvent)","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" Instructs the `Swarm` to return an event when it is being polled.\n","sig":null,"attributes":[{"value":"/ Instructs the `Swarm` to return an event when it is being polled.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67843,"byte_end":67912,"line_start":222,"line_end":222,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":1121},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68071,"byte_end":68082,"line_start":227,"line_end":227,"column_start":5,"column_end":16},"name":"DialAddress","qualname":"::behaviour::NetworkBehaviourAction::DialAddress","value":"NetworkBehaviourAction::DialAddress { address }","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" Instructs the swarm to dial the given multiaddress, with no knowledge of the `PeerId` that\n may be reached.\n","sig":null,"attributes":[{"value":"/ Instructs the swarm to dial the given multiaddress, with no knowledge of the `PeerId` that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67948,"byte_end":68042,"line_start":225,"line_end":225,"column_start":5,"column_end":99}},{"value":"/ may be reached.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68047,"byte_end":68066,"line_start":226,"line_end":226,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":1123},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68635,"byte_end":68643,"line_start":241,"line_end":241,"column_start":5,"column_end":13},"name":"DialPeer","qualname":"::behaviour::NetworkBehaviourAction::DialPeer","value":"NetworkBehaviourAction::DialPeer { peer_id, condition }","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" Instructs the swarm to dial a known `PeerId`.","sig":null,"attributes":[{"value":"/ Instructs the swarm to dial a known `PeerId`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68158,"byte_end":68207,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68212,"byte_end":68215,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The `addresses_of_peer` method is called to determine which addresses to attempt to reach.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68220,"byte_end":68314,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68319,"byte_end":68322,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ If we were already trying to dial this node, the addresses that are not yet in the queue of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68327,"byte_end":68422,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ addresses to try are added back to this queue.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68427,"byte_end":68477,"line_start":237,"line_end":237,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68482,"byte_end":68485,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ On success, [`NetworkBehaviour::inject_connected`] is invoked.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68490,"byte_end":68556,"line_start":239,"line_end":239,"column_start":5,"column_end":71}},{"value":"/ On failure, [`NetworkBehaviour::inject_dial_failure`] is invoked.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68561,"byte_end":68630,"line_start":240,"line_end":240,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":1126},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69659,"byte_end":69672,"line_start":263,"line_end":263,"column_start":5,"column_end":18},"name":"NotifyHandler","qualname":"::behaviour::NetworkBehaviourAction::NotifyHandler","value":"NetworkBehaviourAction::NotifyHandler { peer_id, handler, event }","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" Instructs the `Swarm` to send an event to the handler dedicated to a\n connection with a peer.","sig":null,"attributes":[{"value":"/ Instructs the `Swarm` to send an event to the handler dedicated to a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68820,"byte_end":68892,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ connection with a peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68897,"byte_end":68924,"line_start":249,"line_end":249,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68929,"byte_end":68932,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the `Swarm` is connected to the peer, the message is delivered to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":68937,"byte_end":69013,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ `ProtocolsHandler` instance identified by the peer ID and connection ID.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69018,"byte_end":69094,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69099,"byte_end":69102,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ If the specified connection no longer exists, the event is silently dropped.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69107,"byte_end":69187,"line_start":254,"line_end":254,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69192,"byte_end":69195,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Typically the connection ID given is the same as the one passed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69200,"byte_end":69270,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/ [`NetworkBehaviour::inject_event`], i.e. whenever the behaviour wishes to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69275,"byte_end":69352,"line_start":257,"line_end":257,"column_start":5,"column_end":82}},{"value":"/ respond to a request on the same connection (and possibly the same","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69357,"byte_end":69427,"line_start":258,"line_end":258,"column_start":5,"column_end":75}},{"value":"/ substream, as per the implementation of `ProtocolsHandler`).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69432,"byte_end":69496,"line_start":259,"line_end":259,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69501,"byte_end":69504,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Note that even if the peer is currently connected, connections can get closed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69509,"byte_end":69590,"line_start":261,"line_end":261,"column_start":5,"column_end":86}},{"value":"/ at any time and thus the event may not reach a handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69595,"byte_end":69654,"line_start":262,"line_end":262,"column_start":5,"column_end":64}}]},{"kind":"StructVariant","id":{"krate":0,"index":1130},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":70264,"byte_end":70282,"line_start":278,"line_end":278,"column_start":5,"column_end":23},"name":"ReportObservedAddr","qualname":"::behaviour::NetworkBehaviourAction::ReportObservedAddr","value":"NetworkBehaviourAction::ReportObservedAddr { address }","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" Informs the `Swarm` about a multi-address observed by a remote for\n the local node.","sig":null,"attributes":[{"value":"/ Informs the `Swarm` about a multi-address observed by a remote for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":69944,"byte_end":70014,"line_start":272,"line_end":272,"column_start":5,"column_end":75}},{"value":"/ the local node.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":70019,"byte_end":70038,"line_start":273,"line_end":273,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":70043,"byte_end":70046,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ It is advisable to issue `ReportObservedAddr` actions at a fixed frequency","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":70051,"byte_end":70129,"line_start":275,"line_end":275,"column_start":5,"column_end":83}},{"value":"/ per node. This way address information will be more accurate over time","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":70134,"byte_end":70208,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ and individual outliers carry less weight.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":70213,"byte_end":70259,"line_start":277,"line_end":277,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":1115},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67793,"byte_end":67815,"line_start":221,"line_end":221,"column_start":10,"column_end":32},"name":"NetworkBehaviourAction","qualname":"::behaviour::NetworkBehaviourAction","value":"pub enum NetworkBehaviourAction<TInEvent, TOutEvent> {\n\n    /// Instructs the `Swarm` to return an event when it is being polled.\n    GenerateEvent(TOutEvent),\n\n    /// Instructs the swarm to dial the given multiaddress, with no knowledge of the `PeerId` that\n    /// may be reached.\n    DialAddress {\n        /// The address to dial.\n        address: Multiaddr,\n    },\n\n    /// Instructs the swarm to dial a known `PeerId`.\n    ///\n    /// The `addresses_of_peer` method is called to determine which addresses to attempt to reach.\n    ///\n    /// If we were already trying to dial this node, the addresses that are not yet in the queue of\n    /// addresses to try are added back to this queue.\n    ///\n    /// On success, [`NetworkBehaviour::inject_connected`] is invoked.\n    /// On failure, [`NetworkBehaviour::inject_dial_failure`] is invoked.\n    DialPeer {\n        /// The peer to try reach.\n        peer_id: PeerId,\n        /// The condition for initiating a new dialing attempt.\n        condition: DialPeerCondition,\n    },\n\n    /// Instructs the `Swarm` to send an event to the handler dedicated to a\n    /// connection with a peer.\n    ///\n    /// If the `Swarm` is connected to the peer, the message is delivered to the\n    /// `ProtocolsHandler` instance identified by the peer ID and connection ID.\n    ///\n    /// If the specified connection no longer exists, the event is silently dropped.\n    ///\n    /// Typically the connection ID given is the same as the one passed to\n    /// [`NetworkBehaviour::inject_event`], i.e. whenever the behaviour wishes to\n    /// respond to a request on the same connection (and possibly the same\n    /// substream, as per the implementation of `ProtocolsHandler`).\n    ///\n    /// Note that even if the peer is currently connected, connections can get closed\n    /// at any time and thus the event may not reach a handler.\n    NotifyHandler {\n        /// The peer for whom a `ProtocolsHandler` should be notified.\n        peer_id: PeerId,\n        /// The ID of the connection whose `ProtocolsHandler` to notify.\n        handler: NotifyHandler,\n        /// The event to send.\n        event: TInEvent,\n    },\n\n    /// Informs the `Swarm` about a multi-address observed by a remote for\n    /// the local node.\n    ///\n    /// It is advisable to issue `ReportObservedAddr` actions at a fixed frequency\n    /// per node. This way address information will be more accurate over time\n    /// and individual outliers carry less weight.\n    ReportObservedAddr {\n        /// The observed address of the local node.\n        address: Multiaddr,\n    },\n}","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1130}],"decl_id":null,"docs":" An action that a [`NetworkBehaviour`] can trigger in the [`Swarm`]\n in whose context it is executing.","sig":null,"attributes":[{"value":"/ An action that a [`NetworkBehaviour`] can trigger in the [`Swarm`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67619,"byte_end":67689,"line_start":216,"line_end":216,"column_start":1,"column_end":71}},{"value":"/ in whose context it is executing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67690,"byte_end":67727,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67728,"byte_end":67731,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ [`Swarm`]: super::Swarm","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":67732,"byte_end":67759,"line_start":219,"line_end":219,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":70489,"byte_end":70495,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"map_in","qualname":"<NetworkBehaviourAction<TInEvent, TOutEvent>>::map_in","value":"pub fn map_in<E, impl FnOnce(TInEvent) -> E: FnOnce(TInEvent) ->\n              E>(Self, impl FnOnce(TInEvent) -> E)\n-> NetworkBehaviourAction<E, TOutEvent>","parent":null,"children":[],"decl_id":null,"docs":" Map the handler event.\n","sig":null,"attributes":[{"value":"/ Map the handler event.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":70451,"byte_end":70477,"line_start":285,"line_end":285,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":71449,"byte_end":71456,"line_start":306,"line_end":306,"column_start":12,"column_end":19},"name":"map_out","qualname":"<NetworkBehaviourAction<TInEvent, TOutEvent>>::map_out","value":"pub fn map_out<E, impl FnOnce(TOutEvent) -> E: FnOnce(TOutEvent) ->\n               E>(Self, impl FnOnce(TOutEvent) -> E)\n-> NetworkBehaviourAction<TInEvent, E>","parent":null,"children":[],"decl_id":null,"docs":" Map the event the swarm will return.\n","sig":null,"attributes":[{"value":"/ Map the event the swarm will return.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":71397,"byte_end":71437,"line_start":305,"line_end":305,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1141},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72446,"byte_end":72449,"line_start":326,"line_end":326,"column_start":5,"column_end":8},"name":"One","qualname":"::behaviour::NotifyHandler::One","value":"NotifyHandler::One(ConnectionId)","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":" Notify a particular connection handler.\n","sig":null,"attributes":[{"value":"/ Notify a particular connection handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72398,"byte_end":72441,"line_start":325,"line_end":325,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1144},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72517,"byte_end":72520,"line_start":328,"line_end":328,"column_start":5,"column_end":8},"name":"Any","qualname":"::behaviour::NotifyHandler::Any","value":"NotifyHandler::Any","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":" Notify an arbitrary connection handler.\n","sig":null,"attributes":[{"value":"/ Notify an arbitrary connection handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72469,"byte_end":72512,"line_start":327,"line_end":327,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1146},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72566,"byte_end":72569,"line_start":330,"line_end":330,"column_start":5,"column_end":8},"name":"All","qualname":"::behaviour::NotifyHandler::All","value":"NotifyHandler::All","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":" Notify all connection handlers.\n","sig":null,"attributes":[{"value":"/ Notify all connection handlers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72526,"byte_end":72561,"line_start":329,"line_end":329,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":1140},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72378,"byte_end":72391,"line_start":324,"line_end":324,"column_start":10,"column_end":23},"name":"NotifyHandler","qualname":"::behaviour::NotifyHandler","value":"pub enum NotifyHandler {\n\n    /// Notify a particular connection handler.\n    One(ConnectionId),\n\n    /// Notify an arbitrary connection handler.\n    Any,\n\n    /// Notify all connection handlers.\n    All,\n}","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1146}],"decl_id":null,"docs":" The options w.r.t. which connection handlers to notify of an event.\n","sig":null,"attributes":[{"value":"/ The options w.r.t. which connection handlers to notify of an event.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72273,"byte_end":72344,"line_start":322,"line_end":322,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1153},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73189,"byte_end":73201,"line_start":345,"line_end":345,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::behaviour::DialPeerCondition::Disconnected","value":"DialPeerCondition::Disconnected","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":" A new dialing attempt is initiated _only if_ the peer is currently\n considered disconnected, i.e. there is no established connection\n and no ongoing dialing attempt.","sig":null,"attributes":[{"value":"/ A new dialing attempt is initiated _only if_ the peer is currently","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72800,"byte_end":72870,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ considered disconnected, i.e. there is no established connection","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72875,"byte_end":72943,"line_start":339,"line_end":339,"column_start":5,"column_end":73}},{"value":"/ and no ongoing dialing attempt.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72948,"byte_end":72983,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72988,"byte_end":72991,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ If there is an ongoing dialing attempt, the addresses reported by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72996,"byte_end":73065,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ [`NetworkBehaviour::addresses_of_peer`] are added to the ongoing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73070,"byte_end":73138,"line_start":343,"line_end":343,"column_start":5,"column_end":73}},{"value":"/ dialing attempt, ignoring duplicates.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73143,"byte_end":73184,"line_start":344,"line_end":344,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1155},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73625,"byte_end":73635,"line_start":353,"line_end":353,"column_start":5,"column_end":15},"name":"NotDialing","qualname":"::behaviour::DialPeerCondition::NotDialing","value":"DialPeerCondition::NotDialing","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":" A new dialing attempt is initiated _only if_ there is currently\n no ongoing dialing attempt, i.e. the peer is either considered\n disconnected or connected but without an ongoing dialing attempt.","sig":null,"attributes":[{"value":"/ A new dialing attempt is initiated _only if_ there is currently","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73207,"byte_end":73274,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ no ongoing dialing attempt, i.e. the peer is either considered","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73279,"byte_end":73345,"line_start":347,"line_end":347,"column_start":5,"column_end":71}},{"value":"/ disconnected or connected but without an ongoing dialing attempt.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73350,"byte_end":73419,"line_start":348,"line_end":348,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73424,"byte_end":73427,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If there is an ongoing dialing attempt, the addresses reported by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73432,"byte_end":73501,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ [`NetworkBehaviour::addresses_of_peer`] are added to the ongoing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73506,"byte_end":73574,"line_start":351,"line_end":351,"column_start":5,"column_end":73}},{"value":"/ dialing attempt, ignoring duplicates.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73579,"byte_end":73620,"line_start":352,"line_end":352,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1157},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73750,"byte_end":73756,"line_start":356,"line_end":356,"column_start":5,"column_end":11},"name":"Always","qualname":"::behaviour::DialPeerCondition::Always","value":"DialPeerCondition::Always","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":" A new dialing attempt is always initiated, only subject to the\n configured connection limits.\n","sig":null,"attributes":[{"value":"/ A new dialing attempt is always initiated, only subject to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73641,"byte_end":73707,"line_start":354,"line_end":354,"column_start":5,"column_end":71}},{"value":"/ configured connection limits.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73712,"byte_end":73745,"line_start":355,"line_end":355,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1152},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72776,"byte_end":72793,"line_start":337,"line_end":337,"column_start":10,"column_end":27},"name":"DialPeerCondition","qualname":"::behaviour::DialPeerCondition","value":"pub enum DialPeerCondition {\n\n    /// A new dialing attempt is initiated _only if_ the peer is currently\n    /// considered disconnected, i.e. there is no established connection\n    /// and no ongoing dialing attempt.\n    ///\n    /// If there is an ongoing dialing attempt, the addresses reported by\n    /// [`NetworkBehaviour::addresses_of_peer`] are added to the ongoing\n    /// dialing attempt, ignoring duplicates.\n    Disconnected,\n\n    /// A new dialing attempt is initiated _only if_ there is currently\n    /// no ongoing dialing attempt, i.e. the peer is either considered\n    /// disconnected or connected but without an ongoing dialing attempt.\n    ///\n    /// If there is an ongoing dialing attempt, the addresses reported by\n    /// [`NetworkBehaviour::addresses_of_peer`] are added to the ongoing\n    /// dialing attempt, ignoring duplicates.\n    NotDialing,\n\n    /// A new dialing attempt is always initiated, only subject to the\n    /// configured connection limits.\n    Always,\n}","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1157}],"decl_id":null,"docs":" The available conditions under which a new dialing attempt to\n a peer is initiated when requested by [`NetworkBehaviourAction::DialPeer`].\n","sig":null,"attributes":[{"value":"/ The available conditions under which a new dialing attempt to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72573,"byte_end":72638,"line_start":333,"line_end":333,"column_start":1,"column_end":66}},{"value":"/ a peer is initiated when requested by [`NetworkBehaviourAction::DialPeer`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72639,"byte_end":72718,"line_start":334,"line_end":334,"column_start":1,"column_end":80}},{"value":"non_exhaustive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":72749,"byte_end":72766,"line_start":336,"line_end":336,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1194},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":78617,"byte_end":78632,"line_start":146,"line_end":146,"column_start":12,"column_end":27},"name":"AddressIntoIter","qualname":"::registry::AddressIntoIter","value":"AddressIntoIter {  }","parent":null,"children":[{"krate":0,"index":1195}],"decl_id":null,"docs":" An iterator over [`Multiaddr`] values.\n","sig":null,"attributes":[{"value":"/ An iterator over [`Multiaddr`] values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":78546,"byte_end":78588,"line_start":144,"line_end":144,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":92},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83157,"byte_end":83172,"line_start":31,"line_end":31,"column_start":11,"column_end":26},"name":"UpgradeInfoSend","qualname":"::upgrade::UpgradeInfoSend","value":"UpgradeInfoSend: Send + 'static","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" Implemented automatically on all types that implement [`UpgradeInfo`](upgrade::UpgradeInfo)\n and `Send + 'static`.","sig":null,"attributes":[{"value":"/ Implemented automatically on all types that implement [`UpgradeInfo`](upgrade::UpgradeInfo)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":82910,"byte_end":83005,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"/ and `Send + 'static`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83006,"byte_end":83031,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83032,"byte_end":83035,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Do not implement this trait yourself. Instead, please implement","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83036,"byte_end":83103,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ [`UpgradeInfo`](upgrade::UpgradeInfo).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83104,"byte_end":83146,"line_start":30,"line_end":30,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83273,"byte_end":83277,"line_start":33,"line_end":33,"column_start":10,"column_end":14},"name":"Info","qualname":"::upgrade::UpgradeInfoSend::Info","value":"type Info: upgrade::ProtocolName + Clone + Send + 'static;","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" Equivalent to [`UpgradeInfo::Info`](upgrade::UpgradeInfo::Info).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`UpgradeInfo::Info`](upgrade::UpgradeInfo::Info).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83195,"byte_end":83263,"line_start":32,"line_end":32,"column_start":5,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":94},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83417,"byte_end":83425,"line_start":35,"line_end":35,"column_start":10,"column_end":18},"name":"InfoIter","qualname":"::upgrade::UpgradeInfoSend::InfoIter","value":"type InfoIter: Iterator<Item = Self::Info> + Send + 'static;","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" Equivalent to [`UpgradeInfo::InfoIter`](upgrade::UpgradeInfo::InfoIter).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`UpgradeInfo::InfoIter`](upgrade::UpgradeInfo::InfoIter).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83331,"byte_end":83407,"line_start":34,"line_end":34,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83572,"byte_end":83585,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"protocol_info","qualname":"::upgrade::UpgradeInfoSend::protocol_info","value":"pub fn protocol_info(&Self) -> Self::InfoIter","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" Equivalent to [`UpgradeInfo::protocol_info`](upgrade::UpgradeInfo::protocol_info).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`UpgradeInfo::protocol_info`](upgrade::UpgradeInfo::protocol_info).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83478,"byte_end":83564,"line_start":37,"line_end":37,"column_start":5,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":101},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84258,"byte_end":84277,"line_start":60,"line_end":60,"column_start":11,"column_end":30},"name":"OutboundUpgradeSend","qualname":"::upgrade::OutboundUpgradeSend","value":"OutboundUpgradeSend: UpgradeInfoSend","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" Implemented automatically on all types that implement\n [`OutboundUpgrade`](upgrade::OutboundUpgrade) and `Send + 'static`.","sig":null,"attributes":[{"value":"/ Implemented automatically on all types that implement","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83995,"byte_end":84052,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"/ [`OutboundUpgrade`](upgrade::OutboundUpgrade) and `Send + 'static`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84053,"byte_end":84124,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84125,"byte_end":84128,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Do not implement this trait yourself. Instead, please implement","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84129,"byte_end":84196,"line_start":58,"line_end":58,"column_start":1,"column_end":68}},{"value":"/ [`OutboundUpgrade`](upgrade::OutboundUpgrade).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84197,"byte_end":84247,"line_start":59,"line_end":59,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84391,"byte_end":84397,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"name":"Output","qualname":"::upgrade::OutboundUpgradeSend::Output","value":"type Output: Send + 'static;","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Equivalent to [`OutboundUpgrade::Output`](upgrade::OutboundUpgrade::Output).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`OutboundUpgrade::Output`](upgrade::OutboundUpgrade::Output).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84301,"byte_end":84381,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":103},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84507,"byte_end":84512,"line_start":64,"line_end":64,"column_start":10,"column_end":15},"name":"Error","qualname":"::upgrade::OutboundUpgradeSend::Error","value":"type Error: Send + 'static;","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Equivalent to [`OutboundUpgrade::Error`](upgrade::OutboundUpgrade::Error).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`OutboundUpgrade::Error`](upgrade::OutboundUpgrade::Error).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84419,"byte_end":84497,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":104},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84624,"byte_end":84630,"line_start":66,"line_end":66,"column_start":10,"column_end":16},"name":"Future","qualname":"::upgrade::OutboundUpgradeSend::Future","value":"type Future: Future<Output = Result<Self::Output, Self::Error>> + Send + 'static;","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Equivalent to [`OutboundUpgrade::Future`](upgrade::OutboundUpgrade::Future).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`OutboundUpgrade::Future`](upgrade::OutboundUpgrade::Future).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84534,"byte_end":84614,"line_start":65,"line_end":65,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84814,"byte_end":84830,"line_start":69,"line_end":69,"column_start":8,"column_end":24},"name":"upgrade_outbound","qualname":"::upgrade::OutboundUpgradeSend::upgrade_outbound","value":"pub fn upgrade_outbound(Self, NegotiatedSubstream, Self::Info) -> Self::Future","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Equivalent to [`OutboundUpgrade::upgrade_outbound`](upgrade::OutboundUpgrade::upgrade_outbound).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`OutboundUpgrade::upgrade_outbound`](upgrade::OutboundUpgrade::upgrade_outbound).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84706,"byte_end":84806,"line_start":68,"line_end":68,"column_start":5,"column_end":105}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85719,"byte_end":85737,"line_start":94,"line_end":94,"column_start":11,"column_end":29},"name":"InboundUpgradeSend","qualname":"::upgrade::InboundUpgradeSend","value":"InboundUpgradeSend: UpgradeInfoSend","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" Implemented automatically on all types that implement\n [`InboundUpgrade`](upgrade::InboundUpgrade) and `Send + 'static`.","sig":null,"attributes":[{"value":"/ Implemented automatically on all types that implement","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85460,"byte_end":85517,"line_start":89,"line_end":89,"column_start":1,"column_end":58}},{"value":"/ [`InboundUpgrade`](upgrade::InboundUpgrade) and `Send + 'static`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85518,"byte_end":85587,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85588,"byte_end":85591,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Do not implement this trait yourself. Instead, please implement","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85592,"byte_end":85659,"line_start":92,"line_end":92,"column_start":1,"column_end":68}},{"value":"/ [`InboundUpgrade`](upgrade::InboundUpgrade).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85660,"byte_end":85708,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":114},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85849,"byte_end":85855,"line_start":96,"line_end":96,"column_start":10,"column_end":16},"name":"Output","qualname":"::upgrade::InboundUpgradeSend::Output","value":"type Output: Send + 'static;","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Equivalent to [`InboundUpgrade::Output`](upgrade::InboundUpgrade::Output).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`InboundUpgrade::Output`](upgrade::InboundUpgrade::Output).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85761,"byte_end":85839,"line_start":95,"line_end":95,"column_start":5,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":115},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85963,"byte_end":85968,"line_start":98,"line_end":98,"column_start":10,"column_end":15},"name":"Error","qualname":"::upgrade::InboundUpgradeSend::Error","value":"type Error: Send + 'static;","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Equivalent to [`InboundUpgrade::Error`](upgrade::InboundUpgrade::Error).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`InboundUpgrade::Error`](upgrade::InboundUpgrade::Error).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85877,"byte_end":85953,"line_start":97,"line_end":97,"column_start":5,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":116},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":86078,"byte_end":86084,"line_start":100,"line_end":100,"column_start":10,"column_end":16},"name":"Future","qualname":"::upgrade::InboundUpgradeSend::Future","value":"type Future: Future<Output = Result<Self::Output, Self::Error>> + Send + 'static;","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Equivalent to [`InboundUpgrade::Future`](upgrade::InboundUpgrade::Future).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`InboundUpgrade::Future`](upgrade::InboundUpgrade::Future).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85990,"byte_end":86068,"line_start":99,"line_end":99,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":86264,"byte_end":86279,"line_start":103,"line_end":103,"column_start":8,"column_end":23},"name":"upgrade_inbound","qualname":"::upgrade::InboundUpgradeSend::upgrade_inbound","value":"pub fn upgrade_inbound(Self, NegotiatedSubstream, Self::Info) -> Self::Future","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Equivalent to [`InboundUpgrade::upgrade_inbound`](upgrade::InboundUpgrade::upgrade_inbound).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`InboundUpgrade::upgrade_inbound`](upgrade::InboundUpgrade::upgrade_inbound).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":86160,"byte_end":86256,"line_start":102,"line_end":102,"column_start":5,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":125},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87279,"byte_end":87290,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"SendWrapper","qualname":"::upgrade::SendWrapper","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps around a type that implements [`OutboundUpgradeSend`], [`InboundUpgradeSend`], or\n both, and implements [`OutboundUpgrade`](upgrade::OutboundUpgrade) and/or\n [`InboundUpgrade`](upgrade::InboundUpgrade).","sig":null,"attributes":[{"value":"/ Wraps around a type that implements [`OutboundUpgradeSend`], [`InboundUpgradeSend`], or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":86904,"byte_end":86995,"line_start":123,"line_end":123,"column_start":1,"column_end":92}},{"value":"/ both, and implements [`OutboundUpgrade`](upgrade::OutboundUpgrade) and/or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":86996,"byte_end":87073,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/ [`InboundUpgrade`](upgrade::InboundUpgrade).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87074,"byte_end":87122,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87123,"byte_end":87126,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ > **Note**: This struct is mostly an implementation detail of the library and normally","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87127,"byte_end":87217,"line_start":127,"line_end":127,"column_start":1,"column_end":91}},{"value":"/ >           doesn't need to be used directly.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87218,"byte_end":87267,"line_start":128,"line_end":128,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":128},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87294,"byte_end":87299,"line_start":129,"line_end":129,"column_start":27,"column_end":32},"name":"0","qualname":"::upgrade::SendWrapper::0","value":"T","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":146},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"protocols_handler","qualname":"::protocols_handler","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":184},{"krate":0,"index":231},{"krate":0,"index":275},{"krate":0,"index":360},{"krate":0,"index":425},{"krate":0,"index":489},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":1296},{"krate":0,"index":1326},{"krate":0,"index":1322},{"krate":0,"index":1318},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":689},{"krate":0,"index":1329},{"krate":0,"index":1376},{"krate":0,"index":1371},{"krate":0,"index":1365},{"krate":0,"index":1353},{"krate":0,"index":1358},{"krate":0,"index":1342},{"krate":0,"index":1347},{"krate":0,"index":705},{"krate":0,"index":1382},{"krate":0,"index":1391},{"krate":0,"index":722},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":740},{"krate":0,"index":1394},{"krate":0,"index":1412},{"krate":0,"index":1411},{"krate":0,"index":1409},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749}],"decl_id":null,"docs":" Once a connection to a remote peer is established, a `ProtocolsHandler` negotiates\n and handles one or more specific protocols on the connection.","sig":null,"attributes":[{"value":"/ Once a connection to a remote peer is established, a `ProtocolsHandler` negotiates","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":89355,"byte_end":89441,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ and handles one or more specific protocols on the connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":89442,"byte_end":89507,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":89508,"byte_end":89511,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Protocols are negotiated and used on individual substreams of the connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":89512,"byte_end":89593,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/ Thus a `ProtocolsHandler` defines the inbound and outbound upgrades to apply","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":89594,"byte_end":89674,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ when creating a new inbound or outbound substream, respectively, and is notified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":89675,"byte_end":89759,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/ by a `Swarm` when these upgrades have been successfully applied, including the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":89760,"byte_end":89842,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ final output of the upgrade. A `ProtocolsHandler` can then continue communicating","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":89843,"byte_end":89928,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/ with the peer over the substream using the negotiated protocol(s).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":89929,"byte_end":89999,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90000,"byte_end":90003,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Two `ProtocolsHandler`s can be composed with [`ProtocolsHandler::select()`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90004,"byte_end":90083,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ in order to build a new handler supporting the combined set of protocols,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90084,"byte_end":90161,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ with methods being dispatched to the appropriate handler according to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90162,"byte_end":90239,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ used protocol(s) determined by the associated types of the handlers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90240,"byte_end":90312,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90313,"byte_end":90316,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ > **Note**: A `ProtocolsHandler` handles one or more protocols in the context of a single","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90317,"byte_end":90410,"line_start":36,"line_end":36,"column_start":1,"column_end":94}},{"value":"/ >           connection with a remote. In order to handle a protocol that requires knowledge of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90411,"byte_end":90509,"line_start":37,"line_end":37,"column_start":1,"column_end":99}},{"value":"/ >           the network as a whole, see the `NetworkBehaviour` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90510,"byte_end":90583,"line_start":38,"line_end":38,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1199},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/dummy.rs","byte_start":111064,"byte_end":111085,"line_start":35,"line_end":35,"column_start":12,"column_end":33},"name":"DummyProtocolsHandler","qualname":"::protocols_handler::dummy::DummyProtocolsHandler","value":"DummyProtocolsHandler { keep_alive }","parent":null,"children":[{"krate":0,"index":1200}],"decl_id":null,"docs":" Implementation of `ProtocolsHandler` that doesn't handle anything.\n","sig":null,"attributes":[{"value":"/ Implementation of `ProtocolsHandler` that doesn't handle anything.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/dummy.rs","byte_start":110958,"byte_end":111028,"line_start":33,"line_end":33,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1200},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/dummy.rs","byte_start":111096,"byte_end":111106,"line_start":36,"line_end":36,"column_start":9,"column_end":19},"name":"keep_alive","qualname":"::protocols_handler::dummy::DummyProtocolsHandler::keep_alive","value":"protocols_handler::KeepAlive","parent":{"krate":0,"index":1199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_in.rs","byte_start":114384,"byte_end":114394,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"MapInEvent","qualname":"::protocols_handler::map_in::MapInEvent","value":"MapInEvent {  }","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205}],"decl_id":null,"docs":" Wrapper around a protocol handler that turns the input event into something else.\n","sig":null,"attributes":[{"value":"/ Wrapper around a protocol handler that turns the input event into something else.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_in.rs","byte_start":114287,"byte_end":114372,"line_start":32,"line_end":32,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":245},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_out.rs","byte_start":118593,"byte_end":118604,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"MapOutEvent","qualname":"::protocols_handler::map_out::MapOutEvent","value":"MapOutEvent {  }","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" Wrapper around a protocol handler that turns the output event into something else.\n","sig":null,"attributes":[{"value":"/ Wrapper around a protocol handler that turns the output event into something else.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_out.rs","byte_start":118495,"byte_end":118581,"line_start":32,"line_end":32,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":310},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":123419,"byte_end":123444,"line_start":50,"line_end":50,"column_start":12,"column_end":37},"name":"NodeHandlerWrapperBuilder","qualname":"::protocols_handler::node_handler::NodeHandlerWrapperBuilder","value":"NodeHandlerWrapperBuilder {  }","parent":null,"children":[{"krate":0,"index":312}],"decl_id":null,"docs":" Prototype for a `NodeHandlerWrapper`.\n","sig":null,"attributes":[{"value":"/ Prototype for a `NodeHandlerWrapper`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":123366,"byte_end":123407,"line_start":49,"line_end":49,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":124856,"byte_end":124874,"line_start":91,"line_end":91,"column_start":12,"column_end":30},"name":"NodeHandlerWrapper","qualname":"::protocols_handler::node_handler::NodeHandlerWrapper","value":"NodeHandlerWrapper {  }","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"decl_id":null,"docs":" Wraps around an implementation of `ProtocolsHandler`, and implements `NodeHandler`.\n","sig":null,"attributes":[{"value":"/ Wraps around an implementation of `ProtocolsHandler`, and implements `NodeHandler`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":124687,"byte_end":124774,"line_start":89,"line_end":89,"column_start":1,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":126827,"byte_end":126834,"line_start":141,"line_end":141,"column_start":5,"column_end":12},"name":"Handler","qualname":"::protocols_handler::node_handler::NodeHandlerWrapperError::Handler","value":"NodeHandlerWrapperError::Handler(TErr)","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" The connection handler encountered an error.\n","sig":null,"attributes":[{"value":"/ The connection handler encountered an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":126774,"byte_end":126822,"line_start":140,"line_end":140,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1210},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":126897,"byte_end":126913,"line_start":143,"line_end":143,"column_start":5,"column_end":21},"name":"KeepAliveTimeout","qualname":"::protocols_handler::node_handler::NodeHandlerWrapperError::KeepAliveTimeout","value":"NodeHandlerWrapperError::KeepAliveTimeout","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" The connection keep-alive timeout expired.\n","sig":null,"attributes":[{"value":"/ The connection keep-alive timeout expired.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":126846,"byte_end":126892,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":1205},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":126738,"byte_end":126761,"line_start":139,"line_end":139,"column_start":10,"column_end":33},"name":"NodeHandlerWrapperError","qualname":"::protocols_handler::node_handler::NodeHandlerWrapperError","value":"pub enum NodeHandlerWrapperError<TErr> {\n\n    /// The connection handler encountered an error.\n    Handler(TErr),\n\n    /// The connection keep-alive timeout expired.\n    KeepAliveTimeout,\n}","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1210}],"decl_id":null,"docs":" Error generated by the `NodeHandlerWrapper`.\n","sig":null,"attributes":[{"value":"/ Error generated by the `NodeHandlerWrapper`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":126663,"byte_end":126711,"line_start":137,"line_end":137,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":377},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":137053,"byte_end":137067,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"OneShotHandler","qualname":"::protocols_handler::one_shot::OneShotHandler","value":"OneShotHandler {  }","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"decl_id":null,"docs":" A `ProtocolsHandler` that opens a new substream for each request.\n","sig":null,"attributes":[{"value":"/ A `ProtocolsHandler` that opens a new substream for each request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":136957,"byte_end":137026,"line_start":34,"line_end":34,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":138168,"byte_end":138171,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<OneShotHandler<TInbound, TOutbound, TEvent>>::new","value":"pub fn new(SubstreamProtocol<TInbound, ()>, OneShotHandlerConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `OneShotHandler`.\n","sig":null,"attributes":[{"value":"/ Creates a `OneShotHandler`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":138125,"byte_end":138156,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":138658,"byte_end":138674,"line_start":81,"line_end":81,"column_start":12,"column_end":28},"name":"pending_requests","qualname":"<OneShotHandler<TInbound, TOutbound, TEvent>>::pending_requests","value":"pub fn pending_requests(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of pending requests.\n","sig":null,"attributes":[{"value":"/ Returns the number of pending requests.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":138603,"byte_end":138646,"line_start":80,"line_end":80,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":139012,"byte_end":139031,"line_start":89,"line_end":89,"column_start":12,"column_end":31},"name":"listen_protocol_ref","qualname":"<OneShotHandler<TInbound, TOutbound, TEvent>>::listen_protocol_ref","value":"pub fn listen_protocol_ref(&Self) -> &SubstreamProtocol<TInbound, ()>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the listen protocol configuration.","sig":null,"attributes":[{"value":"/ Returns a reference to the listen protocol configuration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":138762,"byte_end":138823,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":138828,"byte_end":138831,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ > **Note**: If you modify the protocol, modifications will only applies to future inbound","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":138836,"byte_end":138929,"line_start":87,"line_end":87,"column_start":5,"column_end":98}},{"value":"/ >           substreams, not the ones already being negotiated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":138934,"byte_end":139000,"line_start":88,"line_end":88,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":139376,"byte_end":139395,"line_start":97,"line_end":97,"column_start":12,"column_end":31},"name":"listen_protocol_mut","qualname":"<OneShotHandler<TInbound, TOutbound, TEvent>>::listen_protocol_mut","value":"pub fn listen_protocol_mut(&mut Self) -> &mut SubstreamProtocol<TInbound, ()>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the listen protocol configuration.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the listen protocol configuration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":139118,"byte_end":139187,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":139192,"byte_end":139195,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ > **Note**: If you modify the protocol, modifications will only applies to future inbound","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":139200,"byte_end":139293,"line_start":95,"line_end":95,"column_start":5,"column_end":98}},{"value":"/ >           substreams, not the ones already being negotiated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":139298,"byte_end":139364,"line_start":96,"line_end":96,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":139553,"byte_end":139565,"line_start":102,"line_end":102,"column_start":12,"column_end":24},"name":"send_request","qualname":"<OneShotHandler<TInbound, TOutbound, TEvent>>::send_request","value":"pub fn send_request(&mut Self, TOutbound)","parent":null,"children":[],"decl_id":null,"docs":" Opens an outbound substream with `upgrade`.\n","sig":null,"attributes":[{"value":"/ Opens an outbound substream with `upgrade`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":139494,"byte_end":139541,"line_start":101,"line_end":101,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1215},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":143555,"byte_end":143575,"line_start":231,"line_end":231,"column_start":12,"column_end":32},"name":"OneShotHandlerConfig","qualname":"::protocols_handler::one_shot::OneShotHandlerConfig","value":"OneShotHandlerConfig { keep_alive_timeout, outbound_substream_timeout }","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"decl_id":null,"docs":" Configuration parameters for the `OneShotHandler`\n","sig":null,"attributes":[{"value":"/ Configuration parameters for the `OneShotHandler`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":143473,"byte_end":143526,"line_start":229,"line_end":229,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1216},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":143635,"byte_end":143653,"line_start":233,"line_end":233,"column_start":9,"column_end":27},"name":"keep_alive_timeout","qualname":"::protocols_handler::one_shot::OneShotHandlerConfig::keep_alive_timeout","value":"std::time::Duration","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" Keep-alive timeout for idle connections.\n","sig":null,"attributes":[{"value":"/ Keep-alive timeout for idle connections.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":143582,"byte_end":143626,"line_start":232,"line_end":232,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1217},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":143722,"byte_end":143748,"line_start":235,"line_end":235,"column_start":9,"column_end":35},"name":"outbound_substream_timeout","qualname":"::protocols_handler::one_shot::OneShotHandlerConfig::outbound_substream_timeout","value":"std::time::Duration","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" Timeout for outbound substream upgrades.\n","sig":null,"attributes":[{"value":"/ Timeout for outbound substream upgrades.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":143669,"byte_end":143713,"line_start":234,"line_end":234,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1220},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":146457,"byte_end":146483,"line_start":42,"line_end":42,"column_start":12,"column_end":38},"name":"IntoProtocolsHandlerSelect","qualname":"::protocols_handler::select::IntoProtocolsHandlerSelect","value":"IntoProtocolsHandlerSelect {  }","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224}],"decl_id":null,"docs":" Implementation of `IntoProtocolsHandler` that combines two protocols into one.\n","sig":null,"attributes":[{"value":"/ Implementation of `IntoProtocolsHandler` that combines two protocols into one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":146339,"byte_end":146421,"line_start":40,"line_end":40,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1233},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":147777,"byte_end":147799,"line_start":80,"line_end":80,"column_start":12,"column_end":34},"name":"ProtocolsHandlerSelect","qualname":"::protocols_handler::select::ProtocolsHandlerSelect","value":"ProtocolsHandlerSelect {  }","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237}],"decl_id":null,"docs":" Implementation of `ProtocolsHandler` that combines two protocols into one.\n","sig":null,"attributes":[{"value":"/ Implementation of `ProtocolsHandler` that combines two protocols into one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":147663,"byte_end":147741,"line_start":78,"line_end":78,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":489},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"multi","qualname":"::protocols_handler::multi","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":1750},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":1246},{"krate":0,"index":1250},{"krate":0,"index":528},{"krate":0,"index":532},{"krate":0,"index":538},{"krate":0,"index":1254},{"krate":0,"index":1258},{"krate":0,"index":564},{"krate":0,"index":568},{"krate":0,"index":574},{"krate":0,"index":1262},{"krate":0,"index":1270},{"krate":0,"index":1267},{"krate":0,"index":582},{"krate":0,"index":1273},{"krate":0,"index":1277},{"krate":0,"index":585},{"krate":0,"index":1281},{"krate":0,"index":1285},{"krate":0,"index":591},{"krate":0,"index":595},{"krate":0,"index":599},{"krate":0,"index":607},{"krate":0,"index":615},{"krate":0,"index":623},{"krate":0,"index":1289},{"krate":0,"index":1294},{"krate":0,"index":1292},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630}],"decl_id":null,"docs":" A [`ProtocolsHandler`] implementation that combines multiple other `ProtocolsHandler`s\n indexed by some key.\n","sig":null,"attributes":[{"value":"/ A [`ProtocolsHandler`] implementation that combines multiple other `ProtocolsHandler`s","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":159765,"byte_end":159855,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ indexed by some key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":159856,"byte_end":159880,"line_start":22,"line_end":22,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1246},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":160629,"byte_end":160641,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"MultiHandler","qualname":"::protocols_handler::multi::MultiHandler","value":"MultiHandler {  }","parent":null,"children":[{"krate":0,"index":1249}],"decl_id":null,"docs":" A [`ProtocolsHandler`] for multiple other `ProtocolsHandler`s.\n","sig":null,"attributes":[{"value":"/ A [`ProtocolsHandler`] for multiple other `ProtocolsHandler`s.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":160534,"byte_end":160600,"line_start":51,"line_end":51,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":161227,"byte_end":161240,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"try_from_iter","qualname":"<MultiHandler<K, H>>::try_from_iter","value":"pub fn try_from_iter<I>(I) -> Result<Self, DuplicateProtonameError> where\nI: IntoIterator<Item = (K, H)>","parent":null,"children":[],"decl_id":null,"docs":" Create and populate a `MultiHandler` from the given handler iterator.","sig":null,"attributes":[{"value":"/ Create and populate a `MultiHandler` from the given handler iterator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":161047,"byte_end":161120,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":161125,"byte_end":161128,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ It is an error for any two protocols handlers to share the same protocol name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":161133,"byte_end":161215,"line_start":76,"line_end":76,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":169440,"byte_end":169456,"line_start":271,"line_end":271,"column_start":12,"column_end":28},"name":"IntoMultiHandler","qualname":"::protocols_handler::multi::IntoMultiHandler","value":"IntoMultiHandler {  }","parent":null,"children":[{"krate":0,"index":1257}],"decl_id":null,"docs":" A [`IntoProtocolsHandler`] for multiple other `IntoProtocolsHandler`s.\n","sig":null,"attributes":[{"value":"/ A [`IntoProtocolsHandler`] for multiple other `IntoProtocolsHandler`s.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":169337,"byte_end":169411,"line_start":269,"line_end":269,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":170056,"byte_end":170069,"line_start":296,"line_end":296,"column_start":12,"column_end":25},"name":"try_from_iter","qualname":"<IntoMultiHandler<K, H>>::try_from_iter","value":"pub fn try_from_iter<I>(I) -> Result<Self, DuplicateProtonameError> where\nI: IntoIterator<Item = (K, H)>","parent":null,"children":[],"decl_id":null,"docs":" Create and populate an `IntoMultiHandler` from the given iterator.","sig":null,"attributes":[{"value":"/ Create and populate an `IntoMultiHandler` from the given iterator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":169879,"byte_end":169949,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":169954,"byte_end":169957,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ It is an error for any two protocols handlers to share the same protocol name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":169962,"byte_end":170044,"line_start":295,"line_end":295,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1262},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171146,"byte_end":171162,"line_start":332,"line_end":332,"column_start":12,"column_end":28},"name":"IndexedProtoName","qualname":"::protocols_handler::multi::IndexedProtoName","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index and protocol name pair used as `UpgradeInfo::Info`.\n","sig":null,"attributes":[{"value":"/ Index and protocol name pair used as `UpgradeInfo::Info`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171049,"byte_end":171110,"line_start":330,"line_end":330,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171426,"byte_end":171430,"line_start":342,"line_end":342,"column_start":12,"column_end":16},"name":"Info","qualname":"::protocols_handler::multi::Info","value":"Info {  }","parent":null,"children":[{"krate":0,"index":1276}],"decl_id":null,"docs":" The aggregated `InboundOpenInfo`s of supported inbound substream protocols.\n","sig":null,"attributes":[{"value":"/ The aggregated `InboundOpenInfo`s of supported inbound substream protocols.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171318,"byte_end":171397,"line_start":340,"line_end":340,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171569,"byte_end":171573,"line_start":351,"line_end":351,"column_start":12,"column_end":16},"name":"take","qualname":"<Info<K, I>>::take","value":"pub fn take(&mut Self, &K) -> Option<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1281},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171852,"byte_end":171859,"line_start":361,"line_end":361,"column_start":12,"column_end":19},"name":"Upgrade","qualname":"::protocols_handler::multi::Upgrade","value":"Upgrade {  }","parent":null,"children":[{"krate":0,"index":1284}],"decl_id":null,"docs":" Inbound and outbound upgrade for all `ProtocolsHandler`s.\n","sig":null,"attributes":[{"value":"/ Inbound and outbound upgrade for all `ProtocolsHandler`s.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171762,"byte_end":171823,"line_start":359,"line_end":359,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1289},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":174900,"byte_end":174923,"line_start":469,"line_end":469,"column_start":12,"column_end":35},"name":"DuplicateProtonameError","qualname":"::protocols_handler::multi::DuplicateProtonameError","value":"","parent":null,"children":[],"decl_id":null,"docs":" It is an error if two handlers share the same protocol name.\n","sig":null,"attributes":[{"value":"/ It is an error if two handlers share the same protocol name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":174800,"byte_end":174864,"line_start":467,"line_end":467,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":175048,"byte_end":175061,"line_start":473,"line_end":473,"column_start":12,"column_end":25},"name":"protocol_name","qualname":"<DuplicateProtonameError>::protocol_name","value":"pub fn protocol_name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" The protocol name bytes that occured in more than one handler.\n","sig":null,"attributes":[{"value":"/ The protocol name bytes that occured in more than one handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":174970,"byte_end":175036,"line_start":472,"line_end":472,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":663},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93174,"byte_end":93190,"line_start":102,"line_end":102,"column_start":11,"column_end":27},"name":"ProtocolsHandler","qualname":"::protocols_handler::ProtocolsHandler","value":"ProtocolsHandler: Send + 'static","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":688}],"decl_id":null,"docs":" A handler for a set of protocols used on a connection with a remote.","sig":null,"attributes":[{"value":"/ A handler for a set of protocols used on a connection with a remote.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91313,"byte_end":91385,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91386,"byte_end":91389,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This trait should be implemented for a type that maintains the state for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91390,"byte_end":91466,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ the execution of a specific protocol with a remote.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91467,"byte_end":91522,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91523,"byte_end":91526,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Handling a protocol","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91527,"byte_end":91552,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91553,"byte_end":91556,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ Communication with a remote over a set of protocols is initiated in one of two ways:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91557,"byte_end":91645,"line_start":77,"line_end":77,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91646,"byte_end":91649,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/   1. Dialing by initiating a new outbound substream. In order to do so,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91650,"byte_end":91725,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/      [`ProtocolsHandler::poll()`] must return an [`ProtocolsHandlerEvent::OutboundSubstreamRequest`],","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91726,"byte_end":91831,"line_start":80,"line_end":80,"column_start":1,"column_end":106}},{"value":"/      providing an instance of [`libp2p_core::upgrade::OutboundUpgrade`] that is used to negotiate the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91832,"byte_end":91937,"line_start":81,"line_end":81,"column_start":1,"column_end":106}},{"value":"/      protocol(s). Upon success, [`ProtocolsHandler::inject_fully_negotiated_outbound`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":91938,"byte_end":92028,"line_start":82,"line_end":82,"column_start":1,"column_end":91}},{"value":"/      is called with the final output of the upgrade.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92029,"byte_end":92085,"line_start":83,"line_end":83,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92086,"byte_end":92089,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/   2. Listening by accepting a new inbound substream. When a new inbound substream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92090,"byte_end":92175,"line_start":85,"line_end":85,"column_start":1,"column_end":86}},{"value":"/      is created on a connection, [`ProtocolsHandler::listen_protocol`] is called","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92176,"byte_end":92260,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/      to obtain an instance of [`libp2p_core::upgrade::InboundUpgrade`] that is used to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92261,"byte_end":92351,"line_start":87,"line_end":87,"column_start":1,"column_end":91}},{"value":"/      negotiate the protocol(s). Upon success,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92352,"byte_end":92401,"line_start":88,"line_end":88,"column_start":1,"column_end":50}},{"value":"/      [`ProtocolsHandler::inject_fully_negotiated_inbound`] is called with the final","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92402,"byte_end":92489,"line_start":89,"line_end":89,"column_start":1,"column_end":88}},{"value":"/      output of the upgrade.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92490,"byte_end":92521,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92522,"byte_end":92525,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Connection Keep-Alive","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92526,"byte_end":92553,"line_start":92,"line_end":92,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92554,"byte_end":92557,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ A `ProtocolsHandler` can influence the lifetime of the underlying connection","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92558,"byte_end":92638,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ through [`ProtocolsHandler::connection_keep_alive`]. That is, the protocol","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92639,"byte_end":92717,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ implemented by the handler can include conditions for terminating the connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92718,"byte_end":92803,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ The lifetime of successfully negotiated substreams is fully controlled by the handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92804,"byte_end":92894,"line_start":97,"line_end":97,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92895,"byte_end":92898,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Implementors of this trait should keep in mind that the connection can be closed at any time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92899,"byte_end":92996,"line_start":99,"line_end":99,"column_start":1,"column_end":98}},{"value":"/ When a connection is closed gracefully, the substreams used by the handler may still","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":92997,"byte_end":93085,"line_start":100,"line_end":100,"column_start":1,"column_end":89}},{"value":"/ continue reading data until the remote closes its side of the connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93086,"byte_end":93163,"line_start":101,"line_end":101,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":664},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93278,"byte_end":93285,"line_start":104,"line_end":104,"column_start":10,"column_end":17},"name":"InEvent","qualname":"::protocols_handler::ProtocolsHandler::InEvent","value":"type InEvent: Send + 'static;","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Custom event that can be received from the outside.\n","sig":null,"attributes":[{"value":"/ Custom event that can be received from the outside.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93213,"byte_end":93268,"line_start":103,"line_end":103,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":665},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93411,"byte_end":93419,"line_start":106,"line_end":106,"column_start":10,"column_end":18},"name":"OutEvent","qualname":"::protocols_handler::ProtocolsHandler::OutEvent","value":"type OutEvent: Send + 'static;","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Custom event that can be produced by the handler and that will be returned to the outside.\n","sig":null,"attributes":[{"value":"/ Custom event that can be produced by the handler and that will be returned to the outside.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93307,"byte_end":93401,"line_start":105,"line_end":105,"column_start":5,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":666},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93513,"byte_end":93518,"line_start":108,"line_end":108,"column_start":10,"column_end":15},"name":"Error","qualname":"::protocols_handler::ProtocolsHandler::Error","value":"type Error: error::Error + Send + 'static;","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" The type of errors returned by [`ProtocolsHandler::poll`].\n","sig":null,"attributes":[{"value":"/ The type of errors returned by [`ProtocolsHandler::poll`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93441,"byte_end":93503,"line_start":107,"line_end":107,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":667},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93629,"byte_end":93644,"line_start":110,"line_end":110,"column_start":10,"column_end":25},"name":"InboundProtocol","qualname":"::protocols_handler::ProtocolsHandler::InboundProtocol","value":"type InboundProtocol: InboundUpgradeSend + Send + 'static;","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" The inbound upgrade for the protocol(s) used by the handler.\n","sig":null,"attributes":[{"value":"/ The inbound upgrade for the protocol(s) used by the handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93555,"byte_end":93619,"line_start":109,"line_end":109,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":668},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93762,"byte_end":93778,"line_start":112,"line_end":112,"column_start":10,"column_end":26},"name":"OutboundProtocol","qualname":"::protocols_handler::ProtocolsHandler::OutboundProtocol","value":"type OutboundProtocol: OutboundUpgradeSend;","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" The outbound upgrade for the protocol(s) used by the handler.\n","sig":null,"attributes":[{"value":"/ The outbound upgrade for the protocol(s) used by the handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93687,"byte_end":93752,"line_start":111,"line_end":111,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":669},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93886,"byte_end":93901,"line_start":114,"line_end":114,"column_start":10,"column_end":25},"name":"InboundOpenInfo","qualname":"::protocols_handler::ProtocolsHandler::InboundOpenInfo","value":"type InboundOpenInfo: Send + 'static;","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" The type of additional information returned from `listen_protocol`.\n","sig":null,"attributes":[{"value":"/ The type of additional information returned from `listen_protocol`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93805,"byte_end":93876,"line_start":113,"line_end":113,"column_start":5,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":670},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94012,"byte_end":94028,"line_start":116,"line_end":116,"column_start":10,"column_end":26},"name":"OutboundOpenInfo","qualname":"::protocols_handler::ProtocolsHandler::OutboundOpenInfo","value":"type OutboundOpenInfo: Send + 'static;","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" The type of additional information passed to an `OutboundSubstreamRequest`.\n","sig":null,"attributes":[{"value":"/ The type of additional information passed to an `OutboundSubstreamRequest`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93923,"byte_end":94002,"line_start":115,"line_end":115,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94578,"byte_end":94593,"line_start":125,"line_end":125,"column_start":8,"column_end":23},"name":"listen_protocol","qualname":"::protocols_handler::ProtocolsHandler::listen_protocol","value":"pub fn listen_protocol(&Self)\n-> SubstreamProtocol<Self::InboundProtocol, Self::InboundOpenInfo>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" The [`InboundUpgrade`](libp2p_core::upgrade::InboundUpgrade) to apply on inbound\n substreams to negotiate the desired protocols.","sig":null,"attributes":[{"value":"/ The [`InboundUpgrade`](libp2p_core::upgrade::InboundUpgrade) to apply on inbound","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94051,"byte_end":94135,"line_start":118,"line_end":118,"column_start":5,"column_end":89}},{"value":"/ substreams to negotiate the desired protocols.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94140,"byte_end":94190,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94195,"byte_end":94198,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ > **Note**: The returned `InboundUpgrade` should always accept all the generally","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94203,"byte_end":94287,"line_start":121,"line_end":121,"column_start":5,"column_end":89}},{"value":"/ >           supported protocols, even if in a specific context a particular one is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94292,"byte_end":94378,"line_start":122,"line_end":122,"column_start":5,"column_end":91}},{"value":"/ >           not supported, (eg. when only allowing one substream at a time for a protocol).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94383,"byte_end":94478,"line_start":123,"line_end":123,"column_start":5,"column_end":100}},{"value":"/ >           This allows a remote to put the list of supported protocols in a cache.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94483,"byte_end":94570,"line_start":124,"line_end":124,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94756,"byte_end":94787,"line_start":128,"line_end":128,"column_start":8,"column_end":39},"name":"inject_fully_negotiated_inbound","qualname":"::protocols_handler::ProtocolsHandler::inject_fully_negotiated_inbound","value":"pub fn inject_fully_negotiated_inbound(&mut Self,\n                                       <Self::InboundProtocol as\n                                       InboundUpgradeSend>::Output,\n                                       Self::InboundOpenInfo)","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Injects the output of a successful upgrade on a new inbound substream.\n","sig":null,"attributes":[{"value":"/ Injects the output of a successful upgrade on a new inbound substream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94674,"byte_end":94748,"line_start":127,"line_end":127,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95158,"byte_end":95190,"line_start":138,"line_end":138,"column_start":8,"column_end":40},"name":"inject_fully_negotiated_outbound","qualname":"::protocols_handler::ProtocolsHandler::inject_fully_negotiated_outbound","value":"pub fn inject_fully_negotiated_outbound(&mut Self,\n                                        <Self::OutboundProtocol as\n                                        OutboundUpgradeSend>::Output,\n                                        Self::OutboundOpenInfo)","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Injects the output of a successful upgrade on a new outbound substream.","sig":null,"attributes":[{"value":"/ Injects the output of a successful upgrade on a new outbound substream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":94929,"byte_end":95004,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95009,"byte_end":95012,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The second argument is the information that was previously passed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95017,"byte_end":95089,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ [`ProtocolsHandlerEvent::OutboundSubstreamRequest`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95094,"byte_end":95150,"line_start":137,"line_end":137,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95403,"byte_end":95415,"line_start":145,"line_end":145,"column_start":8,"column_end":20},"name":"inject_event","qualname":"::protocols_handler::ProtocolsHandler::inject_event","value":"pub fn inject_event(&mut Self, Self::InEvent)","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Injects an event coming from the outside in the handler.\n","sig":null,"attributes":[{"value":"/ Injects an event coming from the outside in the handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95335,"byte_end":95395,"line_start":144,"line_end":144,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95529,"byte_end":95550,"line_start":148,"line_end":148,"column_start":8,"column_end":29},"name":"inject_address_change","qualname":"::protocols_handler::ProtocolsHandler::inject_address_change","value":"pub fn inject_address_change(&mut Self, &Multiaddr)","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Notifies the handler of a change in the address of the remote.\n","sig":null,"attributes":[{"value":"/ Notifies the handler of a change in the address of the remote.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95455,"byte_end":95521,"line_start":147,"line_end":147,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95703,"byte_end":95728,"line_start":151,"line_end":151,"column_start":8,"column_end":33},"name":"inject_dial_upgrade_error","qualname":"::protocols_handler::ProtocolsHandler::inject_dial_upgrade_error","value":"pub fn inject_dial_upgrade_error(&mut Self, Self::OutboundOpenInfo,\n                                 ProtocolsHandlerUpgrErr<<Self::OutboundProtocol\n                                                         as\n                                                         OutboundUpgradeSend>::Error>)","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Indicates to the handler that upgrading an outbound substream to the given protocol has failed.\n","sig":null,"attributes":[{"value":"/ Indicates to the handler that upgrading an outbound substream to the given protocol has failed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95596,"byte_end":95695,"line_start":150,"line_end":150,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96022,"byte_end":96049,"line_start":160,"line_end":160,"column_start":8,"column_end":35},"name":"inject_listen_upgrade_error","qualname":"::protocols_handler::ProtocolsHandler::inject_listen_upgrade_error","value":"pub fn inject_listen_upgrade_error(&mut Self, Self::InboundOpenInfo,\n                                   ProtocolsHandlerUpgrErr<<Self::InboundProtocol\n                                                           as\n                                                           InboundUpgradeSend>::Error>)","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Indicates to the handler that upgrading an inbound substream to the given protocol has failed.\n","sig":null,"attributes":[{"value":"/ Indicates to the handler that upgrading an inbound substream to the given protocol has failed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":95916,"byte_end":96014,"line_start":159,"line_end":159,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":97250,"byte_end":97271,"line_start":186,"line_end":186,"column_start":8,"column_end":29},"name":"connection_keep_alive","qualname":"::protocols_handler::ProtocolsHandler::connection_keep_alive","value":"pub fn connection_keep_alive(&Self) -> KeepAlive","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Returns until when the connection should be kept alive.","sig":null,"attributes":[{"value":"/ Returns until when the connection should be kept alive.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96207,"byte_end":96266,"line_start":166,"line_end":166,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96271,"byte_end":96274,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This method is called by the `Swarm` after each invocation of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96279,"byte_end":96344,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ [`ProtocolsHandler::poll`] to determine if the connection and the associated","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96349,"byte_end":96429,"line_start":169,"line_end":169,"column_start":5,"column_end":85}},{"value":"/ `ProtocolsHandler`s should be kept alive as far as this handler is concerned","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96434,"byte_end":96514,"line_start":170,"line_end":170,"column_start":5,"column_end":85}},{"value":"/ and if so, for how long.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96519,"byte_end":96547,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96552,"byte_end":96555,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Returning [`KeepAlive::No`] indicates that the connection should be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96560,"byte_end":96631,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/ closed and this handler destroyed immediately.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96636,"byte_end":96686,"line_start":174,"line_end":174,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96691,"byte_end":96694,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Returning [`KeepAlive::Until`] indicates that the connection may be closed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96699,"byte_end":96777,"line_start":176,"line_end":176,"column_start":5,"column_end":83}},{"value":"/ and this handler destroyed after the specified `Instant`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96782,"byte_end":96843,"line_start":177,"line_end":177,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96848,"byte_end":96851,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Returning [`KeepAlive::Yes`] indicates that the connection should","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96856,"byte_end":96925,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ be kept alive until the next call to this method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96930,"byte_end":96983,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96988,"byte_end":96991,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ > **Note**: The connection is always closed and the handler destroyed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":96996,"byte_end":97069,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/ > when [`ProtocolsHandler::poll`] returns an error. Furthermore, the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":97074,"byte_end":97146,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ > connection may be closed for reasons outside of the control","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":97151,"byte_end":97216,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/ > of the handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":97221,"byte_end":97242,"line_start":185,"line_end":185,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":97346,"byte_end":97350,"line_start":189,"line_end":189,"column_start":8,"column_end":12},"name":"poll","qualname":"::protocols_handler::ProtocolsHandler::poll","value":"pub fn poll(&mut Self, &mut Context)\n->\n    Poll<ProtocolsHandlerEvent<Self::OutboundProtocol, Self::OutboundOpenInfo,\n                               Self::OutEvent, Self::Error>>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Should behave like `Stream::poll()`.\n","sig":null,"attributes":[{"value":"/ Should behave like `Stream::poll()`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":97298,"byte_end":97338,"line_start":188,"line_end":188,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":97586,"byte_end":97598,"line_start":194,"line_end":194,"column_start":8,"column_end":20},"name":"map_in_event","qualname":"::protocols_handler::ProtocolsHandler::map_in_event","value":"pub fn map_in_event<TNewIn, TMap>(Self, TMap)\n-> MapInEvent<Self, TNewIn, TMap> where Self: Sized, TMap: Fn(&TNewIn) ->\nOption<&Self::InEvent>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Adds a closure that turns the input event into something else.\n","sig":null,"attributes":[{"value":"/ Adds a closure that turns the input event into something else.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":97512,"byte_end":97578,"line_start":193,"line_end":193,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":97875,"byte_end":97888,"line_start":203,"line_end":203,"column_start":8,"column_end":21},"name":"map_out_event","qualname":"::protocols_handler::ProtocolsHandler::map_out_event","value":"pub fn map_out_event<TMap, TNewOut>(Self, TMap) -> MapOutEvent<Self, TMap>\nwhere Self: Sized, TMap: FnMut(Self::OutEvent) -> TNewOut","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Adds a closure that turns the output event into something else.\n","sig":null,"attributes":[{"value":"/ Adds a closure that turns the output event into something else.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":97800,"byte_end":97867,"line_start":202,"line_end":202,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98429,"byte_end":98435,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"select","qualname":"::protocols_handler::ProtocolsHandler::select","value":"pub fn select<TProto2>(Self, TProto2) -> ProtocolsHandlerSelect<Self, TProto2>\nwhere Self: Sized","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Creates a new `ProtocolsHandler` that selects either this handler or\n `other` by delegating methods calls appropriately.","sig":null,"attributes":[{"value":"/ Creates a new `ProtocolsHandler` that selects either this handler or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98080,"byte_end":98152,"line_start":211,"line_end":211,"column_start":5,"column_end":77}},{"value":"/ `other` by delegating methods calls appropriately.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98157,"byte_end":98211,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98216,"byte_end":98219,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ > **Note**: The largest `KeepAlive` returned by the two handlers takes precedence,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98224,"byte_end":98310,"line_start":214,"line_end":214,"column_start":5,"column_end":91}},{"value":"/ > i.e. is returned from [`ProtocolsHandler::connection_keep_alive`] by the returned","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98315,"byte_end":98402,"line_start":215,"line_end":215,"column_start":5,"column_end":92}},{"value":"/ > handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98407,"byte_end":98421,"line_start":216,"line_end":216,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98815,"byte_end":98840,"line_start":228,"line_end":228,"column_start":8,"column_end":33},"name":"into_node_handler_builder","qualname":"::protocols_handler::ProtocolsHandler::into_node_handler_builder","value":"pub fn into_node_handler_builder(Self) -> NodeHandlerWrapperBuilder<Self>\nwhere Self: Sized","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Creates a builder that allows creating a `NodeHandler` that handles this protocol\n exclusively.","sig":null,"attributes":[{"value":"/ Creates a builder that allows creating a `NodeHandler` that handles this protocol","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98605,"byte_end":98690,"line_start":224,"line_end":224,"column_start":5,"column_end":90}},{"value":"/ exclusively.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98695,"byte_end":98711,"line_start":225,"line_end":225,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98716,"byte_end":98719,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ > **Note**: This method should not be redefined in a custom `ProtocolsHandler`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98724,"byte_end":98807,"line_start":227,"line_end":227,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1296},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99335,"byte_end":99352,"line_start":242,"line_end":242,"column_start":12,"column_end":29},"name":"SubstreamProtocol","qualname":"::protocols_handler::SubstreamProtocol","value":"SubstreamProtocol {  }","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302}],"decl_id":null,"docs":" Configuration of inbound or outbound substream protocol(s)\n for a [`ProtocolsHandler`].","sig":null,"attributes":[{"value":"/ Configuration of inbound or outbound substream protocol(s)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":98990,"byte_end":99052,"line_start":236,"line_end":236,"column_start":1,"column_end":63}},{"value":"/ for a [`ProtocolsHandler`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99053,"byte_end":99084,"line_start":237,"line_end":237,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99085,"byte_end":99088,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The inbound substream protocol(s) are defined by [`ProtocolsHandler::listen_protocol`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99089,"byte_end":99179,"line_start":239,"line_end":239,"column_start":1,"column_end":91}},{"value":"/ and the outbound substream protocol(s) by [`ProtocolsHandlerEvent::OutboundSubstreamRequest`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99180,"byte_end":99278,"line_start":240,"line_end":240,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99718,"byte_end":99721,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"new","qualname":"<SubstreamProtocol<TUpgrade, TInfo>>::new","value":"pub fn new(TUpgrade, TInfo) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `SubstreamProtocol` from the given upgrade.","sig":null,"attributes":[{"value":"/ Create a new `SubstreamProtocol` from the given upgrade.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99541,"byte_end":99601,"line_start":250,"line_end":250,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99606,"byte_end":99609,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ The default timeout for applying the given upgrade on a substream is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99614,"byte_end":99686,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/ 10 seconds.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99691,"byte_end":99706,"line_start":253,"line_end":253,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":100086,"byte_end":100107,"line_start":265,"line_end":265,"column_start":12,"column_end":33},"name":"with_upgrade_protocol","qualname":"<SubstreamProtocol<TUpgrade, TInfo>>::with_upgrade_protocol","value":"pub fn with_upgrade_protocol(Self, upgrade::Version) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the multistream-select protocol (version) to use for negotiating\n protocols upgrades on outbound substreams.\n","sig":null,"attributes":[{"value":"/ Sets the multistream-select protocol (version) to use for negotiating","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99950,"byte_end":100023,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ protocols upgrades on outbound substreams.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":100028,"byte_end":100074,"line_start":264,"line_end":264,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":100278,"byte_end":100289,"line_start":271,"line_end":271,"column_start":12,"column_end":23},"name":"map_upgrade","qualname":"<SubstreamProtocol<TUpgrade, TInfo>>::map_upgrade","value":"pub fn map_upgrade<U, F>(Self, F) -> SubstreamProtocol<U, TInfo> where\nF: FnOnce(TUpgrade) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps a function over the protocol upgrade.\n","sig":null,"attributes":[{"value":"/ Maps a function over the protocol upgrade.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":100220,"byte_end":100266,"line_start":270,"line_end":270,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":100648,"byte_end":100656,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"map_info","qualname":"<SubstreamProtocol<TUpgrade, TInfo>>::map_info","value":"pub fn map_info<U, F>(Self, F) -> SubstreamProtocol<TUpgrade, U> where\nF: FnOnce(TInfo) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps a function over the protocol info.\n","sig":null,"attributes":[{"value":"/ Maps a function over the protocol info.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":100593,"byte_end":100636,"line_start":283,"line_end":283,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101020,"byte_end":101032,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<SubstreamProtocol<TUpgrade, TInfo>>::with_timeout","value":"pub fn with_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a new timeout for the protocol upgrade.\n","sig":null,"attributes":[{"value":"/ Sets a new timeout for the protocol upgrade.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":100960,"byte_end":101008,"line_start":296,"line_end":296,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101183,"byte_end":101190,"line_start":303,"line_end":303,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<SubstreamProtocol<TUpgrade, TInfo>>::upgrade","value":"pub fn upgrade(&Self) -> &TUpgrade","parent":null,"children":[],"decl_id":null,"docs":" Borrows the contained protocol upgrade.\n","sig":null,"attributes":[{"value":"/ Borrows the contained protocol upgrade.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101128,"byte_end":101171,"line_start":302,"line_end":302,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101298,"byte_end":101302,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"info","qualname":"<SubstreamProtocol<TUpgrade, TInfo>>::info","value":"pub fn info(&Self) -> &TInfo","parent":null,"children":[],"decl_id":null,"docs":" Borrows the contained protocol info.\n","sig":null,"attributes":[{"value":"/ Borrows the contained protocol info.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101246,"byte_end":101286,"line_start":307,"line_end":307,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101413,"byte_end":101420,"line_start":313,"line_end":313,"column_start":12,"column_end":19},"name":"timeout","qualname":"<SubstreamProtocol<TUpgrade, TInfo>>::timeout","value":"pub fn timeout(&Self) -> &Duration","parent":null,"children":[],"decl_id":null,"docs":" Borrows the timeout for the protocol upgrade.\n","sig":null,"attributes":[{"value":"/ Borrows the timeout for the protocol upgrade.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101352,"byte_end":101401,"line_start":312,"line_end":312,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101565,"byte_end":101577,"line_start":318,"line_end":318,"column_start":12,"column_end":24},"name":"into_upgrade","qualname":"<SubstreamProtocol<TUpgrade, TInfo>>::into_upgrade","value":"pub fn into_upgrade(Self) -> (upgrade::Version, TUpgrade, TInfo)","parent":null,"children":[],"decl_id":null,"docs":" Converts the substream protocol configuration into the contained upgrade.\n","sig":null,"attributes":[{"value":"/ Converts the substream protocol configuration into the contained upgrade.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101476,"byte_end":101553,"line_start":317,"line_end":317,"column_start":5,"column_end":82}}]},{"kind":"StructVariant","id":{"krate":0,"index":1334},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101931,"byte_end":101955,"line_start":327,"line_end":327,"column_start":5,"column_end":29},"name":"OutboundSubstreamRequest","qualname":"::protocols_handler::ProtocolsHandlerEvent::OutboundSubstreamRequest","value":"ProtocolsHandlerEvent::OutboundSubstreamRequest { protocol }","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Request a new outbound substream to be opened with the remote.\n","sig":null,"attributes":[{"value":"/ Request a new outbound substream to be opened with the remote.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101860,"byte_end":101926,"line_start":326,"line_end":326,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1336},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":102151,"byte_end":102156,"line_start":333,"line_end":333,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocols_handler::ProtocolsHandlerEvent::Close","value":"ProtocolsHandlerEvent::Close(TErr)","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Close the connection for the given reason.\n","sig":null,"attributes":[{"value":"/ Close the connection for the given reason.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":102100,"byte_end":102146,"line_start":332,"line_end":332,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1339},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":102190,"byte_end":102196,"line_start":336,"line_end":336,"column_start":5,"column_end":11},"name":"Custom","qualname":"::protocols_handler::ProtocolsHandlerEvent::Custom","value":"ProtocolsHandlerEvent::Custom(TCustom)","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Other event.\n","sig":null,"attributes":[{"value":"/ Other event.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":102169,"byte_end":102185,"line_start":335,"line_end":335,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":1329},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101778,"byte_end":101799,"line_start":325,"line_end":325,"column_start":10,"column_end":31},"name":"ProtocolsHandlerEvent","qualname":"::protocols_handler::ProtocolsHandlerEvent","value":"pub enum ProtocolsHandlerEvent<TConnectionUpgrade, TOutboundOpenInfo, TCustom,\n                               TErr> {\n\n    /// Request a new outbound substream to be opened with the remote.\n    OutboundSubstreamRequest {\n        /// The protocol(s) to apply on the substream.\n        protocol: SubstreamProtocol<TConnectionUpgrade, TOutboundOpenInfo>,\n    },\n\n    /// Close the connection for the given reason.\n    Close(TErr),\n\n    /// Other event.\n    Custom(TCustom),\n}","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1339}],"decl_id":null,"docs":" Event produced by a handler.\n","sig":null,"attributes":[{"value":"/ Event produced by a handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":101691,"byte_end":101723,"line_start":323,"line_end":323,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":102522,"byte_end":102544,"line_start":345,"line_end":345,"column_start":12,"column_end":34},"name":"map_outbound_open_info","qualname":"<ProtocolsHandlerEvent<TConnectionUpgrade, TOutboundOpenInfo, TCustom, TErr>>::map_outbound_open_info","value":"pub fn map_outbound_open_info<F, I>(Self, F)\n-> ProtocolsHandlerEvent<TConnectionUpgrade, I, TCustom, TErr> where\nF: FnOnce(TOutboundOpenInfo) -> I","parent":null,"children":[],"decl_id":null,"docs":" If this is an `OutboundSubstreamRequest`, maps the `info` member from a\n `TOutboundOpenInfo` to something else.\n","sig":null,"attributes":[{"value":"/ If this is an `OutboundSubstreamRequest`, maps the `info` member from a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":102388,"byte_end":102463,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ `TOutboundOpenInfo` to something else.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":102468,"byte_end":102510,"line_start":344,"line_end":344,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":103276,"byte_end":103288,"line_start":365,"line_end":365,"column_start":12,"column_end":24},"name":"map_protocol","qualname":"<ProtocolsHandlerEvent<TConnectionUpgrade, TOutboundOpenInfo, TCustom, TErr>>::map_protocol","value":"pub fn map_protocol<F, I>(Self, F)\n-> ProtocolsHandlerEvent<I, TOutboundOpenInfo, TCustom, TErr> where\nF: FnOnce(TConnectionUpgrade) -> I","parent":null,"children":[],"decl_id":null,"docs":" If this is an `OutboundSubstreamRequest`, maps the protocol (`TConnectionUpgrade`)\n to something else.\n","sig":null,"attributes":[{"value":"/ If this is an `OutboundSubstreamRequest`, maps the protocol (`TConnectionUpgrade`)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":103151,"byte_end":103237,"line_start":363,"line_end":363,"column_start":5,"column_end":91}},{"value":"/ to something else.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":103242,"byte_end":103264,"line_start":364,"line_end":364,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":103978,"byte_end":103988,"line_start":384,"line_end":384,"column_start":12,"column_end":22},"name":"map_custom","qualname":"<ProtocolsHandlerEvent<TConnectionUpgrade, TOutboundOpenInfo, TCustom, TErr>>::map_custom","value":"pub fn map_custom<F, I>(Self, F)\n-> ProtocolsHandlerEvent<TConnectionUpgrade, TOutboundOpenInfo, I, TErr> where\nF: FnOnce(TCustom) -> I","parent":null,"children":[],"decl_id":null,"docs":" If this is a `Custom` event, maps the content to something else.\n","sig":null,"attributes":[{"value":"/ If this is a `Custom` event, maps the content to something else.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":103898,"byte_end":103966,"line_start":383,"line_end":383,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":104619,"byte_end":104628,"line_start":401,"line_end":401,"column_start":12,"column_end":21},"name":"map_close","qualname":"<ProtocolsHandlerEvent<TConnectionUpgrade, TOutboundOpenInfo, TCustom, TErr>>::map_close","value":"pub fn map_close<F, I>(Self, F)\n-> ProtocolsHandlerEvent<TConnectionUpgrade, TOutboundOpenInfo, TCustom, I>\nwhere F: FnOnce(TErr) -> I","parent":null,"children":[],"decl_id":null,"docs":" If this is a `Close` event, maps the content to something else.\n","sig":null,"attributes":[{"value":"/ If this is a `Close` event, maps the content to something else.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":104540,"byte_end":104607,"line_start":400,"line_end":400,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1384},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105394,"byte_end":105401,"line_start":422,"line_end":422,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::protocols_handler::ProtocolsHandlerUpgrErr::Timeout","value":"ProtocolsHandlerUpgrErr::Timeout","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" The opening attempt timed out before the negotiation was fully completed.\n","sig":null,"attributes":[{"value":"/ The opening attempt timed out before the negotiation was fully completed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105312,"byte_end":105389,"line_start":421,"line_end":421,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1386},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105453,"byte_end":105458,"line_start":424,"line_end":424,"column_start":5,"column_end":10},"name":"Timer","qualname":"::protocols_handler::ProtocolsHandlerUpgrErr::Timer","value":"ProtocolsHandlerUpgrErr::Timer","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" There was an error in the timer used.\n","sig":null,"attributes":[{"value":"/ There was an error in the timer used.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105407,"byte_end":105448,"line_start":423,"line_end":423,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1388},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105533,"byte_end":105540,"line_start":426,"line_end":426,"column_start":5,"column_end":12},"name":"Upgrade","qualname":"::protocols_handler::ProtocolsHandlerUpgrErr::Upgrade","value":"ProtocolsHandlerUpgrErr::Upgrade(UpgradeError<TUpgrErr>)","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Error while upgrading the substream to the protocol we want.\n","sig":null,"attributes":[{"value":"/ Error while upgrading the substream to the protocol we want.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105464,"byte_end":105528,"line_start":425,"line_end":425,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":1382},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105272,"byte_end":105295,"line_start":420,"line_end":420,"column_start":10,"column_end":33},"name":"ProtocolsHandlerUpgrErr","qualname":"::protocols_handler::ProtocolsHandlerUpgrErr","value":"pub enum ProtocolsHandlerUpgrErr<TUpgrErr> {\n\n    /// The opening attempt timed out before the negotiation was fully completed.\n    Timeout,\n\n    /// There was an error in the timer used.\n    Timer,\n\n    /// Error while upgrading the substream to the protocol we want.\n    Upgrade(UpgradeError<TUpgrErr>),\n}","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388}],"decl_id":null,"docs":" Error that can happen on an outbound substream opening attempt.\n","sig":null,"attributes":[{"value":"/ Error that can happen on an outbound substream opening attempt.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105178,"byte_end":105245,"line_start":418,"line_end":418,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105676,"byte_end":105691,"line_start":431,"line_end":431,"column_start":12,"column_end":27},"name":"map_upgrade_err","qualname":"<ProtocolsHandlerUpgrErr<TUpgrErr>>::map_upgrade_err","value":"pub fn map_upgrade_err<F, E>(Self, F) -> ProtocolsHandlerUpgrErr<E> where\nF: FnOnce(UpgradeError<TUpgrErr>) -> UpgradeError<E>","parent":null,"children":[],"decl_id":null,"docs":" Map the inner [`UpgradeError`] type.\n","sig":null,"attributes":[{"value":"/ Map the inner [`UpgradeError`] type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105624,"byte_end":105664,"line_start":430,"line_end":430,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":733},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107086,"byte_end":107106,"line_start":474,"line_end":474,"column_start":11,"column_end":31},"name":"IntoProtocolsHandler","qualname":"::protocols_handler::IntoProtocolsHandler","value":"IntoProtocolsHandler: Send + 'static","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":739}],"decl_id":null,"docs":" Prototype for a `ProtocolsHandler`.\n","sig":null,"attributes":[{"value":"/ Prototype for a `ProtocolsHandler`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107036,"byte_end":107075,"line_start":473,"line_end":473,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":734},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107165,"byte_end":107172,"line_start":476,"line_end":476,"column_start":10,"column_end":17},"name":"Handler","qualname":"::protocols_handler::IntoProtocolsHandler::Handler","value":"type Handler: ProtocolsHandler;","parent":{"krate":0,"index":733},"children":[],"decl_id":null,"docs":" The protocols handler.\n","sig":null,"attributes":[{"value":"/ The protocols handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107129,"byte_end":107155,"line_start":475,"line_end":475,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107321,"byte_end":107333,"line_start":481,"line_end":481,"column_start":8,"column_end":20},"name":"into_handler","qualname":"::protocols_handler::IntoProtocolsHandler::into_handler","value":"pub fn into_handler(Self, &PeerId, &ConnectedPoint) -> Self::Handler","parent":{"krate":0,"index":733},"children":[],"decl_id":null,"docs":" Builds the protocols handler.","sig":null,"attributes":[{"value":"/ Builds the protocols handler.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107197,"byte_end":107230,"line_start":478,"line_end":478,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107235,"byte_end":107238,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ The `PeerId` is the id of the node the handler is going to handle.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107243,"byte_end":107313,"line_start":480,"line_end":480,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107472,"byte_end":107488,"line_start":484,"line_end":484,"column_start":8,"column_end":24},"name":"inbound_protocol","qualname":"::protocols_handler::IntoProtocolsHandler::inbound_protocol","value":"pub fn inbound_protocol(&Self)\n-> <Self::Handler as ProtocolsHandler>::InboundProtocol","parent":{"krate":0,"index":733},"children":[],"decl_id":null,"docs":" Return the handler's inbound protocol.\n","sig":null,"attributes":[{"value":"/ Return the handler's inbound protocol.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107422,"byte_end":107464,"line_start":483,"line_end":483,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107688,"byte_end":107694,"line_start":488,"line_end":488,"column_start":8,"column_end":14},"name":"select","qualname":"::protocols_handler::IntoProtocolsHandler::select","value":"pub fn select<TProto2>(Self, TProto2)\n-> IntoProtocolsHandlerSelect<Self, TProto2> where Self: Sized","parent":{"krate":0,"index":733},"children":[],"decl_id":null,"docs":" Builds an implementation of `IntoProtocolsHandler` that handles both this protocol and the\n other one together.\n","sig":null,"attributes":[{"value":"/ Builds an implementation of `IntoProtocolsHandler` that handles both this protocol and the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107558,"byte_end":107652,"line_start":486,"line_end":486,"column_start":5,"column_end":99}},{"value":"/ other one together.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107657,"byte_end":107680,"line_start":487,"line_end":487,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107990,"byte_end":108015,"line_start":497,"line_end":497,"column_start":8,"column_end":33},"name":"into_node_handler_builder","qualname":"::protocols_handler::IntoProtocolsHandler::into_node_handler_builder","value":"pub fn into_node_handler_builder(Self) -> NodeHandlerWrapperBuilder<Self>\nwhere Self: Sized","parent":{"krate":0,"index":733},"children":[],"decl_id":null,"docs":" Creates a builder that will allow creating a `NodeHandler` that handles this protocol\n exclusively.\n","sig":null,"attributes":[{"value":"/ Creates a builder that will allow creating a `NodeHandler` that handles this protocol","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107872,"byte_end":107961,"line_start":495,"line_end":495,"column_start":5,"column_end":94}},{"value":"/ exclusively.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107966,"byte_end":107982,"line_start":496,"line_end":496,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1395},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108679,"byte_end":108684,"line_start":523,"line_end":523,"column_start":5,"column_end":10},"name":"Until","qualname":"::protocols_handler::KeepAlive::Until","value":"KeepAlive::Until(Instant)","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" If nothing new happens, the connection should be closed at the given `Instant`.\n","sig":null,"attributes":[{"value":"/ If nothing new happens, the connection should be closed at the given `Instant`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108591,"byte_end":108674,"line_start":522,"line_end":522,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1398},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108734,"byte_end":108737,"line_start":525,"line_end":525,"column_start":5,"column_end":8},"name":"Yes","qualname":"::protocols_handler::KeepAlive::Yes","value":"KeepAlive::Yes","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Keep the connection alive.\n","sig":null,"attributes":[{"value":"/ Keep the connection alive.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108699,"byte_end":108729,"line_start":524,"line_end":524,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1400},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108793,"byte_end":108795,"line_start":527,"line_end":527,"column_start":5,"column_end":7},"name":"No","qualname":"::protocols_handler::KeepAlive::No","value":"KeepAlive::No","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Close the connection as soon as possible.\n","sig":null,"attributes":[{"value":"/ Close the connection as soon as possible.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108743,"byte_end":108788,"line_start":526,"line_end":526,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1394},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108575,"byte_end":108584,"line_start":521,"line_end":521,"column_start":10,"column_end":19},"name":"KeepAlive","qualname":"::protocols_handler::KeepAlive","value":"pub enum KeepAlive {\n\n    /// If nothing new happens, the connection should be closed at the given `Instant`.\n    Until(Instant),\n\n    /// Keep the connection alive.\n    Yes,\n\n    /// Close the connection as soon as possible.\n    No,\n}","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1400}],"decl_id":null,"docs":" How long the connection should be kept alive.\n","sig":null,"attributes":[{"value":"/ How long the connection should be kept alive.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108471,"byte_end":108520,"line_start":519,"line_end":519,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108877,"byte_end":108883,"line_start":532,"line_end":532,"column_start":12,"column_end":18},"name":"is_yes","qualname":"<KeepAlive>::is_yes","value":"pub fn is_yes(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true for `Yes`, false otherwise.\n","sig":null,"attributes":[{"value":"/ Returns true for `Yes`, false otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108821,"byte_end":108865,"line_start":531,"line_end":531,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":752},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"toggle","qualname":"::toggle","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":1818},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":1850},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":816},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":829},{"krate":0,"index":832}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":785},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177363,"byte_end":177369,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"Toggle","qualname":"::toggle::Toggle","value":"Toggle {  }","parent":null,"children":[{"krate":0,"index":787}],"decl_id":null,"docs":" Implementation of `NetworkBehaviour` that can be either in the disabled or enabled state.","sig":null,"attributes":[{"value":"/ Implementation of `NetworkBehaviour` that can be either in the disabled or enabled state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177202,"byte_end":177295,"line_start":42,"line_end":42,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177296,"byte_end":177299,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The state can only be chosen at initialization.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177300,"byte_end":177351,"line_start":44,"line_end":44,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177543,"byte_end":177553,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<Toggle<TBehaviour>>::is_enabled","value":"pub fn is_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Toggle` is enabled and `false` if it's disabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `Toggle` is enabled and `false` if it's disabled.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177460,"byte_end":177531,"line_start":50,"line_end":50,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177679,"byte_end":177685,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<Toggle<TBehaviour>>::as_ref","value":"pub fn as_ref(&Self) -> Option<&TBehaviour>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner `NetworkBehaviour`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner `NetworkBehaviour`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177611,"byte_end":177667,"line_start":55,"line_end":55,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177833,"byte_end":177839,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Toggle<TBehaviour>>::as_mut","value":"pub fn as_mut(&mut Self) -> Option<&mut TBehaviour>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner `NetworkBehaviour`.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner `NetworkBehaviour`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177757,"byte_end":177821,"line_start":60,"line_end":60,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":820},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":181578,"byte_end":181600,"line_start":177,"line_end":177,"column_start":12,"column_end":34},"name":"ToggleIntoProtoHandler","qualname":"::toggle::ToggleIntoProtoHandler","value":"ToggleIntoProtoHandler {  }","parent":null,"children":[{"krate":0,"index":822}],"decl_id":null,"docs":" Implementation of `IntoProtocolsHandler` that can be in the disabled state.\n","sig":null,"attributes":[{"value":"/ Implementation of `IntoProtocolsHandler` that can be in the disabled state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":181487,"byte_end":181566,"line_start":176,"line_end":176,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":829},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":182433,"byte_end":182451,"line_start":203,"line_end":203,"column_start":12,"column_end":30},"name":"ToggleProtoHandler","qualname":"::toggle::ToggleProtoHandler","value":"ToggleProtoHandler {  }","parent":null,"children":[{"krate":0,"index":831}],"decl_id":null,"docs":" Implementation of `ProtocolsHandler` that can be in the disabled state.\n","sig":null,"attributes":[{"value":"/ Implementation of `ProtocolsHandler` that can be in the disabled state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":182346,"byte_end":182421,"line_start":202,"line_end":202,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":929},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":4453,"byte_end":4458,"line_start":132,"line_end":132,"column_start":10,"column_end":15},"name":"Swarm","qualname":"::Swarm","value":"ExpandedSwarm<TBehaviour,\n              <<<TBehaviour as NetworkBehaviour>::ProtocolsHandler as\n               IntoProtocolsHandler>::Handler as ProtocolsHandler>::InEvent,\n              <<<TBehaviour as NetworkBehaviour>::ProtocolsHandler as\n               IntoProtocolsHandler>::Handler as ProtocolsHandler>::OutEvent,\n              <TBehaviour as NetworkBehaviour>::ProtocolsHandler, TConnInfo>","parent":null,"children":[],"decl_id":null,"docs":" Contains the state of the network, plus the way it should behave.\n","sig":null,"attributes":[{"value":"/ Contains the state of the network, plus the way it should behave.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":4374,"byte_end":4443,"line_start":131,"line_end":131,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":932},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":5022,"byte_end":5041,"line_start":144,"line_end":144,"column_start":10,"column_end":29},"name":"NegotiatedSubstream","qualname":"::NegotiatedSubstream","value":"Negotiated<Substream<StreamMuxerBox>>","parent":null,"children":[],"decl_id":null,"docs":" Substream for which a protocol has been chosen.","sig":null,"attributes":[{"value":"/ Substream for which a protocol has been chosen.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":4844,"byte_end":4895,"line_start":140,"line_end":140,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":4896,"byte_end":4899,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ Implements the [`AsyncRead`](futures::io::AsyncRead) and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":4900,"byte_end":4960,"line_start":142,"line_end":142,"column_start":1,"column_end":61}},{"value":"/ [`AsyncWrite`](futures::io::AsyncWrite) traits.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":4961,"byte_end":5012,"line_start":143,"line_end":143,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":5233,"byte_end":5242,"line_start":150,"line_end":150,"column_start":5,"column_end":14},"name":"Behaviour","qualname":"::SwarmEvent::Behaviour","value":"SwarmEvent::Behaviour(TBvEv)","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" Event generated by the `NetworkBehaviour`.\n","sig":null,"attributes":[{"value":"/ Event generated by the `NetworkBehaviour`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":5182,"byte_end":5228,"line_start":149,"line_end":149,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":1420},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":5311,"byte_end":5332,"line_start":152,"line_end":152,"column_start":5,"column_end":26},"name":"ConnectionEstablished","qualname":"::SwarmEvent::ConnectionEstablished","value":"SwarmEvent::ConnectionEstablished { peer_id, endpoint, num_established }","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" A connection to the given peer has been opened.\n","sig":null,"attributes":[{"value":"/ A connection to the given peer has been opened.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":5255,"byte_end":5306,"line_start":151,"line_end":151,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":1424},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":5780,"byte_end":5796,"line_start":163,"line_end":163,"column_start":5,"column_end":21},"name":"ConnectionClosed","qualname":"::SwarmEvent::ConnectionClosed","value":"SwarmEvent::ConnectionClosed { peer_id, endpoint, num_established, cause }","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" A connection with the given peer has been closed,\n possibly as a result of an error.\n","sig":null,"attributes":[{"value":"/ A connection with the given peer has been closed,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":5680,"byte_end":5733,"line_start":161,"line_end":161,"column_start":5,"column_end":58}},{"value":"/ possibly as a result of an error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":5738,"byte_end":5775,"line_start":162,"line_end":162,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":1429},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":6632,"byte_end":6650,"line_start":180,"line_end":180,"column_start":5,"column_end":23},"name":"IncomingConnection","qualname":"::SwarmEvent::IncomingConnection","value":"SwarmEvent::IncomingConnection { local_addr, send_back_addr }","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" A new connection arrived on a listener and is in the process of protocol negotiation.","sig":null,"attributes":[{"value":"/ A new connection arrived on a listener and is in the process of protocol negotiation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":6261,"byte_end":6350,"line_start":174,"line_end":174,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":6355,"byte_end":6358,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ A corresponding [`ConnectionEstablished`](SwarmEvent::ConnectionEstablished),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":6363,"byte_end":6444,"line_start":176,"line_end":176,"column_start":5,"column_end":86}},{"value":"/ [`BannedPeer`](SwarmEvent::BannedPeer), or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":6449,"byte_end":6495,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/ [`IncomingConnectionError`](SwarmEvent::IncomingConnectionError) event will later be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":6500,"byte_end":6588,"line_start":178,"line_end":178,"column_start":5,"column_end":93}},{"value":"/ generated for this connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":6593,"byte_end":6627,"line_start":179,"line_end":179,"column_start":5,"column_end":39}}]},{"kind":"StructVariant","id":{"krate":0,"index":1432},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":7169,"byte_end":7192,"line_start":192,"line_end":192,"column_start":5,"column_end":28},"name":"IncomingConnectionError","qualname":"::SwarmEvent::IncomingConnectionError","value":"SwarmEvent::IncomingConnectionError { local_addr, send_back_addr, error }","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" An error happened on a connection during its initial handshake.","sig":null,"attributes":[{"value":"/ An error happened on a connection during its initial handshake.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":6948,"byte_end":7015,"line_start":188,"line_end":188,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":7020,"byte_end":7023,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This can include, for example, an error during the handshake of the encryption layer, or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":7028,"byte_end":7120,"line_start":190,"line_end":190,"column_start":5,"column_end":97}},{"value":"/ the connection unexpectedly closed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":7125,"byte_end":7164,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":1436},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":7679,"byte_end":7689,"line_start":203,"line_end":203,"column_start":5,"column_end":15},"name":"BannedPeer","qualname":"::SwarmEvent::BannedPeer","value":"SwarmEvent::BannedPeer { peer_id, endpoint }","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" We connected to a peer, but we immediately closed the connection because that peer is banned.\n","sig":null,"attributes":[{"value":"/ We connected to a peer, but we immediately closed the connection because that peer is banned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":7577,"byte_end":7674,"line_start":202,"line_end":202,"column_start":5,"column_end":102}}]},{"kind":"StructVariant","id":{"krate":0,"index":1439},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":7933,"byte_end":7948,"line_start":210,"line_end":210,"column_start":5,"column_end":20},"name":"UnreachableAddr","qualname":"::SwarmEvent::UnreachableAddr","value":"SwarmEvent::UnreachableAddr { peer_id, address, error, attempts_remaining }","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" Tried to dial an address but it ended up being unreachaable.\n","sig":null,"attributes":[{"value":"/ Tried to dial an address but it ended up being unreachaable.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":7864,"byte_end":7928,"line_start":209,"line_end":209,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":1444},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":8512,"byte_end":8538,"line_start":223,"line_end":223,"column_start":5,"column_end":31},"name":"UnknownPeerUnreachableAddr","qualname":"::SwarmEvent::UnknownPeerUnreachableAddr","value":"SwarmEvent::UnknownPeerUnreachableAddr { address, error }","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" Tried to dial an address but it ended up being unreachaable.\n Contrary to `UnreachableAddr`, we don't know the identity of the peer that we were trying\n to reach.\n","sig":null,"attributes":[{"value":"/ Tried to dial an address but it ended up being unreachaable.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":8327,"byte_end":8391,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/ Contrary to `UnreachableAddr`, we don't know the identity of the peer that we were trying","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":8396,"byte_end":8489,"line_start":221,"line_end":221,"column_start":5,"column_end":98}},{"value":"/ to reach.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":8494,"byte_end":8507,"line_start":222,"line_end":222,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1447},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":8793,"byte_end":8806,"line_start":230,"line_end":230,"column_start":5,"column_end":18},"name":"NewListenAddr","qualname":"::SwarmEvent::NewListenAddr","value":"SwarmEvent::NewListenAddr(Multiaddr)","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" One of our listeners has reported a new local listening address.\n","sig":null,"attributes":[{"value":"/ One of our listeners has reported a new local listening address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":8720,"byte_end":8788,"line_start":229,"line_end":229,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1450},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":8904,"byte_end":8921,"line_start":232,"line_end":232,"column_start":5,"column_end":22},"name":"ExpiredListenAddr","qualname":"::SwarmEvent::ExpiredListenAddr","value":"SwarmEvent::ExpiredListenAddr(Multiaddr)","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" One of our listeners has reported the expiration of a listening address.\n","sig":null,"attributes":[{"value":"/ One of our listeners has reported the expiration of a listening address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":8823,"byte_end":8899,"line_start":231,"line_end":231,"column_start":5,"column_end":81}}]},{"kind":"StructVariant","id":{"krate":0,"index":1453},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":8986,"byte_end":9000,"line_start":234,"line_end":234,"column_start":5,"column_end":19},"name":"ListenerClosed","qualname":"::SwarmEvent::ListenerClosed","value":"SwarmEvent::ListenerClosed { addresses, reason }","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" One of the listeners gracefully closed.\n","sig":null,"attributes":[{"value":"/ One of the listeners gracefully closed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":8938,"byte_end":8981,"line_start":233,"line_end":233,"column_start":5,"column_end":48}}]},{"kind":"StructVariant","id":{"krate":0,"index":1456},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":9526,"byte_end":9539,"line_start":244,"line_end":244,"column_start":5,"column_end":18},"name":"ListenerError","qualname":"::SwarmEvent::ListenerError","value":"SwarmEvent::ListenerError { error }","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" One of the listeners reported a non-fatal error.\n","sig":null,"attributes":[{"value":"/ One of the listeners reported a non-fatal error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":9469,"byte_end":9521,"line_start":243,"line_end":243,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1458},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":9932,"byte_end":9939,"line_start":254,"line_end":254,"column_start":5,"column_end":12},"name":"Dialing","qualname":"::SwarmEvent::Dialing","value":"SwarmEvent::Dialing(PeerId)","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" A new dialing attempt has been initiated.","sig":null,"attributes":[{"value":"/ A new dialing attempt has been initiated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":9611,"byte_end":9656,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":9661,"byte_end":9664,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ A [`ConnectionEstablished`](SwarmEvent::ConnectionEstablished)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":9669,"byte_end":9735,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/ event is reported if the dialing attempt succeeds, otherwise a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":9740,"byte_end":9806,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/ [`UnreachableAddr`](SwarmEvent::UnreachableAddr) event is reported","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":9811,"byte_end":9881,"line_start":252,"line_end":252,"column_start":5,"column_end":75}},{"value":"/ with `attempts_remaining` equal to 0.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":9886,"byte_end":9927,"line_start":253,"line_end":253,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":1414},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":5146,"byte_end":5156,"line_start":148,"line_end":148,"column_start":10,"column_end":20},"name":"SwarmEvent","qualname":"::SwarmEvent","value":"pub enum SwarmEvent<TBvEv, THandleErr> {\n\n    /// Event generated by the `NetworkBehaviour`.\n    Behaviour(TBvEv),\n\n    /// A connection to the given peer has been opened.\n    ConnectionEstablished {\n        /// Identity of the peer that we have connected to.\n        peer_id: PeerId,\n        /// Endpoint of the connection that has been opened.\n        endpoint: ConnectedPoint,\n        /// Number of established connections to this peer, including the one that has just been\n        /// opened.\n        num_established: NonZeroU32,\n    },\n\n    /// A connection with the given peer has been closed,\n    /// possibly as a result of an error.\n    ConnectionClosed {\n        /// Identity of the peer that we have connected to.\n        peer_id: PeerId,\n        /// Endpoint of the connection that has been closed.\n        endpoint: ConnectedPoint,\n        /// Number of other remaining connections to this same peer.\n        num_established: u32,\n        /// Reason for the disconnection, if it was not a successful\n        /// active close.\n        cause: Option<ConnectionError<NodeHandlerWrapperError<THandleErr>>>,\n    },\n\n    /// A new connection arrived on a listener and is in the process of protocol negotiation.\n    ///\n    /// A corresponding [`ConnectionEstablished`](SwarmEvent::ConnectionEstablished),\n    /// [`BannedPeer`](SwarmEvent::BannedPeer), or\n    /// [`IncomingConnectionError`](SwarmEvent::IncomingConnectionError) event will later be\n    /// generated for this connection.\n    IncomingConnection {\n        /// Local connection address.\n        /// This address has been earlier reported with a [`NewListenAddr`](SwarmEvent::NewListenAddr)\n        /// event.\n        local_addr: Multiaddr,\n        /// Address used to send back data to the remote.\n        send_back_addr: Multiaddr,\n    },\n\n    /// An error happened on a connection during its initial handshake.\n    ///\n    /// This can include, for example, an error during the handshake of the encryption layer, or\n    /// the connection unexpectedly closed.\n    IncomingConnectionError {\n        /// Local connection address.\n        /// This address has been earlier reported with a [`NewListenAddr`](SwarmEvent::NewListenAddr)\n        /// event.\n        local_addr: Multiaddr,\n        /// Address used to send back data to the remote.\n        send_back_addr: Multiaddr,\n        /// The error that happened.\n        error: PendingConnectionError<io::Error>,\n    },\n\n    /// We connected to a peer, but we immediately closed the connection because that peer is banned.\n    BannedPeer {\n        /// Identity of the banned peer.\n        peer_id: PeerId,\n        /// Endpoint of the connection that has been closed.\n        endpoint: ConnectedPoint,\n    },\n\n    /// Tried to dial an address but it ended up being unreachaable.\n    UnreachableAddr {\n        /// `PeerId` that we were trying to reach.\n        peer_id: PeerId,\n        /// Address that we failed to reach.\n        address: Multiaddr,\n        /// Error that has been encountered.\n        error: PendingConnectionError<io::Error>,\n        /// Number of remaining connection attempts that are being tried for this peer.\n        attempts_remaining: u32,\n    },\n\n    /// Tried to dial an address but it ended up being unreachaable.\n    /// Contrary to `UnreachableAddr`, we don't know the identity of the peer that we were trying\n    /// to reach.\n    UnknownPeerUnreachableAddr {\n        /// Address that we failed to reach.\n        address: Multiaddr,\n        /// Error that has been encountered.\n        error: PendingConnectionError<io::Error>,\n    },\n\n    /// One of our listeners has reported a new local listening address.\n    NewListenAddr(Multiaddr),\n\n    /// One of our listeners has reported the expiration of a listening address.\n    ExpiredListenAddr(Multiaddr),\n\n    /// One of the listeners gracefully closed.\n    ListenerClosed {\n        /// The addresses that the listener was listening on. These addresses are now considered\n        /// expired, similar to if a [`ExpiredListenAddr`](SwarmEvent::ExpiredListenAddr) event\n        /// has been generated for each of them.\n        addresses: Vec<Multiaddr>,\n        /// Reason for the closure. Contains `Ok(())` if the stream produced `None`, or `Err`\n        /// if the stream produced an error.\n        reason: Result<(), io::Error>,\n    },\n\n    /// One of the listeners reported a non-fatal error.\n    ListenerError {\n        /// The listener error.\n        error: io::Error,\n    },\n\n    /// A new dialing attempt has been initiated.\n    ///\n    /// A [`ConnectionEstablished`](SwarmEvent::ConnectionEstablished)\n    /// event is reported if the dialing attempt succeeds, otherwise a\n    /// [`UnreachableAddr`](SwarmEvent::UnreachableAddr) event is reported\n    /// with `attempts_remaining` equal to 0.\n    Dialing(PeerId),\n}","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1424},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1458}],"decl_id":null,"docs":" Event generated by the `Swarm`.\n","sig":null,"attributes":[{"value":"/ Event generated by the `Swarm`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":5084,"byte_end":5119,"line_start":146,"line_end":146,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":933},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":10033,"byte_end":10046,"line_start":258,"line_end":258,"column_start":12,"column_end":25},"name":"ExpandedSwarm","qualname":"::ExpandedSwarm","value":"ExpandedSwarm {  }","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"decl_id":null,"docs":" Contains the state of the network, plus the way it should behave.\n","sig":null,"attributes":[{"value":"/ Contains the state of the network, plus the way it should behave.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":9952,"byte_end":10021,"line_start":257,"line_end":257,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":12769,"byte_end":12772,"line_start":338,"line_end":338,"column_start":12,"column_end":15},"name":"new","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::new","value":"pub fn new<TTransport, TMuxer>(TTransport, TBehaviour, PeerId) -> Self where\nTMuxer: StreamMuxer + Send + Sync + 'static, TMuxer::OutboundSubstream: Send +\n'static, <TMuxer as StreamMuxer>::OutboundSubstream: Send + 'static,\n<TMuxer as StreamMuxer>::Substream: Send + 'static,\nTTransport: Transport<Output = (TConnInfo, TMuxer)> + Clone + Send + Sync +\n'static, TTransport::Error: Send + Sync + 'static,\nTTransport::Listener: Send + 'static, TTransport::ListenerUpgrade: Send +\n'static, TTransport::Dial: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Builds a new `Swarm`.\n","sig":null,"attributes":[{"value":"/ Builds a new `Swarm`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":12732,"byte_end":12757,"line_start":337,"line_end":337,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":13578,"byte_end":13590,"line_start":355,"line_end":355,"column_start":12,"column_end":24},"name":"network_info","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::network_info","value":"pub fn network_info(&Self) -> NetworkInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns information about the [`Network`] underlying the `Swarm`.\n","sig":null,"attributes":[{"value":"/ Returns information about the [`Network`] underlying the `Swarm`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":13497,"byte_end":13566,"line_start":354,"line_end":354,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":13776,"byte_end":13785,"line_start":362,"line_end":362,"column_start":12,"column_end":21},"name":"listen_on","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::listen_on","value":"pub fn listen_on(&mut Self, Multiaddr)\n-> Result<ListenerId, TransportError<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Starts listening on the given address.","sig":null,"attributes":[{"value":"/ Starts listening on the given address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":13656,"byte_end":13698,"line_start":359,"line_end":359,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":13703,"byte_end":13706,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the address is not supported.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":13711,"byte_end":13764,"line_start":361,"line_end":361,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":14023,"byte_end":14038,"line_start":369,"line_end":369,"column_start":12,"column_end":27},"name":"remove_listener","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::remove_listener","value":"pub fn remove_listener(&mut Self, ListenerId) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Remove some listener.","sig":null,"attributes":[{"value":"/ Remove some listener.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":13915,"byte_end":13940,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":13945,"byte_end":13948,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` if there was a listener with this ID.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":13953,"byte_end":14011,"line_start":368,"line_end":368,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":14209,"byte_end":14218,"line_start":374,"line_end":374,"column_start":12,"column_end":21},"name":"dial_addr","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::dial_addr","value":"pub fn dial_addr(&mut Self, Multiaddr) -> Result<(), ConnectionLimit>","parent":null,"children":[],"decl_id":null,"docs":" Initiates a new dialing attempt to the given address.\n","sig":null,"attributes":[{"value":"/ Initiates a new dialing attempt to the given address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":14140,"byte_end":14197,"line_start":373,"line_end":373,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":14493,"byte_end":14497,"line_start":380,"line_end":380,"column_start":12,"column_end":16},"name":"dial","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::dial","value":"pub fn dial(&mut Self, &PeerId) -> Result<(), DialError>","parent":null,"children":[],"decl_id":null,"docs":" Initiates a new dialing attempt to the given peer.\n","sig":null,"attributes":[{"value":"/ Initiates a new dialing attempt to the given peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":14427,"byte_end":14481,"line_start":379,"line_end":379,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":15676,"byte_end":15685,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"listeners","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::listeners","value":"pub fn listeners(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that produces the list of addresses we're listening on.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that produces the list of addresses we're listening on.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":15585,"byte_end":15664,"line_start":412,"line_end":412,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":15897,"byte_end":15915,"line_start":419,"line_end":419,"column_start":12,"column_end":30},"name":"external_addresses","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::external_addresses","value":"pub fn external_addresses(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that produces the list of addresses that other nodes can use to reach\n us.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that produces the list of addresses that other nodes can use to reach","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":15780,"byte_end":15873,"line_start":417,"line_end":417,"column_start":5,"column_end":98}},{"value":"/ us.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":15878,"byte_end":15885,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16078,"byte_end":16091,"line_start":424,"line_end":424,"column_start":12,"column_end":25},"name":"local_peer_id","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::local_peer_id","value":"pub fn local_peer_id(&Self) -> &PeerId","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer ID of the swarm passed as parameter.\n","sig":null,"attributes":[{"value":"/ Returns the peer ID of the swarm passed as parameter.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16009,"byte_end":16066,"line_start":423,"line_end":423,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16334,"byte_end":16354,"line_start":432,"line_end":432,"column_start":12,"column_end":32},"name":"add_external_address","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::add_external_address","value":"pub fn add_external_address(&mut Self, Multiaddr)","parent":null,"children":[],"decl_id":null,"docs":" Adds an external address.","sig":null,"attributes":[{"value":"/ Adds an external address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16163,"byte_end":16192,"line_start":428,"line_end":428,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16197,"byte_end":16200,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ An external address is an address we are listening on but that accounts for things such as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16205,"byte_end":16299,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ NAT traversal.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16304,"byte_end":16322,"line_start":431,"line_end":431,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16670,"byte_end":16685,"line_start":439,"line_end":439,"column_start":12,"column_end":27},"name":"connection_info","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::connection_info","value":"pub fn connection_info(&mut Self, &PeerId) -> Option<TConnInfo>","parent":null,"children":[],"decl_id":null,"docs":" Returns the connection info for an arbitrary connection with the peer, or `None`\n if there is no connection to that peer.\n","sig":null,"attributes":[{"value":"/ Returns the connection info for an arbitrary connection with the peer, or `None`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16436,"byte_end":16520,"line_start":436,"line_end":436,"column_start":5,"column_end":89}},{"value":"/ if there is no connection to that peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16525,"byte_end":16568,"line_start":437,"line_end":437,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":17135,"byte_end":17146,"line_start":451,"line_end":451,"column_start":12,"column_end":23},"name":"ban_peer_id","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::ban_peer_id","value":"pub fn ban_peer_id(&mut Self, PeerId)","parent":null,"children":[],"decl_id":null,"docs":" Bans a peer by its peer ID.","sig":null,"attributes":[{"value":"/ Bans a peer by its peer ID.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16931,"byte_end":16962,"line_start":447,"line_end":447,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16967,"byte_end":16970,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Any incoming connection and any dialing attempt will immediately be rejected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":16975,"byte_end":17056,"line_start":449,"line_end":449,"column_start":5,"column_end":86}},{"value":"/ This function has no effect if the peer is already banned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":17061,"byte_end":17123,"line_start":450,"line_end":450,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":17410,"byte_end":17423,"line_start":460,"line_end":460,"column_start":12,"column_end":25},"name":"unban_peer_id","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::unban_peer_id","value":"pub fn unban_peer_id(&mut Self, PeerId)","parent":null,"children":[],"decl_id":null,"docs":" Unbans a peer.\n","sig":null,"attributes":[{"value":"/ Unbans a peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":17380,"byte_end":17398,"line_start":459,"line_end":459,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":17690,"byte_end":17700,"line_start":467,"line_end":467,"column_start":18,"column_end":28},"name":"next_event","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::next_event","value":"pub async fn next_event<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next event that happens in the `Swarm`.","sig":null,"attributes":[{"value":"/ Returns the next event that happens in the `Swarm`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":17511,"byte_end":17566,"line_start":464,"line_end":464,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":17571,"byte_end":17574,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Includes events from the `NetworkBehaviour` but also events about the connections status.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":17579,"byte_end":17672,"line_start":466,"line_end":466,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":17947,"byte_end":17951,"line_start":472,"line_end":472,"column_start":18,"column_end":22},"name":"next","qualname":"<ExpandedSwarm<TBehaviour, TInEvent, TOutEvent, THandler, TConnInfo>>::next","value":"pub async fn next<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next event produced by the [`NetworkBehaviour`].\n","sig":null,"attributes":[{"value":"/ Returns the next event produced by the [`NetworkBehaviour`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":17865,"byte_end":17929,"line_start":471,"line_end":471,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1060},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":40597,"byte_end":40616,"line_start":942,"line_end":942,"column_start":12,"column_end":31},"name":"SwarmPollParameters","qualname":"::SwarmPollParameters","value":"SwarmPollParameters {  }","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065}],"decl_id":null,"docs":" Parameters passed to `poll()`, that the `NetworkBehaviour` has access to.\n","sig":null,"attributes":[{"value":"/ Parameters passed to `poll()`, that the `NetworkBehaviour` has access to.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":40482,"byte_end":40559,"line_start":940,"line_end":940,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1075},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":41584,"byte_end":41596,"line_start":973,"line_end":973,"column_start":12,"column_end":24},"name":"SwarmBuilder","qualname":"::SwarmBuilder","value":"SwarmBuilder {  }","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081}],"decl_id":null,"docs":" A `SwarmBuilder` provides an API for configuring and constructing a `Swarm`,\n including the underlying [`Network`].\n","sig":null,"attributes":[{"value":"/ A `SwarmBuilder` provides an API for configuring and constructing a `Swarm`,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":41450,"byte_end":41530,"line_start":971,"line_end":971,"column_start":1,"column_end":81}},{"value":"/ including the underlying [`Network`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":41531,"byte_end":41572,"line_start":972,"line_end":972,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":42175,"byte_end":42178,"line_start":987,"line_end":987,"column_start":12,"column_end":15},"name":"new","qualname":"<SwarmBuilder<TBehaviour, TConnInfo>>::new","value":"pub fn new<TTrans, TMuxer>(TTrans, TBehaviour, PeerId) -> Self where\nTMuxer: StreamMuxer + Send + Sync + 'static, TMuxer::OutboundSubstream: Send +\n'static, <TMuxer as StreamMuxer>::OutboundSubstream: Send + 'static,\n<TMuxer as StreamMuxer>::Substream: Send + 'static, TTrans: Transport<Output =\n(TConnInfo, TMuxer)> + Clone + Send + Sync + 'static, TTrans::Error: Send +\nSync + 'static, TTrans::Listener: Send + 'static,\nTTrans::ListenerUpgrade: Send + 'static, TTrans::Dial: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SwarmBuilder` from the given transport, behaviour and\n local peer ID. The `Swarm` with its underlying `Network` is obtained\n via [`SwarmBuilder::build`].\n","sig":null,"attributes":[{"value":"/ Creates a new `SwarmBuilder` from the given transport, behaviour and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":41977,"byte_end":42049,"line_start":984,"line_end":984,"column_start":5,"column_end":77}},{"value":"/ local peer ID. The `Swarm` with its underlying `Network` is obtained","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":42054,"byte_end":42126,"line_start":985,"line_end":985,"column_start":5,"column_end":77}},{"value":"/ via [`SwarmBuilder::build`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":42131,"byte_end":42163,"line_start":986,"line_end":986,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43373,"byte_end":43381,"line_start":1016,"line_end":1016,"column_start":12,"column_end":20},"name":"executor","qualname":"<SwarmBuilder<TBehaviour, TConnInfo>>::executor","value":"pub fn executor(Self, Box<Executor + Send>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the `Executor` to use for spawning background tasks.","sig":null,"attributes":[{"value":"/ Configures the `Executor` to use for spawning background tasks.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43154,"byte_end":43221,"line_start":1012,"line_end":1012,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43226,"byte_end":43229,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ By default, unless another executor has been configured,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43234,"byte_end":43294,"line_start":1014,"line_end":1014,"column_start":5,"column_end":65}},{"value":"/ [`SwarmBuilder::build`] will try to set up a `ThreadPool`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43299,"byte_end":43361,"line_start":1015,"line_end":1015,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44060,"byte_end":44086,"line_start":1030,"line_end":1030,"column_start":12,"column_end":38},"name":"notify_handler_buffer_size","qualname":"<SwarmBuilder<TBehaviour, TConnInfo>>::notify_handler_buffer_size","value":"pub fn notify_handler_buffer_size(Self, NonZeroUsize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the number of events from the [`NetworkBehaviour`] in\n destination to the [`ProtocolsHandler`] that can be buffered before\n the [`Swarm`] has to wait. An individual buffer with this number of\n events exists for each individual connection.","sig":null,"attributes":[{"value":"/ Configures the number of events from the [`NetworkBehaviour`] in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43500,"byte_end":43568,"line_start":1021,"line_end":1021,"column_start":5,"column_end":73}},{"value":"/ destination to the [`ProtocolsHandler`] that can be buffered before","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43573,"byte_end":43644,"line_start":1022,"line_end":1022,"column_start":5,"column_end":76}},{"value":"/ the [`Swarm`] has to wait. An individual buffer with this number of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43649,"byte_end":43720,"line_start":1023,"line_end":1023,"column_start":5,"column_end":76}},{"value":"/ events exists for each individual connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43725,"byte_end":43774,"line_start":1024,"line_end":1024,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43779,"byte_end":43782,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ The ideal value depends on the executor used, the CPU speed, and the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43787,"byte_end":43859,"line_start":1026,"line_end":1026,"column_start":5,"column_end":77}},{"value":"/ volume of events. If this value is too low, then the [`Swarm`] will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43864,"byte_end":43935,"line_start":1027,"line_end":1027,"column_start":5,"column_end":76}},{"value":"/ be sleeping more often than necessary. Increasing this value increases","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":43940,"byte_end":44014,"line_start":1028,"line_end":1028,"column_start":5,"column_end":79}},{"value":"/ the overall memory usage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44019,"byte_end":44048,"line_start":1029,"line_end":1029,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45628,"byte_end":45656,"line_start":1058,"line_end":1058,"column_start":12,"column_end":40},"name":"connection_event_buffer_size","qualname":"<SwarmBuilder<TBehaviour, TConnInfo>>::connection_event_buffer_size","value":"pub fn connection_event_buffer_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the number of extra events from the [`ProtocolsHandler`] in\n destination to the [`NetworkBehaviour`] that can be buffered before\n the [`ProtocolsHandler`] has to go to sleep.","sig":null,"attributes":[{"value":"/ Configures the number of extra events from the [`ProtocolsHandler`] in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44211,"byte_end":44285,"line_start":1035,"line_end":1035,"column_start":5,"column_end":79}},{"value":"/ destination to the [`NetworkBehaviour`] that can be buffered before","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44290,"byte_end":44361,"line_start":1036,"line_end":1036,"column_start":5,"column_end":76}},{"value":"/ the [`ProtocolsHandler`] has to go to sleep.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44366,"byte_end":44414,"line_start":1037,"line_end":1037,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44419,"byte_end":44422,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ There exists a buffer of events received from [`ProtocolsHandler`]s","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44427,"byte_end":44498,"line_start":1039,"line_end":1039,"column_start":5,"column_end":76}},{"value":"/ that the [`NetworkBehaviour`] has yet to process. This buffer is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44503,"byte_end":44571,"line_start":1040,"line_end":1040,"column_start":5,"column_end":73}},{"value":"/ shared between all instances of [`ProtocolsHandler`]. Each instance of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44576,"byte_end":44650,"line_start":1041,"line_end":1041,"column_start":5,"column_end":79}},{"value":"/ [`ProtocolsHandler`] is guaranteed one slot in this buffer, meaning","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44655,"byte_end":44726,"line_start":1042,"line_end":1042,"column_start":5,"column_end":76}},{"value":"/ that delivering an event for the first time is guaranteed to be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44731,"byte_end":44798,"line_start":1043,"line_end":1043,"column_start":5,"column_end":72}},{"value":"/ instantaneous. Any extra event delivery, however, must wait for that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44803,"byte_end":44875,"line_start":1044,"line_end":1044,"column_start":5,"column_end":77}},{"value":"/ first event to be delivered or for an \"extra slot\" to be available.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44880,"byte_end":44951,"line_start":1045,"line_end":1045,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44956,"byte_end":44959,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ This option configures the number of such \"extra slots\" in this","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":44964,"byte_end":45031,"line_start":1047,"line_end":1047,"column_start":5,"column_end":72}},{"value":"/ shared buffer. These extra slots are assigned in a first-come,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45036,"byte_end":45102,"line_start":1048,"line_end":1048,"column_start":5,"column_end":71}},{"value":"/ first-served basis.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45107,"byte_end":45130,"line_start":1049,"line_end":1049,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45135,"byte_end":45138,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ The ideal value depends on the executor used, the CPU speed, the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45143,"byte_end":45211,"line_start":1051,"line_end":1051,"column_start":5,"column_end":73}},{"value":"/ average number of connections, and the volume of events. If this value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45216,"byte_end":45290,"line_start":1052,"line_end":1052,"column_start":5,"column_end":79}},{"value":"/ is too low, then the [`ProtocolsHandler`]s will be sleeping more often","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45295,"byte_end":45369,"line_start":1053,"line_end":1053,"column_start":5,"column_end":79}},{"value":"/ than necessary. Increasing this value increases the overall memory","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45374,"byte_end":45444,"line_start":1054,"line_end":1054,"column_start":5,"column_end":75}},{"value":"/ usage, and more importantly the latency between the moment when an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45449,"byte_end":45519,"line_start":1055,"line_end":1055,"column_start":5,"column_end":75}},{"value":"/ event is emitted and the moment when it is received by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45524,"byte_end":45586,"line_start":1056,"line_end":1056,"column_start":5,"column_end":67}},{"value":"/ [`NetworkBehaviour`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45591,"byte_end":45616,"line_start":1057,"line_end":1057,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45879,"byte_end":45904,"line_start":1065,"line_end":1065,"column_start":12,"column_end":37},"name":"incoming_connection_limit","qualname":"<SwarmBuilder<TBehaviour, TConnInfo>>::incoming_connection_limit","value":"pub fn incoming_connection_limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a limit for the number of simultaneous incoming\n connection attempts.\n","sig":null,"attributes":[{"value":"/ Configures a limit for the number of simultaneous incoming","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45776,"byte_end":45838,"line_start":1063,"line_end":1063,"column_start":5,"column_end":67}},{"value":"/ connection attempts.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":45843,"byte_end":45867,"line_start":1064,"line_end":1064,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":46113,"byte_end":46138,"line_start":1072,"line_end":1072,"column_start":12,"column_end":37},"name":"outgoing_connection_limit","qualname":"<SwarmBuilder<TBehaviour, TConnInfo>>::outgoing_connection_limit","value":"pub fn outgoing_connection_limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a limit for the number of simultaneous outgoing\n connection attempts.\n","sig":null,"attributes":[{"value":"/ Configures a limit for the number of simultaneous outgoing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":46010,"byte_end":46072,"line_start":1070,"line_end":1070,"column_start":5,"column_end":67}},{"value":"/ connection attempts.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":46077,"byte_end":46101,"line_start":1071,"line_end":1071,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":46351,"byte_end":46372,"line_start":1079,"line_end":1079,"column_start":12,"column_end":33},"name":"peer_connection_limit","qualname":"<SwarmBuilder<TBehaviour, TConnInfo>>::peer_connection_limit","value":"pub fn peer_connection_limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a limit for the number of simultaneous\n established connections per peer.\n","sig":null,"attributes":[{"value":"/ Configures a limit for the number of simultaneous","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":46244,"byte_end":46297,"line_start":1077,"line_end":1077,"column_start":5,"column_end":58}},{"value":"/ established connections per peer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":46302,"byte_end":46339,"line_start":1078,"line_end":1078,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":46554,"byte_end":46559,"line_start":1085,"line_end":1085,"column_start":12,"column_end":17},"name":"build","qualname":"<SwarmBuilder<TBehaviour, TConnInfo>>::build","value":"pub fn build(Self) -> Swarm<TBehaviour, TConnInfo>","parent":null,"children":[],"decl_id":null,"docs":" Builds a `Swarm` with the current configuration.\n","sig":null,"attributes":[{"value":"/ Builds a `Swarm` with the current configuration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":46490,"byte_end":46542,"line_start":1084,"line_end":1084,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1466},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":47934,"byte_end":47940,"line_start":1127,"line_end":1127,"column_start":5,"column_end":11},"name":"Banned","qualname":"::DialError::Banned","value":"DialError::Banned","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" The peer is currently banned.\n","sig":null,"attributes":[{"value":"/ The peer is currently banned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":47896,"byte_end":47929,"line_start":1126,"line_end":1126,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1468},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48039,"byte_end":48054,"line_start":1130,"line_end":1130,"column_start":5,"column_end":20},"name":"ConnectionLimit","qualname":"::DialError::ConnectionLimit","value":"DialError::ConnectionLimit(ConnectionLimit)","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" The configured limit for simultaneous outgoing connections\n has been reached.\n","sig":null,"attributes":[{"value":"/ The configured limit for simultaneous outgoing connections","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":47946,"byte_end":48008,"line_start":1128,"line_end":1128,"column_start":5,"column_end":67}},{"value":"/ has been reached.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48013,"byte_end":48034,"line_start":1129,"line_end":1129,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1471},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48177,"byte_end":48188,"line_start":1133,"line_end":1133,"column_start":5,"column_end":16},"name":"NoAddresses","qualname":"::DialError::NoAddresses","value":"DialError::NoAddresses","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" [`NetworkBehaviour::addresses_of_peer`] returned no addresses\n for the peer to dial.\n","sig":null,"attributes":[{"value":"/ [`NetworkBehaviour::addresses_of_peer`] returned no addresses","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48077,"byte_end":48142,"line_start":1131,"line_end":1131,"column_start":5,"column_end":70}},{"value":"/ for the peer to dial.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48147,"byte_end":48172,"line_start":1132,"line_end":1132,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1465},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":47880,"byte_end":47889,"line_start":1125,"line_end":1125,"column_start":10,"column_end":19},"name":"DialError","qualname":"::DialError","value":"pub enum DialError {\n\n    /// The peer is currently banned.\n    Banned,\n\n    /// The configured limit for simultaneous outgoing connections\n    /// has been reached.\n    ConnectionLimit(ConnectionLimit),\n\n    /// [`NetworkBehaviour::addresses_of_peer`] returned no addresses\n    /// for the peer to dial.\n    NoAddresses,\n}","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1471}],"decl_id":null,"docs":" The possible failures of [`ExpandedSwarm::dial`].\n","sig":null,"attributes":[{"value":"/ The possible failures of [`ExpandedSwarm::dial`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":47800,"byte_end":47853,"line_start":1123,"line_end":1123,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48961,"byte_end":48975,"line_start":1158,"line_end":1158,"column_start":12,"column_end":26},"name":"DummyBehaviour","qualname":"::DummyBehaviour","value":"DummyBehaviour {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy implementation of [`NetworkBehaviour`] that doesn't do anything.\n","sig":null,"attributes":[{"value":"/ Dummy implementation of [`NetworkBehaviour`] that doesn't do anything.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48849,"byte_end":48923,"line_start":1156,"line_end":1156,"column_start":1,"column_end":75}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":70401,"byte_end":70423,"line_start":284,"line_end":284,"column_start":27,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73778,"byte_end":73795,"line_start":359,"line_end":359,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":75942,"byte_end":75951,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":76060,"byte_end":76069,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":78086,"byte_end":78097,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":78526,"byte_end":78537,"line_start":142,"line_end":142,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":78690,"byte_end":78705,"line_start":150,"line_end":150,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":79057,"byte_end":79072,"line_start":167,"line_end":167,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83643,"byte_end":83644,"line_start":41,"line_end":41,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84943,"byte_end":84944,"line_start":72,"line_end":72,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":86391,"byte_end":86392,"line_start":106,"line_end":106,"column_start":39,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87353,"byte_end":87364,"line_start":131,"line_end":131,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87613,"byte_end":87624,"line_start":140,"line_end":140,"column_start":80,"column_end":91},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87962,"byte_end":87973,"line_start":150,"line_end":150,"column_start":78,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/dummy.rs","byte_start":111139,"byte_end":111160,"line_start":39,"line_end":39,"column_start":18,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/dummy.rs","byte_start":111305,"byte_end":111326,"line_start":47,"line_end":47,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_in.rs","byte_start":114537,"byte_end":114547,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_in.rs","byte_start":114840,"byte_end":114850,"line_start":50,"line_end":50,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_out.rs","byte_start":118698,"byte_end":118709,"line_start":38,"line_end":38,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_out.rs","byte_start":118964,"byte_end":118975,"line_start":48,"line_end":48,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":123557,"byte_end":123582,"line_start":55,"line_end":55,"column_start":25,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":123927,"byte_end":123952,"line_start":68,"line_end":68,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":126944,"byte_end":126967,"line_start":146,"line_end":146,"column_start":27,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":127117,"byte_end":127140,"line_start":152,"line_end":152,"column_start":29,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":127524,"byte_end":127547,"line_start":165,"line_end":165,"column_start":29,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":127868,"byte_end":127886,"line_start":177,"line_end":177,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":138033,"byte_end":138047,"line_start":59,"line_end":59,"column_start":5,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":139739,"byte_end":139753,"line_start":109,"line_end":109,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":140105,"byte_end":140119,"line_start":122,"line_end":122,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":143780,"byte_end":143800,"line_start":238,"line_end":238,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":146629,"byte_end":146655,"line_start":49,"line_end":49,"column_start":24,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":146933,"byte_end":146959,"line_start":59,"line_end":59,"column_start":49,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":147945,"byte_end":147967,"line_start":87,"line_end":87,"column_start":24,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":148233,"byte_end":148255,"line_start":97,"line_end":97,"column_start":45,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":160707,"byte_end":160719,"line_start":57,"line_end":57,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":160974,"byte_end":160986,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":161567,"byte_end":161579,"line_start":87,"line_end":87,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":169522,"byte_end":169538,"line_start":275,"line_end":275,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":169798,"byte_end":169814,"line_start":288,"line_end":288,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":170388,"byte_end":170404,"line_start":306,"line_end":306,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171217,"byte_end":171233,"line_start":334,"line_end":334,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171480,"byte_end":171484,"line_start":346,"line_end":346,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171908,"byte_end":171915,"line_start":365,"line_end":365,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":172023,"byte_end":172030,"line_start":371,"line_end":371,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":172300,"byte_end":172307,"line_start":383,"line_end":383,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":172798,"byte_end":172805,"line_start":401,"line_end":401,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":173557,"byte_end":173564,"line_start":424,"line_end":424,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":174940,"byte_end":174963,"line_start":471,"line_end":471,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":175127,"byte_end":175150,"line_start":478,"line_end":478,"column_start":23,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":175447,"byte_end":175470,"line_start":488,"line_end":488,"column_start":23,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99500,"byte_end":99517,"line_start":249,"line_end":249,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":102306,"byte_end":102327,"line_start":341,"line_end":341,"column_start":5,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105584,"byte_end":105607,"line_start":429,"line_end":429,"column_start":16,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":106139,"byte_end":106162,"line_start":443,"line_end":443,"column_start":33,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":106683,"byte_end":106706,"line_start":460,"line_end":460,"column_start":33,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108181,"byte_end":108182,"line_start":505,"line_end":505,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108805,"byte_end":108814,"line_start":530,"line_end":530,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":109022,"byte_end":109031,"line_start":540,"line_end":540,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":109153,"byte_end":109162,"line_start":546,"line_end":546,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177435,"byte_end":177441,"line_start":49,"line_end":49,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177963,"byte_end":177969,"line_start":66,"line_end":66,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":178105,"byte_end":178111,"line_start":72,"line_end":72,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":181250,"byte_end":181256,"line_start":165,"line_end":165,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":181679,"byte_end":181701,"line_start":181,"line_end":181,"column_start":39,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":182526,"byte_end":182544,"line_start":207,"line_end":207,"column_start":35,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":11325,"byte_end":11338,"line_start":296,"line_end":296,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":11664,"byte_end":11677,"line_start":309,"line_end":309,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":11985,"byte_end":11998,"line_start":320,"line_end":320,"column_start":5,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":12223,"byte_end":12236,"line_start":328,"line_end":328,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":1000},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":39003,"byte_end":39016,"line_start":905,"line_end":905,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":39985,"byte_end":39998,"line_start":927,"line_end":927,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":40797,"byte_end":40816,"line_start":949,"line_end":949,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":41811,"byte_end":41823,"line_start":980,"line_end":980,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48214,"byte_end":48223,"line_start":1136,"line_end":1136,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48593,"byte_end":48602,"line_start":1146,"line_end":1146,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":49007,"byte_end":49021,"line_start":1161,"line_end":1161,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2798,"byte_end":2815,"line_start":62,"line_end":62,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":146}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":90673,"byte_end":90678,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":489}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":2825,"byte_end":2831,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":752}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":60077,"byte_end":60081,"line_start":55,"line_end":55,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":18}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":70401,"byte_end":70423,"line_start":284,"line_end":284,"column_start":27,"column_end":49},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/behaviour.rs","byte_start":73778,"byte_end":73795,"line_start":359,"line_end":359,"column_start":18,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1152},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":75942,"byte_end":75951,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1164},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":76060,"byte_end":76069,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":78086,"byte_end":78097,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1187},"to":{"krate":2,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":78526,"byte_end":78537,"line_start":142,"line_end":142,"column_start":32,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1187},"to":{"krate":2,"index":5237}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":78690,"byte_end":78705,"line_start":150,"line_end":150,"column_start":19,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/registry.rs","byte_start":79057,"byte_end":79072,"line_start":167,"line_end":167,"column_start":28,"column_end":43},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":5237}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83174,"byte_end":83178,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":83643,"byte_end":83644,"line_start":41,"line_end":41,"column_start":29,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":97},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84279,"byte_end":84294,"line_start":60,"line_end":60,"column_start":32,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":92},"to":{"krate":0,"index":101}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":84943,"byte_end":84944,"line_start":72,"line_end":72,"column_start":40,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":107},"to":{"krate":0,"index":101}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":85739,"byte_end":85754,"line_start":94,"line_end":94,"column_start":31,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":92},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":86391,"byte_end":86392,"line_start":106,"line_end":106,"column_start":39,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":119},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87353,"byte_end":87364,"line_start":131,"line_end":131,"column_start":51,"column_end":62},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":125},"to":{"krate":18,"index":3047}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87613,"byte_end":87624,"line_start":140,"line_end":140,"column_start":80,"column_end":91},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":125},"to":{"krate":18,"index":3068}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/upgrade.rs","byte_start":87962,"byte_end":87973,"line_start":150,"line_end":150,"column_start":78,"column_end":89},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":125},"to":{"krate":18,"index":3051}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/dummy.rs","byte_start":111139,"byte_end":111160,"line_start":39,"line_end":39,"column_start":18,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1199},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/dummy.rs","byte_start":111305,"byte_end":111326,"line_start":47,"line_end":47,"column_start":27,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1199},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_in.rs","byte_start":114537,"byte_end":114547,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_in.rs","byte_start":114840,"byte_end":114850,"line_start":50,"line_end":50,"column_start":56,"column_end":66},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":199},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_out.rs","byte_start":118698,"byte_end":118709,"line_start":38,"line_end":38,"column_start":27,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/map_out.rs","byte_start":118964,"byte_end":118975,"line_start":48,"line_end":48,"column_start":57,"column_end":68},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":245},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":123557,"byte_end":123582,"line_start":55,"line_end":55,"column_start":25,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":123927,"byte_end":123952,"line_start":68,"line_end":68,"column_start":9,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":310},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":126944,"byte_end":126967,"line_start":146,"line_end":146,"column_start":27,"column_end":50},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":127117,"byte_end":127140,"line_start":152,"line_end":152,"column_start":29,"column_end":52},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":127524,"byte_end":127547,"line_start":165,"line_end":165,"column_start":29,"column_end":52},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1205},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/node_handler.rs","byte_start":127868,"byte_end":127886,"line_start":177,"line_end":177,"column_start":43,"column_end":61},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":322},"to":{"krate":18,"index":100}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":138033,"byte_end":138047,"line_start":59,"line_end":59,"column_start":5,"column_end":19},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":139739,"byte_end":139753,"line_start":109,"line_end":109,"column_start":9,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":140105,"byte_end":140119,"line_start":122,"line_end":122,"column_start":56,"column_end":70},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":377},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/one_shot.rs","byte_start":143780,"byte_end":143800,"line_start":238,"line_end":238,"column_start":18,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":146629,"byte_end":146655,"line_start":49,"line_end":49,"column_start":24,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":146933,"byte_end":146959,"line_start":59,"line_end":59,"column_start":49,"column_end":75},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1220},"to":{"krate":0,"index":733}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":147945,"byte_end":147967,"line_start":87,"line_end":87,"column_start":24,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/select.rs","byte_start":148233,"byte_end":148255,"line_start":97,"line_end":97,"column_start":45,"column_end":67},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1233},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":160707,"byte_end":160719,"line_start":57,"line_end":57,"column_start":27,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":160974,"byte_end":160986,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":161567,"byte_end":161579,"line_start":87,"line_end":87,"column_start":33,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":169522,"byte_end":169538,"line_start":275,"line_end":275,"column_start":27,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":169798,"byte_end":169814,"line_start":288,"line_end":288,"column_start":12,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":170388,"byte_end":170404,"line_start":306,"line_end":306,"column_start":37,"column_end":53},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1254},"to":{"krate":0,"index":733}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171217,"byte_end":171233,"line_start":334,"line_end":334,"column_start":40,"column_end":56},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1262},"to":{"krate":18,"index":3042}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171480,"byte_end":171484,"line_start":346,"line_end":346,"column_start":16,"column_end":20},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":171908,"byte_end":171915,"line_start":365,"line_end":365,"column_start":12,"column_end":19},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":172023,"byte_end":172030,"line_start":371,"line_end":371,"column_start":27,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1281},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":172300,"byte_end":172307,"line_start":383,"line_end":383,"column_start":32,"column_end":39},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1281},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":172798,"byte_end":172805,"line_start":401,"line_end":401,"column_start":35,"column_end":42},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1281},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":173557,"byte_end":173564,"line_start":424,"line_end":424,"column_start":36,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1281},"to":{"krate":0,"index":101}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":174940,"byte_end":174963,"line_start":471,"line_end":471,"column_start":6,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":175127,"byte_end":175150,"line_start":478,"line_end":478,"column_start":23,"column_end":46},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler/multi.rs","byte_start":175447,"byte_end":175470,"line_start":488,"line_end":488,"column_start":23,"column_end":46},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1289},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":93192,"byte_end":93196,"line_start":102,"line_end":102,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":99500,"byte_end":99517,"line_start":249,"line_end":249,"column_start":23,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":102306,"byte_end":102327,"line_start":341,"line_end":341,"column_start":5,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":105584,"byte_end":105607,"line_start":429,"line_end":429,"column_start":16,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":106139,"byte_end":106162,"line_start":443,"line_end":443,"column_start":33,"column_end":56},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":106683,"byte_end":106706,"line_start":460,"line_end":460,"column_start":33,"column_end":56},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1382},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":107108,"byte_end":107112,"line_start":474,"line_end":474,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":733}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108181,"byte_end":108182,"line_start":505,"line_end":505,"column_start":34,"column_end":35},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":741},"to":{"krate":0,"index":733}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":108805,"byte_end":108814,"line_start":530,"line_end":530,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":109022,"byte_end":109031,"line_start":540,"line_end":540,"column_start":21,"column_end":30},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1394},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/protocols_handler.rs","byte_start":109153,"byte_end":109162,"line_start":546,"line_end":546,"column_start":14,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1394},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177435,"byte_end":177441,"line_start":49,"line_end":49,"column_start":18,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":177963,"byte_end":177969,"line_start":66,"line_end":66,"column_start":47,"column_end":53},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":178105,"byte_end":178111,"line_start":72,"line_end":72,"column_start":39,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":785},"to":{"krate":0,"index":18}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":181250,"byte_end":181256,"line_start":165,"line_end":165,"column_start":67,"column_end":73},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":785},"to":{"krate":0,"index":46}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":181679,"byte_end":181701,"line_start":181,"line_end":181,"column_start":39,"column_end":61},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":820},"to":{"krate":0,"index":733}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/toggle.rs","byte_start":182526,"byte_end":182544,"line_start":207,"line_end":207,"column_start":35,"column_end":53},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":829},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":11325,"byte_end":11338,"line_start":296,"line_end":296,"column_start":5,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":11664,"byte_end":11677,"line_start":309,"line_end":309,"column_start":5,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":11985,"byte_end":11998,"line_start":320,"line_end":320,"column_start":5,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":12223,"byte_end":12236,"line_start":328,"line_end":328,"column_start":5,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":39003,"byte_end":39016,"line_start":905,"line_end":905,"column_start":5,"column_end":18},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":933},"to":{"krate":65,"index":68}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":39985,"byte_end":39998,"line_start":927,"line_end":927,"column_start":5,"column_end":18},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":933},"to":{"krate":65,"index":82}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":40797,"byte_end":40816,"line_start":949,"line_end":949,"column_start":29,"column_end":48},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1060},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":41811,"byte_end":41823,"line_start":980,"line_end":980,"column_start":29,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48214,"byte_end":48223,"line_start":1136,"line_end":1136,"column_start":23,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":48593,"byte_end":48602,"line_start":1146,"line_end":1146,"column_start":23,"column_end":32},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1465},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/libp2p-swarm-0.22.0/src/lib.rs","byte_start":49007,"byte_end":49021,"line_start":1161,"line_end":1161,"column_start":27,"column_end":41},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1475},"to":{"krate":0,"index":18}}]}