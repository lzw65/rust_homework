{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_core","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"base58\"","--cfg","feature=\"blake2-rfc\"","--cfg","feature=\"dyn-clonable\"","--cfg","feature=\"ed25519-dalek\"","--cfg","feature=\"full_crypto\"","--cfg","feature=\"futures\"","--cfg","feature=\"hex\"","--cfg","feature=\"impl-serde\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libsecp256k1\"","--cfg","feature=\"merlin\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"rand\"","--cfg","feature=\"regex\"","--cfg","feature=\"schnorrkel\"","--cfg","feature=\"serde\"","--cfg","feature=\"sha2\"","--cfg","feature=\"sp-externalities\"","--cfg","feature=\"std\"","--cfg","feature=\"substrate-bip39\"","--cfg","feature=\"tiny-bip39\"","--cfg","feature=\"tiny-keccak\"","--cfg","feature=\"twox-hash\"","--cfg","feature=\"wasmi\"","-C","metadata=717447d3c8b452e7","-C","extra-filename=-717447d3c8b452e7","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps","--extern","base58=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libbase58-dee350ad3f1016f5.rmeta","--extern","blake2_rfc=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libblake2_rfc-c62926270c6e9002.rmeta","--extern","byteorder=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libbyteorder-9a9005e86b0e17f6.rmeta","--extern","derive_more=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libderive_more-8dff86660ecb1a07.so","--extern","dyn_clonable=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libdyn_clonable-a8d332a2e4d82569.rmeta","--extern","ed25519_dalek=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libed25519_dalek-6bfafac94aa5f218.rmeta","--extern","futures=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libfutures-b11688f7a6773eba.rmeta","--extern","hash_db=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libhash_db-17ba13a151e0a3ca.rmeta","--extern","hash256_std_hasher=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libhash256_std_hasher-b4c02c38fb84c46f.rmeta","--extern","hex=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libhex-f2250c6e739933f1.rmeta","--extern","impl_serde=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libimpl_serde-548d03df9fc9076c.rmeta","--extern","lazy_static=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/liblazy_static-d07addd12a8987b7.rmeta","--extern","secp256k1=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsecp256k1-b3bd6db73746818e.rmeta","--extern","log=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/liblog-e2edfe49f297c73c.rmeta","--extern","merlin=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libmerlin-69740925f2a33dab.rmeta","--extern","num_traits=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libnum_traits-46b732eafcd58ded.rmeta","--extern","codec=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libparity_scale_codec-c2a3c300da64cba4.rmeta","--extern","parity_util_mem=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libparity_util_mem-0982b16c8cc415a5.rmeta","--extern","parking_lot=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libparking_lot-630a5497b3c4f85c.rmeta","--extern","primitive_types=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libprimitive_types-1cecd31dab5b394c.rmeta","--extern","rand=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/librand-228073a7435082b8.rmeta","--extern","regex=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libregex-b505e769025655e2.rmeta","--extern","schnorrkel=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libschnorrkel-9f08bad1e525d748.rmeta","--extern","secrecy=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsecrecy-7d513f62b315d87d.rmeta","--extern","serde=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libserde-80263e68ba500d78.rmeta","--extern","sha2=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsha2-c0fd2da93b9f4dc9.rmeta","--extern","sp_debug_derive=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsp_debug_derive-833f87711d0c6e40.so","--extern","sp_externalities=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsp_externalities-f1ab6969bc7bb774.rmeta","--extern","sp_runtime_interface=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsp_runtime_interface-c16135e1d5221946.rmeta","--extern","sp_std=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsp_std-e8e779e008c5c2c6.rmeta","--extern","sp_storage=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsp_storage-7829d328d902c6ec.rmeta","--extern","substrate_bip39=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsubstrate_bip39-16e2711e90729506.rmeta","--extern","bip39=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libbip39-c827028750e2eff5.rmeta","--extern","tiny_keccak=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libtiny_keccak-b075bbe4c65d7b6e.rmeta","--extern","twox_hash=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libtwox_hash-7b99fd7bfc45fe05.rmeta","--extern","wasmi=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libwasmi-197453e0f6c238e3.rmeta","--extern","zeroize=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libzeroize-815cc0d574a9e3ca.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/template/target/rls/debug/deps/libsp_core-717447d3c8b452e7.rmeta"},"prelude":{"crate_id":{"name":"sp_core","disambiguator":[11528989304794749901,4991667551486174003]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":18,"id":{"name":"sp_runtime_interface","disambiguator":[12255499159526350672,1465949469223168246]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":19,"id":{"name":"sp_wasm_interface","disambiguator":[1572342640069422977,5885890102663370953]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":20,"id":{"name":"sp_std","disambiguator":[7356154292131214206,15539128417196248828]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":21,"id":{"name":"parity_scale_codec","disambiguator":[16439007312830197035,13769093477079864056]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":22,"id":{"name":"parity_scale_codec_derive","disambiguator":[15916895702609288415,13390909414312069258]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":23,"id":{"name":"arrayvec","disambiguator":[9711399210076819589,6533224003713073282]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":24,"id":{"name":"byte_slice_cast","disambiguator":[7351640255773626293,2315590138104183949]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":25,"id":{"name":"serde","disambiguator":[18094986483354249175,15403000118412511765]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":26,"id":{"name":"serde_derive","disambiguator":[2422799003874411447,4301428410593763920]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":27,"id":{"name":"impl_trait_for_tuples","disambiguator":[13508714756144950212,10399417239549626737]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":28,"id":{"name":"wasmi","disambiguator":[14702682962039512728,8205603541115655459]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":29,"id":{"name":"memory_units","disambiguator":[2681920765984350785,12479645465886095865]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":30,"id":{"name":"parity_wasm","disambiguator":[3627318675752641491,16087573038623804516]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":31,"id":{"name":"wasmi_validation","disambiguator":[10122444132145811748,13686239439309676495]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":32,"id":{"name":"num_rational","disambiguator":[14874358685442605711,14454857550384661125]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":33,"id":{"name":"num_bigint","disambiguator":[10424519725353920175,15970225686228915190]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":34,"id":{"name":"num_integer","disambiguator":[7545622164281545846,2648898713402766561]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","num":35,"id":{"name":"num_traits","disambiguator":[215404550585587115,5285806180049352428]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":36,"id":{"name":"libc","disambiguator":[6571333170903906260,2103687221578517612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":37,"id":{"name":"sp_tracing","disambiguator":[126940985002760439,9833769351350342315]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":38,"id":{"name":"tracing_core","disambiguator":[11099356479621910520,18239274797054692367]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":39,"id":{"name":"lazy_static","disambiguator":[16863586403248268720,14388819080293591203]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":40,"id":{"name":"tracing","disambiguator":[3149344748273194146,14186679869154291241]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":41,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":42,"id":{"name":"tracing_attributes","disambiguator":[7168521433842290992,2127477278266717051]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":43,"id":{"name":"pin_project_lite","disambiguator":[11050117765846224188,12097442257352640106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":44,"id":{"name":"tracing_subscriber","disambiguator":[9358978854053975941,10302906392016292032]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":45,"id":{"name":"regex","disambiguator":[14166398965641423822,8934033390557199130]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":46,"id":{"name":"aho_corasick","disambiguator":[15910827016742496248,14514165624868714725]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":47,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":48,"id":{"name":"regex_syntax","disambiguator":[10387838999179421385,14884883596696298333]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":49,"id":{"name":"thread_local","disambiguator":[972737615355812521,3494330021733074280]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":50,"id":{"name":"matchers","disambiguator":[16148120748263327968,10793795200785214139]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":51,"id":{"name":"regex_automata","disambiguator":[6713063222348330078,15962450321991702012]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":52,"id":{"name":"byteorder","disambiguator":[14496735423178217807,13585885797689701047]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":53,"id":{"name":"ansi_term","disambiguator":[18134670208497847193,6469936381989789516]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":54,"id":{"name":"tracing_log","disambiguator":[12555983769818244310,6947546561298633655]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":55,"id":{"name":"log","disambiguator":[7636163145545913312,4986669806278621293]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":56,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":57,"id":{"name":"serde_json","disambiguator":[13564730519325168607,8931654559015479844]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":58,"id":{"name":"itoa","disambiguator":[708245801620839046,10644891861074126777]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":59,"id":{"name":"ryu","disambiguator":[2595139073293063990,3633285781182786758]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":60,"id":{"name":"tracing_serde","disambiguator":[11704797471514300989,6477851010748340264]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":61,"id":{"name":"sharded_slab","disambiguator":[1434945501934548753,1609764728048645911]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":62,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":63,"id":{"name":"chrono","disambiguator":[1398100316059925436,10467824243359959529]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":64,"id":{"name":"time","disambiguator":[8823501580382950712,2504982711049837973]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":65,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[13822519134176450310,2862860596345121761]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":66,"id":{"name":"sp_externalities","disambiguator":[18150108195161110747,13250564693672382873]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":67,"id":{"name":"sp_storage","disambiguator":[12878955236357233593,16822974782930621063]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":68,"id":{"name":"sp_debug_derive","disambiguator":[11752057424767612336,6988741196861483299]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":69,"id":{"name":"ref_cast","disambiguator":[17238424032127906489,14681179534522775997]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":70,"id":{"name":"ref_cast_impl","disambiguator":[4857299677253861727,8902270623010207562]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":71,"id":{"name":"impl_serde","disambiguator":[6223019066819668752,3300984703168818873]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":72,"id":{"name":"environmental","disambiguator":[17937490940284361027,13093274495722560157]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","num":73,"id":{"name":"primitive_types","disambiguator":[6962691650698255454,13234617421742094078]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":74,"id":{"name":"fixed_hash","disambiguator":[10245915055372472413,1069574987168551768]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":75,"id":{"name":"static_assertions","disambiguator":[3780011359165158122,3262507017755003872]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":76,"id":{"name":"rustc_hex","disambiguator":[10677294477045725496,7865879812543119472]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":77,"id":{"name":"rand","disambiguator":[7383846236653092870,5177629652404358757]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":78,"id":{"name":"rand_core","disambiguator":[7787386706198440185,12678578198977233203]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":79,"id":{"name":"getrandom","disambiguator":[12258613803940040387,911838537080231532]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":80,"id":{"name":"rand_chacha","disambiguator":[4434170198255513034,5056478396886919284]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":81,"id":{"name":"ppv_lite86","disambiguator":[4955318928114684575,7768061473571892432]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":82,"id":{"name":"rand_pcg","disambiguator":[16660534335728405525,7074470424998610614]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":83,"id":{"name":"uint","disambiguator":[16896315795860882296,16425098083545408739]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":84,"id":{"name":"crunchy","disambiguator":[8074030940710953961,6579732958665489341]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","num":85,"id":{"name":"impl_codec","disambiguator":[11443448416482552248,8414137674207687421]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":86,"id":{"name":"blake2_rfc","disambiguator":[16318291045264156809,15238637185383600405]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":87,"id":{"name":"arrayvec","disambiguator":[13122490319398419543,2245831403817998155]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":88,"id":{"name":"nodrop","disambiguator":[15847319047609925228,7892947817709334700]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":89,"id":{"name":"constant_time_eq","disambiguator":[4123012020743147552,17233470839404695501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":90,"id":{"name":"sha2","disambiguator":[2453755181374717418,14347587692546718153]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":91,"id":{"name":"block_buffer","disambiguator":[16942864271414254883,5806726910624965455]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":92,"id":{"name":"block_padding","disambiguator":[6536457226507187524,13096456614147870598]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":93,"id":{"name":"byte_tools","disambiguator":[4563776192090798664,13975107662144777646]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":94,"id":{"name":"generic_array","disambiguator":[10217328049382864786,4581712530308178966]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":95,"id":{"name":"typenum","disambiguator":[2877625186163250866,4188862493781366168]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":96,"id":{"name":"fake_simd","disambiguator":[8529024942259881634,1036883736573479363]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":97,"id":{"name":"opaque_debug","disambiguator":[14296233586290889095,7185983566499738172]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":98,"id":{"name":"digest","disambiguator":[10339741361097660047,3253664700456863542]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":99,"id":{"name":"tiny_keccak","disambiguator":[8951611112105442366,1965224039660394079]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","num":100,"id":{"name":"twox_hash","disambiguator":[7304964477320420634,14353450951517215289]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":101,"id":{"name":"parking_lot","disambiguator":[4673953683555930918,2566291569203134280]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":102,"id":{"name":"lock_api","disambiguator":[12216129644845520116,17168985521050561292]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":103,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":104,"id":{"name":"parking_lot_core","disambiguator":[9723357634030298779,6709165033563235635]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":105,"id":{"name":"base58","disambiguator":[1021050924381740148,14694021983045483675]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":106,"id":{"name":"zeroize","disambiguator":[12293724131559688162,14607591128595310952]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":107,"id":{"name":"zeroize_derive","disambiguator":[2502408763374724958,13277304647653553031]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":108,"id":{"name":"secrecy","disambiguator":[17095926779506074658,7537668124013333220]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":109,"id":{"name":"ed25519_dalek","disambiguator":[15558391115965967113,3378155016804440964]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":110,"id":{"name":"ed25519","disambiguator":[17902604484033039668,17597880322881036383]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":111,"id":{"name":"signature","disambiguator":[11156352833949250189,12745597200273491384]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":112,"id":{"name":"curve25519_dalek","disambiguator":[2809248406966777197,8813816561018099626]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":113,"id":{"name":"digest","disambiguator":[7153347457544459114,4850652739674458903]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":114,"id":{"name":"generic_array","disambiguator":[785913366860281496,3566111910551851268]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":115,"id":{"name":"subtle","disambiguator":[17342818449220861691,9110388592586064331]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":116,"id":{"name":"sha2","disambiguator":[1377922229528131517,491842461206503580]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":117,"id":{"name":"block_buffer","disambiguator":[5863490318768043264,9384554601350983024]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":118,"id":{"name":"opaque_debug","disambiguator":[5955724391880543345,12225655711726523850]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":119,"id":{"name":"cpuid_bool","disambiguator":[3944863459372053080,10012978824416111698]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":120,"id":{"name":"substrate_bip39","disambiguator":[17869869569785452858,17634889153902495303]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":121,"id":{"name":"hmac","disambiguator":[13299399138808770209,8486335613303949460]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":122,"id":{"name":"crypto_mac","disambiguator":[5021103083656845048,9272942338553678022]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":123,"id":{"name":"subtle","disambiguator":[2461963045928777698,9783036260425898804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":124,"id":{"name":"pbkdf2","disambiguator":[1585251910033992458,4658055053388768448]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","num":125,"id":{"name":"schnorrkel","disambiguator":[16756806575561678970,14458639493351552668]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":126,"id":{"name":"arrayref","disambiguator":[12864533597306545026,8294063698849415262]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":127,"id":{"name":"curve25519_dalek","disambiguator":[6977723647751213875,9340163827551043317]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","num":128,"id":{"name":"merlin","disambiguator":[9377376087280658574,8799116673561925753]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":129,"id":{"name":"keccak","disambiguator":[7922441978553466502,10628234470639316489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":130,"id":{"name":"bip39","disambiguator":[1314823592052820078,5424826910968609762]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":131,"id":{"name":"failure","disambiguator":[14582756781862167549,11010751447158768529]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":132,"id":{"name":"failure_derive","disambiguator":[16915148327015633678,6325708317200431250]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":133,"id":{"name":"backtrace","disambiguator":[9482193228311631792,18299589283485015896]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":134,"id":{"name":"rustc_demangle","disambiguator":[4050923033623787977,6585868120045361612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":135,"id":{"name":"addr2line","disambiguator":[3660529096934478798,18165035533582110625]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":136,"id":{"name":"gimli","disambiguator":[467126543121056434,10447895090847301584]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":137,"id":{"name":"object","disambiguator":[12217760478832808573,5860930654909093820]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":138,"id":{"name":"miniz_oxide","disambiguator":[17514238117289429065,16538556448136967903]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":139,"id":{"name":"adler","disambiguator":[10300648466069169448,3652155315817441043]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":140,"id":{"name":"rustc_hash","disambiguator":[2899680881299965521,3351650253772854689]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":141,"id":{"name":"once_cell","disambiguator":[14043164444755290385,2267165041750352920]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":142,"id":{"name":"parking_lot","disambiguator":[13413556939081280175,6595608378640516759]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":143,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":144,"id":{"name":"lock_api","disambiguator":[1370039747192521928,13370481355962836312]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":145,"id":{"name":"parking_lot_core","disambiguator":[6910326554005380636,13334944336695677100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":146,"id":{"name":"unicode_normalization","disambiguator":[5195362221549747439,14521615614827495836]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":147,"id":{"name":"tinyvec","disambiguator":[14392653114268736918,7149426386502746538]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","num":148,"id":{"name":"tinyvec_macros","disambiguator":[12069190721701906036,1989476166457901195]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","num":149,"id":{"name":"secp256k1","disambiguator":[7408403086072926232,10619138547561338344]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","num":150,"id":{"name":"hmac_drbg","disambiguator":[2354928866440715200,11965278983472350123]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hasher.rs","num":151,"id":{"name":"hash_db","disambiguator":[1694494872242499477,7973777796579231756]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hasher.rs","num":152,"id":{"name":"hash256_std_hasher","disambiguator":[6334138255241792746,1846295599312392070]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","num":153,"id":{"name":"parity_util_mem","disambiguator":[3040824742387538142,13160465756699134223]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","num":154,"id":{"name":"parity_util_mem_derive","disambiguator":[18323117741153977268,3575845138050348775]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","num":155,"id":{"name":"hashbrown","disambiguator":[8514644902414888020,14821523315265927041]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","num":156,"id":{"name":"ahash","disambiguator":[11645240038511292298,1901198331339866248]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":157,"id":{"name":"derive_more","disambiguator":[2698756104843969994,14444477136067550206]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":158,"id":{"name":"dyn_clonable","disambiguator":[8242438631393957323,14003146638030063325]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":159,"id":{"name":"dyn_clone","disambiguator":[4691791614177411806,10864154608713969261]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":160,"id":{"name":"dyn_clonable_impl","disambiguator":[4615130658418671392,6958782800412037695]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","num":161,"id":{"name":"hex","disambiguator":[1554532179233287652,7706981720287221831]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":162,"id":{"name":"futures","disambiguator":[7191882713553373375,5784363091584244339]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":163,"id":{"name":"futures_core","disambiguator":[18128997065636809979,13049398925650811592]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":164,"id":{"name":"futures_util","disambiguator":[6826120639398116430,15849646236374289672]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":165,"id":{"name":"pin_utils","disambiguator":[14006933666536538846,10325894616585527374]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":166,"id":{"name":"proc_macro_hack","disambiguator":[16105205298844134494,461428951662562663]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":167,"id":{"name":"futures_task","disambiguator":[17591182617236407828,908714568475142235]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":168,"id":{"name":"futures_sink","disambiguator":[18304585830995575034,16327236895633893015]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":169,"id":{"name":"futures_channel","disambiguator":[6517228745129513001,1111405895964483599]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":170,"id":{"name":"slab","disambiguator":[7754159738850082191,972067075306833933]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":171,"id":{"name":"futures_io","disambiguator":[8909187937396878977,2922841661346725167]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":172,"id":{"name":"futures_macro","disambiguator":[7362818316734880593,477739355724548135]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":173,"id":{"name":"futures_executor","disambiguator":[2718974542857099553,14805374385779778428]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","num":174,"id":{"name":"num_cpus","disambiguator":[17237370829952825392,8933627738761765040]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":686,"byte_end":11084,"line_start":18,"line_end":390,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":25,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1356,"byte_end":1361,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":118},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1394,"byte_end":1400,"line_start":45,"line_end":45,"column_start":17,"column_end":23},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":185},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1394,"byte_end":1400,"line_start":45,"line_end":45,"column_start":17,"column_end":23},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":21,"index":130},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1402,"byte_end":1408,"line_start":45,"line_end":45,"column_start":25,"column_end":31},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":186},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1402,"byte_end":1408,"line_start":45,"line_end":45,"column_start":25,"column_end":31},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":68,"index":43},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1437,"byte_end":1449,"line_start":47,"line_end":47,"column_start":26,"column_end":38},"alias_span":null,"name":"RuntimeDebug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":71,"index":7},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1496,"byte_end":1505,"line_start":50,"line_end":50,"column_start":21,"column_end":30},"alias_span":null,"name":"bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1617,"byte_end":1627,"line_start":56,"line_end":56,"column_start":19,"column_end":29},"alias_span":null,"name":"blake2_128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1629,"byte_end":1639,"line_start":56,"line_end":56,"column_start":31,"column_end":41},"alias_span":null,"name":"blake2_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1641,"byte_end":1648,"line_start":56,"line_end":56,"column_start":43,"column_end":50},"alias_span":null,"name":"twox_64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1650,"byte_end":1658,"line_start":56,"line_end":56,"column_start":52,"column_end":60},"alias_span":null,"name":"twox_128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1660,"byte_end":1668,"line_start":56,"line_end":56,"column_start":62,"column_end":70},"alias_span":null,"name":"twox_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1670,"byte_end":1680,"line_start":56,"line_end":56,"column_start":72,"column_end":82},"alias_span":null,"name":"keccak_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":2233},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":19882,"byte_end":19887,"line_start":41,"line_end":41,"column_start":22,"column_end":27},"alias_span":null,"name":"Deref","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":106,"index":21},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":19992,"byte_end":19999,"line_start":44,"line_end":44,"column_start":18,"column_end":25},"alias_span":null,"name":"Zeroize","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":107,"index":23},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":19992,"byte_end":19999,"line_start":44,"line_end":44,"column_start":18,"column_end":25},"alias_span":null,"name":"Zeroize","value":"","parent":{"krate":0,"index":139}},{"kind":"Use","ref_id":{"krate":108,"index":68},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20071,"byte_end":20083,"line_start":46,"line_end":46,"column_start":18,"column_end":30},"alias_span":null,"name":"ExposeSecret","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":108,"index":24},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20158,"byte_end":20170,"line_start":49,"line_end":49,"column_start":18,"column_end":30},"alias_span":null,"name":"SecretString","value":"","parent":{"krate":0,"index":116}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40273,"byte_end":40274,"line_start":723,"line_end":723,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":73,"index":1743},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141679,"byte_end":141683,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"alias_span":null,"name":"H160","value":"","parent":{"krate":0,"index":1397}},{"kind":"Use","ref_id":{"krate":73,"index":1744},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141679,"byte_end":141683,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"alias_span":null,"name":"H160","value":"","parent":{"krate":0,"index":1399}},{"kind":"Use","ref_id":{"krate":73,"index":1887},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141685,"byte_end":141689,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":1397}},{"kind":"Use","ref_id":{"krate":73,"index":1888},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141685,"byte_end":141689,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":1400}},{"kind":"Use","ref_id":{"krate":73,"index":2031},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141691,"byte_end":141695,"line_start":20,"line_end":20,"column_start":39,"column_end":43},"alias_span":null,"name":"H512","value":"","parent":{"krate":0,"index":1397}},{"kind":"Use","ref_id":{"krate":73,"index":2032},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141691,"byte_end":141695,"line_start":20,"line_end":20,"column_start":39,"column_end":43},"alias_span":null,"name":"H512","value":"","parent":{"krate":0,"index":1401}},{"kind":"Use","ref_id":{"krate":0,"index":2322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147091,"byte_end":147100,"line_start":25,"line_end":25,"column_start":24,"column_end":33},"alias_span":null,"name":"KeyTypeId","value":"","parent":{"krate":0,"index":1424}},{"kind":"Use","ref_id":{"krate":0,"index":2323},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147091,"byte_end":147100,"line_start":25,"line_end":25,"column_start":24,"column_end":33},"alias_span":null,"name":"KeyTypeId","value":"","parent":{"krate":0,"index":1440}},{"kind":"Use","ref_id":{"krate":73,"index":807},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/uint.rs","byte_start":195749,"byte_end":195753,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":1694}},{"kind":"Use","ref_id":{"krate":73,"index":808},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/uint.rs","byte_start":195749,"byte_end":195753,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":1696}},{"kind":"Use","ref_id":{"krate":73,"index":1319},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/uint.rs","byte_start":195755,"byte_end":195759,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"alias_span":null,"name":"U512","value":"","parent":{"krate":0,"index":1694}},{"kind":"Use","ref_id":{"krate":73,"index":1320},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/uint.rs","byte_start":195755,"byte_end":195759,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"alias_span":null,"name":"U512","value":"","parent":{"krate":0,"index":1697}},{"kind":"Use","ref_id":{"krate":66,"index":54},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210558,"byte_end":210571,"line_start":32,"line_end":32,"column_start":28,"column_end":41},"alias_span":null,"name":"Externalities","value":"","parent":{"krate":0,"index":1718}},{"kind":"Use","ref_id":{"krate":66,"index":87},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210573,"byte_end":210589,"line_start":32,"line_end":32,"column_start":43,"column_end":59},"alias_span":null,"name":"ExternalitiesExt","value":"","parent":{"krate":0,"index":1718}},{"kind":"Use","ref_id":{"krate":73,"index":1743},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2022,"byte_end":2026,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"H160","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":1744},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2022,"byte_end":2026,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"H160","value":"","parent":{"krate":0,"index":1887}},{"kind":"Use","ref_id":{"krate":73,"index":1887},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2028,"byte_end":2032,"line_start":78,"line_end":78,"column_start":28,"column_end":32},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":1888},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2028,"byte_end":2032,"line_start":78,"line_end":78,"column_start":28,"column_end":32},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":1888}},{"kind":"Use","ref_id":{"krate":73,"index":2031},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2034,"byte_end":2038,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"alias_span":null,"name":"H512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":2032},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2034,"byte_end":2038,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"alias_span":null,"name":"H512","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":0,"index":1402},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2040,"byte_end":2052,"line_start":78,"line_end":78,"column_start":40,"column_end":52},"alias_span":null,"name":"convert_hash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":807},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2076,"byte_end":2080,"line_start":79,"line_end":79,"column_start":22,"column_end":26},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":808},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2076,"byte_end":2080,"line_start":79,"line_end":79,"column_start":22,"column_end":26},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":1892}},{"kind":"Use","ref_id":{"krate":73,"index":1319},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2082,"byte_end":2086,"line_start":79,"line_end":79,"column_start":28,"column_end":32},"alias_span":null,"name":"U512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":1320},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2082,"byte_end":2086,"line_start":79,"line_end":79,"column_start":28,"column_end":32},"alias_span":null,"name":"U512","value":"","parent":{"krate":0,"index":1893}},{"kind":"Use","ref_id":{"krate":0,"index":3436},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2112,"byte_end":2136,"line_start":80,"line_end":80,"column_start":24,"column_end":48},"alias_span":null,"name":"ChangesTrieConfiguration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3514},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2138,"byte_end":2167,"line_start":80,"line_end":80,"column_start":50,"column_end":79},"alias_span":null,"name":"ChangesTrieConfigurationRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2073},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2219,"byte_end":2233,"line_start":82,"line_end":82,"column_start":18,"column_end":32},"alias_span":null,"name":"DeriveJunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2235,"byte_end":2239,"line_start":82,"line_end":82,"column_start":34,"column_end":38},"alias_span":null,"name":"Pair","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2241,"byte_end":2247,"line_start":82,"line_end":82,"column_start":40,"column_end":46},"alias_span":null,"name":"Public","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":151,"index":11},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2268,"byte_end":2274,"line_start":84,"line_end":84,"column_start":18,"column_end":24},"alias_span":null,"name":"Hasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2784},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2330,"byte_end":2342,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"alias_span":null,"name":"Blake2Hasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2785},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2330,"byte_end":2342,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"alias_span":null,"name":"Blake2Hasher","value":"","parent":{"krate":0,"index":1902}},{"kind":"Use","ref_id":{"krate":0,"index":2788},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2398,"byte_end":2410,"line_start":88,"line_end":88,"column_start":31,"column_end":43},"alias_span":null,"name":"KeccakHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2789},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2398,"byte_end":2410,"line_start":88,"line_end":88,"column_start":31,"column_end":43},"alias_span":null,"name":"KeccakHasher","value":"","parent":{"krate":0,"index":1903}},{"kind":"Use","ref_id":{"krate":67,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2421,"byte_end":2431,"line_start":90,"line_end":90,"column_start":9,"column_end":19},"alias_span":null,"name":"storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2468,"byte_end":2474,"line_start":93,"line_end":93,"column_start":9,"column_end":15},"alias_span":null,"name":"sp_std","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":686,"byte_end":11084,"line_start":18,"line_end":390,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":3900},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":3906},{"krate":0,"index":12},{"krate":0,"index":3908},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":3912},{"krate":0,"index":16},{"krate":0,"index":3914},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":116},{"krate":0,"index":359},{"krate":0,"index":798},{"krate":0,"index":991},{"krate":0,"index":1208},{"krate":0,"index":1397},{"krate":0,"index":1405},{"krate":0,"index":1424},{"krate":0,"index":1684},{"krate":0,"index":1694},{"krate":0,"index":1698},{"krate":0,"index":1718},{"krate":0,"index":1804},{"krate":0,"index":1876},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":4368},{"krate":0,"index":1888},{"krate":0,"index":4370},{"krate":0,"index":1889},{"krate":0,"index":4372},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":4376},{"krate":0,"index":1893},{"krate":0,"index":4378},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":4392},{"krate":0,"index":1903},{"krate":0,"index":4394},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1916},{"krate":0,"index":3672},{"krate":0,"index":3736},{"krate":0,"index":3737},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3731},{"krate":0,"index":3729},{"krate":0,"index":3715},{"krate":0,"index":3686},{"krate":0,"index":3683},{"krate":0,"index":3677},{"krate":0,"index":3675},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1926},{"krate":0,"index":3740},{"krate":0,"index":3752},{"krate":0,"index":3747},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":3762},{"krate":0,"index":3833},{"krate":0,"index":3831},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3822},{"krate":0,"index":3816},{"krate":0,"index":3806},{"krate":0,"index":3801},{"krate":0,"index":3799},{"krate":0,"index":3790},{"krate":0,"index":3784},{"krate":0,"index":3765},{"krate":0,"index":1934},{"krate":0,"index":1936},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1951},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":1954},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":3839},{"krate":0,"index":3872},{"krate":0,"index":3867},{"krate":0,"index":3858},{"krate":0,"index":3857},{"krate":0,"index":3855},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":3878},{"krate":0,"index":3896},{"krate":0,"index":3891},{"krate":0,"index":3887},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3879}],"decl_id":null,"docs":" Shareable Substrate types.\n","sig":null,"attributes":[{"value":"/ Shareable Substrate types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":686,"byte_end":716,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"warn(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":718,"byte_end":740,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hashing","qualname":"::hashing","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":81}],"decl_id":null,"docs":" Hashing functions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1517,"byte_end":1548,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/ Hashing functions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":11772,"byte_end":11794,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":11955,"byte_end":11970,"line_start":26,"line_end":26,"column_start":8,"column_end":23},"name":"blake2_512_into","qualname":"::hashing::blake2_512_into","value":"pub fn blake2_512_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 512-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 512-bit hash and place result in `dest`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":11891,"byte_end":11947,"line_start":25,"line_end":25,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12144,"byte_end":12154,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"blake2_512","qualname":"::hashing::blake2_512","value":"pub fn blake2_512(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 512-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 512-bit hash and return result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12089,"byte_end":12136,"line_start":30,"line_end":30,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12306,"byte_end":12321,"line_start":38,"line_end":38,"column_start":8,"column_end":23},"name":"blake2_256_into","qualname":"::hashing::blake2_256_into","value":"pub fn blake2_256_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 256-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 256-bit hash and place result in `dest`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12242,"byte_end":12298,"line_start":37,"line_end":37,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12495,"byte_end":12505,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"blake2_256","qualname":"::hashing::blake2_256","value":"pub fn blake2_256(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 256-bit hash and return result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12440,"byte_end":12487,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12657,"byte_end":12672,"line_start":50,"line_end":50,"column_start":8,"column_end":23},"name":"blake2_128_into","qualname":"::hashing::blake2_128_into","value":"pub fn blake2_128_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 128-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 128-bit hash and place result in `dest`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12593,"byte_end":12649,"line_start":49,"line_end":49,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12846,"byte_end":12856,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"blake2_128","qualname":"::hashing::blake2_128","value":"pub fn blake2_128(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 128-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 128-bit hash and return result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12791,"byte_end":12838,"line_start":54,"line_end":54,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":13007,"byte_end":13021,"line_start":62,"line_end":62,"column_start":8,"column_end":22},"name":"blake2_64_into","qualname":"::hashing::blake2_64_into","value":"pub fn blake2_64_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 64-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 64-bit hash and place result in `dest`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":12944,"byte_end":12999,"line_start":61,"line_end":61,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":13192,"byte_end":13201,"line_start":67,"line_end":67,"column_start":8,"column_end":17},"name":"blake2_64","qualname":"::hashing::blake2_64","value":"pub fn blake2_64(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 64-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 64-bit hash and return result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":13138,"byte_end":13184,"line_start":66,"line_end":66,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":13345,"byte_end":13357,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"twox_64_into","qualname":"::hashing::twox_64_into","value":"pub fn twox_64_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 64-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a XX 64-bit hash and place result in `dest`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":13286,"byte_end":13337,"line_start":73,"line_end":73,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":13650,"byte_end":13657,"line_start":84,"line_end":84,"column_start":8,"column_end":15},"name":"twox_64","qualname":"::hashing::twox_64","value":"pub fn twox_64(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 64-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a XX 64-bit hash and return result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":13600,"byte_end":13642,"line_start":83,"line_end":83,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":13809,"byte_end":13822,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"twox_128_into","qualname":"::hashing::twox_128_into","value":"pub fn twox_128_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 128-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a XX 128-bit hash and place result in `dest`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":13749,"byte_end":13801,"line_start":90,"line_end":90,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":14252,"byte_end":14260,"line_start":105,"line_end":105,"column_start":8,"column_end":16},"name":"twox_128","qualname":"::hashing::twox_128","value":"pub fn twox_128(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 128-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a XX 128-bit hash and return result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":14201,"byte_end":14244,"line_start":104,"line_end":104,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":14416,"byte_end":14429,"line_start":112,"line_end":112,"column_start":8,"column_end":21},"name":"twox_256_into","qualname":"::hashing::twox_256_into","value":"pub fn twox_256_into(&[u8], &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 256-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a XX 256-bit hash and place result in `dest`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":14356,"byte_end":14408,"line_start":111,"line_end":111,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":15131,"byte_end":15139,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"twox_256","qualname":"::hashing::twox_256","value":"pub fn twox_256(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a XX 256-bit hash and return result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":15080,"byte_end":15123,"line_start":133,"line_end":133,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":15290,"byte_end":15300,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"keccak_256","qualname":"::hashing::keccak_256","value":"pub fn keccak_256(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a keccak 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a keccak 256-bit hash and return result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":15235,"byte_end":15282,"line_start":140,"line_end":140,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":15508,"byte_end":15516,"line_start":150,"line_end":150,"column_start":8,"column_end":16},"name":"sha2_256","qualname":"::hashing::sha2_256","value":"pub fn sha2_256(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Do a sha2 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a sha2 256-bit hash and return result.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hashing.rs","byte_start":15455,"byte_end":15500,"line_start":149,"line_end":149,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":91},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hexdisplay","qualname":"::hexdisplay","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1978},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":1990},{"krate":0,"index":1993},{"krate":0,"index":1996},{"krate":0,"index":1999},{"krate":0,"index":2002},{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2011},{"krate":0,"index":2014},{"krate":0,"index":2017},{"krate":0,"index":2020},{"krate":0,"index":2023},{"krate":0,"index":2026},{"krate":0,"index":2029},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2038},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":115}],"decl_id":null,"docs":" Wrapper type for byte collections that outputs hex.\n","sig":null,"attributes":[{"value":"/ Wrapper type for byte collections that outputs hex.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":16367,"byte_end":16422,"line_start":18,"line_end":18,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":16494,"byte_end":16504,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"HexDisplay","qualname":"::hexdisplay::HexDisplay","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple wrapper to display hex representation of bytes.\n","sig":null,"attributes":[{"value":"/ Simple wrapper to display hex representation of bytes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":16424,"byte_end":16482,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":16634,"byte_end":16638,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"name":"from","qualname":"<HexDisplay>::from","value":"pub fn from<R: AsBytesRef>(&'a R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new instance that will display `d` as a hex string when displayed.\n","sig":null,"attributes":[{"value":"/ Create new instance that will display `d` as a hex string when displayed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":16548,"byte_end":16625,"line_start":24,"line_end":24,"column_start":2,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":106},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":17472,"byte_end":17482,"line_start":57,"line_end":57,"column_start":11,"column_end":21},"name":"AsBytesRef","qualname":"::hexdisplay::AsBytesRef","value":"AsBytesRef","parent":null,"children":[{"krate":0,"index":107}],"decl_id":null,"docs":" Simple trait to transform various types to `&[u8]`\n","sig":null,"attributes":[{"value":"/ Simple trait to transform various types to `&[u8]`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":17407,"byte_end":17461,"line_start":56,"line_end":56,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":17525,"byte_end":17537,"line_start":59,"line_end":59,"column_start":5,"column_end":17},"name":"as_bytes_ref","qualname":"::hexdisplay::AsBytesRef::as_bytes_ref","value":"pub fn as_bytes_ref(&Self) -> &[u8]","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Transform `self` into `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Transform `self` into `&[u8]`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":17486,"byte_end":17520,"line_start":58,"line_end":58,"column_start":2,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":18306,"byte_end":18318,"line_start":88,"line_end":88,"column_start":8,"column_end":20},"name":"ascii_format","qualname":"::hexdisplay::ascii_format","value":"pub fn ascii_format(&[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Format into ASCII + # + hex, suitable for storage key preimages.\n","sig":null,"attributes":[{"value":"/ Format into ASCII + # + hex, suitable for storage key preimages.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":18206,"byte_end":18274,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":18275,"byte_end":18298,"line_start":87,"line_end":87,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":116},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crypto","qualname":"::crypto","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":3966},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":3980},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":3982},{"krate":0,"index":131},{"krate":0,"index":3984},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":3996},{"krate":0,"index":139},{"krate":0,"index":3998},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":2050},{"krate":0,"index":2071},{"krate":0,"index":2069},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2073},{"krate":0,"index":2111},{"krate":0,"index":2107},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2095},{"krate":0,"index":2093},{"krate":0,"index":2087},{"krate":0,"index":2082},{"krate":0,"index":155},{"krate":0,"index":170},{"krate":0,"index":2112},{"krate":0,"index":2134},{"krate":0,"index":2133},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2125},{"krate":0,"index":173},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":2136},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2144},{"krate":0,"index":2174},{"krate":0,"index":2251},{"krate":0,"index":2249},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2240},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2252},{"krate":0,"index":2264},{"krate":0,"index":2262},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2254},{"krate":0,"index":2160},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":201},{"krate":0,"index":2265},{"krate":0,"index":2305},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2295},{"krate":0,"index":2289},{"krate":0,"index":2287},{"krate":0,"index":2277},{"krate":0,"index":2272},{"krate":0,"index":2269},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":249},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":290},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":331},{"krate":0,"index":336},{"krate":0,"index":2322},{"krate":0,"index":2378},{"krate":0,"index":2375},{"krate":0,"index":2373},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2359},{"krate":0,"index":2357},{"krate":0,"index":2354},{"krate":0,"index":2344},{"krate":0,"index":2339},{"krate":0,"index":2328},{"krate":0,"index":2326},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":2379},{"krate":0,"index":2423},{"krate":0,"index":2422},{"krate":0,"index":2419},{"krate":0,"index":2417},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2403},{"krate":0,"index":2401},{"krate":0,"index":2398},{"krate":0,"index":2388},{"krate":0,"index":2383},{"krate":0,"index":2425},{"krate":0,"index":2466},{"krate":0,"index":2464},{"krate":0,"index":2462},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2445},{"krate":0,"index":2443},{"krate":0,"index":2440},{"krate":0,"index":2434},{"krate":0,"index":2429},{"krate":0,"index":346},{"krate":0,"index":348}],"decl_id":null,"docs":" Cryptographic utilities.\n","sig":null,"attributes":[{"value":"/ Cryptographic utilities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":19320,"byte_end":19348,"line_start":19,"line_end":19,"column_start":1,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":142},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20232,"byte_end":20242,"line_start":52,"line_end":52,"column_start":11,"column_end":21},"name":"DEV_PHRASE","qualname":"::crypto::DEV_PHRASE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The root phrase for our publicly known keys.\n","sig":null,"attributes":[{"value":"/ The root phrase for our publicly known keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20173,"byte_end":20221,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":143},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20410,"byte_end":20421,"line_start":55,"line_end":55,"column_start":11,"column_end":22},"name":"DEV_ADDRESS","qualname":"::crypto::DEV_ADDRESS","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The address of the associated root phrase for our publicly known keys.\n","sig":null,"attributes":[{"value":"/ The address of the associated root phrase for our publicly known keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20325,"byte_end":20399,"line_start":54,"line_end":54,"column_start":1,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":2047},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20548,"byte_end":20558,"line_start":59,"line_end":59,"column_start":10,"column_end":20},"name":"Infallible","qualname":"::crypto::Infallible","value":"pub enum Infallible { }","parent":null,"children":[],"decl_id":null,"docs":" The infallible type.\n","sig":null,"attributes":[{"value":"/ The infallible type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20483,"byte_end":20507,"line_start":57,"line_end":57,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":144},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20744,"byte_end":20759,"line_start":64,"line_end":64,"column_start":11,"column_end":26},"name":"JUNCTION_ID_LEN","qualname":"::crypto::JUNCTION_ID_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the junction identifier. Note that this is also referred to as the\n `CHAIN_CODE_LENGTH` in the context of Schnorrkel.\n","sig":null,"attributes":[{"value":"/ The length of the junction identifier. Note that this is also referred to as the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20563,"byte_end":20647,"line_start":61,"line_end":61,"column_start":1,"column_end":85}},{"value":"/ `CHAIN_CODE_LENGTH` in the context of Schnorrkel.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20648,"byte_end":20701,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20702,"byte_end":20733,"line_start":63,"line_end":63,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20971,"byte_end":20984,"line_start":69,"line_end":69,"column_start":11,"column_end":24},"name":"UncheckedFrom","qualname":"::crypto::UncheckedFrom","value":"UncheckedFrom<T>","parent":null,"children":[{"krate":0,"index":147}],"decl_id":null,"docs":" Similar to `From`, except that the onus is on the part of the caller to ensure\n that data passed in makes sense. Basically, you're not guaranteed to get anything\n sensible out.\n","sig":null,"attributes":[{"value":"/ Similar to `From`, except that the onus is on the part of the caller to ensure","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20774,"byte_end":20856,"line_start":66,"line_end":66,"column_start":1,"column_end":83}},{"value":"/ that data passed in makes sense. Basically, you're not guaranteed to get anything","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20857,"byte_end":20942,"line_start":67,"line_end":67,"column_start":1,"column_end":86}},{"value":"/ sensible out.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20943,"byte_end":20960,"line_start":68,"line_end":68,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21179,"byte_end":21193,"line_start":73,"line_end":73,"column_start":5,"column_end":19},"name":"unchecked_from","qualname":"::crypto::UncheckedFrom::unchecked_from","value":"pub fn unchecked_from(T) -> Self","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert from an instance of `T` to Self. This is not guaranteed to be\n whatever counts as a valid instance of `T` and it's up to the caller to\n ensure that it makes sense.\n","sig":null,"attributes":[{"value":"/ Convert from an instance of `T` to Self. This is not guaranteed to be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":20991,"byte_end":21064,"line_start":70,"line_end":70,"column_start":2,"column_end":75}},{"value":"/ whatever counts as a valid instance of `T` and it's up to the caller to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21066,"byte_end":21141,"line_start":71,"line_end":71,"column_start":2,"column_end":77}},{"value":"/ ensure that it makes sense.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21143,"byte_end":21174,"line_start":72,"line_end":72,"column_start":2,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":148},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21262,"byte_end":21275,"line_start":77,"line_end":77,"column_start":11,"column_end":24},"name":"UncheckedInto","qualname":"::crypto::UncheckedInto","value":"UncheckedInto<T>","parent":null,"children":[{"krate":0,"index":150}],"decl_id":null,"docs":" The counterpart to `UncheckedFrom`.\n","sig":null,"attributes":[{"value":"/ The counterpart to `UncheckedFrom`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21212,"byte_end":21251,"line_start":76,"line_end":76,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21327,"byte_end":21341,"line_start":79,"line_end":79,"column_start":5,"column_end":19},"name":"unchecked_into","qualname":"::crypto::UncheckedInto::unchecked_into","value":"pub fn unchecked_into(Self) -> T","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" The counterpart to `unchecked_from`.\n","sig":null,"attributes":[{"value":"/ The counterpart to `unchecked_from`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21282,"byte_end":21322,"line_start":78,"line_end":78,"column_start":2,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2051},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21704,"byte_end":21717,"line_start":93,"line_end":93,"column_start":2,"column_end":15},"name":"InvalidFormat","qualname":"::crypto::SecretStringError::InvalidFormat","value":"SecretStringError::InvalidFormat","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" The overall format was invalid (e.g. the seed phrase contained symbols).\n","sig":null,"attributes":[{"value":"/ The overall format was invalid (e.g. the seed phrase contained symbols).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21626,"byte_end":21702,"line_start":92,"line_end":92,"column_start":2,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2053},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21779,"byte_end":21792,"line_start":95,"line_end":95,"column_start":2,"column_end":15},"name":"InvalidPhrase","qualname":"::crypto::SecretStringError::InvalidPhrase","value":"SecretStringError::InvalidPhrase","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" The seed phrase provided is not a valid BIP39 phrase.\n","sig":null,"attributes":[{"value":"/ The seed phrase provided is not a valid BIP39 phrase.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21720,"byte_end":21777,"line_start":94,"line_end":94,"column_start":2,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2055},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21835,"byte_end":21850,"line_start":97,"line_end":97,"column_start":2,"column_end":17},"name":"InvalidPassword","qualname":"::crypto::SecretStringError::InvalidPassword","value":"SecretStringError::InvalidPassword","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" The supplied password was invalid.\n","sig":null,"attributes":[{"value":"/ The supplied password was invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21795,"byte_end":21833,"line_start":96,"line_end":96,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2057},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21893,"byte_end":21904,"line_start":99,"line_end":99,"column_start":2,"column_end":13},"name":"InvalidSeed","qualname":"::crypto::SecretStringError::InvalidSeed","value":"SecretStringError::InvalidSeed","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" The seed is invalid (bad content).\n","sig":null,"attributes":[{"value":"/ The seed is invalid (bad content).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21853,"byte_end":21891,"line_start":98,"line_end":98,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2059},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21944,"byte_end":21961,"line_start":101,"line_end":101,"column_start":2,"column_end":19},"name":"InvalidSeedLength","qualname":"::crypto::SecretStringError::InvalidSeedLength","value":"SecretStringError::InvalidSeedLength","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" The seed has an invalid length.\n","sig":null,"attributes":[{"value":"/ The seed has an invalid length.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21907,"byte_end":21942,"line_start":100,"line_end":100,"column_start":2,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2061},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22061,"byte_end":22072,"line_start":103,"line_end":103,"column_start":2,"column_end":13},"name":"InvalidPath","qualname":"::crypto::SecretStringError::InvalidPath","value":"SecretStringError::InvalidPath","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" The derivation path was invalid (e.g. contains soft junctions when they are not supported).\n","sig":null,"attributes":[{"value":"/ The derivation path was invalid (e.g. contains soft junctions when they are not supported).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21964,"byte_end":22059,"line_start":102,"line_end":102,"column_start":2,"column_end":97}}]},{"kind":"Enum","id":{"krate":0,"index":2050},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21605,"byte_end":21622,"line_start":91,"line_end":91,"column_start":10,"column_end":27},"name":"SecretStringError","qualname":"::crypto::SecretStringError","value":"pub enum SecretStringError {\n\n    /// The overall format was invalid (e.g. the seed phrase contained symbols).\n    InvalidFormat,\n\n    /// The seed phrase provided is not a valid BIP39 phrase.\n    InvalidPhrase,\n\n    /// The supplied password was invalid.\n    InvalidPassword,\n\n    /// The seed is invalid (bad content).\n    InvalidSeed,\n\n    /// The seed has an invalid length.\n    InvalidSeedLength,\n\n    /// The derivation path was invalid (e.g. contains soft junctions when they are not supported).\n    InvalidPath,\n}","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2061}],"decl_id":null,"docs":" An error with the interpretation of a secret.\n","sig":null,"attributes":[{"value":"/ An error with the interpretation of a secret.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21475,"byte_end":21524,"line_start":88,"line_end":88,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21564,"byte_end":21595,"line_start":90,"line_end":90,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2074},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22516,"byte_end":22520,"line_start":113,"line_end":113,"column_start":2,"column_end":6},"name":"Soft","qualname":"::crypto::DeriveJunction::Soft","value":"DeriveJunction::Soft([u8; ])","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" Soft (vanilla) derivation. Public keys have a correspondent derivation.\n","sig":null,"attributes":[{"value":"/ Soft (vanilla) derivation. Public keys have a correspondent derivation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22439,"byte_end":22514,"line_start":112,"line_end":112,"column_start":2,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2078},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22633,"byte_end":22637,"line_start":115,"line_end":115,"column_start":2,"column_end":6},"name":"Hard","qualname":"::crypto::DeriveJunction::Hard","value":"DeriveJunction::Hard([u8; ])","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" Hard (\"hardened\") derivation. Public keys do not have a correspondent derivation.\n","sig":null,"attributes":[{"value":"/ Hard (\"hardened\") derivation. Public keys do not have a correspondent derivation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22546,"byte_end":22631,"line_start":114,"line_end":114,"column_start":2,"column_end":87}}]},{"kind":"Enum","id":{"krate":0,"index":2073},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22421,"byte_end":22435,"line_start":111,"line_end":111,"column_start":10,"column_end":24},"name":"DeriveJunction","qualname":"::crypto::DeriveJunction","value":"pub enum DeriveJunction {\n\n    /// Soft (vanilla) derivation. Public keys have a correspondent derivation.\n    Soft([u8; ]),\n\n    /// Hard (\"hardened\") derivation. Public keys do not have a correspondent derivation.\n    Hard([u8; ]),\n}","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2078}],"decl_id":null,"docs":" A since derivation junction description. It is the single parameter used when creating\n a new secret key from an existing secret key and, in the case of `SoftRaw` and `SoftIndex`\n a new public key from an existing public key.\n","sig":null,"attributes":[{"value":"/ A since derivation junction description. It is the single parameter used when creating","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22077,"byte_end":22167,"line_start":106,"line_end":106,"column_start":1,"column_end":91}},{"value":"/ a new secret key from an existing secret key and, in the case of `SoftRaw` and `SoftIndex`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22168,"byte_end":22262,"line_start":107,"line_end":107,"column_start":1,"column_end":95}},{"value":"/ a new public key from an existing public key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22263,"byte_end":22312,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22380,"byte_end":22411,"line_start":110,"line_end":110,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22804,"byte_end":22810,"line_start":121,"line_end":121,"column_start":9,"column_end":15},"name":"soften","qualname":"<DeriveJunction>::soften","value":"pub fn soften(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Consume self to return a soft derive junction with the same chain code.\n","sig":null,"attributes":[{"value":"/ Consume self to return a soft derive junction with the same chain code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22720,"byte_end":22795,"line_start":120,"line_end":120,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22957,"byte_end":22963,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"name":"harden","qualname":"<DeriveJunction>::harden","value":"pub fn harden(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Consume self to return a hard derive junction with the same chain code.\n","sig":null,"attributes":[{"value":"/ Consume self to return a hard derive junction with the same chain code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22873,"byte_end":22948,"line_start":123,"line_end":123,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23166,"byte_end":23170,"line_start":129,"line_end":129,"column_start":9,"column_end":13},"name":"soft","qualname":"<DeriveJunction>::soft","value":"pub fn soft<T: Encode>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new soft (vanilla) DeriveJunction from a given, encodable, value.","sig":null,"attributes":[{"value":"/ Create a new soft (vanilla) DeriveJunction from a given, encodable, value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23026,"byte_end":23104,"line_start":126,"line_end":126,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23106,"byte_end":23109,"line_start":127,"line_end":127,"column_start":2,"column_end":5}},{"value":"/ If you need a hard junction, use `hard()`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23111,"byte_end":23157,"line_start":128,"line_end":128,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23703,"byte_end":23707,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"hard","qualname":"<DeriveJunction>::hard","value":"pub fn hard<T: Encode>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new hard (hardened) DeriveJunction from a given, encodable, value.","sig":null,"attributes":[{"value":"/ Create a new hard (hardened) DeriveJunction from a given, encodable, value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23562,"byte_end":23641,"line_start":141,"line_end":141,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23643,"byte_end":23646,"line_start":142,"line_end":142,"column_start":2,"column_end":5}},{"value":"/ If you need a soft junction, use `soft()`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23648,"byte_end":23694,"line_start":143,"line_end":143,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23824,"byte_end":23836,"line_start":149,"line_end":149,"column_start":9,"column_end":21},"name":"unwrap_inner","qualname":"<DeriveJunction>::unwrap_inner","value":"pub fn unwrap_inner(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Consume self to return the chain code.\n","sig":null,"attributes":[{"value":"/ Consume self to return the chain code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23773,"byte_end":23815,"line_start":148,"line_end":148,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":24007,"byte_end":24012,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"name":"inner","qualname":"<DeriveJunction>::inner","value":"pub fn inner(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner junction id.\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner junction id.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":23953,"byte_end":23998,"line_start":155,"line_end":155,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":24190,"byte_end":24197,"line_start":163,"line_end":163,"column_start":9,"column_end":16},"name":"is_soft","qualname":"<DeriveJunction>::is_soft","value":"pub fn is_soft(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the junction is soft.\n","sig":null,"attributes":[{"value":"/ Return `true` if the junction is soft.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":24139,"byte_end":24181,"line_start":162,"line_end":162,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":24342,"byte_end":24349,"line_start":171,"line_end":171,"column_start":9,"column_end":16},"name":"is_hard","qualname":"<DeriveJunction>::is_hard","value":"pub fn is_hard(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the junction is hard.\n","sig":null,"attributes":[{"value":"/ Return `true` if the junction is hard.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":24291,"byte_end":24333,"line_start":170,"line_end":170,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2113},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25051,"byte_end":25060,"line_start":210,"line_end":210,"column_start":2,"column_end":11},"name":"BadBase58","qualname":"::crypto::PublicError::BadBase58","value":"PublicError::BadBase58","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" Bad alphabet.\n","sig":null,"attributes":[{"value":"/ Bad alphabet.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25032,"byte_end":25049,"line_start":209,"line_end":209,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2115},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25080,"byte_end":25089,"line_start":212,"line_end":212,"column_start":2,"column_end":11},"name":"BadLength","qualname":"::crypto::PublicError::BadLength","value":"PublicError::BadLength","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" Bad length.\n","sig":null,"attributes":[{"value":"/ Bad length.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25063,"byte_end":25078,"line_start":211,"line_end":211,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2117},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25114,"byte_end":25128,"line_start":214,"line_end":214,"column_start":2,"column_end":16},"name":"UnknownVersion","qualname":"::crypto::PublicError::UnknownVersion","value":"PublicError::UnknownVersion","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" Unknown version.\n","sig":null,"attributes":[{"value":"/ Unknown version.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25092,"byte_end":25112,"line_start":213,"line_end":213,"column_start":2,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2119},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25154,"byte_end":25169,"line_start":216,"line_end":216,"column_start":2,"column_end":17},"name":"InvalidChecksum","qualname":"::crypto::PublicError::InvalidChecksum","value":"PublicError::InvalidChecksum","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" Invalid checksum.\n","sig":null,"attributes":[{"value":"/ Invalid checksum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25131,"byte_end":25152,"line_start":215,"line_end":215,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2121},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25193,"byte_end":25206,"line_start":218,"line_end":218,"column_start":2,"column_end":15},"name":"InvalidFormat","qualname":"::crypto::PublicError::InvalidFormat","value":"PublicError::InvalidFormat","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" Invalid format.\n","sig":null,"attributes":[{"value":"/ Invalid format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25172,"byte_end":25191,"line_start":217,"line_end":217,"column_start":2,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2123},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25239,"byte_end":25250,"line_start":220,"line_end":220,"column_start":2,"column_end":13},"name":"InvalidPath","qualname":"::crypto::PublicError::InvalidPath","value":"PublicError::InvalidPath","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" Invalid derivation path.\n","sig":null,"attributes":[{"value":"/ Invalid derivation path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25209,"byte_end":25237,"line_start":219,"line_end":219,"column_start":2,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2112},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25017,"byte_end":25028,"line_start":208,"line_end":208,"column_start":10,"column_end":21},"name":"PublicError","qualname":"::crypto::PublicError","value":"pub enum PublicError {\n\n    /// Bad alphabet.\n    BadBase58,\n\n    /// Bad length.\n    BadLength,\n\n    /// Unknown version.\n    UnknownVersion,\n\n    /// Invalid checksum.\n    InvalidChecksum,\n\n    /// Invalid format.\n    InvalidFormat,\n\n    /// Invalid derivation path.\n    InvalidPath,\n}","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2123}],"decl_id":null,"docs":" An error type for SS58 decoding.\n","sig":null,"attributes":[{"value":"/ An error type for SS58 decoding.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":24894,"byte_end":24930,"line_start":205,"line_end":205,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":24931,"byte_end":24962,"line_start":206,"line_end":206,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":173},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25339,"byte_end":25348,"line_start":225,"line_end":225,"column_start":11,"column_end":20},"name":"Ss58Codec","qualname":"::crypto::Ss58Codec","value":"Ss58Codec: Sized + AsMut<[u8]> + AsRef<[u8]> + Default","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":" Key that can be encoded to/from SS58.\n","sig":null,"attributes":[{"value":"/ Key that can be encoded to/from SS58.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25255,"byte_end":25296,"line_start":223,"line_end":223,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25297,"byte_end":25328,"line_start":224,"line_end":224,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25490,"byte_end":25504,"line_start":228,"line_end":228,"column_start":5,"column_end":19},"name":"from_ss58check","qualname":"::crypto::Ss58Codec::from_ss58check","value":"pub fn from_ss58check(&str) -> Result<Self, PublicError>","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25397,"byte_end":25460,"line_start":226,"line_end":226,"column_start":2,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25462,"byte_end":25485,"line_start":227,"line_end":227,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25844,"byte_end":25871,"line_start":238,"line_end":238,"column_start":5,"column_end":32},"name":"from_ss58check_with_version","qualname":"::crypto::Ss58Codec::from_ss58check_with_version","value":"pub fn from_ss58check_with_version(&str)\n-> Result<(Self, Ss58AddressFormat), PublicError>","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25751,"byte_end":25814,"line_start":236,"line_end":236,"column_start":2,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25816,"byte_end":25839,"line_start":237,"line_end":237,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":26629,"byte_end":26640,"line_start":258,"line_end":258,"column_start":5,"column_end":16},"name":"from_string","qualname":"::crypto::Ss58Codec::from_string","value":"pub fn from_string(&str) -> Result<Self, PublicError>","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address, optionally with\n a derivation path following.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address, optionally with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":26486,"byte_end":26565,"line_start":255,"line_end":255,"column_start":2,"column_end":81}},{"value":"/ a derivation path following.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":26567,"byte_end":26599,"line_start":256,"line_end":256,"column_start":2,"column_end":34}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":26601,"byte_end":26624,"line_start":257,"line_end":257,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":26961,"byte_end":26986,"line_start":269,"line_end":269,"column_start":5,"column_end":30},"name":"to_ss58check_with_version","qualname":"::crypto::Ss58Codec::to_ss58check_with_version","value":"pub fn to_ss58check_with_version(&Self, Ss58AddressFormat) -> String","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Return the ss58-check string for this key.\n","sig":null,"attributes":[{"value":"/ Return the ss58-check string for this key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":26885,"byte_end":26931,"line_start":267,"line_end":267,"column_start":2,"column_end":48}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":26933,"byte_end":26956,"line_start":268,"line_end":268,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27251,"byte_end":27263,"line_start":279,"line_end":279,"column_start":5,"column_end":17},"name":"to_ss58check","qualname":"::crypto::Ss58Codec::to_ss58check","value":"pub fn to_ss58check(&Self) -> String","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Return the ss58-check string for this key.\n","sig":null,"attributes":[{"value":"/ Return the ss58-check string for this key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27175,"byte_end":27221,"line_start":277,"line_end":277,"column_start":2,"column_end":48}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27223,"byte_end":27246,"line_start":278,"line_end":278,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27486,"byte_end":27510,"line_start":284,"line_end":284,"column_start":5,"column_end":29},"name":"from_string_with_version","qualname":"::crypto::Ss58Codec::from_string_with_version","value":"pub fn from_string_with_version(&str)\n-> Result<(Self, Ss58AddressFormat), PublicError>","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address, optionally with\n a derivation path following.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address, optionally with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27343,"byte_end":27422,"line_start":281,"line_end":281,"column_start":2,"column_end":81}},{"value":"/ a derivation path following.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27424,"byte_end":27456,"line_start":282,"line_end":282,"column_start":2,"column_end":34}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27458,"byte_end":27481,"line_start":283,"line_end":283,"column_start":2,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":184},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27652,"byte_end":27658,"line_start":290,"line_end":290,"column_start":11,"column_end":17},"name":"Derive","qualname":"::crypto::Derive","value":"Derive: Sized","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":" Derivable key trait.\n","sig":null,"attributes":[{"value":"/ Derivable key trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27617,"byte_end":27641,"line_start":289,"line_end":289,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27838,"byte_end":27844,"line_start":295,"line_end":295,"column_start":5,"column_end":11},"name":"derive","qualname":"::crypto::Derive::derive","value":"pub fn derive<Iter: Iterator<Item = DeriveJunction>>(&Self, Iter)\n-> Option<Self>","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":" Derive a child key from a series of given junctions.","sig":null,"attributes":[{"value":"/ Derive a child key from a series of given junctions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27669,"byte_end":27725,"line_start":291,"line_end":291,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27727,"byte_end":27730,"line_start":292,"line_end":292,"column_start":2,"column_end":5}},{"value":"/ Will be `None` for public keys if there are any hard junctions in there.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27732,"byte_end":27808,"line_start":293,"line_end":293,"column_start":2,"column_end":78}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27810,"byte_end":27833,"line_start":294,"line_end":294,"column_start":2,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":34572,"byte_end":34596,"line_start":516,"line_end":516,"column_start":8,"column_end":32},"name":"set_default_ss58_version","qualname":"::crypto::set_default_ss58_version","value":"pub fn set_default_ss58_version(Ss58AddressFormat)","parent":null,"children":[],"decl_id":null,"docs":" Set the default \"version\" (actually, this is a bit of a misnomer and the version byte is\n typically used not just to encode format/version but also network identity) that is used for\n encoding and decoding SS58 addresses. If an unknown version is provided then it fails.","sig":null,"attributes":[{"value":"/ Set the default \"version\" (actually, this is a bit of a misnomer and the version byte is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":34191,"byte_end":34283,"line_start":510,"line_end":510,"column_start":1,"column_end":93}},{"value":"/ typically used not just to encode format/version but also network identity) that is used for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":34284,"byte_end":34380,"line_start":511,"line_end":511,"column_start":1,"column_end":97}},{"value":"/ encoding and decoding SS58 addresses. If an unknown version is provided then it fails.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":34381,"byte_end":34471,"line_start":512,"line_end":512,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":34472,"byte_end":34475,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ See `ss58_address_format!` for all current known \"versions\".","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":34476,"byte_end":34540,"line_start":514,"line_end":514,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":34541,"byte_end":34564,"line_start":515,"line_end":515,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":201},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36578,"byte_end":36584,"line_start":577,"line_end":577,"column_start":11,"column_end":17},"name":"Public","qualname":"::crypto::Public","value":"Public: AsRef<[u8]> + AsMut<[u8]> + Default + Derive + CryptoType + PartialEq + Eq +\nClone + Send + Sync","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205}],"decl_id":null,"docs":" Trait suitable for typical cryptographic PKI key public type.\n","sig":null,"attributes":[{"value":"/ Trait suitable for typical cryptographic PKI key public type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36502,"byte_end":36567,"line_start":576,"line_end":576,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36884,"byte_end":36894,"line_start":584,"line_end":584,"column_start":5,"column_end":15},"name":"from_slice","qualname":"::crypto::Public::from_slice","value":"pub fn from_slice(&[u8]) -> Self","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":" A new instance from the given slice.","sig":null,"attributes":[{"value":"/ A new instance from the given slice.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36687,"byte_end":36727,"line_start":580,"line_end":580,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36729,"byte_end":36732,"line_start":581,"line_end":581,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36734,"byte_end":36815,"line_start":582,"line_end":582,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36817,"byte_end":36879,"line_start":583,"line_end":583,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36968,"byte_end":36978,"line_start":587,"line_end":587,"column_start":5,"column_end":15},"name":"to_raw_vec","qualname":"::crypto::Public::to_raw_vec","value":"pub fn to_raw_vec(&Self) -> Vec<u8>","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":" Return a `Vec<u8>` filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a `Vec<u8>` filled with raw data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36919,"byte_end":36963,"line_start":586,"line_end":586,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37073,"byte_end":37081,"line_start":590,"line_end":590,"column_start":5,"column_end":13},"name":"as_slice","qualname":"::crypto::Public::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":" Return a slice filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a slice filled with raw data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37028,"byte_end":37068,"line_start":589,"line_end":589,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37172,"byte_end":37193,"line_start":592,"line_end":592,"column_start":5,"column_end":26},"name":"to_public_crypto_pair","qualname":"::crypto::Public::to_public_crypto_pair","value":"pub fn to_public_crypto_pair(&Self) -> CryptoTypePublicPair","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":" Return `CryptoTypePublicPair` from public key.\n","sig":null,"attributes":[{"value":"/ Return `CryptoTypePublicPair` from public key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37117,"byte_end":37167,"line_start":591,"line_end":591,"column_start":2,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2265},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37405,"byte_end":37416,"line_start":598,"line_end":598,"column_start":12,"column_end":23},"name":"AccountId32","qualname":"::crypto::AccountId32","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque 32-byte cryptographic identifier.\n","sig":null,"attributes":[{"value":"/ An opaque 32-byte cryptographic identifier.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37229,"byte_end":37276,"line_start":595,"line_end":595,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2307},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40435,"byte_end":40440,"line_start":731,"line_end":731,"column_start":13,"column_end":18},"name":"Dummy","qualname":"::crypto::dummy::Dummy","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy cryptography. Doesn't do anything.\n","sig":null,"attributes":[{"value":"/ Dummy cryptography. Doesn't do anything.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40330,"byte_end":40374,"line_start":729,"line_end":729,"column_start":2,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":290},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42322,"byte_end":42326,"line_start":794,"line_end":794,"column_start":11,"column_end":15},"name":"Pair","qualname":"::crypto::Pair","value":"Pair: CryptoType + Sized + Clone + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":317},{"krate":0,"index":319}],"decl_id":null,"docs":" Trait suitable for typical cryptographic PKI key pair type.","sig":null,"attributes":[{"value":"/ Trait suitable for typical cryptographic PKI key pair type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42127,"byte_end":42190,"line_start":790,"line_end":790,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42191,"byte_end":42194,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ For now it just specifies how to create a key from a phrase and derivation path.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42195,"byte_end":42279,"line_start":792,"line_end":792,"column_start":1,"column_end":85}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42280,"byte_end":42311,"line_start":793,"line_end":793,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":291},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42439,"byte_end":42445,"line_start":796,"line_end":796,"column_start":7,"column_end":13},"name":"Public","qualname":"::crypto::Pair::Public","value":"type Public: Public + Hash;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" The type which is used to encode a public key.\n","sig":null,"attributes":[{"value":"/ The type which is used to encode a public key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42382,"byte_end":42432,"line_start":795,"line_end":795,"column_start":2,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":292},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42568,"byte_end":42572,"line_start":800,"line_end":800,"column_start":7,"column_end":11},"name":"Seed","qualname":"::crypto::Pair::Seed","value":"type Seed: Default + AsRef<[u8]> + AsMut<[u8]> + Clone;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" The type used to (minimally) encode the data required to securely create\n a new key pair.\n","sig":null,"attributes":[{"value":"/ The type used to (minimally) encode the data required to securely create","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42464,"byte_end":42540,"line_start":798,"line_end":798,"column_start":2,"column_end":78}},{"value":"/ a new key pair.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42542,"byte_end":42561,"line_start":799,"line_end":799,"column_start":2,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":293},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42769,"byte_end":42778,"line_start":804,"line_end":804,"column_start":7,"column_end":16},"name":"Signature","qualname":"::crypto::Pair::Signature","value":"type Signature: AsRef<[u8]>;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" The type used to represent a signature. Can be created from a key pair and a message\n and verified with the message and a public key.\n","sig":null,"attributes":[{"value":"/ The type used to represent a signature. Can be created from a key pair and a message","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42621,"byte_end":42709,"line_start":802,"line_end":802,"column_start":2,"column_end":90}},{"value":"/ and verified with the message and a public key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42711,"byte_end":42762,"line_start":803,"line_end":803,"column_start":2,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":294},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42848,"byte_end":42859,"line_start":807,"line_end":807,"column_start":7,"column_end":18},"name":"DeriveError","qualname":"::crypto::Pair::DeriveError","value":"type DeriveError;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Error returned from the `derive` function.\n","sig":null,"attributes":[{"value":"/ Error returned from the `derive` function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42795,"byte_end":42841,"line_start":806,"line_end":806,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43120,"byte_end":43128,"line_start":814,"line_end":814,"column_start":5,"column_end":13},"name":"generate","qualname":"::crypto::Pair::generate","value":"pub fn generate() -> (Self, Self::Seed)","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Generate new secure (random) key pair.","sig":null,"attributes":[{"value":"/ Generate new secure (random) key pair.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42863,"byte_end":42905,"line_start":809,"line_end":809,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42907,"byte_end":42910,"line_start":810,"line_end":810,"column_start":2,"column_end":5}},{"value":"/ This is only for ephemeral keys really, since you won't have access to the secret key","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42912,"byte_end":43001,"line_start":811,"line_end":811,"column_start":2,"column_end":91}},{"value":"/ for storage. If you want a persistent key pair, use `generate_with_phrase` instead.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43003,"byte_end":43090,"line_start":812,"line_end":812,"column_start":2,"column_end":89}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43092,"byte_end":43115,"line_start":813,"line_end":813,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43572,"byte_end":43592,"line_start":827,"line_end":827,"column_start":5,"column_end":25},"name":"generate_with_phrase","qualname":"::crypto::Pair::generate_with_phrase","value":"pub fn generate_with_phrase(Option<&str>) -> (Self, String, Self::Seed)","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Generate new secure (random) key pair and provide the recovery phrase.","sig":null,"attributes":[{"value":"/ Generate new secure (random) key pair and provide the recovery phrase.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43268,"byte_end":43342,"line_start":820,"line_end":820,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43344,"byte_end":43347,"line_start":821,"line_end":821,"column_start":2,"column_end":5}},{"value":"/ You can recover the same key later with `from_phrase`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43349,"byte_end":43407,"line_start":822,"line_end":822,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43409,"byte_end":43412,"line_start":823,"line_end":823,"column_start":2,"column_end":5}},{"value":"/ This is generally slower than `generate()`, so prefer that unless you need to persist","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43414,"byte_end":43503,"line_start":824,"line_end":824,"column_start":2,"column_end":91}},{"value":"/ the key from the current session.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43505,"byte_end":43542,"line_start":825,"line_end":825,"column_start":2,"column_end":39}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43544,"byte_end":43567,"line_start":826,"line_end":826,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43768,"byte_end":43779,"line_start":831,"line_end":831,"column_start":5,"column_end":16},"name":"from_phrase","qualname":"::crypto::Pair::from_phrase","value":"pub fn from_phrase(&str, Option<&str>)\n-> Result<(Self, Self::Seed), SecretStringError>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns the KeyPair from the English BIP39 seed `phrase`, or `None` if it's invalid.\n","sig":null,"attributes":[{"value":"/ Returns the KeyPair from the English BIP39 seed `phrase`, or `None` if it's invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43650,"byte_end":43738,"line_start":829,"line_end":829,"column_start":2,"column_end":90}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43740,"byte_end":43763,"line_start":830,"line_end":830,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43931,"byte_end":43937,"line_start":834,"line_end":834,"column_start":5,"column_end":11},"name":"derive","qualname":"::crypto::Pair::derive","value":"pub fn derive<Iter: Iterator<Item =\n              DeriveJunction>>(&Self, Iter, Option<Self::Seed>)\n-> Result<(Self, Option<Self::Seed>), Self::DeriveError>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Derive a child key from a series of given junctions.\n","sig":null,"attributes":[{"value":"/ Derive a child key from a series of given junctions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":43870,"byte_end":43926,"line_start":833,"line_end":833,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44290,"byte_end":44299,"line_start":843,"line_end":843,"column_start":5,"column_end":14},"name":"from_seed","qualname":"::crypto::Pair::from_seed","value":"pub fn from_seed(&Self::Seed) -> Self","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Generate new key pair from the provided `seed`.","sig":null,"attributes":[{"value":"/ Generate new key pair from the provided `seed`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44087,"byte_end":44138,"line_start":839,"line_end":839,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44140,"byte_end":44143,"line_start":840,"line_end":840,"column_start":2,"column_end":5}},{"value":"/ @WARNING: THIS WILL ONLY BE SECURE IF THE `seed` IS SECURE. If it can be guessed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44145,"byte_end":44229,"line_start":841,"line_end":841,"column_start":2,"column_end":86}},{"value":"/ by an attacker then they can also derive your key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44231,"byte_end":44285,"line_start":842,"line_end":842,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44598,"byte_end":44613,"line_start":850,"line_end":850,"column_start":5,"column_end":20},"name":"from_seed_slice","qualname":"::crypto::Pair::from_seed_slice","value":"pub fn from_seed_slice(&[u8]) -> Result<Self, SecretStringError>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Make a new key pair from secret seed material. The slice must be the correct size or\n it will return `None`.","sig":null,"attributes":[{"value":"/ Make a new key pair from secret seed material. The slice must be the correct size or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44330,"byte_end":44418,"line_start":845,"line_end":845,"column_start":2,"column_end":90}},{"value":"/ it will return `None`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44420,"byte_end":44446,"line_start":846,"line_end":846,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44448,"byte_end":44451,"line_start":847,"line_end":847,"column_start":2,"column_end":5}},{"value":"/ @WARNING: THIS WILL ONLY BE SECURE IF THE `seed` IS SECURE. If it can be guessed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44453,"byte_end":44537,"line_start":848,"line_end":848,"column_start":2,"column_end":86}},{"value":"/ by an attacker then they can also derive your key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44539,"byte_end":44593,"line_start":849,"line_end":849,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44689,"byte_end":44693,"line_start":853,"line_end":853,"column_start":5,"column_end":9},"name":"sign","qualname":"::crypto::Pair::sign","value":"pub fn sign(&Self, &[u8]) -> Self::Signature","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Sign a message.\n","sig":null,"attributes":[{"value":"/ Sign a message.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44665,"byte_end":44684,"line_start":852,"line_end":852,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44819,"byte_end":44825,"line_start":856,"line_end":856,"column_start":5,"column_end":11},"name":"verify","qualname":"::crypto::Pair::verify","value":"pub fn verify<M: AsRef<[u8]>>(&Self::Signature, M, &Self::Public) -> bool","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Verify a signature on a message. Returns true if the signature is good.\n","sig":null,"attributes":[{"value":"/ Verify a signature on a message. Returns true if the signature is good.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44739,"byte_end":44814,"line_start":855,"line_end":855,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44991,"byte_end":45002,"line_start":859,"line_end":859,"column_start":5,"column_end":16},"name":"verify_weak","qualname":"::crypto::Pair::verify_weak","value":"pub fn verify_weak<P: AsRef<[u8]>, M: AsRef<[u8]>>(&[u8], M, P) -> bool","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Verify a signature on a message. Returns true if the signature is good.\n","sig":null,"attributes":[{"value":"/ Verify a signature on a message. Returns true if the signature is good.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":44911,"byte_end":44986,"line_start":858,"line_end":858,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45109,"byte_end":45115,"line_start":862,"line_end":862,"column_start":5,"column_end":11},"name":"public","qualname":"::crypto::Pair::public","value":"pub fn public(&Self) -> Self::Public","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Get the public key.\n","sig":null,"attributes":[{"value":"/ Get the public key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45081,"byte_end":45104,"line_start":861,"line_end":861,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46899,"byte_end":46920,"line_start":893,"line_end":893,"column_start":5,"column_end":26},"name":"from_string_with_seed","qualname":"::crypto::Pair::from_string_with_seed","value":"pub fn from_string_with_seed(&str, Option<&str>)\n-> Result<(Self, Option<Self::Seed>), SecretStringError>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Interprets the string `s` in order to generate a key Pair. Returns both the pair and an optional seed, in the\n case that the pair can be expressed as a direct derivation from a seed (some cases, such as Sr25519 derivations\n with path components, cannot).","sig":null,"attributes":[{"value":"/ Interprets the string `s` in order to generate a key Pair. Returns both the pair and an optional seed, in the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45142,"byte_end":45255,"line_start":864,"line_end":864,"column_start":2,"column_end":115}},{"value":"/ case that the pair can be expressed as a direct derivation from a seed (some cases, such as Sr25519 derivations","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45257,"byte_end":45372,"line_start":865,"line_end":865,"column_start":2,"column_end":117}},{"value":"/ with path components, cannot).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45374,"byte_end":45408,"line_start":866,"line_end":866,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45410,"byte_end":45413,"line_start":867,"line_end":867,"column_start":2,"column_end":5}},{"value":"/ This takes a helper function to do the key generation from a phrase, password and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45415,"byte_end":45500,"line_start":868,"line_end":868,"column_start":2,"column_end":87}},{"value":"/ junction iterator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45502,"byte_end":45524,"line_start":869,"line_end":869,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45526,"byte_end":45529,"line_start":870,"line_end":870,"column_start":2,"column_end":5}},{"value":"/ - If `s` is a possibly `0x` prefixed 64-digit hex string, then it will be interpreted","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45531,"byte_end":45620,"line_start":871,"line_end":871,"column_start":2,"column_end":91}},{"value":"/ directly as a `MiniSecretKey` (aka \"seed\" in `subkey`).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45622,"byte_end":45681,"line_start":872,"line_end":872,"column_start":2,"column_end":61}},{"value":"/ - If `s` is a valid BIP-39 key phrase of 12, 15, 18, 21 or 24 words, then the key will","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45683,"byte_end":45773,"line_start":873,"line_end":873,"column_start":2,"column_end":92}},{"value":"/ be derived from it. In this case:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45775,"byte_end":45812,"line_start":874,"line_end":874,"column_start":2,"column_end":39}},{"value":"/   - the phrase may be followed by one or more items delimited by `/` characters.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45814,"byte_end":45898,"line_start":875,"line_end":875,"column_start":2,"column_end":86}},{"value":"/   - the path may be followed by `///`, in which case everything after the `///` is treated","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45900,"byte_end":45994,"line_start":876,"line_end":876,"column_start":2,"column_end":96}},{"value":"/ as a password.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":45996,"byte_end":46014,"line_start":877,"line_end":877,"column_start":2,"column_end":20}},{"value":"/ - If `s` begins with a `/` character it is prefixed with the Substrate public `DEV_PHRASE` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46016,"byte_end":46114,"line_start":878,"line_end":878,"column_start":2,"column_end":100}},{"value":"/ interpreted as above.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46116,"byte_end":46141,"line_start":879,"line_end":879,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46143,"byte_end":46146,"line_start":880,"line_end":880,"column_start":2,"column_end":5}},{"value":"/ In this case they are interpreted as HDKD junctions; purely numeric items are interpreted as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46148,"byte_end":46244,"line_start":881,"line_end":881,"column_start":2,"column_end":98}},{"value":"/ integers, non-numeric items as strings. Junctions prefixed with `/` are interpreted as soft","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46246,"byte_end":46341,"line_start":882,"line_end":882,"column_start":2,"column_end":97}},{"value":"/ junctions, and with `//` as hard junctions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46343,"byte_end":46390,"line_start":883,"line_end":883,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46392,"byte_end":46395,"line_start":884,"line_end":884,"column_start":2,"column_end":5}},{"value":"/ There is no correspondence mapping between SURI strings and the keys they represent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46397,"byte_end":46485,"line_start":885,"line_end":885,"column_start":2,"column_end":90}},{"value":"/ Two different non-identical strings can actually lead to the same secret being derived.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46487,"byte_end":46578,"line_start":886,"line_end":886,"column_start":2,"column_end":93}},{"value":"/ Notably, integer junction indices may be legally prefixed with arbitrary number of zeros.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46580,"byte_end":46673,"line_start":887,"line_end":887,"column_start":2,"column_end":95}},{"value":"/ Similarly an empty password (ending the SURI with `///`) is perfectly valid and will generally","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46675,"byte_end":46773,"line_start":888,"line_end":888,"column_start":2,"column_end":100}},{"value":"/ be equivalent to no password at all.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46775,"byte_end":46815,"line_start":889,"line_end":889,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46817,"byte_end":46820,"line_start":890,"line_end":890,"column_start":2,"column_end":5}},{"value":"/ `None` is returned if no matches are found.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46822,"byte_end":46869,"line_start":891,"line_end":891,"column_start":2,"column_end":49}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":46871,"byte_end":46894,"line_start":892,"line_end":892,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48379,"byte_end":48390,"line_start":931,"line_end":931,"column_start":5,"column_end":16},"name":"from_string","qualname":"::crypto::Pair::from_string","value":"pub fn from_string(&str, Option<&str>) -> Result<Self, SecretStringError>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Interprets the string `s` in order to generate a key pair.","sig":null,"attributes":[{"value":"/ Interprets the string `s` in order to generate a key pair.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48184,"byte_end":48246,"line_start":927,"line_end":927,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48248,"byte_end":48251,"line_start":928,"line_end":928,"column_start":2,"column_end":5}},{"value":"/ See [`from_string_with_seed`](Pair::from_string_with_seed) for more extensive documentation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48253,"byte_end":48349,"line_start":929,"line_end":929,"column_start":2,"column_end":98}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48351,"byte_end":48374,"line_start":930,"line_end":930,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48583,"byte_end":48593,"line_start":936,"line_end":936,"column_start":5,"column_end":15},"name":"to_raw_vec","qualname":"::crypto::Pair::to_raw_vec","value":"pub fn to_raw_vec(&Self) -> Vec<u8>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Return a vec filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a vec filled with raw data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48540,"byte_end":48578,"line_start":935,"line_end":935,"column_start":2,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":320},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48662,"byte_end":48673,"line_start":940,"line_end":940,"column_start":11,"column_end":22},"name":"IsWrappedBy","qualname":"::crypto::IsWrappedBy","value":"IsWrappedBy<Outer>: From<Outer> + Into<Outer>","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323}],"decl_id":null,"docs":" One type is wrapped by another.\n","sig":null,"attributes":[{"value":"/ One type is wrapped by another.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48616,"byte_end":48651,"line_start":939,"line_end":939,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48764,"byte_end":48772,"line_start":942,"line_end":942,"column_start":5,"column_end":13},"name":"from_ref","qualname":"::crypto::IsWrappedBy::from_ref","value":"pub fn from_ref(&Outer) -> &Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Get a reference to the inner from the outer.\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner from the outer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48711,"byte_end":48759,"line_start":941,"line_end":941,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48860,"byte_end":48868,"line_start":944,"line_end":944,"column_start":5,"column_end":13},"name":"from_mut","qualname":"::crypto::IsWrappedBy::from_mut","value":"pub fn from_mut(&mut Outer) -> &mut Self","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner from the outer.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner from the outer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48799,"byte_end":48855,"line_start":943,"line_end":943,"column_start":2,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49009,"byte_end":49014,"line_start":948,"line_end":948,"column_start":11,"column_end":16},"name":"Wraps","qualname":"::crypto::Wraps","value":"Wraps: Sized","parent":null,"children":[{"krate":0,"index":325}],"decl_id":null,"docs":" Opposite of `IsWrappedBy` - denotes a type which is a simple wrapper around another type.\n","sig":null,"attributes":[{"value":"/ Opposite of `IsWrappedBy` - denotes a type which is a simple wrapper around another type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48905,"byte_end":48998,"line_start":947,"line_end":947,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":325},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49066,"byte_end":49071,"line_start":950,"line_end":950,"column_start":7,"column_end":12},"name":"Inner","qualname":"::crypto::Wraps::Inner","value":"type Inner: IsWrappedBy<Self>;","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" The inner type it is wrapping.\n","sig":null,"attributes":[{"value":"/ The inner type it is wrapping.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49025,"byte_end":49059,"line_start":949,"line_end":949,"column_start":2,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":336},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49746,"byte_end":49756,"line_start":975,"line_end":975,"column_start":11,"column_end":21},"name":"CryptoType","qualname":"::crypto::CryptoType","value":"CryptoType","parent":null,"children":[{"krate":0,"index":337}],"decl_id":null,"docs":" Type which has a particular kind of crypto associated with it.\n","sig":null,"attributes":[{"value":"/ Type which has a particular kind of crypto associated with it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49669,"byte_end":49735,"line_start":974,"line_end":974,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":337},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49837,"byte_end":49841,"line_start":978,"line_end":978,"column_start":7,"column_end":11},"name":"Pair","qualname":"::crypto::CryptoType::Pair","value":"type Pair: Pair;","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":" The pair key type of this crypto.\n","sig":null,"attributes":[{"value":"/ The pair key type of this crypto.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49760,"byte_end":49797,"line_start":976,"line_end":976,"column_start":2,"column_end":39}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49799,"byte_end":49830,"line_start":977,"line_end":977,"column_start":2,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50306,"byte_end":50315,"line_start":992,"line_end":992,"column_start":12,"column_end":21},"name":"KeyTypeId","qualname":"::crypto::KeyTypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a type of cryptographic key.","sig":null,"attributes":[{"value":"/ An identifier for a type of cryptographic key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49852,"byte_end":49902,"line_start":981,"line_end":981,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49903,"byte_end":49906,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/ To avoid clashes with other modules when distributing your module publicly, register your","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49907,"byte_end":50000,"line_start":983,"line_end":983,"column_start":1,"column_end":94}},{"value":"/ `KeyTypeId` on the list here by making a PR.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50001,"byte_end":50049,"line_start":984,"line_end":984,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50050,"byte_end":50053,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ Values whose first character is `_` are reserved for private use and won't conflict with any","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50054,"byte_end":50150,"line_start":986,"line_end":986,"column_start":1,"column_end":97}},{"value":"/ public modules.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50151,"byte_end":50170,"line_start":987,"line_end":987,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2324},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50316,"byte_end":50327,"line_start":992,"line_end":992,"column_start":22,"column_end":33},"name":"0","qualname":"::crypto::KeyTypeId::0","value":"[u8; 4]","parent":{"krate":0,"index":2322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2379},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50958,"byte_end":50970,"line_start":1021,"line_end":1021,"column_start":12,"column_end":24},"name":"CryptoTypeId","qualname":"::crypto::CryptoTypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a specific cryptographic algorithm used by a key pair\n","sig":null,"attributes":[{"value":"/ An identifier for a specific cryptographic algorithm used by a key pair","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50778,"byte_end":50853,"line_start":1019,"line_end":1019,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2381},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50971,"byte_end":50982,"line_start":1021,"line_end":1021,"column_start":25,"column_end":36},"name":"0","qualname":"::crypto::CryptoTypeId::0","value":"[u8; 4]","parent":{"krate":0,"index":2379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2425},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51132,"byte_end":51152,"line_start":1025,"line_end":1025,"column_start":12,"column_end":32},"name":"CryptoTypePublicPair","qualname":"::crypto::CryptoTypePublicPair","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type alias of CryptoTypeId & a public key\n","sig":null,"attributes":[{"value":"/ A type alias of CryptoTypeId & a public key","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50986,"byte_end":51033,"line_start":1023,"line_end":1023,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2427},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51153,"byte_end":51169,"line_start":1025,"line_end":1025,"column_start":33,"column_end":49},"name":"0","qualname":"::crypto::CryptoTypePublicPair::0","value":"crypto::CryptoTypeId","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2428},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51171,"byte_end":51182,"line_start":1025,"line_end":1025,"column_start":51,"column_end":62},"name":"1","qualname":"::crypto::CryptoTypePublicPair::1","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51813,"byte_end":51822,"line_start":1045,"line_end":1045,"column_start":9,"column_end":18},"name":"key_types","qualname":"::crypto::key_types","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":4004},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"decl_id":null,"docs":" Known key types; this also functions as a global registry of key types for projects wishing to\n avoid collisions with each other.","sig":null,"attributes":[{"value":"/ Known key types; this also functions as a global registry of key types for projects wishing to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51527,"byte_end":51625,"line_start":1040,"line_end":1040,"column_start":1,"column_end":99}},{"value":"/ avoid collisions with each other.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51626,"byte_end":51663,"line_start":1041,"line_end":1041,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51664,"byte_end":51667,"line_start":1042,"line_end":1042,"column_start":1,"column_end":4}},{"value":"/ It's not universal in the sense that *all* key types need to be mentioned here, it's just a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51668,"byte_end":51763,"line_start":1043,"line_end":1043,"column_start":1,"column_end":96}},{"value":"/ handy place to put common key types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51764,"byte_end":51804,"line_start":1044,"line_end":1044,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":350},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51923,"byte_end":51927,"line_start":1049,"line_end":1049,"column_start":12,"column_end":16},"name":"BABE","qualname":"::crypto::key_types::BABE","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for Babe module, built-in. Identified as `babe`.\n","sig":null,"attributes":[{"value":"/ Key type for Babe module, built-in. Identified as `babe`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51850,"byte_end":51911,"line_start":1048,"line_end":1048,"column_start":2,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":351},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52039,"byte_end":52046,"line_start":1051,"line_end":1051,"column_start":12,"column_end":19},"name":"GRANDPA","qualname":"::crypto::key_types::GRANDPA","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for Grandpa module, built-in. Identified as `gran`.\n","sig":null,"attributes":[{"value":"/ Key type for Grandpa module, built-in. Identified as `gran`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51963,"byte_end":52027,"line_start":1050,"line_end":1050,"column_start":2,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":352},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52189,"byte_end":52196,"line_start":1053,"line_end":1053,"column_start":12,"column_end":19},"name":"ACCOUNT","qualname":"::crypto::key_types::ACCOUNT","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for controlling an account in a Substrate runtime, built-in. Identified as `acco`.\n","sig":null,"attributes":[{"value":"/ Key type for controlling an account in a Substrate runtime, built-in. Identified as `acco`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52082,"byte_end":52177,"line_start":1052,"line_end":1052,"column_start":2,"column_end":97}}]},{"kind":"Const","id":{"krate":0,"index":353},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52305,"byte_end":52309,"line_start":1055,"line_end":1055,"column_start":12,"column_end":16},"name":"AURA","qualname":"::crypto::key_types::AURA","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for Aura module, built-in. Identified as `aura`.\n","sig":null,"attributes":[{"value":"/ Key type for Aura module, built-in. Identified as `aura`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52232,"byte_end":52293,"line_start":1054,"line_end":1054,"column_start":2,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":354},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52422,"byte_end":52431,"line_start":1057,"line_end":1057,"column_start":12,"column_end":21},"name":"IM_ONLINE","qualname":"::crypto::key_types::IM_ONLINE","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for ImOnline module, built-in. Identified as `imon`.\n","sig":null,"attributes":[{"value":"/ Key type for ImOnline module, built-in. Identified as `imon`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52345,"byte_end":52410,"line_start":1056,"line_end":1056,"column_start":2,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":355},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52554,"byte_end":52573,"line_start":1059,"line_end":1059,"column_start":12,"column_end":31},"name":"AUTHORITY_DISCOVERY","qualname":"::crypto::key_types::AUTHORITY_DISCOVERY","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for AuthorityDiscovery module, built-in. Identified as `audi`.\n","sig":null,"attributes":[{"value":"/ Key type for AuthorityDiscovery module, built-in. Identified as `audi`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52467,"byte_end":52542,"line_start":1058,"line_end":1058,"column_start":2,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":356},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52678,"byte_end":52685,"line_start":1061,"line_end":1061,"column_start":12,"column_end":19},"name":"STAKING","qualname":"::crypto::key_types::STAKING","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for staking, built-in. Identified as `stak`.\n","sig":null,"attributes":[{"value":"/ Key type for staking, built-in. Identified as `stak`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52609,"byte_end":52666,"line_start":1060,"line_end":1060,"column_start":2,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":357},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52805,"byte_end":52814,"line_start":1063,"line_end":1063,"column_start":12,"column_end":21},"name":"REPORTING","qualname":"::crypto::key_types::REPORTING","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for equivocation reporting, built-in. Identified as `fish`.\n","sig":null,"attributes":[{"value":"/ Key type for equivocation reporting, built-in. Identified as `fish`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52721,"byte_end":52793,"line_start":1062,"line_end":1062,"column_start":2,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":358},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52897,"byte_end":52902,"line_start":1065,"line_end":1065,"column_start":12,"column_end":17},"name":"DUMMY","qualname":"::crypto::key_types::DUMMY","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" A key type ID useful for tests.\n","sig":null,"attributes":[{"value":"/ A key type ID useful for tests.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":52850,"byte_end":52885,"line_start":1064,"line_end":1064,"column_start":2,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":359},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"u32_trait","qualname":"::u32_trait","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":796}],"decl_id":null,"docs":" An u32 trait with \"values\" as impl'd types.\n","sig":null,"attributes":[{"value":"/ An u32 trait with \"values\" as impl'd types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60177,"byte_end":60224,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":360},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60314,"byte_end":60319,"line_start":21,"line_end":21,"column_start":11,"column_end":16},"name":"Value","qualname":"::u32_trait::Value","value":"Value","parent":null,"children":[{"krate":0,"index":361}],"decl_id":null,"docs":" A u32 value, wrapped in a trait because we don't yet have const generics.\n","sig":null,"attributes":[{"value":"/ A u32 value, wrapped in a trait because we don't yet have const generics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60226,"byte_end":60303,"line_start":20,"line_end":20,"column_start":1,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":361},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60385,"byte_end":60390,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"VALUE","qualname":"::u32_trait::Value::VALUE","value":"u32","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":" The actual value represented by the impl'ing type.\n","sig":null,"attributes":[{"value":"/ The actual value represented by the impl'ing type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60323,"byte_end":60377,"line_start":22,"line_end":22,"column_start":2,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60468,"byte_end":60470,"line_start":27,"line_end":27,"column_start":12,"column_end":14},"name":"_0","qualname":"::u32_trait::_0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 0 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 0 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60400,"byte_end":60456,"line_start":26,"line_end":26,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":366},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60584,"byte_end":60586,"line_start":29,"line_end":29,"column_start":12,"column_end":14},"name":"_1","qualname":"::u32_trait::_1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 1 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 1 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60516,"byte_end":60572,"line_start":28,"line_end":28,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60700,"byte_end":60702,"line_start":31,"line_end":31,"column_start":12,"column_end":14},"name":"_2","qualname":"::u32_trait::_2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 2 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 2 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60632,"byte_end":60688,"line_start":30,"line_end":30,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60816,"byte_end":60818,"line_start":33,"line_end":33,"column_start":12,"column_end":14},"name":"_3","qualname":"::u32_trait::_3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 3 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 3 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60748,"byte_end":60804,"line_start":32,"line_end":32,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":378},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60932,"byte_end":60934,"line_start":35,"line_end":35,"column_start":12,"column_end":14},"name":"_4","qualname":"::u32_trait::_4","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 4 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 4 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60864,"byte_end":60920,"line_start":34,"line_end":34,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61048,"byte_end":61050,"line_start":37,"line_end":37,"column_start":12,"column_end":14},"name":"_5","qualname":"::u32_trait::_5","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 5 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 5 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60980,"byte_end":61036,"line_start":36,"line_end":36,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61164,"byte_end":61166,"line_start":39,"line_end":39,"column_start":12,"column_end":14},"name":"_6","qualname":"::u32_trait::_6","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 6 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 6 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61096,"byte_end":61152,"line_start":38,"line_end":38,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61280,"byte_end":61282,"line_start":41,"line_end":41,"column_start":12,"column_end":14},"name":"_7","qualname":"::u32_trait::_7","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 7 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 7 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61212,"byte_end":61268,"line_start":40,"line_end":40,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":394},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61396,"byte_end":61398,"line_start":43,"line_end":43,"column_start":12,"column_end":14},"name":"_8","qualname":"::u32_trait::_8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 8 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 8 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61328,"byte_end":61384,"line_start":42,"line_end":42,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":398},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61512,"byte_end":61514,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"_9","qualname":"::u32_trait::_9","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 9 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 9 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61444,"byte_end":61500,"line_start":44,"line_end":44,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61629,"byte_end":61632,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"_10","qualname":"::u32_trait::_10","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 10 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 10 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61560,"byte_end":61617,"line_start":46,"line_end":46,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":406},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61749,"byte_end":61752,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"_11","qualname":"::u32_trait::_11","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 11 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 11 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61680,"byte_end":61737,"line_start":48,"line_end":48,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":410},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61869,"byte_end":61872,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"_12","qualname":"::u32_trait::_12","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 12 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 12 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61800,"byte_end":61857,"line_start":50,"line_end":50,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61989,"byte_end":61992,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"_13","qualname":"::u32_trait::_13","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 13 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 13 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61920,"byte_end":61977,"line_start":52,"line_end":52,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":418},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62109,"byte_end":62112,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"_14","qualname":"::u32_trait::_14","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 14 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 14 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62040,"byte_end":62097,"line_start":54,"line_end":54,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62229,"byte_end":62232,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"_15","qualname":"::u32_trait::_15","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 15 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 15 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62160,"byte_end":62217,"line_start":56,"line_end":56,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62349,"byte_end":62352,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"_16","qualname":"::u32_trait::_16","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 16 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 16 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62280,"byte_end":62337,"line_start":58,"line_end":58,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":430},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62469,"byte_end":62472,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"_17","qualname":"::u32_trait::_17","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 17 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 17 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62400,"byte_end":62457,"line_start":60,"line_end":60,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":434},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62589,"byte_end":62592,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"_18","qualname":"::u32_trait::_18","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 18 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 18 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62520,"byte_end":62577,"line_start":62,"line_end":62,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":438},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62709,"byte_end":62712,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"_19","qualname":"::u32_trait::_19","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 19 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 19 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62640,"byte_end":62697,"line_start":64,"line_end":64,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":442},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62829,"byte_end":62832,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"_20","qualname":"::u32_trait::_20","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 20 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 20 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62760,"byte_end":62817,"line_start":66,"line_end":66,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62949,"byte_end":62952,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"_21","qualname":"::u32_trait::_21","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 21 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 21 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62880,"byte_end":62937,"line_start":68,"line_end":68,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":450},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63069,"byte_end":63072,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"_22","qualname":"::u32_trait::_22","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 22 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 22 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63000,"byte_end":63057,"line_start":70,"line_end":70,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":454},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63189,"byte_end":63192,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"_23","qualname":"::u32_trait::_23","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 23 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 23 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63120,"byte_end":63177,"line_start":72,"line_end":72,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63309,"byte_end":63312,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"_24","qualname":"::u32_trait::_24","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 24 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 24 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63240,"byte_end":63297,"line_start":74,"line_end":74,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":462},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63429,"byte_end":63432,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"_25","qualname":"::u32_trait::_25","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 25 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 25 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63360,"byte_end":63417,"line_start":76,"line_end":76,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":466},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63549,"byte_end":63552,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"_26","qualname":"::u32_trait::_26","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 26 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 26 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63480,"byte_end":63537,"line_start":78,"line_end":78,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":470},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63669,"byte_end":63672,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"_27","qualname":"::u32_trait::_27","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 27 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 27 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63600,"byte_end":63657,"line_start":80,"line_end":80,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63789,"byte_end":63792,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"_28","qualname":"::u32_trait::_28","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 28 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 28 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63720,"byte_end":63777,"line_start":82,"line_end":82,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":478},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63909,"byte_end":63912,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"_29","qualname":"::u32_trait::_29","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 29 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 29 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63840,"byte_end":63897,"line_start":84,"line_end":84,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":482},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64029,"byte_end":64032,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"_30","qualname":"::u32_trait::_30","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 30 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 30 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63960,"byte_end":64017,"line_start":86,"line_end":86,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64149,"byte_end":64152,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"_31","qualname":"::u32_trait::_31","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 31 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 31 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64080,"byte_end":64137,"line_start":88,"line_end":88,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64269,"byte_end":64272,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"_32","qualname":"::u32_trait::_32","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 32 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 32 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64200,"byte_end":64257,"line_start":90,"line_end":90,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":494},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64389,"byte_end":64392,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"_33","qualname":"::u32_trait::_33","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 33 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 33 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64320,"byte_end":64377,"line_start":92,"line_end":92,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64509,"byte_end":64512,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"_34","qualname":"::u32_trait::_34","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 34 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 34 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64440,"byte_end":64497,"line_start":94,"line_end":94,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64629,"byte_end":64632,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"_35","qualname":"::u32_trait::_35","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 35 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 35 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64560,"byte_end":64617,"line_start":96,"line_end":96,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64749,"byte_end":64752,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"_36","qualname":"::u32_trait::_36","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 36 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 36 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64680,"byte_end":64737,"line_start":98,"line_end":98,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64869,"byte_end":64872,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"_37","qualname":"::u32_trait::_37","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 37 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 37 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64800,"byte_end":64857,"line_start":100,"line_end":100,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":514},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64989,"byte_end":64992,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"_38","qualname":"::u32_trait::_38","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 38 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 38 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64920,"byte_end":64977,"line_start":102,"line_end":102,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":518},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65109,"byte_end":65112,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"_39","qualname":"::u32_trait::_39","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 39 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 39 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65040,"byte_end":65097,"line_start":104,"line_end":104,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65229,"byte_end":65232,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"_40","qualname":"::u32_trait::_40","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 40 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 40 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65160,"byte_end":65217,"line_start":106,"line_end":106,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65349,"byte_end":65352,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"_41","qualname":"::u32_trait::_41","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 41 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 41 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65280,"byte_end":65337,"line_start":108,"line_end":108,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":530},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65469,"byte_end":65472,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"_42","qualname":"::u32_trait::_42","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 42 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 42 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65400,"byte_end":65457,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":534},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65589,"byte_end":65592,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"_43","qualname":"::u32_trait::_43","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 43 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 43 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65520,"byte_end":65577,"line_start":112,"line_end":112,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":538},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65709,"byte_end":65712,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"_44","qualname":"::u32_trait::_44","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 44 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 44 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65640,"byte_end":65697,"line_start":114,"line_end":114,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":542},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65829,"byte_end":65832,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"_45","qualname":"::u32_trait::_45","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 45 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 45 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65760,"byte_end":65817,"line_start":116,"line_end":116,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":546},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65949,"byte_end":65952,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"_46","qualname":"::u32_trait::_46","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 46 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 46 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65880,"byte_end":65937,"line_start":118,"line_end":118,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":550},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66069,"byte_end":66072,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"_47","qualname":"::u32_trait::_47","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 47 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 47 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66000,"byte_end":66057,"line_start":120,"line_end":120,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":554},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66189,"byte_end":66192,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"_48","qualname":"::u32_trait::_48","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 48 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 48 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66120,"byte_end":66177,"line_start":122,"line_end":122,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":558},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66309,"byte_end":66312,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"_49","qualname":"::u32_trait::_49","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 49 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 49 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66240,"byte_end":66297,"line_start":124,"line_end":124,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66429,"byte_end":66432,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"_50","qualname":"::u32_trait::_50","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 50 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 50 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66360,"byte_end":66417,"line_start":126,"line_end":126,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":566},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66549,"byte_end":66552,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"_51","qualname":"::u32_trait::_51","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 51 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 51 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66480,"byte_end":66537,"line_start":128,"line_end":128,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":570},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66669,"byte_end":66672,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"_52","qualname":"::u32_trait::_52","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 52 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 52 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66600,"byte_end":66657,"line_start":130,"line_end":130,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":574},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66789,"byte_end":66792,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"_53","qualname":"::u32_trait::_53","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 53 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 53 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66720,"byte_end":66777,"line_start":132,"line_end":132,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":578},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66909,"byte_end":66912,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"_54","qualname":"::u32_trait::_54","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 54 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 54 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66840,"byte_end":66897,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":582},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67029,"byte_end":67032,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"_55","qualname":"::u32_trait::_55","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 55 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 55 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66960,"byte_end":67017,"line_start":136,"line_end":136,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":586},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67149,"byte_end":67152,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"_56","qualname":"::u32_trait::_56","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 56 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 56 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67080,"byte_end":67137,"line_start":138,"line_end":138,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":590},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67269,"byte_end":67272,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"_57","qualname":"::u32_trait::_57","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 57 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 57 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67200,"byte_end":67257,"line_start":140,"line_end":140,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":594},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67389,"byte_end":67392,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"_58","qualname":"::u32_trait::_58","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 58 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 58 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67320,"byte_end":67377,"line_start":142,"line_end":142,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":598},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67509,"byte_end":67512,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"_59","qualname":"::u32_trait::_59","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 59 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 59 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67440,"byte_end":67497,"line_start":144,"line_end":144,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":602},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67629,"byte_end":67632,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"_60","qualname":"::u32_trait::_60","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 60 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 60 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67560,"byte_end":67617,"line_start":146,"line_end":146,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":606},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67749,"byte_end":67752,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"_61","qualname":"::u32_trait::_61","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 61 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 61 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67680,"byte_end":67737,"line_start":148,"line_end":148,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":610},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67869,"byte_end":67872,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"_62","qualname":"::u32_trait::_62","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 62 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 62 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67800,"byte_end":67857,"line_start":150,"line_end":150,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":614},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67989,"byte_end":67992,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"_63","qualname":"::u32_trait::_63","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 63 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 63 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67920,"byte_end":67977,"line_start":152,"line_end":152,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68109,"byte_end":68112,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"_64","qualname":"::u32_trait::_64","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 64 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 64 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68040,"byte_end":68097,"line_start":154,"line_end":154,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":622},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68229,"byte_end":68232,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"_65","qualname":"::u32_trait::_65","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 65 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 65 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68160,"byte_end":68217,"line_start":156,"line_end":156,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":626},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68349,"byte_end":68352,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"_66","qualname":"::u32_trait::_66","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 66 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 66 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68280,"byte_end":68337,"line_start":158,"line_end":158,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68469,"byte_end":68472,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"_67","qualname":"::u32_trait::_67","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 67 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 67 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68400,"byte_end":68457,"line_start":160,"line_end":160,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":634},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68589,"byte_end":68592,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"_68","qualname":"::u32_trait::_68","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 68 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 68 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68520,"byte_end":68577,"line_start":162,"line_end":162,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":638},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68709,"byte_end":68712,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"_69","qualname":"::u32_trait::_69","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 69 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 69 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68640,"byte_end":68697,"line_start":164,"line_end":164,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":642},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68829,"byte_end":68832,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"_70","qualname":"::u32_trait::_70","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 70 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 70 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68760,"byte_end":68817,"line_start":166,"line_end":166,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68949,"byte_end":68952,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"_71","qualname":"::u32_trait::_71","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 71 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 71 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68880,"byte_end":68937,"line_start":168,"line_end":168,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":650},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69069,"byte_end":69072,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"_72","qualname":"::u32_trait::_72","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 72 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 72 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69000,"byte_end":69057,"line_start":170,"line_end":170,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":654},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69189,"byte_end":69192,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"_73","qualname":"::u32_trait::_73","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 73 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 73 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69120,"byte_end":69177,"line_start":172,"line_end":172,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69309,"byte_end":69312,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"_74","qualname":"::u32_trait::_74","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 74 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 74 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69240,"byte_end":69297,"line_start":174,"line_end":174,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69429,"byte_end":69432,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"_75","qualname":"::u32_trait::_75","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 75 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 75 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69360,"byte_end":69417,"line_start":176,"line_end":176,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":666},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69549,"byte_end":69552,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"_76","qualname":"::u32_trait::_76","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 76 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 76 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69480,"byte_end":69537,"line_start":178,"line_end":178,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69669,"byte_end":69672,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"_77","qualname":"::u32_trait::_77","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 77 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 77 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69600,"byte_end":69657,"line_start":180,"line_end":180,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":674},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69789,"byte_end":69792,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"_78","qualname":"::u32_trait::_78","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 78 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 78 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69720,"byte_end":69777,"line_start":182,"line_end":182,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69909,"byte_end":69912,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"_79","qualname":"::u32_trait::_79","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 79 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 79 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69840,"byte_end":69897,"line_start":184,"line_end":184,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":682},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70029,"byte_end":70032,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"_80","qualname":"::u32_trait::_80","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 80 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 80 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69960,"byte_end":70017,"line_start":186,"line_end":186,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70149,"byte_end":70152,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"_81","qualname":"::u32_trait::_81","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 81 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 81 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70080,"byte_end":70137,"line_start":188,"line_end":188,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":690},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70269,"byte_end":70272,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"_82","qualname":"::u32_trait::_82","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 82 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 82 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70200,"byte_end":70257,"line_start":190,"line_end":190,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":694},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70389,"byte_end":70392,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"_83","qualname":"::u32_trait::_83","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 83 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 83 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70320,"byte_end":70377,"line_start":192,"line_end":192,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":698},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70509,"byte_end":70512,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"_84","qualname":"::u32_trait::_84","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 84 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 84 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70440,"byte_end":70497,"line_start":194,"line_end":194,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":702},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70629,"byte_end":70632,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"_85","qualname":"::u32_trait::_85","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 85 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 85 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70560,"byte_end":70617,"line_start":196,"line_end":196,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":706},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70749,"byte_end":70752,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"_86","qualname":"::u32_trait::_86","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 86 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 86 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70680,"byte_end":70737,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70869,"byte_end":70872,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"_87","qualname":"::u32_trait::_87","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 87 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 87 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70800,"byte_end":70857,"line_start":200,"line_end":200,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":714},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70989,"byte_end":70992,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"name":"_88","qualname":"::u32_trait::_88","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 88 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 88 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70920,"byte_end":70977,"line_start":202,"line_end":202,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71109,"byte_end":71112,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"_89","qualname":"::u32_trait::_89","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 89 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 89 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71040,"byte_end":71097,"line_start":204,"line_end":204,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71229,"byte_end":71232,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"_90","qualname":"::u32_trait::_90","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 90 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 90 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71160,"byte_end":71217,"line_start":206,"line_end":206,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71349,"byte_end":71352,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"_91","qualname":"::u32_trait::_91","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 91 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 91 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71280,"byte_end":71337,"line_start":208,"line_end":208,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":730},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71469,"byte_end":71472,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"_92","qualname":"::u32_trait::_92","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 92 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 92 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71400,"byte_end":71457,"line_start":210,"line_end":210,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":734},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71589,"byte_end":71592,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"_93","qualname":"::u32_trait::_93","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 93 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 93 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71520,"byte_end":71577,"line_start":212,"line_end":212,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":738},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71709,"byte_end":71712,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"_94","qualname":"::u32_trait::_94","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 94 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 94 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71640,"byte_end":71697,"line_start":214,"line_end":214,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":742},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71829,"byte_end":71832,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"_95","qualname":"::u32_trait::_95","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 95 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 95 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71760,"byte_end":71817,"line_start":216,"line_end":216,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":746},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71949,"byte_end":71952,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"_96","qualname":"::u32_trait::_96","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 96 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 96 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71880,"byte_end":71937,"line_start":218,"line_end":218,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":750},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72069,"byte_end":72072,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"_97","qualname":"::u32_trait::_97","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 97 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 97 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72000,"byte_end":72057,"line_start":220,"line_end":220,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72189,"byte_end":72192,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"_98","qualname":"::u32_trait::_98","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 98 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 98 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72120,"byte_end":72177,"line_start":222,"line_end":222,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":758},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72309,"byte_end":72312,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"_99","qualname":"::u32_trait::_99","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 99 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 99 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72240,"byte_end":72297,"line_start":224,"line_end":224,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72430,"byte_end":72434,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"_100","qualname":"::u32_trait::_100","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 100 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 100 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72360,"byte_end":72418,"line_start":226,"line_end":226,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":766},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72554,"byte_end":72558,"line_start":229,"line_end":229,"column_start":12,"column_end":16},"name":"_112","qualname":"::u32_trait::_112","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 112 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 112 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72484,"byte_end":72542,"line_start":228,"line_end":228,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":770},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72678,"byte_end":72682,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"_128","qualname":"::u32_trait::_128","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 128 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 128 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72608,"byte_end":72666,"line_start":230,"line_end":230,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":774},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72802,"byte_end":72806,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"_160","qualname":"::u32_trait::_160","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 160 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 160 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72732,"byte_end":72790,"line_start":232,"line_end":232,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72926,"byte_end":72930,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"_192","qualname":"::u32_trait::_192","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 192 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 192 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72856,"byte_end":72914,"line_start":234,"line_end":234,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":782},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73050,"byte_end":73054,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"_224","qualname":"::u32_trait::_224","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 224 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 224 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72980,"byte_end":73038,"line_start":236,"line_end":236,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":786},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73174,"byte_end":73178,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"_256","qualname":"::u32_trait::_256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 256 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 256 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73104,"byte_end":73162,"line_start":238,"line_end":238,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":790},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73298,"byte_end":73302,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"_384","qualname":"::u32_trait::_384","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 384 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 384 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73228,"byte_end":73286,"line_start":240,"line_end":240,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":794},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73422,"byte_end":73426,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"_512","qualname":"::u32_trait::_512","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 512 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 512 for the `Value` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73352,"byte_end":73410,"line_start":242,"line_end":242,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":798},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ed25519","qualname":"::ed25519","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":4008},{"krate":0,"index":802},{"krate":0,"index":4010},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":4012},{"krate":0,"index":805},{"krate":0,"index":4014},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":4044},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":4048},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":4052},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":4060},{"krate":0,"index":834},{"krate":0,"index":4062},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":2468},{"krate":0,"index":2520},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2506},{"krate":0,"index":2504},{"krate":0,"index":2501},{"krate":0,"index":2500},{"krate":0,"index":2490},{"krate":0,"index":2485},{"krate":0,"index":2483},{"krate":0,"index":2472},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":2523},{"krate":0,"index":2543},{"krate":0,"index":2538},{"krate":0,"index":2527},{"krate":0,"index":887},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":915},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":2553},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2569},{"krate":0,"index":2567},{"krate":0,"index":2561},{"krate":0,"index":2556},{"krate":0,"index":2578},{"krate":0,"index":2596},{"krate":0,"index":2595},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2587},{"krate":0,"index":934},{"krate":0,"index":940},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":980},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":989}],"decl_id":null,"docs":" Simple Ed25519 API.\n","sig":null,"attributes":[{"value":"/ Simple Ed25519 API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":74186,"byte_end":74209,"line_start":19,"line_end":19,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":836},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":75194,"byte_end":75203,"line_start":49,"line_end":49,"column_start":11,"column_end":20},"name":"CRYPTO_ID","qualname":"::ed25519::CRYPTO_ID","value":"CryptoTypeId","parent":null,"children":[],"decl_id":null,"docs":" An identifier used to match public keys against ed25519 keys\n","sig":null,"attributes":[{"value":"/ An identifier used to match public keys against ed25519 keys","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":75119,"byte_end":75183,"line_start":48,"line_end":48,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2468},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":75701,"byte_end":75707,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Public","qualname":"::ed25519::Public","value":"","parent":null,"children":[],"decl_id":null,"docs":" A public key.\n","sig":null,"attributes":[{"value":"/ A public key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":75528,"byte_end":75545,"line_start":57,"line_end":57,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2470},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":75708,"byte_end":75720,"line_start":60,"line_end":60,"column_start":19,"column_end":31},"name":"0","qualname":"::ed25519::Public::0","value":"[u8; 32]","parent":{"krate":0,"index":2468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":75783,"byte_end":75787,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"Pair","qualname":"::ed25519::Pair","value":"","parent":null,"children":[],"decl_id":null,"docs":" A key pair.\n","sig":null,"attributes":[{"value":"/ A key pair.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":75724,"byte_end":75739,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":75740,"byte_end":75771,"line_start":63,"line_end":63,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2523},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":78472,"byte_end":78481,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ed25519::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A signature (a 512-bit value).\n","sig":null,"attributes":[{"value":"/ A signature (a 512-bit value).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":78387,"byte_end":78421,"line_start":192,"line_end":192,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2525},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":78482,"byte_end":78494,"line_start":194,"line_end":194,"column_start":22,"column_end":34},"name":"0","qualname":"::ed25519::Signature::0","value":"[u8; 64]","parent":{"krate":0,"index":2523},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80872,"byte_end":80880,"line_start":303,"line_end":303,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Signature>::from_raw","value":"pub fn from_raw([u8; ]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 64-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 64-byte `data`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80660,"byte_end":80709,"line_start":299,"line_end":299,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80711,"byte_end":80714,"line_start":300,"line_end":300,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80716,"byte_end":80796,"line_start":301,"line_end":301,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80798,"byte_end":80863,"line_start":302,"line_end":302,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81167,"byte_end":81177,"line_start":311,"line_end":311,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<Signature>::from_slice","value":"pub fn from_slice(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given slice that should be 64 bytes long.","sig":null,"attributes":[{"value":"/ A new instance from the given slice that should be 64 bytes long.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80935,"byte_end":81004,"line_start":307,"line_end":307,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81006,"byte_end":81009,"line_start":308,"line_end":308,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81011,"byte_end":81091,"line_start":309,"line_end":309,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81093,"byte_end":81158,"line_start":310,"line_end":310,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81468,"byte_end":81477,"line_start":321,"line_end":321,"column_start":9,"column_end":18},"name":"from_h512","qualname":"<Signature>::from_h512","value":"pub fn from_h512(H512) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H512.","sig":null,"attributes":[{"value":"/ A new instance from an H512.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81273,"byte_end":81305,"line_start":317,"line_end":317,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81307,"byte_end":81310,"line_start":318,"line_end":318,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81312,"byte_end":81392,"line_start":319,"line_end":319,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81394,"byte_end":81459,"line_start":320,"line_end":320,"column_start":2,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2553},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81680,"byte_end":81698,"line_start":329,"line_end":329,"column_start":12,"column_end":30},"name":"LocalizedSignature","qualname":"::ed25519::LocalizedSignature","value":"LocalizedSignature { signer, signature }","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2555}],"decl_id":null,"docs":" A localized signature also contains sender information.\n","sig":null,"attributes":[{"value":"/ A localized signature also contains sender information.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81530,"byte_end":81589,"line_start":326,"line_end":326,"column_start":1,"column_end":60}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81590,"byte_end":81613,"line_start":327,"line_end":327,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2554},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81740,"byte_end":81746,"line_start":331,"line_end":331,"column_start":6,"column_end":12},"name":"signer","qualname":"::ed25519::LocalizedSignature::signer","value":"ed25519::Public","parent":{"krate":0,"index":2553},"children":[],"decl_id":null,"docs":" The signer of the signature.\n","sig":null,"attributes":[{"value":"/ The signer of the signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81702,"byte_end":81734,"line_start":330,"line_end":330,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2555},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81788,"byte_end":81797,"line_start":333,"line_end":333,"column_start":6,"column_end":15},"name":"signature","qualname":"::ed25519::LocalizedSignature::signature","value":"ed25519::Signature","parent":{"krate":0,"index":2553},"children":[],"decl_id":null,"docs":" The signature itself.\n","sig":null,"attributes":[{"value":"/ The signature itself.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81757,"byte_end":81782,"line_start":332,"line_end":332,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2579},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81962,"byte_end":81971,"line_start":341,"line_end":341,"column_start":2,"column_end":11},"name":"BadBase58","qualname":"::ed25519::PublicError::BadBase58","value":"PublicError::BadBase58","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Bad alphabet.\n","sig":null,"attributes":[{"value":"/ Bad alphabet.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81943,"byte_end":81960,"line_start":340,"line_end":340,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2581},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81991,"byte_end":82000,"line_start":343,"line_end":343,"column_start":2,"column_end":11},"name":"BadLength","qualname":"::ed25519::PublicError::BadLength","value":"PublicError::BadLength","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Bad length.\n","sig":null,"attributes":[{"value":"/ Bad length.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81974,"byte_end":81989,"line_start":342,"line_end":342,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2583},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82025,"byte_end":82039,"line_start":345,"line_end":345,"column_start":2,"column_end":16},"name":"UnknownVersion","qualname":"::ed25519::PublicError::UnknownVersion","value":"PublicError::UnknownVersion","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Unknown version.\n","sig":null,"attributes":[{"value":"/ Unknown version.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82003,"byte_end":82023,"line_start":344,"line_end":344,"column_start":2,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2585},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82065,"byte_end":82080,"line_start":347,"line_end":347,"column_start":2,"column_end":17},"name":"InvalidChecksum","qualname":"::ed25519::PublicError::InvalidChecksum","value":"PublicError::InvalidChecksum","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Invalid checksum.\n","sig":null,"attributes":[{"value":"/ Invalid checksum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82042,"byte_end":82063,"line_start":346,"line_end":346,"column_start":2,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2578},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81928,"byte_end":81939,"line_start":339,"line_end":339,"column_start":10,"column_end":21},"name":"PublicError","qualname":"::ed25519::PublicError","value":"pub enum PublicError {\n\n    /// Bad alphabet.\n    BadBase58,\n\n    /// Bad length.\n    BadLength,\n\n    /// Unknown version.\n    UnknownVersion,\n\n    /// Invalid checksum.\n    InvalidChecksum,\n}","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2581},{"krate":0,"index":2583},{"krate":0,"index":2585}],"decl_id":null,"docs":" An error type for SS58 decoding.\n","sig":null,"attributes":[{"value":"/ An error type for SS58 decoding.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81813,"byte_end":81849,"line_start":336,"line_end":336,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":81850,"byte_end":81873,"line_start":337,"line_end":337,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82310,"byte_end":82318,"line_start":355,"line_end":355,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Public>::from_raw","value":"pub fn from_raw([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 32-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 32-byte `data`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82100,"byte_end":82149,"line_start":351,"line_end":351,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82151,"byte_end":82154,"line_start":352,"line_end":352,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82156,"byte_end":82237,"line_start":353,"line_end":353,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82239,"byte_end":82301,"line_start":354,"line_end":354,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82558,"byte_end":82567,"line_start":363,"line_end":363,"column_start":9,"column_end":18},"name":"from_h256","qualname":"<Public>::from_h256","value":"pub fn from_h256(H256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H256.","sig":null,"attributes":[{"value":"/ A new instance from an H256.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82365,"byte_end":82397,"line_start":359,"line_end":359,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82399,"byte_end":82402,"line_start":360,"line_end":360,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82404,"byte_end":82485,"line_start":361,"line_end":361,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82487,"byte_end":82549,"line_start":362,"line_end":362,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82660,"byte_end":82672,"line_start":368,"line_end":368,"column_start":9,"column_end":21},"name":"as_array_ref","qualname":"<Public>::as_array_ref","value":"pub fn as_array_ref(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Return a slice filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a slice filled with raw data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82611,"byte_end":82651,"line_start":367,"line_end":367,"column_start":2,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":954},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83919,"byte_end":83932,"line_start":417,"line_end":417,"column_start":2,"column_end":15},"name":"SoftKeyInPath","qualname":"::ed25519::DeriveError::SoftKeyInPath","value":"DeriveError::SoftKeyInPath","parent":{"krate":0,"index":953},"children":[],"decl_id":null,"docs":" A soft key was found in the path (and is unsupported).\n","sig":null,"attributes":[{"value":"/ A soft key was found in the path (and is unsupported).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83859,"byte_end":83917,"line_start":416,"line_end":416,"column_start":2,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":953},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83844,"byte_end":83855,"line_start":415,"line_end":415,"column_start":10,"column_end":21},"name":"DeriveError","qualname":"::ed25519::DeriveError","value":"pub enum DeriveError {\n\n    /// A soft key was found in the path (and is unsupported).\n    SoftKeyInPath,\n}","parent":null,"children":[{"krate":0,"index":954}],"decl_id":null,"docs":" An error when deriving a key.\n","sig":null,"attributes":[{"value":"/ An error when deriving a key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83769,"byte_end":83802,"line_start":413,"line_end":413,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83803,"byte_end":83834,"line_start":414,"line_end":414,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":87788,"byte_end":87792,"line_start":538,"line_end":538,"column_start":9,"column_end":13},"name":"seed","qualname":"<Pair>::seed","value":"pub fn seed(&Self) -> &Seed","parent":null,"children":[],"decl_id":null,"docs":" Get the seed for this key.\n","sig":null,"attributes":[{"value":"/ Get the seed for this key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":87749,"byte_end":87779,"line_start":537,"line_end":537,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":88055,"byte_end":88073,"line_start":545,"line_end":545,"column_start":9,"column_end":27},"name":"from_legacy_string","qualname":"<Pair>::from_legacy_string","value":"pub fn from_legacy_string(&str, Option<&str>) -> Pair","parent":null,"children":[],"decl_id":null,"docs":" Exactly as `from_string` except that if no matches are found then, the the first 32\n characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.\n","sig":null,"attributes":[{"value":"/ Exactly as `from_string` except that if no matches are found then, the the first 32","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":87843,"byte_end":87930,"line_start":542,"line_end":542,"column_start":2,"column_end":89}},{"value":"/ characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":87932,"byte_end":88021,"line_start":543,"line_end":543,"column_start":2,"column_end":91}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":88023,"byte_end":88046,"line_start":544,"line_end":544,"column_start":2,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":991},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sr25519","qualname":"::sr25519","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":4082},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":4108},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":4116},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":4118},{"krate":0,"index":1025},{"krate":0,"index":4120},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":4122},{"krate":0,"index":1028},{"krate":0,"index":4124},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":4130},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":4134},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":4142},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":2598},{"krate":0,"index":2650},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2636},{"krate":0,"index":2634},{"krate":0,"index":2631},{"krate":0,"index":2630},{"krate":0,"index":2620},{"krate":0,"index":2615},{"krate":0,"index":2613},{"krate":0,"index":2602},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1071},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":2653},{"krate":0,"index":2673},{"krate":0,"index":2668},{"krate":0,"index":2657},{"krate":0,"index":1089},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":2683},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2688},{"krate":0,"index":2686},{"krate":0,"index":1132},{"krate":0,"index":1138},{"krate":0,"index":1141},{"krate":0,"index":1147},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1196},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206}],"decl_id":null,"docs":" Simple sr25519 (Schnorr-Ristretto) API.","sig":null,"attributes":[{"value":"/ Simple sr25519 (Schnorr-Ristretto) API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":94347,"byte_end":94390,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":94391,"byte_end":94394,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note: `CHAIN_CODE_LENGTH` must be equal to `crate::crypto::JUNCTION_ID_LEN`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":94395,"byte_end":94474,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ for this to work.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":94475,"byte_end":94496,"line_start":22,"line_end":22,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1041},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":95732,"byte_end":95741,"line_start":59,"line_end":59,"column_start":11,"column_end":20},"name":"CRYPTO_ID","qualname":"::sr25519::CRYPTO_ID","value":"CryptoTypeId","parent":null,"children":[],"decl_id":null,"docs":" An identifier used to match public keys against sr25519 keys\n","sig":null,"attributes":[{"value":"/ An identifier used to match public keys against sr25519 keys","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":95657,"byte_end":95721,"line_start":58,"line_end":58,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2598},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":95997,"byte_end":96003,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"Public","qualname":"::sr25519::Public","value":"","parent":null,"children":[],"decl_id":null,"docs":" An Schnorrkel/Ristretto x25519 (\"sr25519\") public key.\n","sig":null,"attributes":[{"value":"/ An Schnorrkel/Ristretto x25519 (\"sr25519\") public key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":95783,"byte_end":95841,"line_start":61,"line_end":61,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2600},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96004,"byte_end":96016,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"name":"0","qualname":"::sr25519::Public::0","value":"[u8; 32]","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1042},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96120,"byte_end":96124,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"Pair","qualname":"::sr25519::Pair","value":"","parent":null,"children":[],"decl_id":null,"docs":" An Schnorrkel/Ristretto x25519 (\"sr25519\") key pair.\n","sig":null,"attributes":[{"value":"/ An Schnorrkel/Ristretto x25519 (\"sr25519\") key pair.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96020,"byte_end":96076,"line_start":66,"line_end":66,"column_start":1,"column_end":57}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96077,"byte_end":96108,"line_start":67,"line_end":67,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2653},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98800,"byte_end":98809,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"Signature","qualname":"::sr25519::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An Schnorrkel/Ristretto x25519 (\"sr25519\") signature.","sig":null,"attributes":[{"value":"/ An Schnorrkel/Ristretto x25519 (\"sr25519\") signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98596,"byte_end":98653,"line_start":189,"line_end":189,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98654,"byte_end":98657,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ Instead of importing it for the local module, alias it to be available as a public type","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98658,"byte_end":98749,"line_start":191,"line_end":191,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":2655},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98810,"byte_end":98822,"line_start":193,"line_end":193,"column_start":22,"column_end":34},"name":"0","qualname":"::sr25519::Signature::0","value":"[u8; 64]","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2683},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101358,"byte_end":101376,"line_start":308,"line_end":308,"column_start":12,"column_end":30},"name":"LocalizedSignature","qualname":"::sr25519::LocalizedSignature","value":"LocalizedSignature { signer, signature }","parent":null,"children":[{"krate":0,"index":2684},{"krate":0,"index":2685}],"decl_id":null,"docs":" A localized signature also contains sender information.\n NOTE: Encode and Decode traits are supported in ed25519 but not possible for now here.\n","sig":null,"attributes":[{"value":"/ A localized signature also contains sender information.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101133,"byte_end":101192,"line_start":304,"line_end":304,"column_start":1,"column_end":60}},{"value":"/ NOTE: Encode and Decode traits are supported in ed25519 but not possible for now here.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101193,"byte_end":101283,"line_start":305,"line_end":305,"column_start":1,"column_end":91}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101284,"byte_end":101307,"line_start":306,"line_end":306,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2684},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101418,"byte_end":101424,"line_start":310,"line_end":310,"column_start":6,"column_end":12},"name":"signer","qualname":"::sr25519::LocalizedSignature::signer","value":"sr25519::Public","parent":{"krate":0,"index":2683},"children":[],"decl_id":null,"docs":" The signer of the signature.\n","sig":null,"attributes":[{"value":"/ The signer of the signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101380,"byte_end":101412,"line_start":309,"line_end":309,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2685},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101466,"byte_end":101475,"line_start":312,"line_end":312,"column_start":6,"column_end":15},"name":"signature","qualname":"::sr25519::LocalizedSignature::signature","value":"sr25519::Signature","parent":{"krate":0,"index":2683},"children":[],"decl_id":null,"docs":" The signature itself.\n","sig":null,"attributes":[{"value":"/ The signature itself.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101435,"byte_end":101460,"line_start":311,"line_end":311,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101871,"byte_end":101879,"line_start":322,"line_end":322,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Signature>::from_raw","value":"pub fn from_raw([u8; ]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 64-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 64-byte `data`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101509,"byte_end":101558,"line_start":316,"line_end":316,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101560,"byte_end":101563,"line_start":317,"line_end":317,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101565,"byte_end":101639,"line_start":318,"line_end":318,"column_start":2,"column_end":76}},{"value":"/ it if you are certain that the array actually is a signature, or if you","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101641,"byte_end":101716,"line_start":319,"line_end":319,"column_start":2,"column_end":77}},{"value":"/ immediately verify the signature.  All functions that verify signatures","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101718,"byte_end":101793,"line_start":320,"line_end":320,"column_start":2,"column_end":77}},{"value":"/ will fail if the `Signature` is not actually a valid signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101795,"byte_end":101862,"line_start":321,"line_end":321,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102166,"byte_end":102176,"line_start":330,"line_end":330,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<Signature>::from_slice","value":"pub fn from_slice(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given slice that should be 64 bytes long.","sig":null,"attributes":[{"value":"/ A new instance from the given slice that should be 64 bytes long.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101934,"byte_end":102003,"line_start":326,"line_end":326,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102005,"byte_end":102008,"line_start":327,"line_end":327,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102010,"byte_end":102090,"line_start":328,"line_end":328,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102092,"byte_end":102157,"line_start":329,"line_end":329,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102467,"byte_end":102476,"line_start":340,"line_end":340,"column_start":9,"column_end":18},"name":"from_h512","qualname":"<Signature>::from_h512","value":"pub fn from_h512(H512) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H512.","sig":null,"attributes":[{"value":"/ A new instance from an H512.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102272,"byte_end":102304,"line_start":336,"line_end":336,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102306,"byte_end":102309,"line_start":337,"line_end":337,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102311,"byte_end":102391,"line_start":338,"line_end":338,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102393,"byte_end":102458,"line_start":339,"line_end":339,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103273,"byte_end":103281,"line_start":367,"line_end":367,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Public>::from_raw","value":"pub fn from_raw([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 32-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 32-byte `data`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103063,"byte_end":103112,"line_start":363,"line_end":363,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103114,"byte_end":103117,"line_start":364,"line_end":364,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103119,"byte_end":103200,"line_start":365,"line_end":365,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103202,"byte_end":103264,"line_start":366,"line_end":366,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103521,"byte_end":103530,"line_start":375,"line_end":375,"column_start":9,"column_end":18},"name":"from_h256","qualname":"<Public>::from_h256","value":"pub fn from_h256(H256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H256.","sig":null,"attributes":[{"value":"/ A new instance from an H256.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103328,"byte_end":103360,"line_start":371,"line_end":371,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103362,"byte_end":103365,"line_start":372,"line_end":372,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103367,"byte_end":103448,"line_start":373,"line_end":373,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103450,"byte_end":103512,"line_start":374,"line_end":374,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103623,"byte_end":103635,"line_start":380,"line_end":380,"column_start":9,"column_end":21},"name":"as_array_ref","qualname":"<Public>::as_array_ref","value":"pub fn as_array_ref(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Return a slice filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a slice filled with raw data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103574,"byte_end":103614,"line_start":379,"line_end":379,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109359,"byte_end":109371,"line_start":581,"line_end":581,"column_start":9,"column_end":21},"name":"from_entropy","qualname":"<Pair>::from_entropy","value":"pub fn from_entropy(&[u8], Option<&str>) -> (Pair, Seed)","parent":null,"children":[],"decl_id":null,"docs":" Make a new key pair from binary data derived from a valid seed phrase.","sig":null,"attributes":[{"value":"/ Make a new key pair from binary data derived from a valid seed phrase.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109148,"byte_end":109222,"line_start":577,"line_end":577,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109224,"byte_end":109227,"line_start":578,"line_end":578,"column_start":2,"column_end":5}},{"value":"/ This uses a key derivation function to convert the entropy into a seed, then returns","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109229,"byte_end":109317,"line_start":579,"line_end":579,"column_start":2,"column_end":90}},{"value":"/ the pair generated from it.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109319,"byte_end":109350,"line_start":580,"line_end":580,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109864,"byte_end":109881,"line_start":592,"line_end":592,"column_start":9,"column_end":26},"name":"verify_deprecated","qualname":"<Pair>::verify_deprecated","value":"pub fn verify_deprecated<M: AsRef<[u8]>>(&Signature, M, &Public) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify a signature on a message. Returns `true` if the signature is good.\n Supports old 0.1.1 deprecated signatures and should be used only for backward\n compatibility.\n","sig":null,"attributes":[{"value":"/ Verify a signature on a message. Returns `true` if the signature is good.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109675,"byte_end":109752,"line_start":589,"line_end":589,"column_start":2,"column_end":79}},{"value":"/ Supports old 0.1.1 deprecated signatures and should be used only for backward","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109754,"byte_end":109835,"line_start":590,"line_end":590,"column_start":2,"column_end":83}},{"value":"/ compatibility.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109837,"byte_end":109855,"line_start":591,"line_end":591,"column_start":2,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1206},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110737,"byte_end":110749,"line_start":625,"line_end":625,"column_start":8,"column_end":20},"name":"verify_batch","qualname":"::sr25519::verify_batch","value":"pub fn verify_batch(Vec<&[u8]>, Vec<&Signature>, Vec<&Public>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Batch verification.","sig":null,"attributes":[{"value":"/ Batch verification.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110531,"byte_end":110554,"line_start":619,"line_end":619,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110555,"byte_end":110558,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ `messages`, `signatures` and `pub_keys` should all have equal length.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110559,"byte_end":110632,"line_start":621,"line_end":621,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110633,"byte_end":110636,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ Returns `true` if all signatures are correct, `false` otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110637,"byte_end":110705,"line_start":623,"line_end":623,"column_start":1,"column_end":69}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110706,"byte_end":110729,"line_start":624,"line_end":624,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":1208},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdsa","qualname":"::ecdsa","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":4148},{"krate":0,"index":1213},{"krate":0,"index":4150},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":4178},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":4182},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":4186},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":4194},{"krate":0,"index":1242},{"krate":0,"index":4196},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":2697},{"krate":0,"index":2727},{"krate":0,"index":2717},{"krate":0,"index":2712},{"krate":0,"index":2701},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":2729},{"krate":0,"index":2747},{"krate":0,"index":2746},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2738},{"krate":0,"index":1256},{"krate":0,"index":1262},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1299},{"krate":0,"index":2749},{"krate":0,"index":2769},{"krate":0,"index":2764},{"krate":0,"index":2753},{"krate":0,"index":1302},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1328},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1341},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1356},{"krate":0,"index":1360},{"krate":0,"index":2779},{"krate":0,"index":2782},{"krate":0,"index":1363},{"krate":0,"index":1386},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395}],"decl_id":null,"docs":" Simple ECDSA API.\n","sig":null,"attributes":[{"value":"/ Simple ECDSA API.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":120287,"byte_end":120308,"line_start":19,"line_end":19,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1246},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121233,"byte_end":121242,"line_start":46,"line_end":46,"column_start":11,"column_end":20},"name":"CRYPTO_ID","qualname":"::ecdsa::CRYPTO_ID","value":"CryptoTypeId","parent":null,"children":[],"decl_id":null,"docs":" An identifier used to match public keys against ecdsa keys\n","sig":null,"attributes":[{"value":"/ An identifier used to match public keys against ecdsa keys","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121160,"byte_end":121222,"line_start":45,"line_end":45,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2697},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121595,"byte_end":121601,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"Public","qualname":"::ecdsa::Public","value":"","parent":null,"children":[],"decl_id":null,"docs":" The ECDSA compressed public key.\n","sig":null,"attributes":[{"value":"/ The ECDSA compressed public key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121501,"byte_end":121537,"line_start":54,"line_end":54,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2730},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122118,"byte_end":122127,"line_start":83,"line_end":83,"column_start":2,"column_end":11},"name":"BadBase58","qualname":"::ecdsa::PublicError::BadBase58","value":"PublicError::BadBase58","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" Bad alphabet.\n","sig":null,"attributes":[{"value":"/ Bad alphabet.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122099,"byte_end":122116,"line_start":82,"line_end":82,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2732},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122147,"byte_end":122156,"line_start":85,"line_end":85,"column_start":2,"column_end":11},"name":"BadLength","qualname":"::ecdsa::PublicError::BadLength","value":"PublicError::BadLength","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" Bad length.\n","sig":null,"attributes":[{"value":"/ Bad length.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122130,"byte_end":122145,"line_start":84,"line_end":84,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122181,"byte_end":122195,"line_start":87,"line_end":87,"column_start":2,"column_end":16},"name":"UnknownVersion","qualname":"::ecdsa::PublicError::UnknownVersion","value":"PublicError::UnknownVersion","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" Unknown version.\n","sig":null,"attributes":[{"value":"/ Unknown version.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122159,"byte_end":122179,"line_start":86,"line_end":86,"column_start":2,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2736},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122221,"byte_end":122236,"line_start":89,"line_end":89,"column_start":2,"column_end":17},"name":"InvalidChecksum","qualname":"::ecdsa::PublicError::InvalidChecksum","value":"PublicError::InvalidChecksum","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" Invalid checksum.\n","sig":null,"attributes":[{"value":"/ Invalid checksum.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122198,"byte_end":122219,"line_start":88,"line_end":88,"column_start":2,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2729},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122084,"byte_end":122095,"line_start":81,"line_end":81,"column_start":10,"column_end":21},"name":"PublicError","qualname":"::ecdsa::PublicError","value":"pub enum PublicError {\n\n    /// Bad alphabet.\n    BadBase58,\n\n    /// Bad length.\n    BadLength,\n\n    /// Unknown version.\n    UnknownVersion,\n\n    /// Invalid checksum.\n    InvalidChecksum,\n}","parent":null,"children":[{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2736}],"decl_id":null,"docs":" An error type for SS58 decoding.\n","sig":null,"attributes":[{"value":"/ An error type for SS58 decoding.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121969,"byte_end":122005,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122006,"byte_end":122029,"line_start":79,"line_end":79,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122466,"byte_end":122474,"line_start":97,"line_end":97,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Public>::from_raw","value":"pub fn from_raw([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 33-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 33-byte `data`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122256,"byte_end":122305,"line_start":93,"line_end":93,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122307,"byte_end":122310,"line_start":94,"line_end":94,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122312,"byte_end":122393,"line_start":95,"line_end":95,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122395,"byte_end":122457,"line_start":96,"line_end":96,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122686,"byte_end":122695,"line_start":105,"line_end":105,"column_start":9,"column_end":18},"name":"from_full","qualname":"<Public>::from_full","value":"pub fn from_full(&[u8]) -> Result<Self, ()>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from the given full public key.","sig":null,"attributes":[{"value":"/ Create a new instance from the given full public key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122519,"byte_end":122576,"line_start":101,"line_end":101,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122578,"byte_end":122581,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ This will convert the full public key into the compressed format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122583,"byte_end":122652,"line_start":103,"line_end":103,"column_start":2,"column_end":71}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122654,"byte_end":122677,"line_start":104,"line_end":104,"column_start":2,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2749},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":125553,"byte_end":125562,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ecdsa::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A signature (a 512-bit value, plus 8 bits for recovery ID).\n","sig":null,"attributes":[{"value":"/ A signature (a 512-bit value, plus 8 bits for recovery ID).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":125439,"byte_end":125502,"line_start":229,"line_end":229,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127860,"byte_end":127868,"line_start":334,"line_end":334,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Signature>::from_raw","value":"pub fn from_raw([u8; ]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 65-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 65-byte `data`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127648,"byte_end":127697,"line_start":330,"line_end":330,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127699,"byte_end":127702,"line_start":331,"line_end":331,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127704,"byte_end":127784,"line_start":332,"line_end":332,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127786,"byte_end":127851,"line_start":333,"line_end":333,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":128155,"byte_end":128165,"line_start":342,"line_end":342,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<Signature>::from_slice","value":"pub fn from_slice(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given slice that should be 65 bytes long.","sig":null,"attributes":[{"value":"/ A new instance from the given slice that should be 65 bytes long.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127923,"byte_end":127992,"line_start":338,"line_end":338,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127994,"byte_end":127997,"line_start":339,"line_end":339,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127999,"byte_end":128079,"line_start":340,"line_end":340,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":128081,"byte_end":128146,"line_start":341,"line_end":341,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":128364,"byte_end":128371,"line_start":350,"line_end":350,"column_start":9,"column_end":16},"name":"recover","qualname":"<Signature>::recover","value":"pub fn recover<M: AsRef<[u8]>>(&Self, M) -> Option<Public>","parent":null,"children":[],"decl_id":null,"docs":" Recover the public key from this signature and a message.\n","sig":null,"attributes":[{"value":"/ Recover the public key from this signature and a message.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":128261,"byte_end":128322,"line_start":348,"line_end":348,"column_start":2,"column_end":63}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":128324,"byte_end":128355,"line_start":349,"line_end":349,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1361},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":129835,"byte_end":129848,"line_start":394,"line_end":394,"column_start":2,"column_end":15},"name":"SoftKeyInPath","qualname":"::ecdsa::DeriveError::SoftKeyInPath","value":"DeriveError::SoftKeyInPath","parent":{"krate":0,"index":1360},"children":[],"decl_id":null,"docs":" A soft key was found in the path (and is unsupported).\n","sig":null,"attributes":[{"value":"/ A soft key was found in the path (and is unsupported).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":129775,"byte_end":129833,"line_start":393,"line_end":393,"column_start":2,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":1360},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":129760,"byte_end":129771,"line_start":392,"line_end":392,"column_start":10,"column_end":21},"name":"DeriveError","qualname":"::ecdsa::DeriveError","value":"pub enum DeriveError {\n\n    /// A soft key was found in the path (and is unsupported).\n    SoftKeyInPath,\n}","parent":null,"children":[{"krate":0,"index":1361}],"decl_id":null,"docs":" An error when deriving a key.\n","sig":null,"attributes":[{"value":"/ An error when deriving a key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":129685,"byte_end":129718,"line_start":390,"line_end":390,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":129719,"byte_end":129750,"line_start":391,"line_end":391,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2779},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":129929,"byte_end":129933,"line_start":400,"line_end":400,"column_start":12,"column_end":16},"name":"Pair","qualname":"::ecdsa::Pair","value":"Pair {  }","parent":null,"children":[{"krate":0,"index":2780},{"krate":0,"index":2781}],"decl_id":null,"docs":" A key pair.\n","sig":null,"attributes":[{"value":"/ A key pair.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":129853,"byte_end":129868,"line_start":397,"line_end":397,"column_start":1,"column_end":16}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":129869,"byte_end":129900,"line_start":398,"line_end":398,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134119,"byte_end":134123,"line_start":519,"line_end":519,"column_start":9,"column_end":13},"name":"seed","qualname":"<Pair>::seed","value":"pub fn seed(&Self) -> Seed","parent":null,"children":[],"decl_id":null,"docs":" Get the seed for this key.\n","sig":null,"attributes":[{"value":"/ Get the seed for this key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134080,"byte_end":134110,"line_start":518,"line_end":518,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134384,"byte_end":134402,"line_start":526,"line_end":526,"column_start":9,"column_end":27},"name":"from_legacy_string","qualname":"<Pair>::from_legacy_string","value":"pub fn from_legacy_string(&str, Option<&str>) -> Pair","parent":null,"children":[],"decl_id":null,"docs":" Exactly as `from_string` except that if no matches are found then, the the first 32\n characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.\n","sig":null,"attributes":[{"value":"/ Exactly as `from_string` except that if no matches are found then, the the first 32","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134172,"byte_end":134259,"line_start":523,"line_end":523,"column_start":2,"column_end":89}},{"value":"/ characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134261,"byte_end":134350,"line_start":524,"line_end":524,"column_start":2,"column_end":91}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134352,"byte_end":134375,"line_start":525,"line_end":525,"column_start":2,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1397},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash","qualname":"::hash","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":4202},{"krate":0,"index":1400},{"krate":0,"index":4204},{"krate":0,"index":1401},{"krate":0,"index":4206},{"krate":0,"index":1402}],"decl_id":null,"docs":" A fixed hash type.\n","sig":null,"attributes":[{"value":"/ A fixed hash type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141629,"byte_end":141651,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1402},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141891,"byte_end":141903,"line_start":25,"line_end":25,"column_start":8,"column_end":20},"name":"convert_hash","qualname":"::hash::convert_hash","value":"pub fn convert_hash<H1: Default + AsMut<[u8]>, H2: AsRef<[u8]>>(&H2) -> H1","parent":null,"children":[],"decl_id":null,"docs":" Hash conversion. Used to convert between unbound associated hash types in traits,\n implemented by the same hash type.\n Panics if used to convert between different hash types.\n","sig":null,"attributes":[{"value":"/ Hash conversion. Used to convert between unbound associated hash types in traits,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141699,"byte_end":141784,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/ implemented by the same hash type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141785,"byte_end":141823,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ Panics if used to convert between different hash types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hash.rs","byte_start":141824,"byte_end":141883,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2784},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hasher.rs","byte_start":145517,"byte_end":145529,"line_start":27,"line_end":27,"column_start":13,"column_end":25},"name":"Blake2Hasher","qualname":"::hasher::blake2::Blake2Hasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" Concrete implementation of Hasher using Blake2b 256-bit hashes\n","sig":null,"attributes":[{"value":"/ Concrete implementation of Hasher using Blake2b 256-bit hashes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hasher.rs","byte_start":145420,"byte_end":145486,"line_start":25,"line_end":25,"column_start":2,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2788},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hasher.rs","byte_start":145938,"byte_end":145950,"line_start":47,"line_end":47,"column_start":13,"column_end":25},"name":"KeccakHasher","qualname":"::hasher::keccak::KeccakHasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" Concrete implementation of Hasher using Keccak 256-bit hashes\n","sig":null,"attributes":[{"value":"/ Concrete implementation of Hasher using Keccak 256-bit hashes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hasher.rs","byte_start":145842,"byte_end":145907,"line_start":45,"line_end":45,"column_start":2,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":1424},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offchain","qualname":"::offchain","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":4220},{"krate":0,"index":1427},{"krate":0,"index":4222},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":4230},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":4236},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":4240},{"krate":0,"index":1441},{"krate":0,"index":1501},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":2889},{"krate":0,"index":2970},{"krate":0,"index":2969},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2957},{"krate":0,"index":2952},{"krate":0,"index":2950},{"krate":0,"index":2941},{"krate":0,"index":2935},{"krate":0,"index":2896},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":2972},{"krate":0,"index":3020},{"krate":0,"index":3019},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3006},{"krate":0,"index":3004},{"krate":0,"index":3002},{"krate":0,"index":2992},{"krate":0,"index":2987},{"krate":0,"index":2978},{"krate":0,"index":2975},{"krate":0,"index":1578},{"krate":0,"index":3022},{"krate":0,"index":3061},{"krate":0,"index":3060},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3052},{"krate":0,"index":3046},{"krate":0,"index":3041},{"krate":0,"index":3032},{"krate":0,"index":1580},{"krate":0,"index":1583},{"krate":0,"index":3063},{"krate":0,"index":3098},{"krate":0,"index":3097},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3088},{"krate":0,"index":3082},{"krate":0,"index":3077},{"krate":0,"index":3073},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":3100},{"krate":0,"index":3129},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3116},{"krate":0,"index":3111},{"krate":0,"index":3109},{"krate":0,"index":3105},{"krate":0,"index":3103},{"krate":0,"index":3131},{"krate":0,"index":3167},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3150},{"krate":0,"index":3145},{"krate":0,"index":3143},{"krate":0,"index":3134},{"krate":0,"index":1591},{"krate":0,"index":3169},{"krate":0,"index":3216},{"krate":0,"index":3215},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3206},{"krate":0,"index":3200},{"krate":0,"index":3198},{"krate":0,"index":3196},{"krate":0,"index":3187},{"krate":0,"index":3177},{"krate":0,"index":3172},{"krate":0,"index":3218},{"krate":0,"index":3265},{"krate":0,"index":3264},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3255},{"krate":0,"index":3249},{"krate":0,"index":3247},{"krate":0,"index":3245},{"krate":0,"index":3236},{"krate":0,"index":3226},{"krate":0,"index":3221},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":3267},{"krate":0,"index":3301},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3293},{"krate":0,"index":3292},{"krate":0,"index":3303},{"krate":0,"index":3316},{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3307},{"krate":0,"index":3306},{"krate":0,"index":1602},{"krate":0,"index":1608},{"krate":0,"index":1612},{"krate":0,"index":1630},{"krate":0,"index":1649},{"krate":0,"index":1653},{"krate":0,"index":1657},{"krate":0,"index":3318},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":3326},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":3328},{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":3336},{"krate":0,"index":1681}],"decl_id":null,"docs":" Offchain workers types\n","sig":null,"attributes":[{"value":"/ Offchain workers types","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":146841,"byte_end":146867,"line_start":18,"line_end":18,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":1441},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::offchain::storage","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":2792},{"krate":0,"index":2798},{"krate":0,"index":2796},{"krate":0,"index":2794},{"krate":0,"index":1447},{"krate":0,"index":1454},{"krate":0,"index":2800},{"krate":0,"index":2818},{"krate":0,"index":2816},{"krate":0,"index":2813},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2820},{"krate":0,"index":2828},{"krate":0,"index":2826},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1498}],"decl_id":null,"docs":" In-memory implementation of offchain workers database.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147103,"byte_end":147126,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ In-memory implementation of offchain workers database.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":171577,"byte_end":171635,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2792},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":171839,"byte_end":171859,"line_start":26,"line_end":26,"column_start":12,"column_end":32},"name":"InMemOffchainStorage","qualname":"::offchain::storage::InMemOffchainStorage","value":"InMemOffchainStorage {  }","parent":null,"children":[{"krate":0,"index":2793}],"decl_id":null,"docs":" In-memory storage for offchain workers.\n","sig":null,"attributes":[{"value":"/ In-memory storage for offchain workers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":171751,"byte_end":171794,"line_start":24,"line_end":24,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":172010,"byte_end":172019,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"name":"into_iter","qualname":"<InMemOffchainStorage>::into_iter","value":"pub fn into_iter(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume the offchain storage and iterate over all key value pairs.\n","sig":null,"attributes":[{"value":"/ Consume the offchain storage and iterate over all key value pairs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":171931,"byte_end":172001,"line_start":31,"line_end":31,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":172160,"byte_end":172164,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"name":"iter","qualname":"<InMemOffchainStorage>::iter","value":"pub fn iter<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all key value pairs by reference.\n","sig":null,"attributes":[{"value":"/ Iterate over all key value pairs by reference.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":172101,"byte_end":172151,"line_start":36,"line_end":36,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":172335,"byte_end":172341,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"name":"remove","qualname":"<InMemOffchainStorage>::remove","value":"pub fn remove(&mut Self, &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Remove a key and its associated value from the offchain database.\n","sig":null,"attributes":[{"value":"/ Remove a key and its associated value from the offchain database.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":172257,"byte_end":172326,"line_start":41,"line_end":41,"column_start":2,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2801},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":173720,"byte_end":173726,"line_start":94,"line_end":94,"column_start":2,"column_end":8},"name":"Remove","qualname":"::offchain::storage::OffchainOverlayedChange::Remove","value":"OffchainOverlayedChange::Remove","parent":{"krate":0,"index":2800},"children":[],"decl_id":null,"docs":" Remove the data associated with the key\n","sig":null,"attributes":[{"value":"/ Remove the data associated with the key","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":173675,"byte_end":173718,"line_start":93,"line_end":93,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2803},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":173775,"byte_end":173783,"line_start":96,"line_end":96,"column_start":2,"column_end":10},"name":"SetValue","qualname":"::offchain::storage::OffchainOverlayedChange::SetValue","value":"OffchainOverlayedChange::SetValue(Vec<u8>)","parent":{"krate":0,"index":2800},"children":[],"decl_id":null,"docs":" Overwrite the value of an associated key\n","sig":null,"attributes":[{"value":"/ Overwrite the value of an associated key","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":173729,"byte_end":173773,"line_start":95,"line_end":95,"column_start":2,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2800},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":173648,"byte_end":173671,"line_start":92,"line_end":92,"column_start":10,"column_end":33},"name":"OffchainOverlayedChange","qualname":"::offchain::storage::OffchainOverlayedChange","value":"pub enum OffchainOverlayedChange {\n\n    /// Remove the data associated with the key\n    Remove,\n\n    /// Overwrite the value of an associated key\n    SetValue(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":2801},{"krate":0,"index":2803}],"decl_id":null,"docs":" Change to be applied to the offchain worker db in regards to a key.\n","sig":null,"attributes":[{"value":"/ Change to be applied to the offchain worker db in regards to a key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":173526,"byte_end":173597,"line_start":90,"line_end":90,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2821},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174057,"byte_end":174065,"line_start":103,"line_end":103,"column_start":2,"column_end":10},"name":"Disabled","qualname":"::offchain::storage::OffchainOverlayedChanges::Disabled","value":"OffchainOverlayedChanges::Disabled","parent":{"krate":0,"index":2820},"children":[],"decl_id":null,"docs":" Writing overlay changes to the offchain worker database is disabled by configuration.\n","sig":null,"attributes":[{"value":"/ Writing overlay changes to the offchain worker database is disabled by configuration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":173966,"byte_end":174055,"line_start":102,"line_end":102,"column_start":2,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2823},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174208,"byte_end":174215,"line_start":106,"line_end":106,"column_start":2,"column_end":9},"name":"Enabled","qualname":"::offchain::storage::OffchainOverlayedChanges::Enabled","value":"OffchainOverlayedChanges::Enabled(HashMap<(Vec<u8>, Vec<u8>), OffchainOverlayedChange>)","parent":{"krate":0,"index":2820},"children":[],"decl_id":null,"docs":" Overlay changes can be recorded using the inner collection of this variant,\n where the identifier is the tuple of `(prefix, key)`.\n","sig":null,"attributes":[{"value":"/ Overlay changes can be recorded using the inner collection of this variant,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174068,"byte_end":174147,"line_start":104,"line_end":104,"column_start":2,"column_end":81}},{"value":"/ where the identifier is the tuple of `(prefix, key)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174149,"byte_end":174206,"line_start":105,"line_end":105,"column_start":2,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":2820},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":173938,"byte_end":173962,"line_start":101,"line_end":101,"column_start":10,"column_end":34},"name":"OffchainOverlayedChanges","qualname":"::offchain::storage::OffchainOverlayedChanges","value":"pub enum OffchainOverlayedChanges {\n\n    /// Writing overlay changes to the offchain worker database is disabled by configuration.\n    Disabled,\n\n    /// Overlay changes can be recorded using the inner collection of this variant,\n    /// where the identifier is the tuple of `(prefix, key)`.\n    Enabled(HashMap<(Vec<u8>, Vec<u8>), OffchainOverlayedChange>),\n}","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2823}],"decl_id":null,"docs":" In-memory storage for offchain workers recoding changes for the actual offchain storage implementation.\n","sig":null,"attributes":[{"value":"/ In-memory storage for offchain workers recoding changes for the actual offchain storage implementation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":173797,"byte_end":173904,"line_start":99,"line_end":99,"column_start":1,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174439,"byte_end":174447,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"name":"disabled","qualname":"<OffchainOverlayedChanges>::disabled","value":"pub fn disabled() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the disabled variant.\n","sig":null,"attributes":[{"value":"/ Create the disabled variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174398,"byte_end":174430,"line_start":116,"line_end":116,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174522,"byte_end":174529,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"enabled","qualname":"<OffchainOverlayedChanges>::enabled","value":"pub fn enabled() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the enabled variant.\n","sig":null,"attributes":[{"value":"/ Create the enabled variant.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174482,"byte_end":174513,"line_start":121,"line_end":121,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174658,"byte_end":174667,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"into_iter","qualname":"<OffchainOverlayedChanges>::into_iter","value":"pub fn into_iter(Self) -> OffchainOverlayedChangesIntoIter","parent":null,"children":[],"decl_id":null,"docs":" Consume the offchain storage and iterate over all key value pairs.\n","sig":null,"attributes":[{"value":"/ Consume the offchain storage and iterate over all key value pairs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174579,"byte_end":174649,"line_start":126,"line_end":126,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174822,"byte_end":174826,"line_start":132,"line_end":132,"column_start":9,"column_end":13},"name":"iter","qualname":"<OffchainOverlayedChanges>::iter","value":"pub fn iter<'a>(&'a Self) -> OffchainOverlayedChangesIter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all key value pairs by reference.\n","sig":null,"attributes":[{"value":"/ Iterate over all key value pairs by reference.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174763,"byte_end":174813,"line_start":131,"line_end":131,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174968,"byte_end":174973,"line_start":137,"line_end":137,"column_start":9,"column_end":14},"name":"drain","qualname":"<OffchainOverlayedChanges>::drain","value":"pub fn drain<'a, 'd>(&'a mut Self) -> OffchainOverlayedChangesDrain where\n'a:'d","parent":null,"children":[],"decl_id":null,"docs":" Drain all elements of changeset.\n","sig":null,"attributes":[{"value":"/ Drain all elements of changeset.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174923,"byte_end":174959,"line_start":136,"line_end":136,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":175174,"byte_end":175180,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"name":"remove","qualname":"<OffchainOverlayedChanges>::remove","value":"pub fn remove(&mut Self, &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Remove a key and its associated value from the offchain database.\n","sig":null,"attributes":[{"value":"/ Remove a key and its associated value from the offchain database.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":175096,"byte_end":175165,"line_start":141,"line_end":141,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":175458,"byte_end":175461,"line_start":149,"line_end":149,"column_start":9,"column_end":12},"name":"set","qualname":"<OffchainOverlayedChanges>::set","value":"pub fn set(&mut Self, &[u8], &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set the value associated with a key under a prefix to the value provided.\n","sig":null,"attributes":[{"value":"/ Set the value associated with a key under a prefix to the value provided.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":175372,"byte_end":175449,"line_start":148,"line_end":148,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":175764,"byte_end":175767,"line_start":156,"line_end":156,"column_start":9,"column_end":12},"name":"get","qualname":"<OffchainOverlayedChanges>::get","value":"pub fn get(&Self, &[u8], &[u8]) -> Option<OffchainOverlayedChange>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a associated value to the given key in storage with prefix.\n","sig":null,"attributes":[{"value":"/ Obtain a associated value to the given key in storage with prefix.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":175685,"byte_end":175755,"line_start":155,"line_end":155,"column_start":2,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1474},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":176109,"byte_end":176137,"line_start":169,"line_end":169,"column_start":12,"column_end":40},"name":"OffchainOverlayedChangesIter","qualname":"::offchain::storage::OffchainOverlayedChangesIter","value":"OffchainOverlayedChangesIter {  }","parent":null,"children":[{"krate":0,"index":1476}],"decl_id":null,"docs":" Iterate by reference over the prepared offchain worker storage changes.\n","sig":null,"attributes":[{"value":"/ Iterate by reference over the prepared offchain worker storage changes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":176022,"byte_end":176097,"line_start":168,"line_end":168,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":176608,"byte_end":176611,"line_start":186,"line_end":186,"column_start":9,"column_end":12},"name":"new","qualname":"<OffchainOverlayedChangesIter>::new","value":"pub fn new(&'i OffchainOverlayedChanges) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator based on a refernce to the parent container.\n","sig":null,"attributes":[{"value":"/ Create a new iterator based on a refernce to the parent container.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":176529,"byte_end":176599,"line_start":185,"line_end":185,"column_start":2,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1484},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":176931,"byte_end":176963,"line_start":198,"line_end":198,"column_start":12,"column_end":44},"name":"OffchainOverlayedChangesIntoIter","qualname":"::offchain::storage::OffchainOverlayedChangesIntoIter","value":"OffchainOverlayedChangesIntoIter {  }","parent":null,"children":[{"krate":0,"index":1485}],"decl_id":null,"docs":" Iterate by value over the prepared offchain worker storage changes.\n","sig":null,"attributes":[{"value":"/ Iterate by value over the prepared offchain worker storage changes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":176848,"byte_end":176919,"line_start":197,"line_end":197,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":177396,"byte_end":177399,"line_start":215,"line_end":215,"column_start":9,"column_end":12},"name":"new","qualname":"<OffchainOverlayedChangesIntoIter>::new","value":"pub fn new(OffchainOverlayedChanges) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator by consuming the collection.\n","sig":null,"attributes":[{"value":"/ Create a new iterator by consuming the collection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":177333,"byte_end":177387,"line_start":214,"line_end":214,"column_start":2,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1491},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":177715,"byte_end":177744,"line_start":226,"line_end":226,"column_start":12,"column_end":41},"name":"OffchainOverlayedChangesDrain","qualname":"::offchain::storage::OffchainOverlayedChangesDrain","value":"OffchainOverlayedChangesDrain {  }","parent":null,"children":[{"krate":0,"index":1493}],"decl_id":null,"docs":" Iterate over all items while draining them from the collection.\n","sig":null,"attributes":[{"value":"/ Iterate over all items while draining them from the collection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":177636,"byte_end":177703,"line_start":225,"line_end":225,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":178263,"byte_end":178266,"line_start":244,"line_end":244,"column_start":9,"column_end":12},"name":"new","qualname":"<OffchainOverlayedChangesDrain>::new","value":"pub fn new(&'d mut OffchainOverlayedChanges) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator by taking a mut reference to the collection,\n for the lifetime of the created drain iterator.\n","sig":null,"attributes":[{"value":"/ Create a new iterator by taking a mut reference to the collection,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":178131,"byte_end":178201,"line_start":242,"line_end":242,"column_start":2,"column_end":72}},{"value":"/ for the lifetime of the created drain iterator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":178203,"byte_end":178254,"line_start":243,"line_end":243,"column_start":2,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":1501},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::offchain::testing","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","parent":null,"children":[{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":4258},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":4270},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":4274},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":2830},{"krate":0,"index":2849},{"krate":0,"index":2847},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2851},{"krate":0,"index":2857},{"krate":0,"index":2855},{"krate":0,"index":2853},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":2859},{"krate":0,"index":2869},{"krate":0,"index":2867},{"krate":0,"index":1531},{"krate":0,"index":1537},{"krate":0,"index":2871},{"krate":0,"index":2878},{"krate":0,"index":2876},{"krate":0,"index":2874},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":2880},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2887},{"krate":0,"index":1563},{"krate":0,"index":1565}],"decl_id":null,"docs":" Utilities for offchain calls testing.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147144,"byte_end":147167,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/ Utilities for offchain calls testing.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":180350,"byte_end":180391,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":180392,"byte_end":180395,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Namely all ExecutionExtensions that allow mocking","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":180396,"byte_end":180449,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/ the extra APIs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":180450,"byte_end":180469,"line_start":21,"line_end":21,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2830},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":180937,"byte_end":180951,"line_start":45,"line_end":45,"column_start":12,"column_end":26},"name":"PendingRequest","qualname":"::offchain::testing::PendingRequest","value":"PendingRequest { method, uri, meta, headers, body, sent, response, read, response_headers }","parent":null,"children":[{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839}],"decl_id":null,"docs":" Pending request.\n","sig":null,"attributes":[{"value":"/ Pending request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":180864,"byte_end":180884,"line_start":43,"line_end":43,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2831},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":180976,"byte_end":180982,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"name":"method","qualname":"::offchain::testing::PendingRequest::method","value":"std::string::String","parent":{"krate":0,"index":2830},"children":[],"decl_id":null,"docs":" HTTP method\n","sig":null,"attributes":[{"value":"/ HTTP method","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":180955,"byte_end":180970,"line_start":46,"line_end":46,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2832},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181006,"byte_end":181009,"line_start":49,"line_end":49,"column_start":6,"column_end":9},"name":"uri","qualname":"::offchain::testing::PendingRequest::uri","value":"std::string::String","parent":{"krate":0,"index":2830},"children":[],"decl_id":null,"docs":" URI\n","sig":null,"attributes":[{"value":"/ URI","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":180993,"byte_end":181000,"line_start":48,"line_end":48,"column_start":2,"column_end":9}}]},{"kind":"Field","id":{"krate":0,"index":2833},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181046,"byte_end":181050,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"name":"meta","qualname":"::offchain::testing::PendingRequest::meta","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2830},"children":[],"decl_id":null,"docs":" Encoded Metadata\n","sig":null,"attributes":[{"value":"/ Encoded Metadata","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181020,"byte_end":181040,"line_start":50,"line_end":50,"column_start":2,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2834},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181087,"byte_end":181094,"line_start":53,"line_end":53,"column_start":6,"column_end":13},"name":"headers","qualname":"::offchain::testing::PendingRequest::headers","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":2830},"children":[],"decl_id":null,"docs":" Request headers\n","sig":null,"attributes":[{"value":"/ Request headers","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181062,"byte_end":181081,"line_start":52,"line_end":52,"column_start":2,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2835},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181142,"byte_end":181146,"line_start":55,"line_end":55,"column_start":6,"column_end":10},"name":"body","qualname":"::offchain::testing::PendingRequest::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2830},"children":[],"decl_id":null,"docs":" Request body\n","sig":null,"attributes":[{"value":"/ Request body","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181120,"byte_end":181136,"line_start":54,"line_end":54,"column_start":2,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2836},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181202,"byte_end":181206,"line_start":57,"line_end":57,"column_start":6,"column_end":10},"name":"sent","qualname":"::offchain::testing::PendingRequest::sent","value":"bool","parent":{"krate":0,"index":2830},"children":[],"decl_id":null,"docs":" Has the request been sent already.\n","sig":null,"attributes":[{"value":"/ Has the request been sent already.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181158,"byte_end":181196,"line_start":56,"line_end":56,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2837},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181238,"byte_end":181246,"line_start":59,"line_end":59,"column_start":6,"column_end":14},"name":"response","qualname":"::offchain::testing::PendingRequest::response","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":2830},"children":[],"decl_id":null,"docs":" Response body\n","sig":null,"attributes":[{"value":"/ Response body","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181215,"byte_end":181232,"line_start":58,"line_end":58,"column_start":2,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":2838},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181328,"byte_end":181332,"line_start":61,"line_end":61,"column_start":6,"column_end":10},"name":"read","qualname":"::offchain::testing::PendingRequest::read","value":"usize","parent":{"krate":0,"index":2830},"children":[],"decl_id":null,"docs":" Number of bytes already read from the response body.\n","sig":null,"attributes":[{"value":"/ Number of bytes already read from the response body.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181266,"byte_end":181322,"line_start":60,"line_end":60,"column_start":2,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2839},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181368,"byte_end":181384,"line_start":63,"line_end":63,"column_start":6,"column_end":22},"name":"response_headers","qualname":"::offchain::testing::PendingRequest::response_headers","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":2830},"children":[],"decl_id":null,"docs":" Response headers\n","sig":null,"attributes":[{"value":"/ Response headers","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181342,"byte_end":181362,"line_start":62,"line_end":62,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2851},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181509,"byte_end":181533,"line_start":68,"line_end":68,"column_start":12,"column_end":36},"name":"TestPersistentOffchainDB","qualname":"::offchain::testing::TestPersistentOffchainDB","value":"TestPersistentOffchainDB {  }","parent":null,"children":[{"krate":0,"index":2852}],"decl_id":null,"docs":" Sharable \"persistent\" offchain storage for test.\n","sig":null,"attributes":[{"value":"/ Sharable \"persistent\" offchain storage for test.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181412,"byte_end":181464,"line_start":66,"line_end":66,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181696,"byte_end":181699,"line_start":74,"line_end":74,"column_start":9,"column_end":12},"name":"new","qualname":"<TestPersistentOffchainDB>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new and empty offchain storage db for persistent items\n","sig":null,"attributes":[{"value":"/ Create a new and empty offchain storage db for persistent items","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181620,"byte_end":181687,"line_start":73,"line_end":73,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181874,"byte_end":181896,"line_start":81,"line_end":81,"column_start":9,"column_end":31},"name":"apply_offchain_changes","qualname":"<TestPersistentOffchainDB>::apply_offchain_changes","value":"pub fn apply_offchain_changes(&mut Self, &mut OffchainOverlayedChanges)","parent":null,"children":[],"decl_id":null,"docs":" Apply a set of off-chain changes directly to the test backend\n","sig":null,"attributes":[{"value":"/ Apply a set of off-chain changes directly to the test backend","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181800,"byte_end":181865,"line_start":80,"line_end":80,"column_start":2,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2859},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183004,"byte_end":183017,"line_start":121,"line_end":121,"column_start":12,"column_end":25},"name":"OffchainState","qualname":"::offchain::testing::OffchainState","value":"OffchainState { requests, persistent_storage, local_storage, seed, timestamp }","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2866}],"decl_id":null,"docs":" Internal state of the externalities.","sig":null,"attributes":[{"value":"/ Internal state of the externalities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":182845,"byte_end":182885,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":182886,"byte_end":182889,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This can be used in tests to respond or assert stuff about interactions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":182890,"byte_end":182966,"line_start":119,"line_end":119,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2860},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183058,"byte_end":183066,"line_start":123,"line_end":123,"column_start":6,"column_end":14},"name":"requests","qualname":"::offchain::testing::OffchainState::requests","value":"std::collections::BTreeMap<offchain::HttpRequestId, offchain::testing::PendingRequest>","parent":{"krate":0,"index":2859},"children":[],"decl_id":null,"docs":" A list of pending requests.\n","sig":null,"attributes":[{"value":"/ A list of pending requests.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183021,"byte_end":183052,"line_start":122,"line_end":122,"column_start":2,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2862},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183257,"byte_end":183275,"line_start":127,"line_end":127,"column_start":6,"column_end":24},"name":"persistent_storage","qualname":"::offchain::testing::OffchainState::persistent_storage","value":"offchain::testing::TestPersistentOffchainDB","parent":{"krate":0,"index":2859},"children":[],"decl_id":null,"docs":" Persistent local storage\n","sig":null,"attributes":[{"value":"/ Persistent local storage","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183223,"byte_end":183251,"line_start":126,"line_end":126,"column_start":2,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2863},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183327,"byte_end":183340,"line_start":129,"line_end":129,"column_start":6,"column_end":19},"name":"local_storage","qualname":"::offchain::testing::OffchainState::local_storage","value":"offchain::storage::InMemOffchainStorage","parent":{"krate":0,"index":2859},"children":[],"decl_id":null,"docs":" Local storage\n","sig":null,"attributes":[{"value":"/ Local storage","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183304,"byte_end":183321,"line_start":128,"line_end":128,"column_start":2,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":2864},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183400,"byte_end":183404,"line_start":131,"line_end":131,"column_start":6,"column_end":10},"name":"seed","qualname":"::offchain::testing::OffchainState::seed","value":"[u8; 32]","parent":{"krate":0,"index":2859},"children":[],"decl_id":null,"docs":" A supposedly random seed.\n","sig":null,"attributes":[{"value":"/ A supposedly random seed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183365,"byte_end":183394,"line_start":130,"line_end":130,"column_start":2,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2866},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183467,"byte_end":183476,"line_start":133,"line_end":133,"column_start":6,"column_end":15},"name":"timestamp","qualname":"::offchain::testing::OffchainState::timestamp","value":"offchain::Timestamp","parent":{"krate":0,"index":2859},"children":[],"decl_id":null,"docs":" A timestamp simulating the current time.\n","sig":null,"attributes":[{"value":"/ A timestamp simulating the current time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183417,"byte_end":183461,"line_start":132,"line_end":132,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183599,"byte_end":183622,"line_start":138,"line_end":138,"column_start":9,"column_end":32},"name":"fulfill_pending_request","qualname":"<OffchainState>::fulfill_pending_request","value":"pub fn fulfill_pending_request<impl Into<Vec<u8>>: Into<Vec<u8>>,\n                               impl IntoIterator<Item = (String, String)>: IntoIterator<Item\n                               =\n                               (String,\n                                String)>>(&mut Self, u16, PendingRequest,\n                                          impl Into<Vec<u8>>,\n                                          impl IntoIterator<Item = (String, String)>)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that pending request has been submitted and fills it's response.\n","sig":null,"attributes":[{"value":"/ Asserts that pending request has been submitted and fills it's response.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183514,"byte_end":183590,"line_start":137,"line_end":137,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":184886,"byte_end":184900,"line_start":175,"line_end":175,"column_start":9,"column_end":23},"name":"expect_request","qualname":"<OffchainState>::expect_request","value":"pub fn expect_request(&mut Self, PendingRequest)","parent":null,"children":[],"decl_id":null,"docs":" Add expected HTTP request.","sig":null,"attributes":[{"value":"/ Add expected HTTP request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":184420,"byte_end":184450,"line_start":168,"line_end":168,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":184452,"byte_end":184455,"line_start":169,"line_end":169,"column_start":2,"column_end":5}},{"value":"/ This method can be used to initialize expected HTTP requests and their responses","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":184457,"byte_end":184541,"line_start":170,"line_end":170,"column_start":2,"column_end":86}},{"value":"/ before running the actual code that utilizes them (for instance before calling into runtime).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":184543,"byte_end":184640,"line_start":171,"line_end":171,"column_start":2,"column_end":99}},{"value":"/ Expected request has to be fulfilled before this struct is dropped,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":184642,"byte_end":184713,"line_start":172,"line_end":172,"column_start":2,"column_end":73}},{"value":"/ the `response` and `response_headers` fields will be used to return results to the callers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":184715,"byte_end":184810,"line_start":173,"line_end":173,"column_start":2,"column_end":97}},{"value":"/ Requests are expected to be performed in the insertion order.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":184812,"byte_end":184877,"line_start":174,"line_end":174,"column_start":2,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2871},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185495,"byte_end":185510,"line_start":194,"line_end":194,"column_start":12,"column_end":27},"name":"TestOffchainExt","qualname":"::offchain::testing::TestOffchainExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of offchain externalities used for tests.\n","sig":null,"attributes":[{"value":"/ Implementation of offchain externalities used for tests.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185390,"byte_end":185450,"line_start":192,"line_end":192,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2873},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185511,"byte_end":185541,"line_start":194,"line_end":194,"column_start":28,"column_end":58},"name":"0","qualname":"::offchain::testing::TestOffchainExt::0","value":"std::sync::Arc<parking_lot::lock_api::RwLock<parking_lot::RawRwLock, offchain::testing::OffchainState>>","parent":{"krate":0,"index":2871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185649,"byte_end":185652,"line_start":198,"line_end":198,"column_start":9,"column_end":12},"name":"new","qualname":"<TestOffchainExt>::new","value":"pub fn new() -> (Self, Arc<RwLock<OffchainState>>)","parent":null,"children":[],"decl_id":null,"docs":" Create new `TestOffchainExt` and a reference to the internal state.\n","sig":null,"attributes":[{"value":"/ Create new `TestOffchainExt` and a reference to the internal state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185569,"byte_end":185640,"line_start":197,"line_end":197,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185853,"byte_end":185869,"line_start":205,"line_end":205,"column_start":9,"column_end":25},"name":"with_offchain_db","qualname":"<TestOffchainExt>::with_offchain_db","value":"pub fn with_offchain_db(TestPersistentOffchainDB)\n-> (Self, Arc<RwLock<OffchainState>>)","parent":null,"children":[],"decl_id":null,"docs":" Create new `TestOffchainExt` and a reference to the internal state.\n","sig":null,"attributes":[{"value":"/ Create new `TestOffchainExt` and a reference to the internal state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185773,"byte_end":185844,"line_start":204,"line_end":204,"column_start":2,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":2880},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190512,"byte_end":190521,"line_start":387,"line_end":387,"column_start":12,"column_end":21},"name":"PoolState","qualname":"::offchain::testing::PoolState","value":"PoolState { transactions }","parent":null,"children":[{"krate":0,"index":2881}],"decl_id":null,"docs":" The internal state of the fake transaction pool.\n","sig":null,"attributes":[{"value":"/ The internal state of the fake transaction pool.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190429,"byte_end":190481,"line_start":385,"line_end":385,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2881},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190587,"byte_end":190599,"line_start":389,"line_end":389,"column_start":6,"column_end":18},"name":"transactions","qualname":"::offchain::testing::PoolState::transactions","value":"std::vec::Vec<std::vec::Vec<u8>>","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":" A vector of transactions submitted from the runtime.\n","sig":null,"attributes":[{"value":"/ A vector of transactions submitted from the runtime.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190525,"byte_end":190581,"line_start":388,"line_end":388,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2884},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":191015,"byte_end":191037,"line_start":402,"line_end":402,"column_start":12,"column_end":34},"name":"TestTransactionPoolExt","qualname":"::offchain::testing::TestTransactionPoolExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of transaction pool used for test.","sig":null,"attributes":[{"value":"/ Implementation of transaction pool used for test.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190618,"byte_end":190671,"line_start":392,"line_end":392,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190672,"byte_end":190675,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation does not verify correctness","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190676,"byte_end":190737,"line_start":394,"line_end":394,"column_start":1,"column_end":62}},{"value":"/ of sent extrinsics. It's meant to be used in contexts","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190738,"byte_end":190795,"line_start":395,"line_end":395,"column_start":1,"column_end":58}},{"value":"/ where an actual runtime is not known.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190796,"byte_end":190837,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190838,"byte_end":190841,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ It's advised to write integration tests that include the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190842,"byte_end":190902,"line_start":398,"line_end":398,"column_start":1,"column_end":61}},{"value":"/ actual transaction pool to make sure the produced","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190903,"byte_end":190956,"line_start":399,"line_end":399,"column_start":1,"column_end":54}},{"value":"/ transactions are valid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":190957,"byte_end":190984,"line_start":400,"line_end":400,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":191182,"byte_end":191185,"line_start":406,"line_end":406,"column_start":9,"column_end":12},"name":"new","qualname":"<TestTransactionPoolExt>::new","value":"pub fn new() -> (Self, Arc<RwLock<PoolState>>)","parent":null,"children":[],"decl_id":null,"docs":" Create new `TestTransactionPoolExt` and a reference to the internal state.\n","sig":null,"attributes":[{"value":"/ Create new `TestTransactionPoolExt` and a reference to the internal state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":191095,"byte_end":191173,"line_start":405,"line_end":405,"column_start":2,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":1567},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147256,"byte_end":147270,"line_start":33,"line_end":33,"column_start":11,"column_end":25},"name":"STORAGE_PREFIX","qualname":"::offchain::STORAGE_PREFIX","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Local storage prefix used by the Offchain Worker API to\n","sig":null,"attributes":[{"value":"/ Local storage prefix used by the Offchain Worker API to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147186,"byte_end":147245,"line_start":32,"line_end":32,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1568},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147348,"byte_end":147363,"line_start":36,"line_end":36,"column_start":11,"column_end":26},"name":"OffchainStorage","qualname":"::offchain::OffchainStorage","value":"OffchainStorage: Clone + Send + Sync","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572}],"decl_id":null,"docs":" Offchain workers local storage.\n","sig":null,"attributes":[{"value":"/ Offchain workers local storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147302,"byte_end":147337,"line_start":35,"line_end":35,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147451,"byte_end":147454,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"set","qualname":"::offchain::OffchainStorage::set","value":"pub fn set(&mut Self, &[u8], &[u8], &[u8])","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Persist a value in storage under given key and prefix.\n","sig":null,"attributes":[{"value":"/ Persist a value in storage under given key and prefix.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147388,"byte_end":147446,"line_start":37,"line_end":37,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147568,"byte_end":147574,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"remove","qualname":"::offchain::OffchainStorage::remove","value":"pub fn remove(&mut Self, &[u8], &[u8])","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Clear a storage entry under given key and prefix.\n","sig":null,"attributes":[{"value":"/ Clear a storage entry under given key and prefix.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147510,"byte_end":147563,"line_start":40,"line_end":40,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147682,"byte_end":147685,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"get","qualname":"::offchain::OffchainStorage::get","value":"pub fn get(&Self, &[u8], &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Retrieve a value from storage under given key and prefix.\n","sig":null,"attributes":[{"value":"/ Retrieve a value from storage under given key and prefix.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147616,"byte_end":147677,"line_start":43,"line_end":43,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147895,"byte_end":147910,"line_start":49,"line_end":49,"column_start":5,"column_end":20},"name":"compare_and_set","qualname":"::offchain::OffchainStorage::compare_and_set","value":"pub fn compare_and_set(&mut Self, &[u8], &[u8], Option<&[u8]>, &[u8]) -> bool","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Replace the value in storage if given old_value matches the current one.","sig":null,"attributes":[{"value":"/ Replace the value in storage if given old_value matches the current one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147742,"byte_end":147818,"line_start":46,"line_end":46,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147820,"byte_end":147823,"line_start":47,"line_end":47,"column_start":2,"column_end":5}},{"value":"/ Returns `true` if the value has been set and false otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147825,"byte_end":147890,"line_start":48,"line_end":48,"column_start":2,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2890},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148659,"byte_end":148669,"line_start":69,"line_end":69,"column_start":2,"column_end":12},"name":"PERSISTENT","qualname":"::offchain::StorageKind::PERSISTENT","value":"StorageKind::PERSISTENT","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Persistent storage is non-revertible and not fork-aware. It means that any value\n set by the offchain worker triggered at block `N(hash1)` is persisted even\n if that block is reverted as non-canonical and is available for the worker\n that is re-run at block `N(hash2)`.\n This storage can be used by offchain workers to handle forks\n and coordinate offchain workers running on different forks.\n","sig":null,"attributes":[{"value":"/ Persistent storage is non-revertible and not fork-aware. It means that any value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148241,"byte_end":148325,"line_start":63,"line_end":63,"column_start":2,"column_end":86}},{"value":"/ set by the offchain worker triggered at block `N(hash1)` is persisted even","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148327,"byte_end":148405,"line_start":64,"line_end":64,"column_start":2,"column_end":80}},{"value":"/ if that block is reverted as non-canonical and is available for the worker","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148407,"byte_end":148485,"line_start":65,"line_end":65,"column_start":2,"column_end":80}},{"value":"/ that is re-run at block `N(hash2)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148487,"byte_end":148526,"line_start":66,"line_end":66,"column_start":2,"column_end":41}},{"value":"/ This storage can be used by offchain workers to handle forks","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148528,"byte_end":148592,"line_start":67,"line_end":67,"column_start":2,"column_end":66}},{"value":"/ and coordinate offchain workers running on different forks.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148594,"byte_end":148657,"line_start":68,"line_end":68,"column_start":2,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2893},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148948,"byte_end":148953,"line_start":74,"line_end":74,"column_start":2,"column_end":7},"name":"LOCAL","qualname":"::offchain::StorageKind::LOCAL","value":"StorageKind::LOCAL","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Local storage is revertible and fork-aware. It means that any value\n set by the offchain worker triggered at block `N(hash1)` is reverted\n if that block is reverted as non-canonical and is NOT available for the worker\n that is re-run at block `N(hash2)`.\n","sig":null,"attributes":[{"value":"/ Local storage is revertible and fork-aware. It means that any value","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148676,"byte_end":148747,"line_start":70,"line_end":70,"column_start":2,"column_end":73}},{"value":"/ set by the offchain worker triggered at block `N(hash1)` is reverted","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148749,"byte_end":148821,"line_start":71,"line_end":71,"column_start":2,"column_end":74}},{"value":"/ if that block is reverted as non-canonical and is NOT available for the worker","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148823,"byte_end":148905,"line_start":72,"line_end":72,"column_start":2,"column_end":84}},{"value":"/ that is re-run at block `N(hash2)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148907,"byte_end":148946,"line_start":73,"line_end":73,"column_start":2,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2889},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148226,"byte_end":148237,"line_start":62,"line_end":62,"column_start":10,"column_end":21},"name":"StorageKind","qualname":"::offchain::StorageKind","value":"pub enum StorageKind {\n\n    /// Persistent storage is non-revertible and not fork-aware. It means that any value\n    /// set by the offchain worker triggered at block `N(hash1)` is persisted even\n    /// if that block is reverted as non-canonical and is available for the worker\n    /// that is re-run at block `N(hash2)`.\n    /// This storage can be used by offchain workers to handle forks\n    /// and coordinate offchain workers running on different forks.\n    PERSISTENT = ,\n\n    /// Local storage is revertible and fork-aware. It means that any value\n    /// set by the offchain worker triggered at block `N(hash1)` is reverted\n    /// if that block is reverted as non-canonical and is NOT available for the worker\n    /// that is re-run at block `N(hash2)`.\n    LOCAL = ,\n}","parent":null,"children":[{"krate":0,"index":2890},{"krate":0,"index":2893}],"decl_id":null,"docs":" A type of supported crypto.\n","sig":null,"attributes":[{"value":"/ A type of supported crypto.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148019,"byte_end":148050,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"repr(C)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148206,"byte_end":148216,"line_start":61,"line_end":61,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":2972},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":149563,"byte_end":149576,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"HttpRequestId","qualname":"::offchain::HttpRequestId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque type for offchain http requests.\n","sig":null,"attributes":[{"value":"/ Opaque type for offchain http requests.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":149367,"byte_end":149410,"line_start":95,"line_end":95,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2974},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":149577,"byte_end":149584,"line_start":98,"line_end":98,"column_start":26,"column_end":33},"name":"0","qualname":"::offchain::HttpRequestId::0","value":"u16","parent":{"krate":0,"index":2972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3023},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":149910,"byte_end":149925,"line_start":111,"line_end":111,"column_start":2,"column_end":17},"name":"DeadlineReached","qualname":"::offchain::HttpError::DeadlineReached","value":"HttpError::DeadlineReached","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" The requested action couldn't been completed within a deadline.\n","sig":null,"attributes":[{"value":"/ The requested action couldn't been completed within a deadline.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":149841,"byte_end":149908,"line_start":110,"line_end":110,"column_start":2,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3026},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":149989,"byte_end":149996,"line_start":113,"line_end":113,"column_start":2,"column_end":9},"name":"IoError","qualname":"::offchain::HttpError::IoError","value":"HttpError::IoError","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" There was an IO Error while processing the request.\n","sig":null,"attributes":[{"value":"/ There was an IO Error while processing the request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":149932,"byte_end":149987,"line_start":112,"line_end":112,"column_start":2,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3029},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150058,"byte_end":150065,"line_start":115,"line_end":115,"column_start":2,"column_end":9},"name":"Invalid","qualname":"::offchain::HttpError::Invalid","value":"HttpError::Invalid","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" The ID of the request is invalid in this context.\n","sig":null,"attributes":[{"value":"/ The ID of the request is invalid in this context.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150003,"byte_end":150056,"line_start":114,"line_end":114,"column_start":2,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":3022},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":149828,"byte_end":149837,"line_start":109,"line_end":109,"column_start":10,"column_end":19},"name":"HttpError","qualname":"::offchain::HttpError","value":"pub enum HttpError {\n\n    /// The requested action couldn't been completed within a deadline.\n    DeadlineReached = ,\n\n    /// There was an IO Error while processing the request.\n    IoError = ,\n\n    /// The ID of the request is invalid in this context.\n    Invalid = ,\n}","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029}],"decl_id":null,"docs":" An error enum returned by some http methods.\n","sig":null,"attributes":[{"value":"/ An error enum returned by some http methods.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":149679,"byte_end":149727,"line_start":106,"line_end":106,"column_start":1,"column_end":49}},{"value":"repr(C)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":149808,"byte_end":149818,"line_start":108,"line_end":108,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3064},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150881,"byte_end":150896,"line_start":144,"line_end":144,"column_start":2,"column_end":17},"name":"DeadlineReached","qualname":"::offchain::HttpRequestStatus::DeadlineReached","value":"HttpRequestStatus::DeadlineReached","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" Deadline was reached while we waited for this request to finish.","sig":null,"attributes":[{"value":"/ Deadline was reached while we waited for this request to finish.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150686,"byte_end":150754,"line_start":140,"line_end":140,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150756,"byte_end":150759,"line_start":141,"line_end":141,"column_start":2,"column_end":5}},{"value":"/ Note the deadline is controlled by the calling part, it not necessarily","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150761,"byte_end":150836,"line_start":142,"line_end":142,"column_start":2,"column_end":77}},{"value":"/ means that the request has timed out.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150838,"byte_end":150879,"line_start":143,"line_end":143,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3066},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151119,"byte_end":151126,"line_start":150,"line_end":150,"column_start":2,"column_end":9},"name":"IoError","qualname":"::offchain::HttpRequestStatus::IoError","value":"HttpRequestStatus::IoError","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" An error has occurred during the request, for example a timeout or the\n remote has closed our socket.","sig":null,"attributes":[{"value":"/ An error has occurred during the request, for example a timeout or the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150899,"byte_end":150973,"line_start":145,"line_end":145,"column_start":2,"column_end":76}},{"value":"/ remote has closed our socket.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150975,"byte_end":151008,"line_start":146,"line_end":146,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151010,"byte_end":151013,"line_start":147,"line_end":147,"column_start":2,"column_end":5}},{"value":"/ The request is now considered destroyed. To retry the request you need","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151015,"byte_end":151089,"line_start":148,"line_end":148,"column_start":2,"column_end":76}},{"value":"/ to construct it again.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151091,"byte_end":151117,"line_start":149,"line_end":149,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3068},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151176,"byte_end":151183,"line_start":152,"line_end":152,"column_start":2,"column_end":9},"name":"Invalid","qualname":"::offchain::HttpRequestStatus::Invalid","value":"HttpRequestStatus::Invalid","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" The passed ID is invalid in this context.\n","sig":null,"attributes":[{"value":"/ The passed ID is invalid in this context.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151129,"byte_end":151174,"line_start":151,"line_end":151,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3070},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151240,"byte_end":151248,"line_start":154,"line_end":154,"column_start":2,"column_end":10},"name":"Finished","qualname":"::offchain::HttpRequestStatus::Finished","value":"HttpRequestStatus::Finished(u16)","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" The request has finished with given status code.\n","sig":null,"attributes":[{"value":"/ The request has finished with given status code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151186,"byte_end":151238,"line_start":153,"line_end":153,"column_start":2,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":3063},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150665,"byte_end":150682,"line_start":139,"line_end":139,"column_start":10,"column_end":27},"name":"HttpRequestStatus","qualname":"::offchain::HttpRequestStatus","value":"pub enum HttpRequestStatus {\n\n    /// Deadline was reached while we waited for this request to finish.\n    ///\n    /// Note the deadline is controlled by the calling part, it not necessarily\n    /// means that the request has timed out.\n    DeadlineReached,\n\n    /// An error has occurred during the request, for example a timeout or the\n    /// remote has closed our socket.\n    ///\n    /// The request is now considered destroyed. To retry the request you need\n    /// to construct it again.\n    IoError,\n\n    /// The passed ID is invalid in this context.\n    Invalid,\n\n    /// The request has finished with given status code.\n    Finished(u16),\n}","parent":null,"children":[{"krate":0,"index":3064},{"krate":0,"index":3066},{"krate":0,"index":3068},{"krate":0,"index":3070}],"decl_id":null,"docs":" Status of the HTTP request\n","sig":null,"attributes":[{"value":"/ Status of the HTTP request","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150544,"byte_end":150574,"line_start":137,"line_end":137,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3100},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152163,"byte_end":152181,"line_start":186,"line_end":186,"column_start":12,"column_end":30},"name":"OpaqueNetworkState","qualname":"::offchain::OpaqueNetworkState","value":"OpaqueNetworkState { peer_id, external_addresses }","parent":null,"children":[{"krate":0,"index":3101},{"krate":0,"index":3102}],"decl_id":null,"docs":" A blob to hold information about the local node's network state\n without committing to its format.\n","sig":null,"attributes":[{"value":"/ A blob to hold information about the local node's network state","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151925,"byte_end":151992,"line_start":182,"line_end":182,"column_start":1,"column_end":68}},{"value":"/ without committing to its format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151993,"byte_end":152030,"line_start":183,"line_end":183,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3101},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152237,"byte_end":152244,"line_start":188,"line_end":188,"column_start":6,"column_end":13},"name":"peer_id","qualname":"::offchain::OpaqueNetworkState::peer_id","value":"OpaquePeerId","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":" PeerId of the local node in SCALE encoded.\n","sig":null,"attributes":[{"value":"/ PeerId of the local node in SCALE encoded.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152185,"byte_end":152231,"line_start":187,"line_end":187,"column_start":2,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3102},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152325,"byte_end":152343,"line_start":190,"line_end":190,"column_start":6,"column_end":24},"name":"external_addresses","qualname":"::offchain::OpaqueNetworkState::external_addresses","value":"std::vec::Vec<offchain::OpaqueMultiaddr>","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":" List of addresses the node knows it can be reached as.\n","sig":null,"attributes":[{"value":"/ List of addresses the node knows it can be reached as.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152261,"byte_end":152319,"line_start":189,"line_end":189,"column_start":2,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3131},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152528,"byte_end":152543,"line_start":195,"line_end":195,"column_start":12,"column_end":27},"name":"OpaqueMultiaddr","qualname":"::offchain::OpaqueMultiaddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple blob to hold a `Multiaddr` without committing to its format.\n","sig":null,"attributes":[{"value":"/ Simple blob to hold a `Multiaddr` without committing to its format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152370,"byte_end":152441,"line_start":193,"line_end":193,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3133},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152544,"byte_end":152555,"line_start":195,"line_end":195,"column_start":28,"column_end":39},"name":"0","qualname":"::offchain::OpaqueMultiaddr::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152624,"byte_end":152627,"line_start":199,"line_end":199,"column_start":9,"column_end":12},"name":"new","qualname":"<OpaqueMultiaddr>::new","value":"pub fn new(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `OpaqueMultiaddr`\n","sig":null,"attributes":[{"value":"/ Create new `OpaqueMultiaddr`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152583,"byte_end":152615,"line_start":198,"line_end":198,"column_start":2,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3169},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152825,"byte_end":152834,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::offchain::Timestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque timestamp type\n","sig":null,"attributes":[{"value":"/ Opaque timestamp type","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152681,"byte_end":152706,"line_start":204,"line_end":204,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3218},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152978,"byte_end":152986,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"Duration","qualname":"::offchain::Duration","value":"","parent":null,"children":[],"decl_id":null,"docs":" Duration type\n","sig":null,"attributes":[{"value":"/ Duration type","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152842,"byte_end":152859,"line_start":208,"line_end":208,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153092,"byte_end":153103,"line_start":214,"line_end":214,"column_start":15,"column_end":26},"name":"from_millis","qualname":"<Duration>::from_millis","value":"pub const fn from_millis(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new duration representing given number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create new duration representing given number of milliseconds.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153011,"byte_end":153077,"line_start":213,"line_end":213,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153220,"byte_end":153226,"line_start":219,"line_end":219,"column_start":9,"column_end":15},"name":"millis","qualname":"<Duration>::millis","value":"pub fn millis(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns number of milliseconds this Duration represents.\n","sig":null,"attributes":[{"value":"/ Returns number of milliseconds this Duration represents.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153151,"byte_end":153211,"line_start":218,"line_end":218,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153350,"byte_end":153366,"line_start":226,"line_end":226,"column_start":9,"column_end":25},"name":"from_unix_millis","qualname":"<Timestamp>::from_unix_millis","value":"pub fn from_unix_millis(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Timestamp` given unix timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"/ Creates new `Timestamp` given unix timestamp in milliseconds.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153276,"byte_end":153341,"line_start":225,"line_end":225,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153471,"byte_end":153474,"line_start":231,"line_end":231,"column_start":9,"column_end":12},"name":"add","qualname":"<Timestamp>::add","value":"pub fn add(&Self, Duration) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":" Increase the timestamp by given `Duration`.\n","sig":null,"attributes":[{"value":"/ Increase the timestamp by given `Duration`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153415,"byte_end":153462,"line_start":230,"line_end":230,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153624,"byte_end":153627,"line_start":236,"line_end":236,"column_start":9,"column_end":12},"name":"sub","qualname":"<Timestamp>::sub","value":"pub fn sub(&Self, Duration) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":" Decrease the timestamp by given `Duration`\n","sig":null,"attributes":[{"value":"/ Decrease the timestamp by given `Duration`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153569,"byte_end":153615,"line_start":235,"line_end":235,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153800,"byte_end":153804,"line_start":241,"line_end":241,"column_start":9,"column_end":13},"name":"diff","qualname":"<Timestamp>::diff","value":"pub fn diff(&Self, &Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns a saturated difference (Duration) between two Timestamps.\n","sig":null,"attributes":[{"value":"/ Returns a saturated difference (Duration) between two Timestamps.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153722,"byte_end":153791,"line_start":240,"line_end":240,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153948,"byte_end":153959,"line_start":246,"line_end":246,"column_start":9,"column_end":20},"name":"unix_millis","qualname":"<Timestamp>::unix_millis","value":"pub fn unix_millis(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return number of milliseconds since UNIX epoch.\n","sig":null,"attributes":[{"value":"/ Return number of milliseconds since UNIX epoch.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153888,"byte_end":153939,"line_start":245,"line_end":245,"column_start":2,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3268},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154146,"byte_end":154161,"line_start":256,"line_end":256,"column_start":2,"column_end":17},"name":"TransactionPool","qualname":"::offchain::Capability::TransactionPool","value":"Capability::TransactionPool","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" Access to transaction pool.\n","sig":null,"attributes":[{"value":"/ Access to transaction pool.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154113,"byte_end":154144,"line_start":255,"line_end":255,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3271},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154194,"byte_end":154198,"line_start":258,"line_end":258,"column_start":2,"column_end":6},"name":"Http","qualname":"::offchain::Capability::Http","value":"Capability::Http","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" External http calls.\n","sig":null,"attributes":[{"value":"/ External http calls.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154168,"byte_end":154192,"line_start":257,"line_end":257,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3274},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154227,"byte_end":154235,"line_start":260,"line_end":260,"column_start":2,"column_end":10},"name":"Keystore","qualname":"::offchain::Capability::Keystore","value":"Capability::Keystore","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" Keystore access.\n","sig":null,"attributes":[{"value":"/ Keystore access.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154205,"byte_end":154225,"line_start":259,"line_end":259,"column_start":2,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3277},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154266,"byte_end":154276,"line_start":262,"line_end":262,"column_start":2,"column_end":12},"name":"Randomness","qualname":"::offchain::Capability::Randomness","value":"Capability::Randomness","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" Randomness source.\n","sig":null,"attributes":[{"value":"/ Randomness source.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154242,"byte_end":154264,"line_start":261,"line_end":261,"column_start":2,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3280},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154320,"byte_end":154332,"line_start":264,"line_end":264,"column_start":2,"column_end":14},"name":"NetworkState","qualname":"::offchain::Capability::NetworkState","value":"Capability::NetworkState","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" Access to opaque network state.\n","sig":null,"attributes":[{"value":"/ Access to opaque network state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154283,"byte_end":154318,"line_start":263,"line_end":263,"column_start":2,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3283},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154387,"byte_end":154407,"line_start":266,"line_end":266,"column_start":2,"column_end":22},"name":"OffchainWorkerDbRead","qualname":"::offchain::Capability::OffchainWorkerDbRead","value":"Capability::OffchainWorkerDbRead","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" Access to offchain worker DB (read only).\n","sig":null,"attributes":[{"value":"/ Access to offchain worker DB (read only).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154340,"byte_end":154385,"line_start":265,"line_end":265,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3286},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154459,"byte_end":154480,"line_start":268,"line_end":268,"column_start":2,"column_end":23},"name":"OffchainWorkerDbWrite","qualname":"::offchain::Capability::OffchainWorkerDbWrite","value":"Capability::OffchainWorkerDbWrite","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" Access to offchain worker DB (writes).\n","sig":null,"attributes":[{"value":"/ Access to offchain worker DB (writes).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154415,"byte_end":154457,"line_start":267,"line_end":267,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3289},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154521,"byte_end":154538,"line_start":270,"line_end":270,"column_start":2,"column_end":19},"name":"NodeAuthorization","qualname":"::offchain::Capability::NodeAuthorization","value":"Capability::NodeAuthorization","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" Manage the authorized nodes\n","sig":null,"attributes":[{"value":"/ Manage the authorized nodes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154488,"byte_end":154519,"line_start":269,"line_end":269,"column_start":2,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":3267},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154099,"byte_end":154109,"line_start":254,"line_end":254,"column_start":10,"column_end":20},"name":"Capability","qualname":"::offchain::Capability","value":"pub enum Capability {\n\n    /// Access to transaction pool.\n    TransactionPool = ,\n\n    /// External http calls.\n    Http = ,\n\n    /// Keystore access.\n    Keystore = ,\n\n    /// Randomness source.\n    Randomness = ,\n\n    /// Access to opaque network state.\n    NetworkState = ,\n\n    /// Access to offchain worker DB (read only).\n    OffchainWorkerDbRead = ,\n\n    /// Access to offchain worker DB (writes).\n    OffchainWorkerDbWrite = ,\n\n    /// Manage the authorized nodes\n    NodeAuthorization = ,\n}","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":3271},{"krate":0,"index":3274},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3283},{"krate":0,"index":3286},{"krate":0,"index":3289}],"decl_id":null,"docs":" Execution context extra capabilities.\n","sig":null,"attributes":[{"value":"/ Execution context extra capabilities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153991,"byte_end":154032,"line_start":251,"line_end":251,"column_start":1,"column_end":42}},{"value":"repr(u8)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154078,"byte_end":154089,"line_start":253,"line_end":253,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3303},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154631,"byte_end":154643,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"Capabilities","qualname":"::offchain::Capabilities","value":"","parent":null,"children":[],"decl_id":null,"docs":" A set of capabilities\n","sig":null,"attributes":[{"value":"/ A set of capabilities","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154549,"byte_end":154574,"line_start":273,"line_end":273,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154743,"byte_end":154747,"line_start":279,"line_end":279,"column_start":9,"column_end":13},"name":"none","qualname":"<Capabilities>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return an object representing an empty set of capabilities.\n","sig":null,"attributes":[{"value":"/ Return an object representing an empty set of capabilities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154671,"byte_end":154734,"line_start":278,"line_end":278,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154843,"byte_end":154846,"line_start":284,"line_end":284,"column_start":9,"column_end":12},"name":"all","qualname":"<Capabilities>::all","value":"pub fn all() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return an object representing all capabilities enabled.\n","sig":null,"attributes":[{"value":"/ Return an object representing all capabilities enabled.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154775,"byte_end":154834,"line_start":283,"line_end":283,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155077,"byte_end":155095,"line_start":292,"line_end":292,"column_start":9,"column_end":27},"name":"rich_offchain_call","qualname":"<Capabilities>::rich_offchain_call","value":"pub fn rich_offchain_call() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return capabilities for rich offchain calls.","sig":null,"attributes":[{"value":"/ Return capabilities for rich offchain calls.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154888,"byte_end":154936,"line_start":288,"line_end":288,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154938,"byte_end":154941,"line_start":289,"line_end":289,"column_start":2,"column_end":5}},{"value":"/ Those calls should be allowed to sign and submit transactions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154943,"byte_end":155008,"line_start":290,"line_end":290,"column_start":2,"column_end":67}},{"value":"/ and access offchain workers database (but read only!).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155010,"byte_end":155068,"line_start":291,"line_end":291,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155281,"byte_end":155284,"line_start":301,"line_end":301,"column_start":9,"column_end":12},"name":"has","qualname":"<Capabilities>::has","value":"pub fn has(&Self, Capability) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if particular capability is enabled.\n","sig":null,"attributes":[{"value":"/ Check if particular capability is enabled.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155226,"byte_end":155272,"line_start":300,"line_end":300,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155437,"byte_end":155444,"line_start":306,"line_end":306,"column_start":9,"column_end":16},"name":"has_all","qualname":"<Capabilities>::has_all","value":"pub fn has_all(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this capability object represents all capabilities.\n","sig":null,"attributes":[{"value":"/ Check if this capability object represents all capabilities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155364,"byte_end":155428,"line_start":305,"line_end":305,"column_start":2,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1612},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155721,"byte_end":155734,"line_start":318,"line_end":318,"column_start":11,"column_end":24},"name":"Externalities","qualname":"::offchain::Externalities","value":"Externalities: Send","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629}],"decl_id":null,"docs":" An extended externalities for offchain workers.\n","sig":null,"attributes":[{"value":"/ An extended externalities for offchain workers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155659,"byte_end":155710,"line_start":317,"line_end":317,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155954,"byte_end":155966,"line_start":323,"line_end":323,"column_start":5,"column_end":17},"name":"is_validator","qualname":"::offchain::Externalities::is_validator","value":"pub fn is_validator(&Self) -> bool","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Returns if the local node is a potential validator.","sig":null,"attributes":[{"value":"/ Returns if the local node is a potential validator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155744,"byte_end":155799,"line_start":319,"line_end":319,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155801,"byte_end":155804,"line_start":320,"line_end":320,"column_start":2,"column_end":5}},{"value":"/ Even if this function returns `true`, it does not mean that any keys are configured","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155806,"byte_end":155893,"line_start":321,"line_end":321,"column_start":2,"column_end":89}},{"value":"/ and that the validator is registered in the chain.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155895,"byte_end":155949,"line_start":322,"line_end":322,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156051,"byte_end":156064,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"name":"network_state","qualname":"::offchain::Externalities::network_state","value":"pub fn network_state(&Self) -> Result<OpaqueNetworkState, ()>","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Returns information about the local node's network state.\n","sig":null,"attributes":[{"value":"/ Returns information about the local node's network state.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155985,"byte_end":156046,"line_start":325,"line_end":325,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156160,"byte_end":156169,"line_start":329,"line_end":329,"column_start":5,"column_end":14},"name":"timestamp","qualname":"::offchain::Externalities::timestamp","value":"pub fn timestamp(&mut Self) -> Timestamp","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Returns current UNIX timestamp (in millis)\n","sig":null,"attributes":[{"value":"/ Returns current UNIX timestamp (in millis)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156109,"byte_end":156155,"line_start":328,"line_end":328,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156254,"byte_end":156265,"line_start":332,"line_end":332,"column_start":5,"column_end":16},"name":"sleep_until","qualname":"::offchain::Externalities::sleep_until","value":"pub fn sleep_until(&mut Self, Timestamp)","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Pause the execution until `deadline` is reached.\n","sig":null,"attributes":[{"value":"/ Pause the execution until `deadline` is reached.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156197,"byte_end":156249,"line_start":331,"line_end":331,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156472,"byte_end":156483,"line_start":338,"line_end":338,"column_start":5,"column_end":16},"name":"random_seed","qualname":"::offchain::Externalities::random_seed","value":"pub fn random_seed(&mut Self) -> [u8; ]","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Returns a random seed.","sig":null,"attributes":[{"value":"/ Returns a random seed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156301,"byte_end":156327,"line_start":334,"line_end":334,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156329,"byte_end":156332,"line_start":335,"line_end":335,"column_start":2,"column_end":5}},{"value":"/ This is a truly random non deterministic seed generated by host environment.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156334,"byte_end":156414,"line_start":336,"line_end":336,"column_start":2,"column_end":82}},{"value":"/ Obviously fine in the off-chain worker context.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156416,"byte_end":156467,"line_start":337,"line_end":337,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156723,"byte_end":156740,"line_start":344,"line_end":344,"column_start":5,"column_end":22},"name":"local_storage_set","qualname":"::offchain::Externalities::local_storage_set","value":"pub fn local_storage_set(&mut Self, StorageKind, &[u8], &[u8])","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Sets a value in the local storage.","sig":null,"attributes":[{"value":"/ Sets a value in the local storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156510,"byte_end":156548,"line_start":340,"line_end":340,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156550,"byte_end":156553,"line_start":341,"line_end":341,"column_start":2,"column_end":5}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156555,"byte_end":156630,"line_start":342,"line_end":342,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It _is_ persisted between runs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156632,"byte_end":156718,"line_start":343,"line_end":343,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157016,"byte_end":157035,"line_start":350,"line_end":350,"column_start":5,"column_end":24},"name":"local_storage_clear","qualname":"::offchain::Externalities::local_storage_clear","value":"pub fn local_storage_clear(&mut Self, StorageKind, &[u8])","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Removes a value in the local storage.","sig":null,"attributes":[{"value":"/ Removes a value in the local storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156800,"byte_end":156841,"line_start":346,"line_end":346,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156843,"byte_end":156846,"line_start":347,"line_end":347,"column_start":2,"column_end":5}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156848,"byte_end":156923,"line_start":348,"line_end":348,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It _is_ persisted between runs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":156925,"byte_end":157011,"line_start":349,"line_end":349,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157527,"byte_end":157556,"line_start":361,"line_end":361,"column_start":5,"column_end":34},"name":"local_storage_compare_and_set","qualname":"::offchain::Externalities::local_storage_compare_and_set","value":"pub fn local_storage_compare_and_set(&mut Self, StorageKind, &[u8],\n                                     Option<&[u8]>, &[u8]) -> bool","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Sets a value in the local storage if it matches current value.","sig":null,"attributes":[{"value":"/ Sets a value in the local storage if it matches current value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157081,"byte_end":157147,"line_start":352,"line_end":352,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157149,"byte_end":157152,"line_start":353,"line_end":353,"column_start":2,"column_end":5}},{"value":"/ Since multiple offchain workers may be running concurrently, to prevent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157154,"byte_end":157229,"line_start":354,"line_end":354,"column_start":2,"column_end":77}},{"value":"/ data races use CAS to coordinate between them.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157231,"byte_end":157281,"line_start":355,"line_end":355,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157283,"byte_end":157286,"line_start":356,"line_end":356,"column_start":2,"column_end":5}},{"value":"/ Returns `true` if the value has been set, `false` otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157288,"byte_end":157352,"line_start":357,"line_end":357,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157354,"byte_end":157357,"line_start":358,"line_end":358,"column_start":2,"column_end":5}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157359,"byte_end":157434,"line_start":359,"line_end":359,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It _is_ persisted between runs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157436,"byte_end":157522,"line_start":360,"line_end":360,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157956,"byte_end":157973,"line_start":374,"line_end":374,"column_start":5,"column_end":22},"name":"local_storage_get","qualname":"::offchain::Externalities::local_storage_get","value":"pub fn local_storage_get(&mut Self, StorageKind, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Gets a value from the local storage.","sig":null,"attributes":[{"value":"/ Gets a value from the local storage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157668,"byte_end":157708,"line_start":369,"line_end":369,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157710,"byte_end":157713,"line_start":370,"line_end":370,"column_start":2,"column_end":5}},{"value":"/ If the value does not exist in the storage `None` will be returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157715,"byte_end":157786,"line_start":371,"line_end":371,"column_start":2,"column_end":73}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157788,"byte_end":157863,"line_start":372,"line_end":372,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It _is_ persisted between runs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":157865,"byte_end":157951,"line_start":373,"line_end":373,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158392,"byte_end":158410,"line_start":385,"line_end":385,"column_start":5,"column_end":23},"name":"http_request_start","qualname":"::offchain::Externalities::http_request_start","value":"pub fn http_request_start(&mut Self, &str, &str, &[u8])\n-> Result<HttpRequestId, ()>","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Initiates a http request given HTTP verb and the URL.","sig":null,"attributes":[{"value":"/ Initiates a http request given HTTP verb and the URL.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158038,"byte_end":158095,"line_start":376,"line_end":376,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158097,"byte_end":158100,"line_start":377,"line_end":377,"column_start":2,"column_end":5}},{"value":"/ Meta is a future-reserved field containing additional, parity-scale-codec encoded parameters.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158102,"byte_end":158199,"line_start":378,"line_end":378,"column_start":2,"column_end":99}},{"value":"/ Returns the id of newly started request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158201,"byte_end":158245,"line_start":379,"line_end":379,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158247,"byte_end":158250,"line_start":380,"line_end":380,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158252,"byte_end":158276,"line_start":381,"line_end":381,"column_start":2,"column_end":26}},{"value":"/ - No new request identifier could be allocated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158278,"byte_end":158329,"line_start":382,"line_end":382,"column_start":2,"column_end":53}},{"value":"/ - The method or URI contain invalid characters.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158331,"byte_end":158382,"line_start":383,"line_end":383,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158384,"byte_end":158387,"line_start":384,"line_end":384,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159002,"byte_end":159025,"line_start":405,"line_end":405,"column_start":5,"column_end":28},"name":"http_request_add_header","qualname":"::offchain::Externalities::http_request_add_header","value":"pub fn http_request_add_header(&mut Self, HttpRequestId, &str, &str)\n-> Result<(), ()>","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Append header to the request.","sig":null,"attributes":[{"value":"/ Append header to the request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158503,"byte_end":158536,"line_start":392,"line_end":392,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158538,"byte_end":158541,"line_start":393,"line_end":393,"column_start":2,"column_end":5}},{"value":"/ Calling this function multiple times with the same header name continues appending new","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158543,"byte_end":158633,"line_start":394,"line_end":394,"column_start":2,"column_end":92}},{"value":"/ headers. In other words, headers are never replaced.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158635,"byte_end":158691,"line_start":395,"line_end":395,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158693,"byte_end":158696,"line_start":396,"line_end":396,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158698,"byte_end":158722,"line_start":397,"line_end":397,"column_start":2,"column_end":26}},{"value":"/ - The request identifier is invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158724,"byte_end":158764,"line_start":398,"line_end":398,"column_start":2,"column_end":42}},{"value":"/ - You have called `http_request_write_body` on that request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158766,"byte_end":158830,"line_start":399,"line_end":399,"column_start":2,"column_end":66}},{"value":"/ - The name or value contain invalid characters.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158832,"byte_end":158883,"line_start":400,"line_end":400,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158885,"byte_end":158888,"line_start":401,"line_end":401,"column_start":2,"column_end":5}},{"value":"/ An error doesn't poison the request, and you can continue as if the call had never been","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158890,"byte_end":158981,"line_start":402,"line_end":402,"column_start":2,"column_end":93}},{"value":"/ made.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158983,"byte_end":158992,"line_start":403,"line_end":403,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":158994,"byte_end":158997,"line_start":404,"line_end":404,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159764,"byte_end":159787,"line_start":427,"line_end":427,"column_start":5,"column_end":28},"name":"http_request_write_body","qualname":"::offchain::Externalities::http_request_write_body","value":"pub fn http_request_write_body(&mut Self, HttpRequestId, &[u8],\n                               Option<Timestamp>) -> Result<(), HttpError>","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Write a chunk of request body.","sig":null,"attributes":[{"value":"/ Write a chunk of request body.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159121,"byte_end":159155,"line_start":412,"line_end":412,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159157,"byte_end":159160,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ Calling this function with a non-empty slice may or may not start the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159162,"byte_end":159235,"line_start":414,"line_end":414,"column_start":2,"column_end":75}},{"value":"/ HTTP request. Calling this function with an empty chunks finalizes the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159237,"byte_end":159311,"line_start":415,"line_end":415,"column_start":2,"column_end":76}},{"value":"/ request and always starts it. It is no longer valid to write more data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159313,"byte_end":159387,"line_start":416,"line_end":416,"column_start":2,"column_end":76}},{"value":"/ afterwards.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159389,"byte_end":159404,"line_start":417,"line_end":417,"column_start":2,"column_end":17}},{"value":"/ Passing `None` as deadline blocks forever.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159406,"byte_end":159452,"line_start":418,"line_end":418,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159454,"byte_end":159457,"line_start":419,"line_end":419,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159459,"byte_end":159483,"line_start":420,"line_end":420,"column_start":2,"column_end":26}},{"value":"/ - The request identifier is invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159485,"byte_end":159525,"line_start":421,"line_end":421,"column_start":2,"column_end":42}},{"value":"/ - `http_response_wait` has already been called on this request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159527,"byte_end":159594,"line_start":422,"line_end":422,"column_start":2,"column_end":69}},{"value":"/ - The deadline is reached.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159596,"byte_end":159626,"line_start":423,"line_end":423,"column_start":2,"column_end":32}},{"value":"/ - An I/O error has happened, for example the remote has closed our","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159628,"byte_end":159698,"line_start":424,"line_end":424,"column_start":2,"column_end":72}},{"value":"/   request. The request is then considered invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159700,"byte_end":159754,"line_start":425,"line_end":425,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159756,"byte_end":159759,"line_start":426,"line_end":426,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160358,"byte_end":160376,"line_start":444,"line_end":444,"column_start":5,"column_end":23},"name":"http_response_wait","qualname":"::offchain::Externalities::http_response_wait","value":"pub fn http_response_wait(&mut Self, &[HttpRequestId], Option<Timestamp>)\n-> Vec<HttpRequestStatus>","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Block and wait for the responses for given requests.","sig":null,"attributes":[{"value":"/ Block and wait for the responses for given requests.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159908,"byte_end":159964,"line_start":434,"line_end":434,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159966,"byte_end":159969,"line_start":435,"line_end":435,"column_start":2,"column_end":5}},{"value":"/ Returns a vector of request statuses (the len is the same as ids).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":159971,"byte_end":160041,"line_start":436,"line_end":436,"column_start":2,"column_end":72}},{"value":"/ Note that if deadline is not provided the method will block indefinitely,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160043,"byte_end":160120,"line_start":437,"line_end":437,"column_start":2,"column_end":79}},{"value":"/ otherwise unready responses will produce `DeadlineReached` status.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160122,"byte_end":160192,"line_start":438,"line_end":438,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160194,"byte_end":160197,"line_start":439,"line_end":439,"column_start":2,"column_end":5}},{"value":"/ If a response returns an `IoError`, it is then considered destroyed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160199,"byte_end":160271,"line_start":440,"line_end":440,"column_start":2,"column_end":74}},{"value":"/ Its id is then invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160273,"byte_end":160300,"line_start":441,"line_end":441,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160302,"byte_end":160305,"line_start":442,"line_end":442,"column_start":2,"column_end":5}},{"value":"/ Passing `None` as deadline blocks forever.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160307,"byte_end":160353,"line_start":443,"line_end":443,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160837,"byte_end":160858,"line_start":459,"line_end":459,"column_start":5,"column_end":26},"name":"http_response_headers","qualname":"::offchain::Externalities::http_response_headers","value":"pub fn http_response_headers(&mut Self, HttpRequestId)\n-> Vec<(Vec<u8>, Vec<u8>)>","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Read all response headers.","sig":null,"attributes":[{"value":"/ Read all response headers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160478,"byte_end":160508,"line_start":450,"line_end":450,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160510,"byte_end":160513,"line_start":451,"line_end":451,"column_start":2,"column_end":5}},{"value":"/ Returns a vector of pairs `(HeaderKey, HeaderValue)`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160515,"byte_end":160572,"line_start":452,"line_end":452,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160574,"byte_end":160577,"line_start":453,"line_end":453,"column_start":2,"column_end":5}},{"value":"/ Dispatches the request if it hasn't been done yet. It is no longer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160579,"byte_end":160649,"line_start":454,"line_end":454,"column_start":2,"column_end":72}},{"value":"/ valid to modify the headers or write data to the request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160651,"byte_end":160712,"line_start":455,"line_end":455,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160714,"byte_end":160717,"line_start":456,"line_end":456,"column_start":2,"column_end":5}},{"value":"/ Returns an empty list if the identifier is unknown/invalid, hasn't","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160719,"byte_end":160789,"line_start":457,"line_end":457,"column_start":2,"column_end":72}},{"value":"/ received a response, or has finished.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160791,"byte_end":160832,"line_start":458,"line_end":458,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161726,"byte_end":161749,"line_start":483,"line_end":483,"column_start":5,"column_end":28},"name":"http_response_read_body","qualname":"::offchain::Externalities::http_response_read_body","value":"pub fn http_response_read_body(&mut Self, HttpRequestId, &mut [u8],\n                               Option<Timestamp>) -> Result<usize, HttpError>","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Read a chunk of body response to given buffer.","sig":null,"attributes":[{"value":"/ Read a chunk of body response to given buffer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160934,"byte_end":160984,"line_start":464,"line_end":464,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160986,"byte_end":160989,"line_start":465,"line_end":465,"column_start":2,"column_end":5}},{"value":"/ Dispatches the request if it hasn't been done yet. It is no longer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":160991,"byte_end":161061,"line_start":466,"line_end":466,"column_start":2,"column_end":72}},{"value":"/ valid to modify the headers or write data to the request.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161063,"byte_end":161124,"line_start":467,"line_end":467,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161126,"byte_end":161129,"line_start":468,"line_end":468,"column_start":2,"column_end":5}},{"value":"/ Returns the number of bytes written or an error in case a deadline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161131,"byte_end":161201,"line_start":469,"line_end":469,"column_start":2,"column_end":72}},{"value":"/ is reached or server closed the connection.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161203,"byte_end":161250,"line_start":470,"line_end":470,"column_start":2,"column_end":49}},{"value":"/ Passing `None` as a deadline blocks forever.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161252,"byte_end":161300,"line_start":471,"line_end":471,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161302,"byte_end":161305,"line_start":472,"line_end":472,"column_start":2,"column_end":5}},{"value":"/ If `Ok(0)` or `Err(IoError)` is returned, the request is considered","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161307,"byte_end":161378,"line_start":473,"line_end":473,"column_start":2,"column_end":73}},{"value":"/ destroyed. Doing another read or getting the response's headers, for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161380,"byte_end":161452,"line_start":474,"line_end":474,"column_start":2,"column_end":74}},{"value":"/ example, is then invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161454,"byte_end":161483,"line_start":475,"line_end":475,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161485,"byte_end":161488,"line_start":476,"line_end":476,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161490,"byte_end":161514,"line_start":477,"line_end":477,"column_start":2,"column_end":26}},{"value":"/ - The request identifier is invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161516,"byte_end":161556,"line_start":478,"line_end":478,"column_start":2,"column_end":42}},{"value":"/ - The deadline is reached.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161558,"byte_end":161588,"line_start":479,"line_end":479,"column_start":2,"column_end":32}},{"value":"/ - An I/O error has happened, for example the remote has closed our","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161590,"byte_end":161660,"line_start":480,"line_end":480,"column_start":2,"column_end":72}},{"value":"/   request. The request is then considered invalid.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161662,"byte_end":161716,"line_start":481,"line_end":481,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161718,"byte_end":161721,"line_start":482,"line_end":482,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":162450,"byte_end":162470,"line_start":500,"line_end":500,"column_start":5,"column_end":25},"name":"set_authorized_nodes","qualname":"::offchain::Externalities::set_authorized_nodes","value":"pub fn set_authorized_nodes(&mut Self, Vec<OpaquePeerId>, bool)","parent":{"krate":0,"index":1612},"children":[],"decl_id":null,"docs":" Set the authorized nodes from runtime.","sig":null,"attributes":[{"value":"/ Set the authorized nodes from runtime.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161878,"byte_end":161920,"line_start":490,"line_end":490,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161922,"byte_end":161925,"line_start":491,"line_end":491,"column_start":2,"column_end":5}},{"value":"/ In a permissioned network, the connections between nodes need to reach a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":161927,"byte_end":162003,"line_start":492,"line_end":492,"column_start":2,"column_end":78}},{"value":"/ consensus between participants.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":162005,"byte_end":162040,"line_start":493,"line_end":493,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":162042,"byte_end":162045,"line_start":494,"line_end":494,"column_start":2,"column_end":5}},{"value":"/ - `nodes`: a set of nodes which are allowed to connect for the local node.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":162047,"byte_end":162125,"line_start":495,"line_end":495,"column_start":2,"column_end":80}},{"value":"/ each one is identified with an `OpaquePeerId`, here it just use plain bytes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":162127,"byte_end":162206,"line_start":496,"line_end":496,"column_start":2,"column_end":81}},{"value":"/ without any encoding. Invalid `OpaquePeerId`s are silently ignored.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":162208,"byte_end":162279,"line_start":497,"line_end":497,"column_start":2,"column_end":73}},{"value":"/ - `authorized_only`: if true, only the authorized nodes are allowed to connect,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":162281,"byte_end":162364,"line_start":498,"line_end":498,"column_start":2,"column_end":85}},{"value":"/ otherwise unauthorized nodes can also be connected through other mechanism.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":162366,"byte_end":162445,"line_start":499,"line_end":499,"column_start":2,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1649},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":164952,"byte_end":164972,"line_start":586,"line_end":586,"column_start":12,"column_end":32},"name":"LimitedExternalities","qualname":"::offchain::LimitedExternalities","value":"LimitedExternalities {  }","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":1652}],"decl_id":null,"docs":" An `OffchainExternalities` implementation with limited capabilities.\n","sig":null,"attributes":[{"value":"/ An `OffchainExternalities` implementation with limited capabilities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":164868,"byte_end":164940,"line_start":585,"line_end":585,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":165134,"byte_end":165137,"line_start":593,"line_end":593,"column_start":9,"column_end":12},"name":"new","qualname":"<LimitedExternalities<T>>::new","value":"pub fn new(Capabilities, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new externalities limited to given `capabilities`.\n","sig":null,"attributes":[{"value":"/ Create new externalities limited to given `capabilities`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":165064,"byte_end":165125,"line_start":592,"line_end":592,"column_start":2,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3318},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169065,"byte_end":169076,"line_start":711,"line_end":711,"column_start":13,"column_end":24},"name":"OffchainExt","qualname":"::offchain::OffchainExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The offchain extension that will be registered at the Substrate externalities.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169194,"byte_end":169197,"line_start":717,"line_end":717,"column_start":9,"column_end":12},"name":"new","qualname":"<OffchainExt>::new","value":"pub fn new<O: Externalities + 'static>(O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169149,"byte_end":169185,"line_start":716,"line_end":716,"column_start":2,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":1679},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169551,"byte_end":169566,"line_start":728,"line_end":728,"column_start":11,"column_end":26},"name":"TransactionPool","qualname":"::offchain::TransactionPool","value":"TransactionPool","parent":null,"children":[{"krate":0,"index":1680}],"decl_id":null,"docs":" Abstraction over transaction pool.","sig":null,"attributes":[{"value":"/ Abstraction over transaction pool.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169282,"byte_end":169320,"line_start":722,"line_end":722,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169321,"byte_end":169324,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ This trait is currently used within the `ExternalitiesExtension`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169325,"byte_end":169393,"line_start":724,"line_end":724,"column_start":1,"column_end":69}},{"value":"/ to provide offchain calls with access to the transaction pool without","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169394,"byte_end":169467,"line_start":725,"line_end":725,"column_start":1,"column_end":74}},{"value":"/ tight coupling with any pool implementation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169468,"byte_end":169516,"line_start":726,"line_end":726,"column_start":1,"column_end":49}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169517,"byte_end":169540,"line_start":727,"line_end":727,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169677,"byte_end":169695,"line_start":732,"line_end":732,"column_start":5,"column_end":23},"name":"submit_transaction","qualname":"::offchain::TransactionPool::submit_transaction","value":"pub fn submit_transaction(&mut Self, Vec<u8>) -> Result<(), ()>","parent":{"krate":0,"index":1679},"children":[],"decl_id":null,"docs":" Submit transaction.","sig":null,"attributes":[{"value":"/ Submit transaction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169570,"byte_end":169593,"line_start":729,"line_end":729,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169595,"byte_end":169598,"line_start":730,"line_end":730,"column_start":2,"column_end":5}},{"value":"/ The transaction will end up in the pool and be propagated to others.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169600,"byte_end":169672,"line_start":731,"line_end":731,"column_start":2,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3328},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169889,"byte_end":169907,"line_start":738,"line_end":738,"column_start":13,"column_end":31},"name":"TransactionPoolExt","qualname":"::offchain::TransactionPoolExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" An externalities extension to submit transactions to the pool.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":170055,"byte_end":170058,"line_start":744,"line_end":744,"column_start":9,"column_end":12},"name":"new","qualname":"<TransactionPoolExt>::new","value":"pub fn new<O: TransactionPool + Send + 'static>(O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TransactionPoolExt`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TransactionPoolExt`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169996,"byte_end":170046,"line_start":743,"line_end":743,"column_start":2,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1684},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sandbox","qualname":"::sandbox","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":4286},{"krate":0,"index":1687},{"krate":0,"index":4288},{"krate":0,"index":1688},{"krate":0,"index":3338},{"krate":0,"index":3347},{"krate":0,"index":3342},{"krate":0,"index":3340},{"krate":0,"index":3353},{"krate":0,"index":3380},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3367},{"krate":0,"index":3362},{"krate":0,"index":3360},{"krate":0,"index":3382},{"krate":0,"index":3406},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3393},{"krate":0,"index":3388},{"krate":0,"index":3386},{"krate":0,"index":3408},{"krate":0,"index":3434},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3417},{"krate":0,"index":3412},{"krate":0,"index":3410},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693}],"decl_id":null,"docs":" Definition of a sandbox environment.\n","sig":null,"attributes":[{"value":"/ Definition of a sandbox environment.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192175,"byte_end":192215,"line_start":18,"line_end":18,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3338},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192394,"byte_end":192403,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"HostError","qualname":"::sandbox::HostError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error error that can be returned from host function.\n","sig":null,"attributes":[{"value":"/ Error error that can be returned from host function.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192269,"byte_end":192325,"line_start":23,"line_end":23,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3354},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192705,"byte_end":192713,"line_start":35,"line_end":35,"column_start":2,"column_end":10},"name":"Function","qualname":"::sandbox::ExternEntity::Function","value":"ExternEntity::Function(u32)","parent":{"krate":0,"index":3353},"children":[],"decl_id":null,"docs":" Function that is specified by an index in a default table of\n a module that creates the sandbox.\n","sig":null,"attributes":[{"value":"/ Function that is specified by an index in a default table of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192576,"byte_end":192640,"line_start":32,"line_end":32,"column_start":2,"column_end":66}},{"value":"/ a module that creates the sandbox.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192642,"byte_end":192680,"line_start":33,"line_end":33,"column_start":2,"column_end":40}},{"value":"codec(index = \"1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192682,"byte_end":192703,"line_start":34,"line_end":34,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3357},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192869,"byte_end":192875,"line_start":40,"line_end":40,"column_start":2,"column_end":8},"name":"Memory","qualname":"::sandbox::ExternEntity::Memory","value":"ExternEntity::Memory(u32)","parent":{"krate":0,"index":3353},"children":[],"decl_id":null,"docs":" Linear memory that is specified by some identifier returned by sandbox\n module upon creation new sandboxed memory.\n","sig":null,"attributes":[{"value":"/ Linear memory that is specified by some identifier returned by sandbox","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192722,"byte_end":192796,"line_start":37,"line_end":37,"column_start":2,"column_end":76}},{"value":"/ module upon creation new sandboxed memory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192798,"byte_end":192844,"line_start":38,"line_end":38,"column_start":2,"column_end":48}},{"value":"codec(index = \"2\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192846,"byte_end":192867,"line_start":39,"line_end":39,"column_start":2,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":3353},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192560,"byte_end":192572,"line_start":31,"line_end":31,"column_start":10,"column_end":22},"name":"ExternEntity","qualname":"::sandbox::ExternEntity","value":"pub enum ExternEntity {\n\n    /// Function that is specified by an index in a default table of\n    /// a module that creates the sandbox.\n    #[codec(index = \"1\")]\n    Function(u32),\n\n    /// Linear memory that is specified by some identifier returned by sandbox\n    /// module upon creation new sandboxed memory.\n    #[codec(index = \"2\")]\n    Memory(u32),\n}","parent":null,"children":[{"krate":0,"index":3354},{"krate":0,"index":3357}],"decl_id":null,"docs":" Describes an entity to define or import into the environment.\n","sig":null,"attributes":[{"value":"/ Describes an entity to define or import into the environment.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192406,"byte_end":192471,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3382},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193111,"byte_end":193116,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"Entry","qualname":"::sandbox::Entry","value":"Entry { module_name, field_name, entity }","parent":null,"children":[{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385}],"decl_id":null,"docs":" An entry in a environment definition table.","sig":null,"attributes":[{"value":"/ An entry in a environment definition table.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192885,"byte_end":192932,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192933,"byte_end":192936,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Each entry has a two-level name and description of an entity","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":192937,"byte_end":193001,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/ being defined.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193002,"byte_end":193020,"line_start":46,"line_end":46,"column_start":1,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3383},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193186,"byte_end":193197,"line_start":51,"line_end":51,"column_start":6,"column_end":17},"name":"module_name","qualname":"::sandbox::Entry::module_name","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3382},"children":[],"decl_id":null,"docs":" Module name of which corresponding entity being defined.\n","sig":null,"attributes":[{"value":"/ Module name of which corresponding entity being defined.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193120,"byte_end":193180,"line_start":50,"line_end":50,"column_start":2,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3384},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193274,"byte_end":193284,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"name":"field_name","qualname":"::sandbox::Entry::field_name","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3382},"children":[],"decl_id":null,"docs":" Field name in which corresponding entity being defined.\n","sig":null,"attributes":[{"value":"/ Field name in which corresponding entity being defined.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193209,"byte_end":193268,"line_start":52,"line_end":52,"column_start":2,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3385},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193336,"byte_end":193342,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"name":"entity","qualname":"::sandbox::Entry::entity","value":"sandbox::ExternEntity","parent":{"krate":0,"index":3382},"children":[],"decl_id":null,"docs":" External entity being defined.\n","sig":null,"attributes":[{"value":"/ External entity being defined.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193296,"byte_end":193330,"line_start":54,"line_end":54,"column_start":2,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3408},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193515,"byte_end":193536,"line_start":61,"line_end":61,"column_start":12,"column_end":33},"name":"EnvironmentDefinition","qualname":"::sandbox::EnvironmentDefinition","value":"EnvironmentDefinition { entries }","parent":null,"children":[{"krate":0,"index":3409}],"decl_id":null,"docs":" Definition of runtime that could be used by sandboxed code.\n","sig":null,"attributes":[{"value":"/ Definition of runtime that could be used by sandboxed code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193361,"byte_end":193424,"line_start":58,"line_end":58,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3409},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193602,"byte_end":193609,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"name":"entries","qualname":"::sandbox::EnvironmentDefinition::entries","value":"std::vec::Vec<sandbox::Entry>","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":" Vector of all entries in the environment definition.\n","sig":null,"attributes":[{"value":"/ Vector of all entries in the environment definition.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193540,"byte_end":193596,"line_start":62,"line_end":62,"column_start":2,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":1689},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193738,"byte_end":193751,"line_start":68,"line_end":68,"column_start":11,"column_end":24},"name":"MEM_UNLIMITED","qualname":"::sandbox::MEM_UNLIMITED","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Constant for specifying no limit when creating a sandboxed\n memory instance. For FFI purposes.\n","sig":null,"attributes":[{"value":"/ Constant for specifying no limit when creating a sandboxed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193626,"byte_end":193688,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/ memory instance. For FFI purposes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193689,"byte_end":193727,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1690},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193833,"byte_end":193839,"line_start":73,"line_end":73,"column_start":11,"column_end":17},"name":"ERR_OK","qualname":"::sandbox::ERR_OK","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" No error happened.","sig":null,"attributes":[{"value":"/ No error happened.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193774,"byte_end":193796,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193797,"byte_end":193800,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193801,"byte_end":193822,"line_start":72,"line_end":72,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1691},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193983,"byte_end":193993,"line_start":79,"line_end":79,"column_start":11,"column_end":21},"name":"ERR_MODULE","qualname":"::sandbox::ERR_MODULE","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Validation or instantiation error occurred when creating new\n sandboxed module instance.","sig":null,"attributes":[{"value":"/ Validation or instantiation error occurred when creating new","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193851,"byte_end":193915,"line_start":75,"line_end":75,"column_start":1,"column_end":65}},{"value":"/ sandboxed module instance.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193916,"byte_end":193946,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193947,"byte_end":193950,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":193951,"byte_end":193972,"line_start":78,"line_end":78,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1692},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":194109,"byte_end":194126,"line_start":84,"line_end":84,"column_start":11,"column_end":28},"name":"ERR_OUT_OF_BOUNDS","qualname":"::sandbox::ERR_OUT_OF_BOUNDS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Out-of-bounds access attempted with memory or table.","sig":null,"attributes":[{"value":"/ Out-of-bounds access attempted with memory or table.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":194016,"byte_end":194072,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":194073,"byte_end":194076,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":194077,"byte_end":194098,"line_start":83,"line_end":83,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1693},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":194232,"byte_end":194245,"line_start":89,"line_end":89,"column_start":11,"column_end":24},"name":"ERR_EXECUTION","qualname":"::sandbox::ERR_EXECUTION","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Execution error occurred (typically trap).","sig":null,"attributes":[{"value":"/ Execution error occurred (typically trap).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":194149,"byte_end":194195,"line_start":86,"line_end":86,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":194196,"byte_end":194199,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sandbox.rs","byte_start":194200,"byte_end":194221,"line_start":88,"line_end":88,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1694},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/uint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uint","qualname":"::uint","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/uint.rs","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":4292},{"krate":0,"index":1697},{"krate":0,"index":4294}],"decl_id":null,"docs":" An unsigned fixed-size integer.\n","sig":null,"attributes":[{"value":"/ An unsigned fixed-size integer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/uint.rs","byte_start":195686,"byte_end":195721,"line_start":18,"line_end":18,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3436},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199077,"byte_end":199101,"line_start":28,"line_end":28,"column_start":12,"column_end":36},"name":"ChangesTrieConfiguration","qualname":"::changes_trie::ChangesTrieConfiguration","value":"ChangesTrieConfiguration { digest_interval, digest_levels }","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438}],"decl_id":null,"docs":" Substrate changes trie configuration.\n","sig":null,"attributes":[{"value":"/ Substrate changes trie configuration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":198857,"byte_end":198898,"line_start":25,"line_end":25,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3437},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199234,"byte_end":199249,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"name":"digest_interval","qualname":"::changes_trie::ChangesTrieConfiguration::digest_interval","value":"u32","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":" Interval (in blocks) at which level1-digests are created. Digests are not\n created when this is less or equal to 1.\n","sig":null,"attributes":[{"value":"/ Interval (in blocks) at which level1-digests are created. Digests are not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199105,"byte_end":199182,"line_start":29,"line_end":29,"column_start":2,"column_end":79}},{"value":"/ created when this is less or equal to 1.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199184,"byte_end":199228,"line_start":30,"line_end":30,"column_start":2,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3438},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199783,"byte_end":199796,"line_start":39,"line_end":39,"column_start":6,"column_end":19},"name":"digest_levels","qualname":"::changes_trie::ChangesTrieConfiguration::digest_levels","value":"u32","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":" Maximal number of digest levels in hierarchy. 0 means that digests are not\n created at all (even level1 digests). 1 means only level1-digests are created.\n 2 means that every digest_interval^2 there will be a level2-digest, and so on.\n Please ensure that maximum digest interval (i.e. digest_interval^digest_levels)\n is within `u32` limits. Otherwise you'll never see digests covering such intervals\n && maximal digests interval will be truncated to the last interval that fits\n `u32` limits.\n","sig":null,"attributes":[{"value":"/ Maximal number of digest levels in hierarchy. 0 means that digests are not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199257,"byte_end":199335,"line_start":32,"line_end":32,"column_start":2,"column_end":80}},{"value":"/ created at all (even level1 digests). 1 means only level1-digests are created.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199337,"byte_end":199419,"line_start":33,"line_end":33,"column_start":2,"column_end":84}},{"value":"/ 2 means that every digest_interval^2 there will be a level2-digest, and so on.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199421,"byte_end":199503,"line_start":34,"line_end":34,"column_start":2,"column_end":84}},{"value":"/ Please ensure that maximum digest interval (i.e. digest_interval^digest_levels)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199505,"byte_end":199588,"line_start":35,"line_end":35,"column_start":2,"column_end":85}},{"value":"/ is within `u32` limits. Otherwise you'll never see digests covering such intervals","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199590,"byte_end":199676,"line_start":36,"line_end":36,"column_start":2,"column_end":88}},{"value":"/ && maximal digests interval will be truncated to the last interval that fits","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199678,"byte_end":199758,"line_start":37,"line_end":37,"column_start":2,"column_end":82}},{"value":"/ `u32` limits.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199760,"byte_end":199777,"line_start":38,"line_end":38,"column_start":2,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":3514},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199904,"byte_end":199933,"line_start":44,"line_end":44,"column_start":12,"column_end":41},"name":"ChangesTrieConfigurationRange","qualname":"::changes_trie::ChangesTrieConfigurationRange","value":"ChangesTrieConfigurationRange { zero, end, config }","parent":null,"children":[{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519}],"decl_id":null,"docs":" Substrate changes trie configuration range.\n","sig":null,"attributes":[{"value":"/ Substrate changes trie configuration range.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199806,"byte_end":199853,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3517},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199989,"byte_end":199993,"line_start":46,"line_end":46,"column_start":6,"column_end":10},"name":"zero","qualname":"::changes_trie::ChangesTrieConfigurationRange::zero","value":"(Number, Hash)","parent":{"krate":0,"index":3514},"children":[],"decl_id":null,"docs":" Zero block of configuration.\n","sig":null,"attributes":[{"value":"/ Zero block of configuration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":199951,"byte_end":199983,"line_start":45,"line_end":45,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3518},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200104,"byte_end":200107,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"name":"end","qualname":"::changes_trie::ChangesTrieConfigurationRange::end","value":"std::option::Option<(Number, Hash)>","parent":{"krate":0,"index":3514},"children":[],"decl_id":null,"docs":" Last block of configuration (if configuration has been deactivated at some point).\n","sig":null,"attributes":[{"value":"/ Last block of configuration (if configuration has been deactivated at some point).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200012,"byte_end":200098,"line_start":47,"line_end":47,"column_start":2,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3519},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200220,"byte_end":200226,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"name":"config","qualname":"::changes_trie::ChangesTrieConfigurationRange::config","value":"std::option::Option<changes_trie::ChangesTrieConfiguration>","parent":{"krate":0,"index":3514},"children":[],"decl_id":null,"docs":" The configuration itself. None if changes tries were disabled in this range.\n","sig":null,"attributes":[{"value":"/ The configuration itself. None if changes tries were disabled in this range.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200134,"byte_end":200214,"line_start":49,"line_end":49,"column_start":2,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200369,"byte_end":200372,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"name":"new","qualname":"<ChangesTrieConfiguration>::new","value":"pub fn new(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new configuration given digest interval and levels.\n","sig":null,"attributes":[{"value":"/ Create new configuration given digest interval and levels.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200298,"byte_end":200360,"line_start":54,"line_end":54,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200509,"byte_end":200532,"line_start":60,"line_end":60,"column_start":9,"column_end":32},"name":"is_digest_build_enabled","qualname":"<ChangesTrieConfiguration>::is_digest_build_enabled","value":"pub fn is_digest_build_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is digest build enabled?\n","sig":null,"attributes":[{"value":"/ Is digest build enabled?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200472,"byte_end":200500,"line_start":59,"line_end":59,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200663,"byte_end":200696,"line_start":65,"line_end":65,"column_start":9,"column_end":42},"name":"is_digest_build_required_at_block","qualname":"<ChangesTrieConfiguration>::is_digest_build_required_at_block","value":"pub fn is_digest_build_required_at_block<Number>(&Self, Number, Number)\n-> bool where Number: From<u32> + PartialEq + ::sp_std::ops::Rem<Output =\nNumber> + ::sp_std::ops::Sub<Output = Number> + ::sp_std::cmp::PartialOrd +\nZero","parent":null,"children":[],"decl_id":null,"docs":" Do we need to build digest at given block?\n","sig":null,"attributes":[{"value":"/ Do we need to build digest at given block?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200608,"byte_end":200654,"line_start":64,"line_end":64,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":201117,"byte_end":201136,"line_start":81,"line_end":81,"column_start":9,"column_end":28},"name":"max_digest_interval","qualname":"<ChangesTrieConfiguration>::max_digest_interval","value":"pub fn max_digest_interval(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns max digest interval. One if digests are not created at all.\n","sig":null,"attributes":[{"value":"/ Returns max digest interval. One if digests are not created at all.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":201037,"byte_end":201108,"line_start":80,"line_end":80,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":201686,"byte_end":201713,"line_start":100,"line_end":100,"column_start":9,"column_end":36},"name":"prev_max_level_digest_block","qualname":"<ChangesTrieConfiguration>::prev_max_level_digest_block","value":"pub fn prev_max_level_digest_block<Number>(&Self, Number, Number)\n-> Option<Number> where Number: Clone + From<u32> + PartialOrd + PartialEq +\n::sp_std::ops::Add<Output = Number> + ::sp_std::ops::Sub<Output = Number> +\n::sp_std::ops::Div<Output = Number> + ::sp_std::ops::Mul<Output = Number> +\nZero","parent":null,"children":[],"decl_id":null,"docs":" Returns max level digest block number that has been created at block <= passed block number.","sig":null,"attributes":[{"value":"/ Returns max level digest block number that has been created at block <= passed block number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":201523,"byte_end":201619,"line_start":97,"line_end":97,"column_start":2,"column_end":98}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":201621,"byte_end":201624,"line_start":98,"line_end":98,"column_start":2,"column_end":5}},{"value":"/ Returns None if digests are not created at all.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":201626,"byte_end":201677,"line_start":99,"line_end":99,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":202683,"byte_end":202710,"line_start":134,"line_end":134,"column_start":9,"column_end":36},"name":"next_max_level_digest_range","qualname":"<ChangesTrieConfiguration>::next_max_level_digest_range","value":"pub fn next_max_level_digest_range<Number>(&Self, Number, Number)\n-> Option<(Number, Number)> where Number: Clone + From<u32> + PartialOrd +\nPartialEq + ::sp_std::ops::Add<Output = Number> + ::sp_std::ops::Sub<Output =\nNumber> + ::sp_std::ops::Div<Output = Number> + ::sp_std::ops::Mul<Output =\nNumber>","parent":null,"children":[],"decl_id":null,"docs":" Returns max level digest blocks range (inclusive) which includes passed block.","sig":null,"attributes":[{"value":"/ Returns max level digest blocks range (inclusive) which includes passed block.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":202466,"byte_end":202548,"line_start":130,"line_end":130,"column_start":2,"column_end":84}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":202550,"byte_end":202553,"line_start":131,"line_end":131,"column_start":2,"column_end":5}},{"value":"/ Returns None if digests are not created at all.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":202555,"byte_end":202606,"line_start":132,"line_end":132,"column_start":2,"column_end":53}},{"value":"/ It will return the first max-level digest if block is <= zero.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":202608,"byte_end":202674,"line_start":133,"line_end":133,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":203946,"byte_end":203967,"line_start":172,"line_end":172,"column_start":9,"column_end":30},"name":"digest_level_at_block","qualname":"<ChangesTrieConfiguration>::digest_level_at_block","value":"pub fn digest_level_at_block<Number>(&Self, Number, Number)\n-> Option<(u32, u32, u32)> where Number: Clone + From<u32> + PartialEq +\n::sp_std::ops::Rem<Output = Number> + ::sp_std::ops::Sub<Output = Number> +\n::sp_std::cmp::PartialOrd + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns Some if digest must be built at given block number.\n The tuple is:\n (\n  digest level\n  digest interval (in blocks)\n  step between blocks we're interested in when digest is built\n )\n","sig":null,"attributes":[{"value":"/ Returns Some if digest must be built at given block number.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":203721,"byte_end":203784,"line_start":165,"line_end":165,"column_start":2,"column_end":65}},{"value":"/ The tuple is:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":203786,"byte_end":203803,"line_start":166,"line_end":166,"column_start":2,"column_end":19}},{"value":"/ (","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":203805,"byte_end":203810,"line_start":167,"line_end":167,"column_start":2,"column_end":7}},{"value":"/  digest level","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":203812,"byte_end":203829,"line_start":168,"line_end":168,"column_start":2,"column_end":19}},{"value":"/  digest interval (in blocks)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":203831,"byte_end":203863,"line_start":169,"line_end":169,"column_start":2,"column_end":34}},{"value":"/  step between blocks we're interested in when digest is built","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":203865,"byte_end":203930,"line_start":170,"line_end":170,"column_start":2,"column_end":67}},{"value":"/ )","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":203932,"byte_end":203937,"line_start":171,"line_end":171,"column_start":2,"column_end":7}}]},{"kind":"Mod","id":{"krate":0,"index":1718},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":4306},{"krate":0,"index":1722},{"krate":0,"index":4308},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":4322},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":3543},{"krate":0,"index":3560},{"krate":0,"index":3558},{"krate":0,"index":1739},{"krate":0,"index":1757},{"krate":0,"index":3562},{"krate":0,"index":3565},{"krate":0,"index":3567},{"krate":0,"index":3570},{"krate":0,"index":1758},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1770},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":3572},{"krate":0,"index":3577},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":1789},{"krate":0,"index":3584},{"krate":0,"index":3592},{"krate":0,"index":3591},{"krate":0,"index":3589},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":3594},{"krate":0,"index":3597},{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":1795},{"krate":0,"index":3604},{"krate":0,"index":3607},{"krate":0,"index":3609},{"krate":0,"index":3612},{"krate":0,"index":1798},{"krate":0,"index":3614},{"krate":0,"index":3617},{"krate":0,"index":3620},{"krate":0,"index":3623},{"krate":0,"index":3626},{"krate":0,"index":1801}],"decl_id":null,"docs":" Shareable Substrate traits.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1906,"byte_end":1929,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/ Shareable Substrate traits.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210286,"byte_end":210317,"line_start":18,"line_end":18,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3544},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210761,"byte_end":210776,"line_start":39,"line_end":39,"column_start":2,"column_end":17},"name":"KeyNotSupported","qualname":"::traits::Error::KeyNotSupported","value":"Error::KeyNotSupported(KeyTypeId)","parent":{"krate":0,"index":3543},"children":[],"decl_id":null,"docs":" Public key type is not supported\n","sig":null,"attributes":[{"value":"/ Public key type is not supported","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210676,"byte_end":210712,"line_start":37,"line_end":37,"column_start":2,"column_end":38}},{"value":"display(fmt = \"Key not supported: {:?}\", _0)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210714,"byte_end":210759,"line_start":38,"line_end":38,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3547},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210885,"byte_end":210897,"line_start":42,"line_end":42,"column_start":2,"column_end":14},"name":"PairNotFound","qualname":"::traits::Error::PairNotFound","value":"Error::PairNotFound(String)","parent":{"krate":0,"index":3543},"children":[],"decl_id":null,"docs":" Pair not found for public key and KeyTypeId\n","sig":null,"attributes":[{"value":"/ Pair not found for public key and KeyTypeId","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210790,"byte_end":210837,"line_start":40,"line_end":40,"column_start":2,"column_end":49}},{"value":"display(fmt = \"Pair was not found: {}\", _0)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210839,"byte_end":210883,"line_start":41,"line_end":41,"column_start":2,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3550},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210974,"byte_end":210989,"line_start":45,"line_end":45,"column_start":2,"column_end":17},"name":"ValidationError","qualname":"::traits::Error::ValidationError","value":"Error::ValidationError(String)","parent":{"krate":0,"index":3543},"children":[],"decl_id":null,"docs":" Validation error\n","sig":null,"attributes":[{"value":"/ Validation error","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210908,"byte_end":210928,"line_start":43,"line_end":43,"column_start":2,"column_end":22}},{"value":"display(fmt = \"Validation error: {}\", _0)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210930,"byte_end":210972,"line_start":44,"line_end":44,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3553},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211066,"byte_end":211077,"line_start":48,"line_end":48,"column_start":2,"column_end":13},"name":"Unavailable","qualname":"::traits::Error::Unavailable","value":"Error::Unavailable","parent":{"krate":0,"index":3543},"children":[],"decl_id":null,"docs":" Keystore unavailable\n","sig":null,"attributes":[{"value":"/ Keystore unavailable","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211000,"byte_end":211024,"line_start":46,"line_end":46,"column_start":2,"column_end":26}},{"value":"display(fmt = \"Keystore unavailable\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211026,"byte_end":211064,"line_start":47,"line_end":47,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3555},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211166,"byte_end":211171,"line_start":51,"line_end":51,"column_start":2,"column_end":7},"name":"Other","qualname":"::traits::Error::Other","value":"Error::Other(String)","parent":{"krate":0,"index":3543},"children":[],"decl_id":null,"docs":" Programming errors\n","sig":null,"attributes":[{"value":"/ Programming errors","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211080,"byte_end":211102,"line_start":49,"line_end":49,"column_start":2,"column_end":24}},{"value":"display(fmt = \"An unknown keystore error occurred: {}\", _0)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211104,"byte_end":211164,"line_start":50,"line_end":50,"column_start":2,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":3543},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210667,"byte_end":210672,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::traits::Error","value":"pub enum Error {\n\n    /// Public key type is not supported\n    #[display(fmt = \"Key not supported: {:?}\", _0)]\n    KeyNotSupported(KeyTypeId),\n\n    /// Pair not found for public key and KeyTypeId\n    #[display(fmt = \"Pair was not found: {}\", _0)]\n    PairNotFound(String),\n\n    /// Validation error\n    #[display(fmt = \"Validation error: {}\", _0)]\n    ValidationError(String),\n\n    /// Keystore unavailable\n    #[display(fmt = \"Keystore unavailable\")]\n    Unavailable,\n\n    /// Programming errors\n    #[display(fmt = \"An unknown keystore error occurred: {}\", _0)]\n    Other(String),\n}","parent":null,"children":[{"krate":0,"index":3544},{"krate":0,"index":3547},{"krate":0,"index":3550},{"krate":0,"index":3553},{"krate":0,"index":3555}],"decl_id":null,"docs":" BareCryptoStore error\n","sig":null,"attributes":[{"value":"/ BareCryptoStore error","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":210593,"byte_end":210618,"line_start":34,"line_end":34,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":1739},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211259,"byte_end":211274,"line_start":55,"line_end":55,"column_start":11,"column_end":26},"name":"BareCryptoStore","qualname":"::traits::BareCryptoStore","value":"BareCryptoStore: Send + Sync","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756}],"decl_id":null,"docs":" Something that generates, stores and provides access to keys.\n","sig":null,"attributes":[{"value":"/ Something that generates, stores and provides access to keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211183,"byte_end":211248,"line_start":54,"line_end":54,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211355,"byte_end":211374,"line_start":57,"line_end":57,"column_start":5,"column_end":24},"name":"sr25519_public_keys","qualname":"::traits::BareCryptoStore::sr25519_public_keys","value":"pub fn sr25519_public_keys(&Self, KeyTypeId) -> Vec<sr25519::Public>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Returns all sr25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all sr25519 public keys for the given key type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211291,"byte_end":211350,"line_start":56,"line_end":56,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211654,"byte_end":211674,"line_start":63,"line_end":63,"column_start":5,"column_end":25},"name":"sr25519_generate_new","qualname":"::traits::BareCryptoStore::sr25519_generate_new","value":"pub fn sr25519_generate_new(&mut Self, KeyTypeId, Option<&str>)\n-> Result<sr25519::Public, Error>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Generate a new sr25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new sr25519 key pair for the given key type and an optional seed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211423,"byte_end":211503,"line_start":58,"line_end":58,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211505,"byte_end":211508,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211510,"byte_end":211589,"line_start":60,"line_end":60,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211591,"byte_end":211594,"line_start":61,"line_end":61,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211596,"byte_end":211649,"line_start":62,"line_end":62,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211831,"byte_end":211850,"line_start":69,"line_end":69,"column_start":5,"column_end":24},"name":"ed25519_public_keys","qualname":"::traits::BareCryptoStore::ed25519_public_keys","value":"pub fn ed25519_public_keys(&Self, KeyTypeId) -> Vec<ed25519::Public>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Returns all ed25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all ed25519 public keys for the given key type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211767,"byte_end":211826,"line_start":68,"line_end":68,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212130,"byte_end":212150,"line_start":75,"line_end":75,"column_start":5,"column_end":25},"name":"ed25519_generate_new","qualname":"::traits::BareCryptoStore::ed25519_generate_new","value":"pub fn ed25519_generate_new(&mut Self, KeyTypeId, Option<&str>)\n-> Result<ed25519::Public, Error>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Generate a new ed25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new ed25519 key pair for the given key type and an optional seed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211899,"byte_end":211979,"line_start":70,"line_end":70,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211981,"byte_end":211984,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211986,"byte_end":212065,"line_start":72,"line_end":72,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212067,"byte_end":212070,"line_start":73,"line_end":73,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212072,"byte_end":212125,"line_start":74,"line_end":74,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212305,"byte_end":212322,"line_start":81,"line_end":81,"column_start":5,"column_end":22},"name":"ecdsa_public_keys","qualname":"::traits::BareCryptoStore::ecdsa_public_keys","value":"pub fn ecdsa_public_keys(&Self, KeyTypeId) -> Vec<ecdsa::Public>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Returns all ecdsa public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all ecdsa public keys for the given key type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212243,"byte_end":212300,"line_start":80,"line_end":80,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212598,"byte_end":212616,"line_start":87,"line_end":87,"column_start":5,"column_end":23},"name":"ecdsa_generate_new","qualname":"::traits::BareCryptoStore::ecdsa_generate_new","value":"pub fn ecdsa_generate_new(&mut Self, KeyTypeId, Option<&str>)\n-> Result<ecdsa::Public, Error>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Generate a new ecdsa key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new ecdsa key pair for the given key type and an optional seed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212369,"byte_end":212447,"line_start":82,"line_end":82,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212449,"byte_end":212452,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212454,"byte_end":212533,"line_start":84,"line_end":84,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212535,"byte_end":212538,"line_start":85,"line_end":85,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212540,"byte_end":212593,"line_start":86,"line_end":86,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212971,"byte_end":212985,"line_start":99,"line_end":99,"column_start":5,"column_end":19},"name":"insert_unknown","qualname":"::traits::BareCryptoStore::insert_unknown","value":"pub fn insert_unknown(&mut Self, KeyTypeId, &str, &[u8]) -> Result<(), ()>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Insert a new key. This doesn't require any known of the crypto; but a public key must be\n manually provided.","sig":null,"attributes":[{"value":"/ Insert a new key. This doesn't require any known of the crypto; but a public key must be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212708,"byte_end":212800,"line_start":93,"line_end":93,"column_start":2,"column_end":94}},{"value":"/ manually provided.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212802,"byte_end":212824,"line_start":94,"line_end":94,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212826,"byte_end":212829,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ Places it into the file system store.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212831,"byte_end":212872,"line_start":96,"line_end":96,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212874,"byte_end":212877,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ `Err` if there's some sort of weird filesystem error, but should generally be `Ok`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":212879,"byte_end":212966,"line_start":98,"line_end":98,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213110,"byte_end":213118,"line_start":102,"line_end":102,"column_start":5,"column_end":13},"name":"password","qualname":"::traits::BareCryptoStore::password","value":"pub fn password(&Self) -> Option<&str>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Get the password for this store.\n","sig":null,"attributes":[{"value":"/ Get the password for this store.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213069,"byte_end":213105,"line_start":101,"line_end":101,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213357,"byte_end":213371,"line_start":107,"line_end":107,"column_start":5,"column_end":19},"name":"supported_keys","qualname":"::traits::BareCryptoStore::supported_keys","value":"pub fn supported_keys(&Self, KeyTypeId, Vec<CryptoTypePublicPair>)\n-> Result<Vec<CryptoTypePublicPair>, Error>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Find intersection between provided keys and supported keys","sig":null,"attributes":[{"value":"/ Find intersection between provided keys and supported keys","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213144,"byte_end":213206,"line_start":103,"line_end":103,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213208,"byte_end":213211,"line_start":104,"line_end":104,"column_start":2,"column_end":5}},{"value":"/ Provided a list of (CryptoTypeId,[u8]) pairs, this would return","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213213,"byte_end":213280,"line_start":105,"line_end":105,"column_start":2,"column_end":69}},{"value":"/ a filtered set of public keys which are supported by the keystore.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213282,"byte_end":213352,"line_start":106,"line_end":106,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213574,"byte_end":213578,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"keys","qualname":"::traits::BareCryptoStore::keys","value":"pub fn keys(&Self, KeyTypeId) -> Result<Vec<CryptoTypePublicPair>, Error>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" List all supported keys","sig":null,"attributes":[{"value":"/ List all supported keys","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213482,"byte_end":213509,"line_start":112,"line_end":112,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213511,"byte_end":213514,"line_start":113,"line_end":113,"column_start":2,"column_end":5}},{"value":"/ Returns a set of public keys the signer supports.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213516,"byte_end":213569,"line_start":114,"line_end":114,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213803,"byte_end":213811,"line_start":120,"line_end":120,"column_start":5,"column_end":13},"name":"has_keys","qualname":"::traits::BareCryptoStore::has_keys","value":"pub fn has_keys(&Self, &[(Vec<u8>, KeyTypeId)]) -> bool","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Checks if the private keys for the given public key and key type combinations exist.","sig":null,"attributes":[{"value":"/ Checks if the private keys for the given public key and key type combinations exist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213648,"byte_end":213736,"line_start":117,"line_end":117,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213738,"byte_end":213741,"line_start":118,"line_end":118,"column_start":2,"column_end":5}},{"value":"/ Returns `true` iff all private keys could be found.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213743,"byte_end":213798,"line_start":119,"line_end":119,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214078,"byte_end":214087,"line_start":129,"line_end":129,"column_start":5,"column_end":14},"name":"sign_with","qualname":"::traits::BareCryptoStore::sign_with","value":"pub fn sign_with(&Self, KeyTypeId, &CryptoTypePublicPair, &[u8])\n-> Result<Vec<u8>, Error>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Sign with key","sig":null,"attributes":[{"value":"/ Sign with key","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213868,"byte_end":213885,"line_start":122,"line_end":122,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213887,"byte_end":213890,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ Signs a message with the private key that matches","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213892,"byte_end":213945,"line_start":124,"line_end":124,"column_start":2,"column_end":55}},{"value":"/ the public key passed.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213947,"byte_end":213973,"line_start":125,"line_end":125,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213975,"byte_end":213978,"line_start":126,"line_end":126,"column_start":2,"column_end":5}},{"value":"/ Returns the SCALE encoded signature if key is found & supported,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":213980,"byte_end":214048,"line_start":127,"line_end":127,"column_start":2,"column_end":70}},{"value":"/ an error otherwise.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214050,"byte_end":214073,"line_start":128,"line_end":128,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214410,"byte_end":214423,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"sign_with_any","qualname":"::traits::BareCryptoStore::sign_with_any","value":"pub fn sign_with_any(&Self, KeyTypeId, Vec<CryptoTypePublicPair>, &[u8])\n-> Result<(CryptoTypePublicPair, Vec<u8>), Error>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Sign with any key","sig":null,"attributes":[{"value":"/ Sign with any key","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214191,"byte_end":214212,"line_start":136,"line_end":136,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214214,"byte_end":214217,"line_start":137,"line_end":137,"column_start":2,"column_end":5}},{"value":"/ Given a list of public keys, find the first supported key and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214219,"byte_end":214284,"line_start":138,"line_end":138,"column_start":2,"column_end":67}},{"value":"/ sign the provided message with that key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214286,"byte_end":214330,"line_start":139,"line_end":139,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214332,"byte_end":214335,"line_start":140,"line_end":140,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the used key and the SCALE encoded signature.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214337,"byte_end":214405,"line_start":141,"line_end":141,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215113,"byte_end":215126,"line_start":167,"line_end":167,"column_start":5,"column_end":18},"name":"sign_with_all","qualname":"::traits::BareCryptoStore::sign_with_all","value":"pub fn sign_with_all(&Self, KeyTypeId, Vec<CryptoTypePublicPair>, &[u8])\n-> Result<Vec<Result<Vec<u8>, Error>>, ()>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Sign with all keys","sig":null,"attributes":[{"value":"/ Sign with all keys","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214841,"byte_end":214863,"line_start":160,"line_end":160,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214865,"byte_end":214868,"line_start":161,"line_end":161,"column_start":2,"column_end":5}},{"value":"/ Provided a list of public keys, sign a message with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214870,"byte_end":214925,"line_start":162,"line_end":162,"column_start":2,"column_end":57}},{"value":"/ each key given that the key is supported.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214927,"byte_end":214972,"line_start":163,"line_end":163,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214974,"byte_end":214977,"line_start":164,"line_end":164,"column_start":2,"column_end":5}},{"value":"/ Returns a list of `Result`s each representing the SCALE encoded","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":214979,"byte_end":215046,"line_start":165,"line_end":165,"column_start":2,"column_end":69}},{"value":"/ signature of each key or a Error for non-supported keys.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215048,"byte_end":215108,"line_start":166,"line_end":166,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215952,"byte_end":215968,"line_start":190,"line_end":190,"column_start":5,"column_end":21},"name":"sr25519_vrf_sign","qualname":"::traits::BareCryptoStore::sr25519_vrf_sign","value":"pub fn sr25519_vrf_sign(&Self, KeyTypeId, &sr25519::Public, VRFTranscriptData)\n-> Result<VRFSignature, Error>","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Generate VRF signature for given transcript data.","sig":null,"attributes":[{"value":"/ Generate VRF signature for given transcript data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215319,"byte_end":215372,"line_start":176,"line_end":176,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215374,"byte_end":215377,"line_start":177,"line_end":177,"column_start":2,"column_end":5}},{"value":"/ Receives KeyTypeId and Public key to be able to map","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215379,"byte_end":215434,"line_start":178,"line_end":178,"column_start":2,"column_end":57}},{"value":"/ them to a private key that exists in the keystore which","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215436,"byte_end":215495,"line_start":179,"line_end":179,"column_start":2,"column_end":61}},{"value":"/ is, in turn, used for signing the provided transcript.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215497,"byte_end":215555,"line_start":180,"line_end":180,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215557,"byte_end":215560,"line_start":181,"line_end":181,"column_start":2,"column_end":5}},{"value":"/ Returns a result containing the signature data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215562,"byte_end":215613,"line_start":182,"line_end":182,"column_start":2,"column_end":53}},{"value":"/ Namely, VRFOutput and VRFProof which are returned","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215615,"byte_end":215668,"line_start":183,"line_end":183,"column_start":2,"column_end":55}},{"value":"/ inside the `VRFSignature` container struct.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215670,"byte_end":215717,"line_start":184,"line_end":184,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215719,"byte_end":215722,"line_start":185,"line_end":185,"column_start":2,"column_end":5}},{"value":"/ This function will return an error in the cases where","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215724,"byte_end":215781,"line_start":186,"line_end":186,"column_start":2,"column_end":59}},{"value":"/ the public key and key type provided do not match a private","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215783,"byte_end":215846,"line_start":187,"line_end":187,"column_start":2,"column_end":65}},{"value":"/ key in the keystore. Or, in the context of remote signing","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215848,"byte_end":215909,"line_start":188,"line_end":188,"column_start":2,"column_end":63}},{"value":"/ an error could be a network one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":215911,"byte_end":215947,"line_start":189,"line_end":189,"column_start":2,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1757},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216147,"byte_end":216165,"line_start":199,"line_end":199,"column_start":10,"column_end":28},"name":"BareCryptoStorePtr","qualname":"::traits::BareCryptoStorePtr","value":"Arc<parking_lot::RwLock<BareCryptoStore>>","parent":null,"children":[],"decl_id":null,"docs":" A pointer to the key store.\n","sig":null,"attributes":[{"value":"/ A pointer to the key store.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216106,"byte_end":216137,"line_start":198,"line_end":198,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3562},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216337,"byte_end":216348,"line_start":203,"line_end":203,"column_start":13,"column_end":24},"name":"KeystoreExt","qualname":"::traits::KeystoreExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The keystore extension to register/retrieve from the externalities.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1758},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216410,"byte_end":216422,"line_start":207,"line_end":207,"column_start":11,"column_end":23},"name":"CodeExecutor","qualname":"::traits::CodeExecutor","value":"CodeExecutor: Sized + Send + Sync + CallInWasm + Clone + 'static","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760}],"decl_id":null,"docs":" Code execution engine.\n","sig":null,"attributes":[{"value":"/ Code execution engine.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216373,"byte_end":216399,"line_start":206,"line_end":206,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":1759},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216514,"byte_end":216519,"line_start":209,"line_end":209,"column_start":7,"column_end":12},"name":"Error","qualname":"::traits::CodeExecutor::Error","value":"type Error: Display + Debug + Send + 'static;","parent":{"krate":0,"index":1758},"children":[],"decl_id":null,"docs":" Externalities error type.\n","sig":null,"attributes":[{"value":"/ Externalities error type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216478,"byte_end":216507,"line_start":208,"line_end":208,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216751,"byte_end":216755,"line_start":213,"line_end":213,"column_start":5,"column_end":9},"name":"call","qualname":"::traits::CodeExecutor::call","value":"pub fn call<R: codec::Codec + PartialEq, NC: FnOnce() -> Result<R, String> +\n            UnwindSafe>(&Self, &mut Externalities, &RuntimeCode, &str, &[u8],\n                        bool, Option<NC>)\n-> (Result<crate::NativeOrEncoded<R>, Self::Error>, bool)","parent":{"krate":0,"index":1758},"children":[],"decl_id":null,"docs":" Call a given method in the runtime. Returns a tuple of the result (either the output data\n or an execution error) together with a `bool`, which is true if native execution was used.\n","sig":null,"attributes":[{"value":"/ Call a given method in the runtime. Returns a tuple of the result (either the output data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216557,"byte_end":216650,"line_start":211,"line_end":211,"column_start":2,"column_end":95}},{"value":"/ or an execution error) together with a `bool`, which is true if native execution was used.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216652,"byte_end":216746,"line_start":212,"line_end":212,"column_start":2,"column_end":96}}]},{"kind":"Trait","id":{"krate":0,"index":1763},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217115,"byte_end":217131,"line_start":228,"line_end":228,"column_start":11,"column_end":27},"name":"FetchRuntimeCode","qualname":"::traits::FetchRuntimeCode","value":"FetchRuntimeCode","parent":null,"children":[{"krate":0,"index":1764}],"decl_id":null,"docs":" Something that can fetch the runtime `:code`.\n","sig":null,"attributes":[{"value":"/ Something that can fetch the runtime `:code`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217055,"byte_end":217104,"line_start":227,"line_end":227,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217256,"byte_end":217274,"line_start":232,"line_end":232,"column_start":5,"column_end":23},"name":"fetch_runtime_code","qualname":"::traits::FetchRuntimeCode::fetch_runtime_code","value":"pub fn fetch_runtime_code<'a>(&'a Self) -> Option<Cow>","parent":{"krate":0,"index":1763},"children":[],"decl_id":null,"docs":" Fetch the runtime `:code`.","sig":null,"attributes":[{"value":"/ Fetch the runtime `:code`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217135,"byte_end":217165,"line_start":229,"line_end":229,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217167,"byte_end":217170,"line_start":230,"line_end":230,"column_start":2,"column_end":5}},{"value":"/ If the `:code` could not be found/not available, `None` should be returned.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217172,"byte_end":217251,"line_start":231,"line_end":231,"column_start":2,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1766},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217395,"byte_end":217413,"line_start":236,"line_end":236,"column_start":12,"column_end":30},"name":"WrappedRuntimeCode","qualname":"::traits::WrappedRuntimeCode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper to use a `u8` slice or `Vec` as [`FetchRuntimeCode`].\n","sig":null,"attributes":[{"value":"/ Wrapper to use a `u8` slice or `Vec` as [`FetchRuntimeCode`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217318,"byte_end":217383,"line_start":235,"line_end":235,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1769},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217418,"byte_end":217448,"line_start":236,"line_end":236,"column_start":35,"column_end":65},"name":"0","qualname":"::traits::WrappedRuntimeCode::0","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":1766},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1774},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217692,"byte_end":217712,"line_start":245,"line_end":245,"column_start":12,"column_end":32},"name":"NoneFetchRuntimeCode","qualname":"::traits::NoneFetchRuntimeCode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type that implements [`FetchRuntimeCode`] and always returns `None`.\n","sig":null,"attributes":[{"value":"/ Type that implements [`FetchRuntimeCode`] and always returns `None`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217608,"byte_end":217680,"line_start":244,"line_end":244,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3572},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217911,"byte_end":217922,"line_start":255,"line_end":255,"column_start":12,"column_end":23},"name":"RuntimeCode","qualname":"::traits::RuntimeCode","value":"RuntimeCode { code_fetcher, heap_pages, hash }","parent":null,"children":[{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576}],"decl_id":null,"docs":" The Wasm code of a Substrate runtime.\n","sig":null,"attributes":[{"value":"/ The Wasm code of a Substrate runtime.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217841,"byte_end":217882,"line_start":253,"line_end":253,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3574},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217999,"byte_end":218011,"line_start":257,"line_end":257,"column_start":6,"column_end":18},"name":"code_fetcher","qualname":"::traits::RuntimeCode::code_fetcher","value":"&'a (dyn traits::FetchRuntimeCode + 'a)","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":" The code fetcher that can be used to lazily fetch the code.\n","sig":null,"attributes":[{"value":"/ The code fetcher that can be used to lazily fetch the code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217930,"byte_end":217993,"line_start":256,"line_end":256,"column_start":2,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3575},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218189,"byte_end":218199,"line_start":261,"line_end":261,"column_start":6,"column_end":16},"name":"heap_pages","qualname":"::traits::RuntimeCode::heap_pages","value":"std::option::Option<u64>","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":" The optional heap pages this `code` should be executed with.","sig":null,"attributes":[{"value":"/ The optional heap pages this `code` should be executed with.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218040,"byte_end":218104,"line_start":258,"line_end":258,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218106,"byte_end":218109,"line_start":259,"line_end":259,"column_start":2,"column_end":5}},{"value":"/ If `None` are given, the default value of the executor will be used.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218111,"byte_end":218183,"line_start":260,"line_end":260,"column_start":2,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":3576},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218369,"byte_end":218373,"line_start":266,"line_end":266,"column_start":6,"column_end":10},"name":"hash","qualname":"::traits::RuntimeCode::hash","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":" The SCALE encoded hash of `code`.","sig":null,"attributes":[{"value":"/ The SCALE encoded hash of `code`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218215,"byte_end":218252,"line_start":262,"line_end":262,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218254,"byte_end":218257,"line_start":263,"line_end":263,"column_start":2,"column_end":5}},{"value":"/ The hashing algorithm isn't that important, as long as all runtime","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218259,"byte_end":218329,"line_start":264,"line_end":264,"column_start":2,"column_end":72}},{"value":"/ code instances use the same.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218331,"byte_end":218363,"line_start":265,"line_end":265,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218641,"byte_end":218646,"line_start":279,"line_end":279,"column_start":9,"column_end":14},"name":"empty","qualname":"<RuntimeCode>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty instance.","sig":null,"attributes":[{"value":"/ Create an empty instance.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218526,"byte_end":218555,"line_start":276,"line_end":276,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218557,"byte_end":218560,"line_start":277,"line_end":277,"column_start":2,"column_end":5}},{"value":"/ This is only useful for tests that don't want to execute any code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218562,"byte_end":218632,"line_start":278,"line_end":278,"column_start":2,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3580},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219039,"byte_end":219051,"line_start":296,"line_end":296,"column_start":12,"column_end":24},"name":"CodeNotFound","qualname":"::traits::CodeNotFound","value":"","parent":null,"children":[],"decl_id":null,"docs":" Could not find the `:code` in the externalities while initializing the [`RuntimeCode`].\n","sig":null,"attributes":[{"value":"/ Could not find the `:code` in the externalities while initializing the [`RuntimeCode`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218919,"byte_end":219010,"line_start":294,"line_end":294,"column_start":1,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3585},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219490,"byte_end":219495,"line_start":309,"line_end":309,"column_start":2,"column_end":7},"name":"Allow","qualname":"::traits::MissingHostFunctions::Allow","value":"MissingHostFunctions::Allow","parent":{"krate":0,"index":3584},"children":[],"decl_id":null,"docs":" Any missing host function will be replaced by a stub that returns an error when\n being called.\n","sig":null,"attributes":[{"value":"/ Any missing host function will be replaced by a stub that returns an error when","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219386,"byte_end":219469,"line_start":307,"line_end":307,"column_start":2,"column_end":85}},{"value":"/ being called.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219471,"byte_end":219488,"line_start":308,"line_end":308,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3587},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219588,"byte_end":219596,"line_start":311,"line_end":311,"column_start":2,"column_end":10},"name":"Disallow","qualname":"::traits::MissingHostFunctions::Disallow","value":"MissingHostFunctions::Disallow","parent":{"krate":0,"index":3584},"children":[],"decl_id":null,"docs":" Any missing host function will result in an error while instantiating the WASM blob,\n","sig":null,"attributes":[{"value":"/ Any missing host function will result in an error while instantiating the WASM blob,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219498,"byte_end":219586,"line_start":310,"line_end":310,"column_start":2,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":3584},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219362,"byte_end":219382,"line_start":306,"line_end":306,"column_start":10,"column_end":30},"name":"MissingHostFunctions","qualname":"::traits::MissingHostFunctions","value":"pub enum MissingHostFunctions {\n\n    /// Any missing host function will be replaced by a stub that returns an error when\n    /// being called.\n    Allow,\n\n    /// Any missing host function will result in an error while instantiating the WASM blob,\n    Disallow,\n}","parent":null,"children":[{"krate":0,"index":3585},{"krate":0,"index":3587}],"decl_id":null,"docs":" `Allow` or `Disallow` missing host functions when instantiating a WASM blob.\n","sig":null,"attributes":[{"value":"/ `Allow` or `Disallow` missing host functions when instantiating a WASM blob.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219242,"byte_end":219322,"line_start":304,"line_end":304,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219678,"byte_end":219685,"line_start":316,"line_end":316,"column_start":9,"column_end":16},"name":"allowed","qualname":"<MissingHostFunctions>::allowed","value":"pub fn allowed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are missing host functions allowed?\n","sig":null,"attributes":[{"value":"/ Are missing host functions allowed?","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219630,"byte_end":219669,"line_start":315,"line_end":315,"column_start":2,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":1793},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219801,"byte_end":219811,"line_start":322,"line_end":322,"column_start":11,"column_end":21},"name":"CallInWasm","qualname":"::traits::CallInWasm","value":"CallInWasm: Send + Sync","parent":null,"children":[{"krate":0,"index":1794}],"decl_id":null,"docs":" Something that can call a method in a WASM blob.\n","sig":null,"attributes":[{"value":"/ Something that can call a method in a WASM blob.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219738,"byte_end":219790,"line_start":321,"line_end":321,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220205,"byte_end":220217,"line_start":332,"line_end":332,"column_start":5,"column_end":17},"name":"call_in_wasm","qualname":"::traits::CallInWasm::call_in_wasm","value":"pub fn call_in_wasm(&Self, &[u8], Option<Vec<u8>>, &str, &[u8],\n                    &mut Externalities, MissingHostFunctions)\n-> Result<Vec<u8>, String>","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" Call the given `method` in the given `wasm_blob` using `call_data` (SCALE encoded arguments)\n to decode the arguments for the method.","sig":null,"attributes":[{"value":"/ Call the given `method` in the given `wasm_blob` using `call_data` (SCALE encoded arguments)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219828,"byte_end":219924,"line_start":323,"line_end":323,"column_start":2,"column_end":98}},{"value":"/ to decode the arguments for the method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219926,"byte_end":219969,"line_start":324,"line_end":324,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219971,"byte_end":219974,"line_start":325,"line_end":325,"column_start":2,"column_end":5}},{"value":"/ Returns the SCALE encoded return value of the method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219976,"byte_end":220033,"line_start":326,"line_end":326,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220035,"byte_end":220038,"line_start":327,"line_end":327,"column_start":2,"column_end":5}},{"value":"/ # Note","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220040,"byte_end":220050,"line_start":328,"line_end":328,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220052,"byte_end":220055,"line_start":329,"line_end":329,"column_start":2,"column_end":5}},{"value":"/ If `code_hash` is `Some(_)` the `wasm_code` module and instance will be cached internally,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220057,"byte_end":220151,"line_start":330,"line_end":330,"column_start":2,"column_end":96}},{"value":"/ otherwise it is thrown away after the call.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220153,"byte_end":220200,"line_start":331,"line_end":331,"column_start":2,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3594},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220552,"byte_end":220565,"line_start":345,"line_end":345,"column_start":13,"column_end":26},"name":"CallInWasmExt","qualname":"::traits::CallInWasmExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The call-in-wasm extension to register/retrieve from the externalities.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220659,"byte_end":220662,"line_start":350,"line_end":350,"column_start":9,"column_end":12},"name":"new","qualname":"<CallInWasmExt>::new","value":"pub fn new<T: CallInWasm + 'static>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `Self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220613,"byte_end":220650,"line_start":349,"line_end":349,"column_start":2,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3604},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220816,"byte_end":220831,"line_start":357,"line_end":357,"column_start":13,"column_end":28},"name":"TaskExecutorExt","qualname":"::traits::TaskExecutorExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Task executor extension.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220934,"byte_end":220937,"line_start":362,"line_end":362,"column_start":9,"column_end":12},"name":"new","qualname":"<TaskExecutorExt>::new","value":"pub fn new<impl SpawnNamed + Send + 'static: SpawnNamed + Send +\n           'static>(impl SpawnNamed + Send + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New instance of task executor extension.\n","sig":null,"attributes":[{"value":"/ New instance of task executor extension.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220881,"byte_end":220925,"line_start":361,"line_end":361,"column_start":2,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":3614},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":221157,"byte_end":221167,"line_start":369,"line_end":369,"column_start":11,"column_end":21},"name":"SpawnNamed","qualname":"::traits::SpawnNamed","value":"SpawnNamed: dyn_clonable::dyn_clone::DynClone + Send + Sync","parent":null,"children":[{"krate":0,"index":3615},{"krate":0,"index":3616}],"decl_id":null,"docs":" Something that can spawn futures (blocking and non-blocking) with an assigned name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":221303,"byte_end":221317,"line_start":373,"line_end":373,"column_start":5,"column_end":19},"name":"spawn_blocking","qualname":"::traits::SpawnNamed::spawn_blocking","value":"pub fn spawn_blocking(&Self, &'static str, futures::future::BoxFuture)","parent":{"krate":0,"index":3614},"children":[],"decl_id":null,"docs":" Spawn the given blocking future.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":221511,"byte_end":221516,"line_start":377,"line_end":377,"column_start":5,"column_end":10},"name":"spawn","qualname":"::traits::SpawnNamed::spawn","value":"pub fn spawn(&Self, &'static str, futures::future::BoxFuture)","parent":{"krate":0,"index":3614},"children":[],"decl_id":null,"docs":" Spawn the given non-blocking future.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1804},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::testing","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":4334},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":4340},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":3629},{"krate":0,"index":3631},{"krate":0,"index":1823},{"krate":0,"index":1834},{"krate":0,"index":3633},{"krate":0,"index":3636},{"krate":0,"index":1871},{"krate":0,"index":1873}],"decl_id":null,"docs":" Types that should only be used for testing!\n","sig":null,"attributes":[{"value":"/ Types that should only be used for testing!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":222591,"byte_end":222638,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":1820},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":222961,"byte_end":222968,"line_start":32,"line_end":32,"column_start":11,"column_end":18},"name":"ED25519","qualname":"::testing::ED25519","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for generic Ed25519 key.\n","sig":null,"attributes":[{"value":"/ Key type for generic Ed25519 key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":222913,"byte_end":222950,"line_start":31,"line_end":31,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":1821},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223052,"byte_end":223059,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"SR25519","qualname":"::testing::SR25519","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for generic Sr 25519 key.\n","sig":null,"attributes":[{"value":"/ Key type for generic Sr 25519 key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223003,"byte_end":223041,"line_start":33,"line_end":33,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1822},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223143,"byte_end":223148,"line_start":36,"line_end":36,"column_start":11,"column_end":16},"name":"ECDSA","qualname":"::testing::ECDSA","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for generic Sr 25519 key.\n","sig":null,"attributes":[{"value":"/ Key type for generic Sr 25519 key.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223094,"byte_end":223132,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3629},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223285,"byte_end":223293,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"KeyStore","qualname":"::testing::KeyStore","value":"KeyStore {  }","parent":null,"children":[{"krate":0,"index":3630}],"decl_id":null,"docs":" A keystore implementation usable in tests.\n","sig":null,"attributes":[{"value":"/ A keystore implementation usable in tests.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223184,"byte_end":223230,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223231,"byte_end":223254,"line_start":39,"line_end":39,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223549,"byte_end":223552,"line_start":49,"line_end":49,"column_start":9,"column_end":12},"name":"new","qualname":"<KeyStore>::new","value":"pub fn new() -> crate::traits::BareCryptoStorePtr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `Self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223503,"byte_end":223540,"line_start":48,"line_end":48,"column_start":2,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3633},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232547,"byte_end":232559,"line_start":368,"line_end":368,"column_start":12,"column_end":24},"name":"TaskExecutor","qualname":"::testing::TaskExecutor","value":"","parent":null,"children":[],"decl_id":null,"docs":" A task executor that can be used in tests.","sig":null,"attributes":[{"value":"/ A task executor that can be used in tests.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232282,"byte_end":232328,"line_start":362,"line_end":362,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232329,"byte_end":232332,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ Internally this just wraps a `ThreadPool` with a pool size of `8`. This","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232333,"byte_end":232408,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"/ should ensure that we have enough threads in tests for spawning blocking futures.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232409,"byte_end":232494,"line_start":365,"line_end":365,"column_start":1,"column_end":86}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232495,"byte_end":232518,"line_start":366,"line_end":366,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232683,"byte_end":232686,"line_start":373,"line_end":373,"column_start":9,"column_end":12},"name":"new","qualname":"<TaskExecutor>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232638,"byte_end":232674,"line_start":372,"line_end":372,"column_start":2,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1876},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vrf","qualname":"::vrf","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":4360},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":4364},{"krate":0,"index":1881},{"krate":0,"index":3638},{"krate":0,"index":3654},{"krate":0,"index":3646},{"krate":0,"index":3657},{"krate":0,"index":3669},{"krate":0,"index":3661},{"krate":0,"index":1882},{"krate":0,"index":1885}],"decl_id":null,"docs":" VRF-specifc data types and helpers\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1963,"byte_end":1986,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/ VRF-specifc data types and helpers","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":235542,"byte_end":235580,"line_start":18,"line_end":18,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3640},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":235859,"byte_end":235864,"line_start":28,"line_end":28,"column_start":2,"column_end":7},"name":"Bytes","qualname":"::vrf::VRFTranscriptValue::Bytes","value":"VRFTranscriptValue::Bytes(&'a [u8])","parent":{"krate":0,"index":3638},"children":[],"decl_id":null,"docs":" Value is an array of bytes\n","sig":null,"attributes":[{"value":"/ Value is an array of bytes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":235827,"byte_end":235857,"line_start":27,"line_end":27,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3643},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":235905,"byte_end":235908,"line_start":30,"line_end":30,"column_start":2,"column_end":5},"name":"U64","qualname":"::vrf::VRFTranscriptValue::U64","value":"VRFTranscriptValue::U64(u64)","parent":{"krate":0,"index":3638},"children":[],"decl_id":null,"docs":" Value is a u64 integer\n","sig":null,"attributes":[{"value":"/ Value is a u64 integer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":235877,"byte_end":235903,"line_start":29,"line_end":29,"column_start":2,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":3638},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":235801,"byte_end":235819,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"name":"VRFTranscriptValue","qualname":"::vrf::VRFTranscriptValue","value":"pub enum VRFTranscriptValue<'a> {\n\n    /// Value is an array of bytes\n    Bytes(&'a [u8]),\n\n    /// Value is a u64 integer\n    U64(u64),\n}","parent":null,"children":[{"krate":0,"index":3640},{"krate":0,"index":3643}],"decl_id":null,"docs":" An enum whose variants represent possible\n accepted values to construct the VRF transcript\n","sig":null,"attributes":[{"value":"/ An enum whose variants represent possible","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":235669,"byte_end":235714,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/ accepted values to construct the VRF transcript","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":235715,"byte_end":235766,"line_start":24,"line_end":24,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3657},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":235977,"byte_end":235994,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"VRFTranscriptData","qualname":"::vrf::VRFTranscriptData","value":"VRFTranscriptData { label, items }","parent":null,"children":[{"krate":0,"index":3659},{"krate":0,"index":3660}],"decl_id":null,"docs":" VRF Transcript data\n","sig":null,"attributes":[{"value":"/ VRF Transcript data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":235917,"byte_end":235940,"line_start":32,"line_end":32,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":3659},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236034,"byte_end":236039,"line_start":36,"line_end":36,"column_start":6,"column_end":11},"name":"label","qualname":"::vrf::VRFTranscriptData::label","value":"&'static [u8]","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":" The transcript's label\n","sig":null,"attributes":[{"value":"/ The transcript's label","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236002,"byte_end":236028,"line_start":35,"line_end":35,"column_start":2,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3660},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236119,"byte_end":236124,"line_start":38,"line_end":38,"column_start":6,"column_end":11},"name":"items","qualname":"::vrf::VRFTranscriptData::items","value":"std::vec::Vec<(&'static str, vrf::VRFTranscriptValue<'a>)>","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":" Additional data to be registered into the transcript\n","sig":null,"attributes":[{"value":"/ Additional data to be registered into the transcript","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236057,"byte_end":236113,"line_start":37,"line_end":37,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1882},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236207,"byte_end":236219,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"VRFSignature","qualname":"::vrf::VRFSignature","value":"VRFSignature { output, proof }","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884}],"decl_id":null,"docs":" VRF signature data\n","sig":null,"attributes":[{"value":"/ VRF signature data","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236173,"byte_end":236195,"line_start":40,"line_end":40,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1883},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236257,"byte_end":236263,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"name":"output","qualname":"::vrf::VRFSignature::output","value":"schnorrkel::vrf::VRFOutput","parent":{"krate":0,"index":1882},"children":[],"decl_id":null,"docs":" The VRFOutput serialized\n","sig":null,"attributes":[{"value":"/ The VRFOutput serialized","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236223,"byte_end":236251,"line_start":42,"line_end":42,"column_start":2,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1884},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236310,"byte_end":236315,"line_start":45,"line_end":45,"column_start":6,"column_end":11},"name":"proof","qualname":"::vrf::VRFSignature::proof","value":"schnorrkel::vrf::VRFProof","parent":{"krate":0,"index":1882},"children":[],"decl_id":null,"docs":" The calculated VRFProof\n","sig":null,"attributes":[{"value":"/ The calculated VRFProof","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236277,"byte_end":236304,"line_start":44,"line_end":44,"column_start":2,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":1885},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236421,"byte_end":236436,"line_start":51,"line_end":51,"column_start":8,"column_end":23},"name":"make_transcript","qualname":"::vrf::make_transcript","value":"pub fn make_transcript(VRFTranscriptData) -> Transcript","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Transcript` object from data.","sig":null,"attributes":[{"value":"/ Construct a `Transcript` object from data.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236330,"byte_end":236376,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236377,"byte_end":236380,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Returns `merlin::Transcript`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/vrf.rs","byte_start":236381,"byte_end":236413,"line_start":50,"line_end":50,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1907},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2637,"byte_end":2646,"line_start":98,"line_end":98,"column_start":2,"column_end":11},"name":"Importing","qualname":"::ExecutionContext::Importing","value":"ExecutionContext::Importing","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":" Context used for general block import (including locally authored blocks).\n","sig":null,"attributes":[{"value":"/ Context used for general block import (including locally authored blocks).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2557,"byte_end":2635,"line_start":97,"line_end":97,"column_start":2,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1909},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3227,"byte_end":3234,"line_start":107,"line_end":107,"column_start":2,"column_end":9},"name":"Syncing","qualname":"::ExecutionContext::Syncing","value":"ExecutionContext::Syncing","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":" Context used for importing blocks as part of an initial sync of the blockchain.","sig":null,"attributes":[{"value":"/ Context used for importing blocks as part of an initial sync of the blockchain.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2649,"byte_end":2732,"line_start":99,"line_end":99,"column_start":2,"column_end":85}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2734,"byte_end":2737,"line_start":100,"line_end":100,"column_start":2,"column_end":5}},{"value":"/ We distinguish between major sync and import so that validators who are running","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2739,"byte_end":2822,"line_start":101,"line_end":101,"column_start":2,"column_end":85}},{"value":"/ their initial sync (or catching up after some time offline) can use the faster","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2824,"byte_end":2906,"line_start":102,"line_end":102,"column_start":2,"column_end":84}},{"value":"/ native runtime (since we can reasonably assume the network as a whole has already","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2908,"byte_end":2993,"line_start":103,"line_end":103,"column_start":2,"column_end":87}},{"value":"/ come to a broad conensus on the block and it probably hasn't been crafted","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2995,"byte_end":3072,"line_start":104,"line_end":104,"column_start":2,"column_end":79}},{"value":"/ specifically to attack this node), but when importing blocks at the head of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3074,"byte_end":3157,"line_start":105,"line_end":105,"column_start":2,"column_end":85}},{"value":"/ chain in normal operation they can use the safer Wasm version.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3159,"byte_end":3225,"line_start":106,"line_end":106,"column_start":2,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1911},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3279,"byte_end":3296,"line_start":109,"line_end":109,"column_start":2,"column_end":19},"name":"BlockConstruction","qualname":"::ExecutionContext::BlockConstruction","value":"ExecutionContext::BlockConstruction","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":" Context used for block construction.\n","sig":null,"attributes":[{"value":"/ Context used for block construction.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3237,"byte_end":3277,"line_start":108,"line_end":108,"column_start":2,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1913},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3426,"byte_end":3438,"line_start":113,"line_end":113,"column_start":2,"column_end":14},"name":"OffchainCall","qualname":"::ExecutionContext::OffchainCall","value":"ExecutionContext::OffchainCall(Option<(Box<offchain::Externalities>, offchain::Capabilities)>)","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":" Context used for offchain calls.","sig":null,"attributes":[{"value":"/ Context used for offchain calls.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3299,"byte_end":3335,"line_start":110,"line_end":110,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3337,"byte_end":3340,"line_start":111,"line_end":111,"column_start":2,"column_end":5}},{"value":"/ This allows passing offchain extension and customizing available capabilities.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3342,"byte_end":3424,"line_start":112,"line_end":112,"column_start":2,"column_end":84}}]},{"kind":"Enum","id":{"krate":0,"index":1906},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2537,"byte_end":2553,"line_start":96,"line_end":96,"column_start":10,"column_end":26},"name":"ExecutionContext","qualname":"::ExecutionContext","value":"pub enum ExecutionContext {\n\n    /// Context used for general block import (including locally authored blocks).\n    Importing,\n\n    /// Context used for importing blocks as part of an initial sync of the blockchain.\n    ///\n    /// We distinguish between major sync and import so that validators who are running\n    /// their initial sync (or catching up after some time offline) can use the faster\n    /// native runtime (since we can reasonably assume the network as a whole has already\n    /// come to a broad conensus on the block and it probably hasn't been crafted\n    /// specifically to attack this node), but when importing blocks at the head of the\n    /// chain in normal operation they can use the safer Wasm version.\n    Syncing,\n\n    /// Context used for block construction.\n    BlockConstruction,\n\n    /// Context used for offchain calls.\n    ///\n    /// This allows passing offchain extension and customizing available capabilities.\n    OffchainCall(Option<(Box<offchain::Externalities>,\n                         offchain::Capabilities)>),\n}","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913}],"decl_id":null,"docs":" Context for executing a call into the runtime.\n","sig":null,"attributes":[{"value":"/ Context for executing a call into the runtime.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":2477,"byte_end":2527,"line_start":95,"line_end":95,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3596,"byte_end":3608,"line_start":118,"line_end":118,"column_start":9,"column_end":21},"name":"capabilities","qualname":"<ExecutionContext>::capabilities","value":"pub fn capabilities(&Self) -> offchain::Capabilities","parent":null,"children":[],"decl_id":null,"docs":" Returns the capabilities of particular context.\n","sig":null,"attributes":[{"value":"/ Returns the capabilities of particular context.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3536,"byte_end":3587,"line_start":117,"line_end":117,"column_start":2,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3672},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4215,"byte_end":4220,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::Bytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hex-serialized shim for `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Hex-serialized shim for `Vec<u8>`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4035,"byte_end":4073,"line_start":134,"line_end":134,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3674},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4271,"byte_end":4282,"line_start":137,"line_end":137,"column_start":68,"column_end":79},"name":"0","qualname":"::Bytes::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(with = \"bytes\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4249,"byte_end":4268,"line_start":137,"line_end":137,"column_start":46,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3740},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4853,"byte_end":4867,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"OpaqueMetadata","qualname":"::OpaqueMetadata","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stores the encoded `RuntimeMetadata` for the native side as opaque type.\n","sig":null,"attributes":[{"value":"/ Stores the encoded `RuntimeMetadata` for the native side as opaque type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4728,"byte_end":4804,"line_start":161,"line_end":161,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4967,"byte_end":4970,"line_start":167,"line_end":167,"column_start":9,"column_end":12},"name":"new","qualname":"<OpaqueMetadata>::new","value":"pub fn new(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance with the given metadata blob.\n","sig":null,"attributes":[{"value":"/ Creates a new instance with the given metadata blob.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4902,"byte_end":4958,"line_start":166,"line_end":166,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3762},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5397,"byte_end":5409,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"OpaquePeerId","qualname":"::OpaquePeerId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple blob to hold a `PeerId` without committing to its format.\n","sig":null,"attributes":[{"value":"/ Simple blob to hold a `PeerId` without committing to its format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5155,"byte_end":5223,"line_start":180,"line_end":180,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3764},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5410,"byte_end":5421,"line_start":183,"line_end":183,"column_start":25,"column_end":36},"name":"0","qualname":"::OpaquePeerId::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5484,"byte_end":5487,"line_start":187,"line_end":187,"column_start":9,"column_end":12},"name":"new","qualname":"<OpaquePeerId>::new","value":"pub fn new(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `OpaquePeerId`\n","sig":null,"attributes":[{"value":"/ Create new `OpaquePeerId`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5446,"byte_end":5475,"line_start":186,"line_end":186,"column_start":2,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1938},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5684,"byte_end":5690,"line_start":196,"line_end":196,"column_start":2,"column_end":8},"name":"Native","qualname":"::NativeOrEncoded::Native","value":"NativeOrEncoded::Native(R)","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":" The native representation.\n","sig":null,"attributes":[{"value":"/ The native representation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5652,"byte_end":5682,"line_start":195,"line_end":195,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1941},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5729,"byte_end":5736,"line_start":198,"line_end":198,"column_start":2,"column_end":9},"name":"Encoded","qualname":"::NativeOrEncoded::Encoded","value":"NativeOrEncoded::Encoded(Vec<u8>)","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":" The encoded representation.\n","sig":null,"attributes":[{"value":"/ The encoded representation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5696,"byte_end":5727,"line_start":197,"line_end":197,"column_start":2,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1936},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5630,"byte_end":5645,"line_start":194,"line_end":194,"column_start":10,"column_end":25},"name":"NativeOrEncoded","qualname":"::NativeOrEncoded","value":"pub enum NativeOrEncoded<R> {\n\n    /// The native representation.\n    Native(R),\n\n    /// The encoded representation.\n    Encoded(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1941}],"decl_id":null,"docs":" Something that is either a native or an encoded value.\n","sig":null,"attributes":[{"value":"/ Something that is either a native or an encoded value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5538,"byte_end":5596,"line_start":192,"line_end":192,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5597,"byte_end":5620,"line_start":193,"line_end":193,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":6106,"byte_end":6116,"line_start":211,"line_end":211,"column_start":9,"column_end":19},"name":"as_encoded","qualname":"<NativeOrEncoded<R>>::as_encoded","value":"pub fn as_encoded(&Self) -> Cow<, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the value as the encoded format.\n","sig":null,"attributes":[{"value":"/ Return the value as the encoded format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":6054,"byte_end":6097,"line_start":210,"line_end":210,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":6339,"byte_end":6351,"line_start":219,"line_end":219,"column_start":9,"column_end":21},"name":"into_encoded","qualname":"<NativeOrEncoded<R>>::into_encoded","value":"pub fn into_encoded(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return the value as the encoded format.\n","sig":null,"attributes":[{"value":"/ Return the value as the encoded format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":6287,"byte_end":6330,"line_start":218,"line_end":218,"column_start":2,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":3835},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7154,"byte_end":7170,"line_start":244,"line_end":244,"column_start":10,"column_end":26},"name":"NeverNativeValue","qualname":"::NeverNativeValue","value":"pub enum NeverNativeValue { }","parent":null,"children":[],"decl_id":null,"docs":" A value that is never in a native representation.\n This is type is useful in conjunction with `NativeOrEncoded`.\n","sig":null,"attributes":[{"value":"/ A value that is never in a native representation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":6980,"byte_end":7033,"line_start":240,"line_end":240,"column_start":1,"column_end":54}},{"value":"/ This is type is useful in conjunction with `NativeOrEncoded`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7034,"byte_end":7099,"line_start":241,"line_end":241,"column_start":1,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7100,"byte_end":7123,"line_start":242,"line_end":242,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":1960},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7709,"byte_end":7715,"line_start":265,"line_end":265,"column_start":11,"column_end":17},"name":"TypeId","qualname":"::TypeId","value":"TypeId","parent":null,"children":[{"krate":0,"index":1961}],"decl_id":null,"docs":" Provide a simple 4 byte identifier for a type.\n","sig":null,"attributes":[{"value":"/ Provide a simple 4 byte identifier for a type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7648,"byte_end":7698,"line_start":264,"line_end":264,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1961},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7756,"byte_end":7763,"line_start":267,"line_end":267,"column_start":8,"column_end":15},"name":"TYPE_ID","qualname":"::TypeId::TYPE_ID","value":"[u8; ]","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Simple 4 byte identifier.\n","sig":null,"attributes":[{"value":"/ Simple 4 byte identifier.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7719,"byte_end":7748,"line_start":266,"line_end":266,"column_start":2,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3840},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7972,"byte_end":7977,"line_start":276,"line_end":276,"column_start":2,"column_end":7},"name":"Error","qualname":"::LogLevel::Error","value":"LogLevel::Error","parent":{"krate":0,"index":3839},"children":[],"decl_id":null,"docs":" `Error` log level.\n","sig":null,"attributes":[{"value":"/ `Error` log level.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7948,"byte_end":7970,"line_start":275,"line_end":275,"column_start":2,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3843},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8007,"byte_end":8011,"line_start":278,"line_end":278,"column_start":2,"column_end":6},"name":"Warn","qualname":"::LogLevel::Warn","value":"LogLevel::Warn","parent":{"krate":0,"index":3839},"children":[],"decl_id":null,"docs":" `Warn` log level.\n","sig":null,"attributes":[{"value":"/ `Warn` log level.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7984,"byte_end":8005,"line_start":277,"line_end":277,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3846},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8041,"byte_end":8045,"line_start":280,"line_end":280,"column_start":2,"column_end":6},"name":"Info","qualname":"::LogLevel::Info","value":"LogLevel::Info","parent":{"krate":0,"index":3839},"children":[],"decl_id":null,"docs":" `Info` log level.\n","sig":null,"attributes":[{"value":"/ `Info` log level.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8018,"byte_end":8039,"line_start":279,"line_end":279,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3849},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8076,"byte_end":8081,"line_start":282,"line_end":282,"column_start":2,"column_end":7},"name":"Debug","qualname":"::LogLevel::Debug","value":"LogLevel::Debug","parent":{"krate":0,"index":3839},"children":[],"decl_id":null,"docs":" `Debug` log level.\n","sig":null,"attributes":[{"value":"/ `Debug` log level.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8052,"byte_end":8074,"line_start":281,"line_end":281,"column_start":2,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3852},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8112,"byte_end":8117,"line_start":284,"line_end":284,"column_start":2,"column_end":7},"name":"Trace","qualname":"::LogLevel::Trace","value":"LogLevel::Trace","parent":{"krate":0,"index":3839},"children":[],"decl_id":null,"docs":" `Trace` log level.\n","sig":null,"attributes":[{"value":"/ `Trace` log level.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8088,"byte_end":8110,"line_start":283,"line_end":283,"column_start":2,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3839},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7936,"byte_end":7944,"line_start":274,"line_end":274,"column_start":10,"column_end":18},"name":"LogLevel","qualname":"::LogLevel","value":"pub enum LogLevel {\n\n    /// `Error` log level.\n    Error = ,\n\n    /// `Warn` log level.\n    Warn = ,\n\n    /// `Info` log level.\n    Info = ,\n\n    /// `Debug` log level.\n    Debug = ,\n\n    /// `Trace` log level.\n    Trace = ,\n}","parent":null,"children":[{"krate":0,"index":3840},{"krate":0,"index":3843},{"krate":0,"index":3846},{"krate":0,"index":3849},{"krate":0,"index":3852}],"decl_id":null,"docs":" A log level matching the one from `log` crate.","sig":null,"attributes":[{"value":"/ A log level matching the one from `log` crate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7777,"byte_end":7827,"line_start":270,"line_end":270,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7828,"byte_end":7831,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Used internally by `sp_io::log` method.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7832,"byte_end":7875,"line_start":272,"line_end":272,"column_start":1,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3878},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":9939,"byte_end":9943,"line_start":350,"line_end":350,"column_start":10,"column_end":14},"name":"Void","qualname":"::Void","value":"pub enum Void { }","parent":null,"children":[],"decl_id":null,"docs":" The void type - it cannot exist.\n","sig":null,"attributes":[{"value":"/ The void type - it cannot exist.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":9800,"byte_end":9836,"line_start":347,"line_end":347,"column_start":1,"column_end":37}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":16530,"byte_end":16540,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":16742,"byte_end":16752,"line_start":28,"line_end":28,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":17218,"byte_end":17228,"line_start":47,"line_end":47,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":17737,"byte_end":17740,"line_start":70,"line_end":70,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21407,"byte_end":21408,"line_start":82,"line_end":82,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22702,"byte_end":22716,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":24508,"byte_end":24522,"line_start":180,"line_end":180,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":34765,"byte_end":34766,"line_start":521,"line_end":521,"column_start":77,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37471,"byte_end":37482,"line_start":600,"line_end":600,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37609,"byte_end":37620,"line_start":607,"line_end":607,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37646,"byte_end":37657,"line_start":609,"line_end":609,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37730,"byte_end":37741,"line_start":615,"line_end":615,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37830,"byte_end":37841,"line_start":621,"line_end":621,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37918,"byte_end":37929,"line_start":627,"line_end":627,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38017,"byte_end":38028,"line_start":633,"line_end":633,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38141,"byte_end":38152,"line_start":639,"line_end":639,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38476,"byte_end":38487,"line_start":658,"line_end":658,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38579,"byte_end":38590,"line_start":664,"line_end":664,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38702,"byte_end":38713,"line_start":671,"line_end":671,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38855,"byte_end":38866,"line_start":677,"line_end":677,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":39250,"byte_end":39261,"line_start":691,"line_end":691,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":39476,"byte_end":39487,"line_start":698,"line_end":698,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":39775,"byte_end":39786,"line_start":706,"line_end":706,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40465,"byte_end":40470,"line_start":733,"line_end":733,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40540,"byte_end":40545,"line_start":737,"line_end":737,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40725,"byte_end":40730,"line_start":746,"line_end":746,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40775,"byte_end":40780,"line_start":750,"line_end":750,"column_start":18,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40802,"byte_end":40807,"line_start":752,"line_end":752,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":41128,"byte_end":41133,"line_start":764,"line_end":764,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49133,"byte_end":49134,"line_start":953,"line_end":953,"column_start":39,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49483,"byte_end":49488,"line_start":964,"line_end":964,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50350,"byte_end":50359,"line_start":994,"line_end":994,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50545,"byte_end":50554,"line_start":1006,"line_end":1006,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51240,"byte_end":51260,"line_start":1028,"line_end":1028,"column_start":31,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60487,"byte_end":60489,"line_start":27,"line_end":27,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60603,"byte_end":60605,"line_start":29,"line_end":29,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60719,"byte_end":60721,"line_start":31,"line_end":31,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60835,"byte_end":60837,"line_start":33,"line_end":33,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60951,"byte_end":60953,"line_start":35,"line_end":35,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61067,"byte_end":61069,"line_start":37,"line_end":37,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61183,"byte_end":61185,"line_start":39,"line_end":39,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61299,"byte_end":61301,"line_start":41,"line_end":41,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61415,"byte_end":61417,"line_start":43,"line_end":43,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61531,"byte_end":61533,"line_start":45,"line_end":45,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61649,"byte_end":61652,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61769,"byte_end":61772,"line_start":49,"line_end":49,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61889,"byte_end":61892,"line_start":51,"line_end":51,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62009,"byte_end":62012,"line_start":53,"line_end":53,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62129,"byte_end":62132,"line_start":55,"line_end":55,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62249,"byte_end":62252,"line_start":57,"line_end":57,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62369,"byte_end":62372,"line_start":59,"line_end":59,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62489,"byte_end":62492,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62609,"byte_end":62612,"line_start":63,"line_end":63,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62729,"byte_end":62732,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62849,"byte_end":62852,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62969,"byte_end":62972,"line_start":69,"line_end":69,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63089,"byte_end":63092,"line_start":71,"line_end":71,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63209,"byte_end":63212,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63329,"byte_end":63332,"line_start":75,"line_end":75,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63449,"byte_end":63452,"line_start":77,"line_end":77,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63569,"byte_end":63572,"line_start":79,"line_end":79,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63689,"byte_end":63692,"line_start":81,"line_end":81,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63809,"byte_end":63812,"line_start":83,"line_end":83,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63929,"byte_end":63932,"line_start":85,"line_end":85,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64049,"byte_end":64052,"line_start":87,"line_end":87,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64169,"byte_end":64172,"line_start":89,"line_end":89,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64289,"byte_end":64292,"line_start":91,"line_end":91,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64409,"byte_end":64412,"line_start":93,"line_end":93,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64529,"byte_end":64532,"line_start":95,"line_end":95,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64649,"byte_end":64652,"line_start":97,"line_end":97,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64769,"byte_end":64772,"line_start":99,"line_end":99,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64889,"byte_end":64892,"line_start":101,"line_end":101,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65009,"byte_end":65012,"line_start":103,"line_end":103,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65129,"byte_end":65132,"line_start":105,"line_end":105,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65249,"byte_end":65252,"line_start":107,"line_end":107,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65369,"byte_end":65372,"line_start":109,"line_end":109,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65489,"byte_end":65492,"line_start":111,"line_end":111,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65609,"byte_end":65612,"line_start":113,"line_end":113,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65729,"byte_end":65732,"line_start":115,"line_end":115,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65849,"byte_end":65852,"line_start":117,"line_end":117,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65969,"byte_end":65972,"line_start":119,"line_end":119,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66089,"byte_end":66092,"line_start":121,"line_end":121,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66209,"byte_end":66212,"line_start":123,"line_end":123,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66329,"byte_end":66332,"line_start":125,"line_end":125,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66449,"byte_end":66452,"line_start":127,"line_end":127,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66569,"byte_end":66572,"line_start":129,"line_end":129,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66689,"byte_end":66692,"line_start":131,"line_end":131,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66809,"byte_end":66812,"line_start":133,"line_end":133,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66929,"byte_end":66932,"line_start":135,"line_end":135,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67049,"byte_end":67052,"line_start":137,"line_end":137,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67169,"byte_end":67172,"line_start":139,"line_end":139,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67289,"byte_end":67292,"line_start":141,"line_end":141,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67409,"byte_end":67412,"line_start":143,"line_end":143,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67529,"byte_end":67532,"line_start":145,"line_end":145,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67649,"byte_end":67652,"line_start":147,"line_end":147,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67769,"byte_end":67772,"line_start":149,"line_end":149,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67889,"byte_end":67892,"line_start":151,"line_end":151,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68009,"byte_end":68012,"line_start":153,"line_end":153,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68129,"byte_end":68132,"line_start":155,"line_end":155,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68249,"byte_end":68252,"line_start":157,"line_end":157,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68369,"byte_end":68372,"line_start":159,"line_end":159,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68489,"byte_end":68492,"line_start":161,"line_end":161,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68609,"byte_end":68612,"line_start":163,"line_end":163,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68729,"byte_end":68732,"line_start":165,"line_end":165,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68849,"byte_end":68852,"line_start":167,"line_end":167,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68969,"byte_end":68972,"line_start":169,"line_end":169,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69089,"byte_end":69092,"line_start":171,"line_end":171,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69209,"byte_end":69212,"line_start":173,"line_end":173,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69329,"byte_end":69332,"line_start":175,"line_end":175,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69449,"byte_end":69452,"line_start":177,"line_end":177,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69569,"byte_end":69572,"line_start":179,"line_end":179,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69689,"byte_end":69692,"line_start":181,"line_end":181,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69809,"byte_end":69812,"line_start":183,"line_end":183,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69929,"byte_end":69932,"line_start":185,"line_end":185,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70049,"byte_end":70052,"line_start":187,"line_end":187,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70169,"byte_end":70172,"line_start":189,"line_end":189,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70289,"byte_end":70292,"line_start":191,"line_end":191,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70409,"byte_end":70412,"line_start":193,"line_end":193,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70529,"byte_end":70532,"line_start":195,"line_end":195,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70649,"byte_end":70652,"line_start":197,"line_end":197,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70769,"byte_end":70772,"line_start":199,"line_end":199,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70889,"byte_end":70892,"line_start":201,"line_end":201,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71009,"byte_end":71012,"line_start":203,"line_end":203,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71129,"byte_end":71132,"line_start":205,"line_end":205,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71249,"byte_end":71252,"line_start":207,"line_end":207,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71369,"byte_end":71372,"line_start":209,"line_end":209,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71489,"byte_end":71492,"line_start":211,"line_end":211,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71609,"byte_end":71612,"line_start":213,"line_end":213,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71729,"byte_end":71732,"line_start":215,"line_end":215,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71849,"byte_end":71852,"line_start":217,"line_end":217,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71969,"byte_end":71972,"line_start":219,"line_end":219,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72089,"byte_end":72092,"line_start":221,"line_end":221,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72209,"byte_end":72212,"line_start":223,"line_end":223,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72329,"byte_end":72332,"line_start":225,"line_end":225,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72451,"byte_end":72455,"line_start":227,"line_end":227,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72575,"byte_end":72579,"line_start":229,"line_end":229,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72699,"byte_end":72703,"line_start":231,"line_end":231,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72823,"byte_end":72827,"line_start":233,"line_end":233,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72947,"byte_end":72951,"line_start":235,"line_end":235,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73071,"byte_end":73075,"line_start":237,"line_end":237,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73195,"byte_end":73199,"line_start":239,"line_end":239,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73319,"byte_end":73323,"line_start":241,"line_end":241,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73443,"byte_end":73447,"line_start":243,"line_end":243,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":75861,"byte_end":75865,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76122,"byte_end":76128,"line_start":77,"line_end":77,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76201,"byte_end":76207,"line_start":83,"line_end":83,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76280,"byte_end":76286,"line_start":89,"line_end":89,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76365,"byte_end":76371,"line_start":95,"line_end":95,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76489,"byte_end":76495,"line_start":103,"line_end":103,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76840,"byte_end":76846,"line_start":124,"line_end":124,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76918,"byte_end":76922,"line_start":130,"line_end":130,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77025,"byte_end":77031,"line_start":137,"line_end":137,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77191,"byte_end":77197,"line_start":145,"line_end":145,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77299,"byte_end":77305,"line_start":151,"line_end":151,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77426,"byte_end":77432,"line_start":158,"line_end":158,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77574,"byte_end":77580,"line_start":164,"line_end":164,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77957,"byte_end":77963,"line_start":178,"line_end":178,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":78164,"byte_end":78170,"line_start":185,"line_end":185,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":78539,"byte_end":78548,"line_start":196,"line_end":196,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":78812,"byte_end":78821,"line_start":211,"line_end":211,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79020,"byte_end":79029,"line_start":218,"line_end":218,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79378,"byte_end":79387,"line_start":227,"line_end":227,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79514,"byte_end":79523,"line_start":235,"line_end":235,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79598,"byte_end":79607,"line_start":241,"line_end":241,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79686,"byte_end":79695,"line_start":247,"line_end":247,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79725,"byte_end":79729,"line_start":249,"line_end":249,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79899,"byte_end":79908,"line_start":261,"line_end":261,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79981,"byte_end":79990,"line_start":267,"line_end":267,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80063,"byte_end":80072,"line_start":273,"line_end":273,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80164,"byte_end":80173,"line_start":279,"line_end":279,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80518,"byte_end":80527,"line_start":292,"line_end":292,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80647,"byte_end":80656,"line_start":298,"line_end":298,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82090,"byte_end":82096,"line_start":350,"line_end":350,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82738,"byte_end":82744,"line_start":373,"line_end":373,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83210,"byte_end":83216,"line_start":389,"line_end":389,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83243,"byte_end":83263,"line_start":391,"line_end":391,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83343,"byte_end":83363,"line_start":397,"line_end":397,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83988,"byte_end":83992,"line_start":421,"line_end":421,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":87741,"byte_end":87745,"line_start":536,"line_end":536,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":88392,"byte_end":88398,"line_start":555,"line_end":555,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":88476,"byte_end":88485,"line_start":560,"line_end":560,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":88595,"byte_end":88599,"line_start":566,"line_end":566,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96183,"byte_end":96187,"line_start":71,"line_end":71,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96435,"byte_end":96441,"line_start":81,"line_end":81,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96514,"byte_end":96520,"line_start":87,"line_end":87,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96593,"byte_end":96599,"line_start":93,"line_end":93,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96678,"byte_end":96684,"line_start":99,"line_end":99,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96862,"byte_end":96866,"line_start":113,"line_end":113,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96969,"byte_end":96975,"line_start":120,"line_end":120,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":97143,"byte_end":97149,"line_start":128,"line_end":128,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":97400,"byte_end":97406,"line_start":142,"line_end":142,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":97508,"byte_end":97514,"line_start":148,"line_end":148,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":97635,"byte_end":97641,"line_start":155,"line_end":155,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":97783,"byte_end":97789,"line_start":161,"line_end":161,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98166,"byte_end":98172,"line_start":175,"line_end":175,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98373,"byte_end":98379,"line_start":182,"line_end":182,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98867,"byte_end":98876,"line_start":195,"line_end":195,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":99140,"byte_end":99149,"line_start":210,"line_end":210,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":99348,"byte_end":99357,"line_start":217,"line_end":217,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":99706,"byte_end":99715,"line_start":226,"line_end":226,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":99842,"byte_end":99851,"line_start":234,"line_end":234,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":99926,"byte_end":99935,"line_start":240,"line_end":240,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100014,"byte_end":100023,"line_start":246,"line_end":246,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100138,"byte_end":100142,"line_start":254,"line_end":254,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100227,"byte_end":100236,"line_start":260,"line_end":260,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100309,"byte_end":100318,"line_start":266,"line_end":266,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100391,"byte_end":100400,"line_start":272,"line_end":272,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100533,"byte_end":100542,"line_start":279,"line_end":279,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100655,"byte_end":100664,"line_start":285,"line_end":285,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101009,"byte_end":101018,"line_start":298,"line_end":298,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101496,"byte_end":101505,"line_start":315,"line_end":315,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102545,"byte_end":102551,"line_start":345,"line_end":345,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103053,"byte_end":103059,"line_start":362,"line_end":362,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103701,"byte_end":103707,"line_start":385,"line_end":385,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104179,"byte_end":104199,"line_start":401,"line_end":401,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104279,"byte_end":104299,"line_start":407,"line_end":407,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104446,"byte_end":104450,"line_start":414,"line_end":414,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104601,"byte_end":104605,"line_start":421,"line_end":421,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104743,"byte_end":104747,"line_start":428,"line_end":428,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104873,"byte_end":104880,"line_start":435,"line_end":435,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":105006,"byte_end":105010,"line_start":442,"line_end":442,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":105501,"byte_end":105505,"line_start":459,"line_end":459,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109140,"byte_end":109144,"line_start":576,"line_end":576,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110299,"byte_end":110305,"line_start":604,"line_end":604,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110383,"byte_end":110392,"line_start":609,"line_end":609,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110502,"byte_end":110506,"line_start":615,"line_end":615,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121634,"byte_end":121640,"line_start":58,"line_end":58,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121745,"byte_end":121751,"line_start":64,"line_end":64,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121859,"byte_end":121865,"line_start":70,"line_end":70,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121958,"byte_end":121964,"line_start":76,"line_end":76,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122246,"byte_end":122252,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122878,"byte_end":122884,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123354,"byte_end":123374,"line_start":129,"line_end":129,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123454,"byte_end":123474,"line_start":135,"line_end":135,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123584,"byte_end":123590,"line_start":141,"line_end":141,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123612,"byte_end":123618,"line_start":143,"line_end":143,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123692,"byte_end":123698,"line_start":149,"line_end":149,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123771,"byte_end":123777,"line_start":155,"line_end":155,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123882,"byte_end":123888,"line_start":161,"line_end":161,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":124106,"byte_end":124112,"line_start":175,"line_end":175,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":124195,"byte_end":124201,"line_start":181,"line_end":181,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":124315,"byte_end":124321,"line_start":188,"line_end":188,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":124463,"byte_end":124469,"line_start":194,"line_end":194,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":124847,"byte_end":124853,"line_start":208,"line_end":208,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":125054,"byte_end":125060,"line_start":215,"line_end":215,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":125337,"byte_end":125343,"line_start":223,"line_end":223,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":125616,"byte_end":125625,"line_start":233,"line_end":233,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":125889,"byte_end":125898,"line_start":248,"line_end":248,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126097,"byte_end":126106,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126455,"byte_end":126464,"line_start":264,"line_end":264,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126591,"byte_end":126600,"line_start":272,"line_end":272,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126675,"byte_end":126684,"line_start":278,"line_end":278,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126763,"byte_end":126772,"line_start":284,"line_end":284,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126887,"byte_end":126896,"line_start":292,"line_end":292,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126969,"byte_end":126978,"line_start":298,"line_end":298,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127051,"byte_end":127060,"line_start":304,"line_end":304,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127152,"byte_end":127161,"line_start":310,"line_end":310,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127506,"byte_end":127515,"line_start":323,"line_end":323,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127635,"byte_end":127644,"line_start":329,"line_end":329,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":128761,"byte_end":128770,"line_start":360,"line_end":360,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":130030,"byte_end":130034,"line_start":406,"line_end":406,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134072,"byte_end":134076,"line_start":517,"line_end":517,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134721,"byte_end":134727,"line_start":536,"line_end":536,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134803,"byte_end":134812,"line_start":541,"line_end":541,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134918,"byte_end":134922,"line_start":547,"line_end":547,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hasher.rs","byte_start":145549,"byte_end":145561,"line_start":29,"line_end":29,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hasher.rs","byte_start":145970,"byte_end":145982,"line_start":49,"line_end":49,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":171907,"byte_end":171927,"line_start":30,"line_end":30,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":172516,"byte_end":172536,"line_start":48,"line_end":48,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174291,"byte_end":174315,"line_start":109,"line_end":109,"column_start":18,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174370,"byte_end":174394,"line_start":115,"line_end":115,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":176250,"byte_end":176278,"line_start":173,"line_end":173,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":176493,"byte_end":176521,"line_start":184,"line_end":184,"column_start":10,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":177066,"byte_end":177098,"line_start":202,"line_end":202,"column_start":19,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":177297,"byte_end":177329,"line_start":213,"line_end":213,"column_start":6,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":177858,"byte_end":177887,"line_start":230,"line_end":230,"column_start":23,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":178094,"byte_end":178123,"line_start":241,"line_end":241,"column_start":10,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181592,"byte_end":181616,"line_start":72,"line_end":72,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":182280,"byte_end":182304,"line_start":92,"line_end":92,"column_start":26,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183497,"byte_end":183510,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185103,"byte_end":185116,"line_start":183,"line_end":183,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185550,"byte_end":185565,"line_start":196,"line_end":196,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":186087,"byte_end":186102,"line_start":212,"line_end":212,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":191069,"byte_end":191091,"line_start":404,"line_end":404,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":191328,"byte_end":191350,"line_start":413,"line_end":413,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148984,"byte_end":148995,"line_start":77,"line_end":77,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150096,"byte_end":150105,"line_start":118,"line_end":118,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151567,"byte_end":151584,"line_start":168,"line_end":168,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152564,"byte_end":152579,"line_start":197,"line_end":197,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152999,"byte_end":153007,"line_start":212,"line_end":212,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153263,"byte_end":153272,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154655,"byte_end":154667,"line_start":277,"line_end":277,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155535,"byte_end":155547,"line_start":311,"line_end":311,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":162585,"byte_end":162588,"line_start":503,"line_end":503,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":165037,"byte_end":165057,"line_start":591,"line_end":591,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":165565,"byte_end":165585,"line_start":610,"line_end":610,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169134,"byte_end":169145,"line_start":715,"line_end":715,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169974,"byte_end":169992,"line_start":742,"line_end":742,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200270,"byte_end":200294,"line_start":53,"line_end":53,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217482,"byte_end":217500,"line_start":238,"line_end":238,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217741,"byte_end":217761,"line_start":247,"line_end":247,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218410,"byte_end":218421,"line_start":269,"line_end":269,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218507,"byte_end":218518,"line_start":275,"line_end":275,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218790,"byte_end":218801,"line_start":288,"line_end":288,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219081,"byte_end":219093,"line_start":298,"line_end":298,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219606,"byte_end":219626,"line_start":314,"line_end":314,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220596,"byte_end":220609,"line_start":348,"line_end":348,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220862,"byte_end":220877,"line_start":360,"line_end":360,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":221617,"byte_end":221620,"line_start":380,"line_end":380,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223491,"byte_end":223499,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":224539,"byte_end":224547,"line_start":80,"line_end":80,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1839},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232622,"byte_end":232634,"line_start":371,"line_end":371,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232906,"byte_end":232918,"line_start":380,"line_end":380,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3516,"byte_end":3532,"line_start":116,"line_end":116,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4309,"byte_end":4314,"line_start":139,"line_end":139,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4392,"byte_end":4397,"line_start":143,"line_end":143,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4469,"byte_end":4474,"line_start":147,"line_end":147,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4597,"byte_end":4602,"line_start":153,"line_end":153,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1928}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4884,"byte_end":4898,"line_start":165,"line_end":165,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5061,"byte_end":5075,"line_start":172,"line_end":172,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5430,"byte_end":5442,"line_start":185,"line_end":185,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5819,"byte_end":5834,"line_start":202,"line_end":202,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":6032,"byte_end":6047,"line_start":209,"line_end":209,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":6551,"byte_end":6566,"line_start":228,"line_end":228,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7222,"byte_end":7238,"line_start":247,"line_end":247,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7425,"byte_end":7441,"line_start":255,"line_end":255,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7493,"byte_end":7509,"line_start":258,"line_end":258,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8145,"byte_end":8153,"line_start":287,"line_end":287,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8480,"byte_end":8488,"line_start":299,"line_end":299,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8718,"byte_end":8723,"line_start":312,"line_end":312,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1557,"byte_end":1564,"line_start":53,"line_end":53,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1691,"byte_end":1701,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":91}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1711,"byte_end":1717,"line_start":58,"line_end":58,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":116}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1728,"byte_end":1737,"line_start":60,"line_end":60,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":359}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1748,"byte_end":1755,"line_start":62,"line_end":62,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":798}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1765,"byte_end":1772,"line_start":63,"line_end":63,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":991}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1782,"byte_end":1787,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1208}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1797,"byte_end":1801,"line_start":65,"line_end":65,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1397}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1847,"byte_end":1855,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1424}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147135,"byte_end":147142,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1441}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147176,"byte_end":147183,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1501}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1865,"byte_end":1872,"line_start":69,"line_end":69,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1684}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1882,"byte_end":1886,"line_start":70,"line_end":70,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1694}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1938,"byte_end":1944,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1718}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1954,"byte_end":1961,"line_start":74,"line_end":74,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1804}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":1995,"byte_end":1998,"line_start":76,"line_end":76,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1876}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":16530,"byte_end":16540,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":16742,"byte_end":16752,"line_start":28,"line_end":28,"column_start":35,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":17218,"byte_end":17228,"line_start":47,"line_end":47,"column_start":33,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hexdisplay.rs","byte_start":17737,"byte_end":17740,"line_start":70,"line_end":70,"column_start":34,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":4556},"to":{"krate":0,"index":106}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":21407,"byte_end":21408,"line_start":82,"line_end":82,"column_start":51,"column_end":52},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":152},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":22702,"byte_end":22716,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":24508,"byte_end":24522,"line_start":180,"line_end":180,"column_start":33,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2073},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25350,"byte_end":25355,"line_start":225,"line_end":225,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25358,"byte_end":25363,"line_start":225,"line_end":225,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1950},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25372,"byte_end":25377,"line_start":225,"line_end":225,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1947},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":25386,"byte_end":25393,"line_start":225,"line_end":225,"column_start":58,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":2026},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":27660,"byte_end":27665,"line_start":290,"line_end":290,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":34765,"byte_end":34766,"line_start":521,"line_end":521,"column_start":77,"column_end":78},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":192},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36587,"byte_end":36592,"line_start":578,"line_end":578,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":1947},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36601,"byte_end":36606,"line_start":578,"line_end":578,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1950},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36615,"byte_end":36622,"line_start":578,"line_end":578,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2026},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36625,"byte_end":36631,"line_start":578,"line_end":578,"column_start":40,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":184},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36634,"byte_end":36644,"line_start":578,"line_end":578,"column_start":49,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":336},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36647,"byte_end":36656,"line_start":578,"line_end":578,"column_start":62,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":1764},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36659,"byte_end":36661,"line_start":578,"line_end":578,"column_start":74,"column_end":76},"kind":"SuperTrait","from":{"krate":2,"index":1769},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36664,"byte_end":36669,"line_start":578,"line_end":578,"column_start":79,"column_end":84},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36672,"byte_end":36676,"line_start":578,"line_end":578,"column_start":87,"column_end":91},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":36679,"byte_end":36683,"line_start":578,"line_end":578,"column_start":94,"column_end":98},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37471,"byte_end":37482,"line_start":600,"line_end":600,"column_start":43,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2265},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37609,"byte_end":37620,"line_start":607,"line_end":607,"column_start":20,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2265},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37646,"byte_end":37657,"line_start":609,"line_end":609,"column_start":22,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37730,"byte_end":37741,"line_start":615,"line_end":615,"column_start":22,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37830,"byte_end":37841,"line_start":621,"line_end":621,"column_start":26,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":37918,"byte_end":37929,"line_start":627,"line_end":627,"column_start":26,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38017,"byte_end":38028,"line_start":633,"line_end":633,"column_start":25,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38141,"byte_end":38152,"line_start":639,"line_end":639,"column_start":49,"column_end":60},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38476,"byte_end":38487,"line_start":658,"line_end":658,"column_start":32,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38579,"byte_end":38590,"line_start":664,"line_end":664,"column_start":32,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38702,"byte_end":38713,"line_start":671,"line_end":671,"column_start":28,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":38855,"byte_end":38866,"line_start":677,"line_end":677,"column_start":29,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":39250,"byte_end":39261,"line_start":691,"line_end":691,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2265},"to":{"krate":25,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":39476,"byte_end":39487,"line_start":698,"line_end":698,"column_start":39,"column_end":50},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2265},"to":{"krate":25,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":39775,"byte_end":39786,"line_start":706,"line_end":706,"column_start":31,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":8501}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40465,"byte_end":40470,"line_start":733,"line_end":733,"column_start":23,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2307},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40540,"byte_end":40545,"line_start":737,"line_end":737,"column_start":23,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2307},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40725,"byte_end":40730,"line_start":746,"line_end":746,"column_start":22,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2307},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40775,"byte_end":40780,"line_start":750,"line_end":750,"column_start":18,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2307},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":40802,"byte_end":40807,"line_start":752,"line_end":752,"column_start":18,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2307},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":41128,"byte_end":41133,"line_start":764,"line_end":764,"column_start":16,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2307},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42328,"byte_end":42338,"line_start":794,"line_end":794,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":336},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42341,"byte_end":42346,"line_start":794,"line_end":794,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42349,"byte_end":42354,"line_start":794,"line_end":794,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42357,"byte_end":42361,"line_start":794,"line_end":794,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":42364,"byte_end":42368,"line_start":794,"line_end":794,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48682,"byte_end":48686,"line_start":940,"line_end":940,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1956},"to":{"krate":0,"index":320}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":48696,"byte_end":48700,"line_start":940,"line_end":940,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1953},"to":{"krate":0,"index":320}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49016,"byte_end":49021,"line_start":948,"line_end":948,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49133,"byte_end":49134,"line_start":953,"line_end":953,"column_start":39,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":327},"to":{"krate":0,"index":320}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":49483,"byte_end":49488,"line_start":964,"line_end":964,"column_start":44,"column_end":49},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":333},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50350,"byte_end":50359,"line_start":994,"line_end":994,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2322},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":50545,"byte_end":50554,"line_start":1006,"line_end":1006,"column_start":31,"column_end":40},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2322},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/crypto.rs","byte_start":51240,"byte_end":51260,"line_start":1028,"line_end":1028,"column_start":31,"column_end":51},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60487,"byte_end":60489,"line_start":27,"line_end":27,"column_start":31,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":362},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60603,"byte_end":60605,"line_start":29,"line_end":29,"column_start":31,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60719,"byte_end":60721,"line_start":31,"line_end":31,"column_start":31,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":370},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60835,"byte_end":60837,"line_start":33,"line_end":33,"column_start":31,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":374},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":60951,"byte_end":60953,"line_start":35,"line_end":35,"column_start":31,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":378},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61067,"byte_end":61069,"line_start":37,"line_end":37,"column_start":31,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":382},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61183,"byte_end":61185,"line_start":39,"line_end":39,"column_start":31,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":386},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61299,"byte_end":61301,"line_start":41,"line_end":41,"column_start":31,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61415,"byte_end":61417,"line_start":43,"line_end":43,"column_start":31,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":394},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61531,"byte_end":61533,"line_start":45,"line_end":45,"column_start":31,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":398},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61649,"byte_end":61652,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":402},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61769,"byte_end":61772,"line_start":49,"line_end":49,"column_start":32,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":406},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":61889,"byte_end":61892,"line_start":51,"line_end":51,"column_start":32,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":410},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62009,"byte_end":62012,"line_start":53,"line_end":53,"column_start":32,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":414},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62129,"byte_end":62132,"line_start":55,"line_end":55,"column_start":32,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":418},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62249,"byte_end":62252,"line_start":57,"line_end":57,"column_start":32,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":422},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62369,"byte_end":62372,"line_start":59,"line_end":59,"column_start":32,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":426},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62489,"byte_end":62492,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":430},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62609,"byte_end":62612,"line_start":63,"line_end":63,"column_start":32,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":434},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62729,"byte_end":62732,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62849,"byte_end":62852,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":442},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":62969,"byte_end":62972,"line_start":69,"line_end":69,"column_start":32,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":446},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63089,"byte_end":63092,"line_start":71,"line_end":71,"column_start":32,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63209,"byte_end":63212,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":454},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63329,"byte_end":63332,"line_start":75,"line_end":75,"column_start":32,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63449,"byte_end":63452,"line_start":77,"line_end":77,"column_start":32,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":462},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63569,"byte_end":63572,"line_start":79,"line_end":79,"column_start":32,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":466},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63689,"byte_end":63692,"line_start":81,"line_end":81,"column_start":32,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":470},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63809,"byte_end":63812,"line_start":83,"line_end":83,"column_start":32,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":474},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":63929,"byte_end":63932,"line_start":85,"line_end":85,"column_start":32,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":478},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64049,"byte_end":64052,"line_start":87,"line_end":87,"column_start":32,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":482},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64169,"byte_end":64172,"line_start":89,"line_end":89,"column_start":32,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":486},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64289,"byte_end":64292,"line_start":91,"line_end":91,"column_start":32,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":490},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64409,"byte_end":64412,"line_start":93,"line_end":93,"column_start":32,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":494},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64529,"byte_end":64532,"line_start":95,"line_end":95,"column_start":32,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":498},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64649,"byte_end":64652,"line_start":97,"line_end":97,"column_start":32,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":502},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64769,"byte_end":64772,"line_start":99,"line_end":99,"column_start":32,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":506},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":64889,"byte_end":64892,"line_start":101,"line_end":101,"column_start":32,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65009,"byte_end":65012,"line_start":103,"line_end":103,"column_start":32,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":514},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65129,"byte_end":65132,"line_start":105,"line_end":105,"column_start":32,"column_end":35},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":518},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65249,"byte_end":65252,"line_start":107,"line_end":107,"column_start":32,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":522},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65369,"byte_end":65372,"line_start":109,"line_end":109,"column_start":32,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65489,"byte_end":65492,"line_start":111,"line_end":111,"column_start":32,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":530},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65609,"byte_end":65612,"line_start":113,"line_end":113,"column_start":32,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":534},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65729,"byte_end":65732,"line_start":115,"line_end":115,"column_start":32,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":538},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65849,"byte_end":65852,"line_start":117,"line_end":117,"column_start":32,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":65969,"byte_end":65972,"line_start":119,"line_end":119,"column_start":32,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":546},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66089,"byte_end":66092,"line_start":121,"line_end":121,"column_start":32,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":550},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66209,"byte_end":66212,"line_start":123,"line_end":123,"column_start":32,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":554},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66329,"byte_end":66332,"line_start":125,"line_end":125,"column_start":32,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":558},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66449,"byte_end":66452,"line_start":127,"line_end":127,"column_start":32,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":562},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66569,"byte_end":66572,"line_start":129,"line_end":129,"column_start":32,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":566},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66689,"byte_end":66692,"line_start":131,"line_end":131,"column_start":32,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":570},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66809,"byte_end":66812,"line_start":133,"line_end":133,"column_start":32,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":574},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":66929,"byte_end":66932,"line_start":135,"line_end":135,"column_start":32,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":578},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67049,"byte_end":67052,"line_start":137,"line_end":137,"column_start":32,"column_end":35},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":582},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67169,"byte_end":67172,"line_start":139,"line_end":139,"column_start":32,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":586},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67289,"byte_end":67292,"line_start":141,"line_end":141,"column_start":32,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":590},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67409,"byte_end":67412,"line_start":143,"line_end":143,"column_start":32,"column_end":35},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":594},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67529,"byte_end":67532,"line_start":145,"line_end":145,"column_start":32,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":598},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67649,"byte_end":67652,"line_start":147,"line_end":147,"column_start":32,"column_end":35},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":602},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67769,"byte_end":67772,"line_start":149,"line_end":149,"column_start":32,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":606},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":67889,"byte_end":67892,"line_start":151,"line_end":151,"column_start":32,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":610},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68009,"byte_end":68012,"line_start":153,"line_end":153,"column_start":32,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":614},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68129,"byte_end":68132,"line_start":155,"line_end":155,"column_start":32,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":618},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68249,"byte_end":68252,"line_start":157,"line_end":157,"column_start":32,"column_end":35},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":622},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68369,"byte_end":68372,"line_start":159,"line_end":159,"column_start":32,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":626},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68489,"byte_end":68492,"line_start":161,"line_end":161,"column_start":32,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":630},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68609,"byte_end":68612,"line_start":163,"line_end":163,"column_start":32,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":634},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68729,"byte_end":68732,"line_start":165,"line_end":165,"column_start":32,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":638},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68849,"byte_end":68852,"line_start":167,"line_end":167,"column_start":32,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":642},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":68969,"byte_end":68972,"line_start":169,"line_end":169,"column_start":32,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":646},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69089,"byte_end":69092,"line_start":171,"line_end":171,"column_start":32,"column_end":35},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":650},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69209,"byte_end":69212,"line_start":173,"line_end":173,"column_start":32,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":654},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69329,"byte_end":69332,"line_start":175,"line_end":175,"column_start":32,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":658},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69449,"byte_end":69452,"line_start":177,"line_end":177,"column_start":32,"column_end":35},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":662},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69569,"byte_end":69572,"line_start":179,"line_end":179,"column_start":32,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":666},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69689,"byte_end":69692,"line_start":181,"line_end":181,"column_start":32,"column_end":35},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":670},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69809,"byte_end":69812,"line_start":183,"line_end":183,"column_start":32,"column_end":35},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":674},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":69929,"byte_end":69932,"line_start":185,"line_end":185,"column_start":32,"column_end":35},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":678},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70049,"byte_end":70052,"line_start":187,"line_end":187,"column_start":32,"column_end":35},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":682},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70169,"byte_end":70172,"line_start":189,"line_end":189,"column_start":32,"column_end":35},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70289,"byte_end":70292,"line_start":191,"line_end":191,"column_start":32,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":690},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70409,"byte_end":70412,"line_start":193,"line_end":193,"column_start":32,"column_end":35},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":694},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70529,"byte_end":70532,"line_start":195,"line_end":195,"column_start":32,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":698},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70649,"byte_end":70652,"line_start":197,"line_end":197,"column_start":32,"column_end":35},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":702},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70769,"byte_end":70772,"line_start":199,"line_end":199,"column_start":32,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":706},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":70889,"byte_end":70892,"line_start":201,"line_end":201,"column_start":32,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":710},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71009,"byte_end":71012,"line_start":203,"line_end":203,"column_start":32,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":714},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71129,"byte_end":71132,"line_start":205,"line_end":205,"column_start":32,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":718},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71249,"byte_end":71252,"line_start":207,"line_end":207,"column_start":32,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":722},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71369,"byte_end":71372,"line_start":209,"line_end":209,"column_start":32,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":726},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71489,"byte_end":71492,"line_start":211,"line_end":211,"column_start":32,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":730},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71609,"byte_end":71612,"line_start":213,"line_end":213,"column_start":32,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":734},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71729,"byte_end":71732,"line_start":215,"line_end":215,"column_start":32,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":738},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71849,"byte_end":71852,"line_start":217,"line_end":217,"column_start":32,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":742},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":71969,"byte_end":71972,"line_start":219,"line_end":219,"column_start":32,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":746},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72089,"byte_end":72092,"line_start":221,"line_end":221,"column_start":32,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":750},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72209,"byte_end":72212,"line_start":223,"line_end":223,"column_start":32,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":754},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72329,"byte_end":72332,"line_start":225,"line_end":225,"column_start":32,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":758},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72451,"byte_end":72455,"line_start":227,"line_end":227,"column_start":33,"column_end":37},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72575,"byte_end":72579,"line_start":229,"line_end":229,"column_start":33,"column_end":37},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":766},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72699,"byte_end":72703,"line_start":231,"line_end":231,"column_start":33,"column_end":37},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72823,"byte_end":72827,"line_start":233,"line_end":233,"column_start":33,"column_end":37},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":774},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":72947,"byte_end":72951,"line_start":235,"line_end":235,"column_start":33,"column_end":37},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":778},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73071,"byte_end":73075,"line_start":237,"line_end":237,"column_start":33,"column_end":37},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":782},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73195,"byte_end":73199,"line_start":239,"line_end":239,"column_start":33,"column_end":37},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":786},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73319,"byte_end":73323,"line_start":241,"line_end":241,"column_start":33,"column_end":37},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":790},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/u32_trait.rs","byte_start":73443,"byte_end":73447,"line_start":243,"line_end":243,"column_start":33,"column_end":37},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":794},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":75861,"byte_end":75865,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76122,"byte_end":76128,"line_start":77,"line_end":77,"column_start":26,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2468},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76201,"byte_end":76207,"line_start":83,"line_end":83,"column_start":22,"column_end":28},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2468},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76280,"byte_end":76286,"line_start":89,"line_end":89,"column_start":22,"column_end":28},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2468},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76365,"byte_end":76371,"line_start":95,"line_end":95,"column_start":16,"column_end":22},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2468},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76489,"byte_end":76495,"line_start":103,"line_end":103,"column_start":42,"column_end":48},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2468},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76840,"byte_end":76846,"line_start":124,"line_end":124,"column_start":21,"column_end":27},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2468},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":76918,"byte_end":76922,"line_start":130,"line_end":130,"column_start":23,"column_end":27},"kind":{"Impl":{"id":175}},"from":{"krate":73,"index":1887},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77025,"byte_end":77031,"line_start":137,"line_end":137,"column_start":28,"column_end":34},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2468},"to":{"krate":2,"index":8501}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77191,"byte_end":77197,"line_start":145,"line_end":145,"column_start":34,"column_end":40},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2468},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77299,"byte_end":77305,"line_start":151,"line_end":151,"column_start":30,"column_end":36},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2468},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77426,"byte_end":77432,"line_start":158,"line_end":158,"column_start":28,"column_end":34},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2468},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77574,"byte_end":77580,"line_start":164,"line_end":164,"column_start":29,"column_end":35},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2468},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":77957,"byte_end":77963,"line_start":178,"line_end":178,"column_start":20,"column_end":26},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2468},"to":{"krate":25,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":78164,"byte_end":78170,"line_start":185,"line_end":185,"column_start":32,"column_end":38},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2468},"to":{"krate":25,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":78539,"byte_end":78548,"line_start":196,"line_end":196,"column_start":42,"column_end":51},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":78812,"byte_end":78821,"line_start":211,"line_end":211,"column_start":20,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2523},"to":{"krate":25,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79020,"byte_end":79029,"line_start":218,"line_end":218,"column_start":32,"column_end":41},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2523},"to":{"krate":25,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79378,"byte_end":79387,"line_start":227,"line_end":227,"column_start":16,"column_end":25},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79514,"byte_end":79523,"line_start":235,"line_end":235,"column_start":18,"column_end":27},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79598,"byte_end":79607,"line_start":241,"line_end":241,"column_start":20,"column_end":29},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79686,"byte_end":79695,"line_start":247,"line_end":247,"column_start":13,"column_end":22},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79725,"byte_end":79729,"line_start":249,"line_end":249,"column_start":26,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":73,"index":2031},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79899,"byte_end":79908,"line_start":261,"line_end":261,"column_start":26,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":79981,"byte_end":79990,"line_start":267,"line_end":267,"column_start":22,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80063,"byte_end":80072,"line_start":273,"line_end":273,"column_start":22,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80164,"byte_end":80173,"line_start":279,"line_end":279,"column_start":29,"column_end":38},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80518,"byte_end":80527,"line_start":292,"line_end":292,"column_start":29,"column_end":38},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":80647,"byte_end":80656,"line_start":298,"line_end":298,"column_start":6,"column_end":15},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82090,"byte_end":82096,"line_start":350,"line_end":350,"column_start":6,"column_end":12},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":82738,"byte_end":82744,"line_start":373,"line_end":373,"column_start":22,"column_end":28},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2468},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83210,"byte_end":83216,"line_start":389,"line_end":389,"column_start":17,"column_end":23},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2468},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83243,"byte_end":83263,"line_start":391,"line_end":391,"column_start":23,"column_end":43},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83343,"byte_end":83363,"line_start":397,"line_end":397,"column_start":24,"column_end":44},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":83988,"byte_end":83992,"line_start":421,"line_end":421,"column_start":20,"column_end":24},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":839},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":87741,"byte_end":87745,"line_start":536,"line_end":536,"column_start":6,"column_end":10},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":88392,"byte_end":88398,"line_start":555,"line_end":555,"column_start":21,"column_end":27},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2468},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":88476,"byte_end":88485,"line_start":560,"line_end":560,"column_start":21,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2523},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ed25519.rs","byte_start":88595,"byte_end":88599,"line_start":566,"line_end":566,"column_start":21,"column_end":25},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":839},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96183,"byte_end":96187,"line_start":71,"line_end":71,"column_start":16,"column_end":20},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96435,"byte_end":96441,"line_start":81,"line_end":81,"column_start":26,"column_end":32},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2598},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96514,"byte_end":96520,"line_start":87,"line_end":87,"column_start":22,"column_end":28},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2598},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96593,"byte_end":96599,"line_start":93,"line_end":93,"column_start":22,"column_end":28},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2598},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96678,"byte_end":96684,"line_start":99,"line_end":99,"column_start":16,"column_end":22},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2598},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96862,"byte_end":96866,"line_start":113,"line_end":113,"column_start":23,"column_end":27},"kind":{"Impl":{"id":225}},"from":{"krate":73,"index":1887},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":96969,"byte_end":96975,"line_start":120,"line_end":120,"column_start":28,"column_end":34},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2598},"to":{"krate":2,"index":8501}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":97143,"byte_end":97149,"line_start":128,"line_end":128,"column_start":42,"column_end":48},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2598},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":97400,"byte_end":97406,"line_start":142,"line_end":142,"column_start":34,"column_end":40},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2598},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":97508,"byte_end":97514,"line_start":148,"line_end":148,"column_start":30,"column_end":36},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2598},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":97635,"byte_end":97641,"line_start":155,"line_end":155,"column_start":28,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2598},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":97783,"byte_end":97789,"line_start":161,"line_end":161,"column_start":29,"column_end":35},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2598},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98166,"byte_end":98172,"line_start":175,"line_end":175,"column_start":20,"column_end":26},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2598},"to":{"krate":25,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98373,"byte_end":98379,"line_start":182,"line_end":182,"column_start":32,"column_end":38},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2598},"to":{"krate":25,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":98867,"byte_end":98876,"line_start":195,"line_end":195,"column_start":42,"column_end":51},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":99140,"byte_end":99149,"line_start":210,"line_end":210,"column_start":20,"column_end":29},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2653},"to":{"krate":25,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":99348,"byte_end":99357,"line_start":217,"line_end":217,"column_start":32,"column_end":41},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2653},"to":{"krate":25,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":99706,"byte_end":99715,"line_start":226,"line_end":226,"column_start":16,"column_end":25},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":99842,"byte_end":99851,"line_start":234,"line_end":234,"column_start":18,"column_end":27},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":99926,"byte_end":99935,"line_start":240,"line_end":240,"column_start":20,"column_end":29},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100014,"byte_end":100023,"line_start":246,"line_end":246,"column_start":13,"column_end":22},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100138,"byte_end":100142,"line_start":254,"line_end":254,"column_start":26,"column_end":30},"kind":{"Impl":{"id":246}},"from":{"krate":73,"index":2031},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100227,"byte_end":100236,"line_start":260,"line_end":260,"column_start":26,"column_end":35},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100309,"byte_end":100318,"line_start":266,"line_end":266,"column_start":22,"column_end":31},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100391,"byte_end":100400,"line_start":272,"line_end":272,"column_start":22,"column_end":31},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100533,"byte_end":100542,"line_start":279,"line_end":279,"column_start":38,"column_end":47},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":100655,"byte_end":100664,"line_start":285,"line_end":285,"column_start":29,"column_end":38},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101009,"byte_end":101018,"line_start":298,"line_end":298,"column_start":29,"column_end":38},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":101496,"byte_end":101505,"line_start":315,"line_end":315,"column_start":6,"column_end":15},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":102545,"byte_end":102551,"line_start":345,"line_end":345,"column_start":17,"column_end":23},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2598},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103053,"byte_end":103059,"line_start":362,"line_end":362,"column_start":6,"column_end":12},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":103701,"byte_end":103707,"line_start":385,"line_end":385,"column_start":22,"column_end":28},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2598},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104179,"byte_end":104199,"line_start":401,"line_end":401,"column_start":23,"column_end":43},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104279,"byte_end":104299,"line_start":407,"line_end":407,"column_start":24,"column_end":44},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104446,"byte_end":104450,"line_start":414,"line_end":414,"column_start":30,"column_end":34},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104601,"byte_end":104605,"line_start":421,"line_end":421,"column_start":26,"column_end":30},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104743,"byte_end":104747,"line_start":428,"line_end":428,"column_start":36,"column_end":40},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":104873,"byte_end":104880,"line_start":435,"line_end":435,"column_start":33,"column_end":40},"kind":{"Impl":{"id":262}},"from":{"krate":125,"index":914},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":105006,"byte_end":105010,"line_start":442,"line_end":442,"column_start":37,"column_end":41},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":105501,"byte_end":105505,"line_start":459,"line_end":459,"column_start":20,"column_end":24},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":1042},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":109140,"byte_end":109144,"line_start":576,"line_end":576,"column_start":6,"column_end":10},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":1042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110299,"byte_end":110305,"line_start":604,"line_end":604,"column_start":21,"column_end":27},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2598},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110383,"byte_end":110392,"line_start":609,"line_end":609,"column_start":21,"column_end":30},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2653},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/sr25519.rs","byte_start":110502,"byte_end":110506,"line_start":615,"line_end":615,"column_start":21,"column_end":25},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":1042},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121634,"byte_end":121640,"line_start":58,"line_end":58,"column_start":21,"column_end":27},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121745,"byte_end":121751,"line_start":64,"line_end":64,"column_start":14,"column_end":20},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121859,"byte_end":121865,"line_start":70,"line_end":70,"column_start":20,"column_end":26},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":121958,"byte_end":121964,"line_start":76,"line_end":76,"column_start":13,"column_end":19},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122246,"byte_end":122252,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":122878,"byte_end":122884,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2697},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123354,"byte_end":123374,"line_start":129,"line_end":129,"column_start":23,"column_end":43},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123454,"byte_end":123474,"line_start":135,"line_end":135,"column_start":24,"column_end":44},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123584,"byte_end":123590,"line_start":141,"line_end":141,"column_start":17,"column_end":23},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2697},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123612,"byte_end":123618,"line_start":143,"line_end":143,"column_start":18,"column_end":24},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123692,"byte_end":123698,"line_start":149,"line_end":149,"column_start":22,"column_end":28},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123771,"byte_end":123777,"line_start":155,"line_end":155,"column_start":22,"column_end":28},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":123882,"byte_end":123888,"line_start":161,"line_end":161,"column_start":42,"column_end":48},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":124106,"byte_end":124112,"line_start":175,"line_end":175,"column_start":21,"column_end":27},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":124195,"byte_end":124201,"line_start":181,"line_end":181,"column_start":34,"column_end":40},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2697},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":124315,"byte_end":124321,"line_start":188,"line_end":188,"column_start":28,"column_end":34},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":124463,"byte_end":124469,"line_start":194,"line_end":194,"column_start":29,"column_end":35},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":124847,"byte_end":124853,"line_start":208,"line_end":208,"column_start":20,"column_end":26},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2697},"to":{"krate":25,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":125054,"byte_end":125060,"line_start":215,"line_end":215,"column_start":32,"column_end":38},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2697},"to":{"krate":25,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":125337,"byte_end":125343,"line_start":223,"line_end":223,"column_start":29,"column_end":35},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":125616,"byte_end":125625,"line_start":233,"line_end":233,"column_start":42,"column_end":51},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":125889,"byte_end":125898,"line_start":248,"line_end":248,"column_start":20,"column_end":29},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2749},"to":{"krate":25,"index":1680}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126097,"byte_end":126106,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2749},"to":{"krate":25,"index":1192}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126455,"byte_end":126464,"line_start":264,"line_end":264,"column_start":16,"column_end":25},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126591,"byte_end":126600,"line_start":272,"line_end":272,"column_start":18,"column_end":27},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126675,"byte_end":126684,"line_start":278,"line_end":278,"column_start":20,"column_end":29},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126763,"byte_end":126772,"line_start":284,"line_end":284,"column_start":13,"column_end":22},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126887,"byte_end":126896,"line_start":292,"line_end":292,"column_start":26,"column_end":35},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":126969,"byte_end":126978,"line_start":298,"line_end":298,"column_start":22,"column_end":31},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127051,"byte_end":127060,"line_start":304,"line_end":304,"column_start":22,"column_end":31},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127152,"byte_end":127161,"line_start":310,"line_end":310,"column_start":29,"column_end":38},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127506,"byte_end":127515,"line_start":323,"line_end":323,"column_start":29,"column_end":38},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":127635,"byte_end":127644,"line_start":329,"line_end":329,"column_start":6,"column_end":15},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":128761,"byte_end":128770,"line_start":360,"line_end":360,"column_start":62,"column_end":71},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":130030,"byte_end":130034,"line_start":406,"line_end":406,"column_start":20,"column_end":24},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2779},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134072,"byte_end":134076,"line_start":517,"line_end":517,"column_start":6,"column_end":10},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134721,"byte_end":134727,"line_start":536,"line_end":536,"column_start":21,"column_end":27},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2697},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134803,"byte_end":134812,"line_start":541,"line_end":541,"column_start":21,"column_end":30},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2749},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/ecdsa.rs","byte_start":134918,"byte_end":134922,"line_start":547,"line_end":547,"column_start":21,"column_end":25},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2779},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hasher.rs","byte_start":145549,"byte_end":145561,"line_start":29,"line_end":29,"column_start":18,"column_end":30},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2784},"to":{"krate":151,"index":11}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/hasher.rs","byte_start":145970,"byte_end":145982,"line_start":49,"line_end":49,"column_start":18,"column_end":30},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":2788},"to":{"krate":151,"index":11}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":171907,"byte_end":171927,"line_start":30,"line_end":30,"column_start":6,"column_end":26},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":172516,"byte_end":172536,"line_start":48,"line_end":48,"column_start":26,"column_end":46},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2792},"to":{"krate":0,"index":1568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174291,"byte_end":174315,"line_start":109,"line_end":109,"column_start":18,"column_end":42},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2820},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":174370,"byte_end":174394,"line_start":115,"line_end":115,"column_start":6,"column_end":30},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":176250,"byte_end":176278,"line_start":173,"line_end":173,"column_start":23,"column_end":51},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":1474},"to":{"krate":2,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":176493,"byte_end":176521,"line_start":184,"line_end":184,"column_start":10,"column_end":38},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":1474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":177066,"byte_end":177098,"line_start":202,"line_end":202,"column_start":19,"column_end":51},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":177297,"byte_end":177329,"line_start":213,"line_end":213,"column_start":6,"column_end":38},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":177858,"byte_end":177887,"line_start":230,"line_end":230,"column_start":23,"column_end":52},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":1491},"to":{"krate":2,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/storage.rs","byte_start":178094,"byte_end":178123,"line_start":241,"line_end":241,"column_start":10,"column_end":39},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":1491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":181592,"byte_end":181616,"line_start":72,"line_end":72,"column_start":6,"column_end":30},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":182280,"byte_end":182304,"line_start":92,"line_end":92,"column_start":26,"column_end":50},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2851},"to":{"krate":0,"index":1568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":183497,"byte_end":183510,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":2859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185103,"byte_end":185116,"line_start":183,"line_end":183,"column_start":15,"column_end":28},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":2859},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":185550,"byte_end":185565,"line_start":196,"line_end":196,"column_start":6,"column_end":21},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":2871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":186087,"byte_end":186102,"line_start":212,"line_end":212,"column_start":34,"column_end":49},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":2871},"to":{"krate":0,"index":1612}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":191069,"byte_end":191091,"line_start":404,"line_end":404,"column_start":6,"column_end":28},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":2884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/testing.rs","byte_start":191328,"byte_end":191350,"line_start":413,"line_end":413,"column_start":26,"column_end":48},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":2884},"to":{"krate":0,"index":1679}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147365,"byte_end":147370,"line_start":36,"line_end":36,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":1568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147373,"byte_end":147377,"line_start":36,"line_end":36,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":1568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":147380,"byte_end":147384,"line_start":36,"line_end":36,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":148984,"byte_end":148995,"line_start":77,"line_end":77,"column_start":23,"column_end":34},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":2889},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":150096,"byte_end":150105,"line_start":118,"line_end":118,"column_start":23,"column_end":32},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":151567,"byte_end":151584,"line_start":168,"line_end":168,"column_start":23,"column_end":40},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152564,"byte_end":152579,"line_start":197,"line_end":197,"column_start":6,"column_end":21},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":3131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":152999,"byte_end":153007,"line_start":212,"line_end":212,"column_start":6,"column_end":14},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":3218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":153263,"byte_end":153272,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":3169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":154655,"byte_end":154667,"line_start":277,"line_end":277,"column_start":6,"column_end":18},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":3303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155535,"byte_end":155547,"line_start":311,"line_end":311,"column_start":37,"column_end":49},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":3303},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":155736,"byte_end":155740,"line_start":318,"line_end":318,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":1612}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":162585,"byte_end":162588,"line_start":503,"line_end":503,"column_start":51,"column_end":54},"kind":{"Impl":{"id":398}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":1612}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":165037,"byte_end":165057,"line_start":591,"line_end":591,"column_start":9,"column_end":29},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":1649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":165565,"byte_end":165585,"line_start":610,"line_end":610,"column_start":42,"column_end":62},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":1649},"to":{"krate":0,"index":1612}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169134,"byte_end":169145,"line_start":715,"line_end":715,"column_start":6,"column_end":17},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":3318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/offchain/mod.rs","byte_start":169974,"byte_end":169992,"line_start":742,"line_end":742,"column_start":6,"column_end":24},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":3328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/changes_trie.rs","byte_start":200270,"byte_end":200294,"line_start":53,"line_end":53,"column_start":6,"column_end":30},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":3436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211276,"byte_end":211280,"line_start":55,"line_end":55,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":211283,"byte_end":211287,"line_start":55,"line_end":55,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216424,"byte_end":216429,"line_start":207,"line_end":207,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":1758}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216432,"byte_end":216436,"line_start":207,"line_end":207,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":1758}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216439,"byte_end":216443,"line_start":207,"line_end":207,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1758}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216446,"byte_end":216456,"line_start":207,"line_end":207,"column_start":47,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1793},"to":{"krate":0,"index":1758}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":216459,"byte_end":216464,"line_start":207,"line_end":207,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":1758}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217482,"byte_end":217500,"line_start":238,"line_end":238,"column_start":31,"column_end":49},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":1766},"to":{"krate":0,"index":1763}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":217741,"byte_end":217761,"line_start":247,"line_end":247,"column_start":27,"column_end":47},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":1774},"to":{"krate":0,"index":1763}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218410,"byte_end":218421,"line_start":269,"line_end":269,"column_start":24,"column_end":35},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":3572},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218507,"byte_end":218518,"line_start":275,"line_end":275,"column_start":10,"column_end":21},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":3572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":218790,"byte_end":218801,"line_start":288,"line_end":288,"column_start":31,"column_end":42},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":3572},"to":{"krate":0,"index":1763}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219081,"byte_end":219093,"line_start":298,"line_end":298,"column_start":28,"column_end":40},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":3580},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219606,"byte_end":219626,"line_start":314,"line_end":314,"column_start":6,"column_end":26},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":3584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219813,"byte_end":219817,"line_start":322,"line_end":322,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":1793}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":219820,"byte_end":219824,"line_start":322,"line_end":322,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1793}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220596,"byte_end":220609,"line_start":348,"line_end":348,"column_start":6,"column_end":19},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":3594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":220862,"byte_end":220877,"line_start":360,"line_end":360,"column_start":6,"column_end":21},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":3604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":221177,"byte_end":221181,"line_start":369,"line_end":369,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":3614}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":221184,"byte_end":221188,"line_start":369,"line_end":369,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":3614}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/traits.rs","byte_start":221617,"byte_end":221620,"line_start":380,"line_end":380,"column_start":21,"column_end":24},"kind":{"Impl":{"id":436}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":3614}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":223491,"byte_end":223499,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":3629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":224539,"byte_end":224547,"line_start":80,"line_end":80,"column_start":41,"column_end":49},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":3629},"to":{"krate":0,"index":1739}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232622,"byte_end":232634,"line_start":371,"line_end":371,"column_start":6,"column_end":18},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":3633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/testing.rs","byte_start":232906,"byte_end":232918,"line_start":380,"line_end":380,"column_start":36,"column_end":48},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":3633},"to":{"krate":0,"index":3614}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":3516,"byte_end":3532,"line_start":116,"line_end":116,"column_start":6,"column_end":22},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":1906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4309,"byte_end":4314,"line_start":139,"line_end":139,"column_start":24,"column_end":29},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4392,"byte_end":4397,"line_start":143,"line_end":143,"column_start":31,"column_end":36},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4469,"byte_end":4474,"line_start":147,"line_end":147,"column_start":16,"column_end":21},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4597,"byte_end":4602,"line_start":153,"line_end":153,"column_start":31,"column_end":36},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":8501}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":4884,"byte_end":4898,"line_start":165,"line_end":165,"column_start":6,"column_end":20},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":3740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5061,"byte_end":5075,"line_start":172,"line_end":172,"column_start":29,"column_end":43},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":3740},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5430,"byte_end":5442,"line_start":185,"line_end":185,"column_start":6,"column_end":18},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":3762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":5819,"byte_end":5834,"line_start":202,"line_end":202,"column_start":47,"column_end":62},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":1936},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":6032,"byte_end":6047,"line_start":209,"line_end":209,"column_start":24,"column_end":39},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":1936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":6551,"byte_end":6566,"line_start":228,"line_end":228,"column_start":50,"column_end":65},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":1936},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7222,"byte_end":7238,"line_start":247,"line_end":247,"column_start":24,"column_end":40},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":3835},"to":{"krate":21,"index":118}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7425,"byte_end":7441,"line_start":255,"line_end":255,"column_start":28,"column_end":44},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":3835},"to":{"krate":21,"index":701}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":7493,"byte_end":7509,"line_start":258,"line_end":258,"column_start":24,"column_end":40},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":3835},"to":{"krate":21,"index":130}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8145,"byte_end":8153,"line_start":287,"line_end":287,"column_start":20,"column_end":28},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":3839},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8480,"byte_end":8488,"line_start":299,"line_end":299,"column_start":27,"column_end":35},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":3839},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-core-2.0.1/src/lib.rs","byte_start":8718,"byte_end":8723,"line_start":312,"line_end":312,"column_start":30,"column_end":35},"kind":{"Impl":{"id":480}},"from":{"krate":55,"index":175},"to":{"krate":2,"index":1956}}]}