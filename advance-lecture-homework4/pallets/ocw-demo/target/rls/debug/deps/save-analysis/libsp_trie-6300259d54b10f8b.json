{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_trie","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=6300259d54b10f8b","-C","extra-filename=-6300259d54b10f8b","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps","--extern","hash_db=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libhash_db-17ba13a151e0a3ca.rmeta","--extern","memory_db=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libmemory_db-c80edf1005dde145.rmeta","--extern","codec=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libparity_scale_codec-c2a3c300da64cba4.rmeta","--extern","sp_core=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_core-717447d3c8b452e7.rmeta","--extern","sp_std=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_std-e8e779e008c5c2c6.rmeta","--extern","trie_db=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libtrie_db-84037ccb8f399874.rmeta","--extern","trie_root=/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libtrie_root-39caa9871aae690b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/assignment/lecture-demo/pallets/ocw-demo/target/rls/debug/deps/libsp_trie-6300259d54b10f8b.rmeta"},"prelude":{"crate_id":{"name":"sp_trie","disambiguator":[11252105861350862833,1708726736418102481]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","num":18,"id":{"name":"parity_scale_codec","disambiguator":[16439007312830197035,13769093477079864056]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[15916895702609288415,13390909414312069258]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","num":20,"id":{"name":"arrayvec","disambiguator":[9711399210076819589,6533224003713073282]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[7351640255773626293,2315590138104183949]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","num":22,"id":{"name":"serde","disambiguator":[18094986483354249175,15403000118412511765]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","num":23,"id":{"name":"serde_derive","disambiguator":[2422799003874411447,4301428410593763920]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":24,"id":{"name":"sp_std","disambiguator":[7356154292131214206,15539128417196248828]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","num":25,"id":{"name":"hash_db","disambiguator":[1694494872242499477,7973777796579231756]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","num":26,"id":{"name":"trie_db","disambiguator":[18271978803945158697,17262652499401197515]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","num":27,"id":{"name":"hashbrown","disambiguator":[5245551859052833817,6349580907210778731]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","num":28,"id":{"name":"ahash","disambiguator":[2391589251574575903,4260304121454177733]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","num":29,"id":{"name":"log","disambiguator":[7636163145545913312,4986669806278621293]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","num":30,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","num":31,"id":{"name":"rustc_hex","disambiguator":[10677294477045725496,7865879812543119472]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","num":32,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/trie_stream.rs","num":33,"id":{"name":"trie_root","disambiguator":[1580444581320396263,11318692011956243941]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":34,"id":{"name":"memory_db","disambiguator":[1774147319952519439,6218163937387775773]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":35,"id":{"name":"parity_util_mem","disambiguator":[3040824742387538142,13160465756699134223]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":36,"id":{"name":"primitive_types","disambiguator":[6962691650698255454,13234617421742094078]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":37,"id":{"name":"fixed_hash","disambiguator":[10245915055372472413,1069574987168551768]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":38,"id":{"name":"static_assertions","disambiguator":[3780011359165158122,3262507017755003872]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":39,"id":{"name":"byteorder","disambiguator":[14496735423178217807,13585885797689701047]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":40,"id":{"name":"rand","disambiguator":[7383846236653092870,5177629652404358757]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":41,"id":{"name":"rand_core","disambiguator":[7787386706198440185,12678578198977233203]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":42,"id":{"name":"getrandom","disambiguator":[12258613803940040387,911838537080231532]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":43,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":44,"id":{"name":"libc","disambiguator":[6571333170903906260,2103687221578517612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":45,"id":{"name":"rand_chacha","disambiguator":[4434170198255513034,5056478396886919284]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":46,"id":{"name":"ppv_lite86","disambiguator":[4955318928114684575,7768061473571892432]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":47,"id":{"name":"rand_pcg","disambiguator":[16660534335728405525,7074470424998610614]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":48,"id":{"name":"uint","disambiguator":[16896315795860882296,16425098083545408739]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":49,"id":{"name":"crunchy","disambiguator":[8074030940710953961,6579732958665489341]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":50,"id":{"name":"impl_serde","disambiguator":[6223019066819668752,3300984703168818873]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":51,"id":{"name":"impl_codec","disambiguator":[11443448416482552248,8414137674207687421]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":52,"id":{"name":"parity_util_mem_derive","disambiguator":[18323117741153977268,3575845138050348775]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":53,"id":{"name":"impl_trait_for_tuples","disambiguator":[13508714756144950212,10399417239549626737]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":54,"id":{"name":"parking_lot","disambiguator":[4673953683555930918,2566291569203134280]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":55,"id":{"name":"lock_api","disambiguator":[12216129644845520116,17168985521050561292]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":56,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":57,"id":{"name":"parking_lot_core","disambiguator":[9723357634030298779,6709165033563235635]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":58,"id":{"name":"hashbrown","disambiguator":[8514644902414888020,14821523315265927041]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","num":59,"id":{"name":"ahash","disambiguator":[11645240038511292298,1901198331339866248]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":60,"id":{"name":"sp_core","disambiguator":[11528989304794749901,4991667551486174003]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":61,"id":{"name":"sp_runtime_interface","disambiguator":[12255499159526350672,1465949469223168246]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":62,"id":{"name":"sp_wasm_interface","disambiguator":[1572342640069422977,5885890102663370953]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":63,"id":{"name":"wasmi","disambiguator":[14702682962039512728,8205603541115655459]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":64,"id":{"name":"memory_units","disambiguator":[2681920765984350785,12479645465886095865]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":65,"id":{"name":"parity_wasm","disambiguator":[3627318675752641491,16087573038623804516]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":66,"id":{"name":"wasmi_validation","disambiguator":[10122444132145811748,13686239439309676495]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":67,"id":{"name":"num_rational","disambiguator":[14874358685442605711,14454857550384661125]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":68,"id":{"name":"num_bigint","disambiguator":[10424519725353920175,15970225686228915190]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":69,"id":{"name":"num_integer","disambiguator":[7545622164281545846,2648898713402766561]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":70,"id":{"name":"num_traits","disambiguator":[215404550585587115,5285806180049352428]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":71,"id":{"name":"sp_tracing","disambiguator":[126940985002760439,9833769351350342315]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":72,"id":{"name":"tracing_core","disambiguator":[11099356479621910520,18239274797054692367]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":73,"id":{"name":"lazy_static","disambiguator":[16863586403248268720,14388819080293591203]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":74,"id":{"name":"tracing","disambiguator":[3149344748273194146,14186679869154291241]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":75,"id":{"name":"tracing_attributes","disambiguator":[7168521433842290992,2127477278266717051]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":76,"id":{"name":"pin_project_lite","disambiguator":[11050117765846224188,12097442257352640106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":77,"id":{"name":"tracing_subscriber","disambiguator":[9358978854053975941,10302906392016292032]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":78,"id":{"name":"regex","disambiguator":[14166398965641423822,8934033390557199130]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":79,"id":{"name":"aho_corasick","disambiguator":[15910827016742496248,14514165624868714725]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":80,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":81,"id":{"name":"regex_syntax","disambiguator":[10387838999179421385,14884883596696298333]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":82,"id":{"name":"thread_local","disambiguator":[972737615355812521,3494330021733074280]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":83,"id":{"name":"matchers","disambiguator":[16148120748263327968,10793795200785214139]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":84,"id":{"name":"regex_automata","disambiguator":[6713063222348330078,15962450321991702012]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":85,"id":{"name":"ansi_term","disambiguator":[18134670208497847193,6469936381989789516]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":86,"id":{"name":"tracing_log","disambiguator":[12555983769818244310,6947546561298633655]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":87,"id":{"name":"serde_json","disambiguator":[13564730519325168607,8931654559015479844]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":88,"id":{"name":"itoa","disambiguator":[708245801620839046,10644891861074126777]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":89,"id":{"name":"ryu","disambiguator":[2595139073293063990,3633285781182786758]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":90,"id":{"name":"tracing_serde","disambiguator":[11704797471514300989,6477851010748340264]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":91,"id":{"name":"sharded_slab","disambiguator":[1434945501934548753,1609764728048645911]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":92,"id":{"name":"chrono","disambiguator":[1398100316059925436,10467824243359959529]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":93,"id":{"name":"time","disambiguator":[8823501580382950712,2504982711049837973]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":94,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[13822519134176450310,2862860596345121761]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":95,"id":{"name":"sp_externalities","disambiguator":[18150108195161110747,13250564693672382873]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":96,"id":{"name":"sp_storage","disambiguator":[12878955236357233593,16822974782930621063]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":97,"id":{"name":"sp_debug_derive","disambiguator":[11752057424767612336,6988741196861483299]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":98,"id":{"name":"ref_cast","disambiguator":[17238424032127906489,14681179534522775997]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":99,"id":{"name":"ref_cast_impl","disambiguator":[4857299677253861727,8902270623010207562]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":100,"id":{"name":"environmental","disambiguator":[17937490940284361027,13093274495722560157]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":101,"id":{"name":"blake2_rfc","disambiguator":[16318291045264156809,15238637185383600405]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":102,"id":{"name":"arrayvec","disambiguator":[13122490319398419543,2245831403817998155]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":103,"id":{"name":"nodrop","disambiguator":[15847319047609925228,7892947817709334700]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":104,"id":{"name":"constant_time_eq","disambiguator":[4123012020743147552,17233470839404695501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":105,"id":{"name":"sha2","disambiguator":[2453755181374717418,14347587692546718153]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":106,"id":{"name":"block_buffer","disambiguator":[16942864271414254883,5806726910624965455]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":107,"id":{"name":"block_padding","disambiguator":[6536457226507187524,13096456614147870598]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":108,"id":{"name":"byte_tools","disambiguator":[4563776192090798664,13975107662144777646]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":109,"id":{"name":"generic_array","disambiguator":[10217328049382864786,4581712530308178966]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":110,"id":{"name":"typenum","disambiguator":[2877625186163250866,4188862493781366168]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":111,"id":{"name":"fake_simd","disambiguator":[8529024942259881634,1036883736573479363]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":112,"id":{"name":"opaque_debug","disambiguator":[14296233586290889095,7185983566499738172]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":113,"id":{"name":"digest","disambiguator":[10339741361097660047,3253664700456863542]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":114,"id":{"name":"tiny_keccak","disambiguator":[8951611112105442366,1965224039660394079]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":115,"id":{"name":"twox_hash","disambiguator":[7304964477320420634,14353450951517215289]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":116,"id":{"name":"base58","disambiguator":[1021050924381740148,14694021983045483675]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":117,"id":{"name":"zeroize","disambiguator":[12293724131559688162,14607591128595310952]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":118,"id":{"name":"zeroize_derive","disambiguator":[2502408763374724958,13277304647653553031]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":119,"id":{"name":"secrecy","disambiguator":[17095926779506074658,7537668124013333220]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":120,"id":{"name":"ed25519_dalek","disambiguator":[15558391115965967113,3378155016804440964]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":121,"id":{"name":"ed25519","disambiguator":[17902604484033039668,17597880322881036383]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":122,"id":{"name":"signature","disambiguator":[11156352833949250189,12745597200273491384]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":123,"id":{"name":"curve25519_dalek","disambiguator":[2809248406966777197,8813816561018099626]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":124,"id":{"name":"digest","disambiguator":[7153347457544459114,4850652739674458903]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":125,"id":{"name":"generic_array","disambiguator":[785913366860281496,3566111910551851268]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":126,"id":{"name":"subtle","disambiguator":[17342818449220861691,9110388592586064331]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":127,"id":{"name":"sha2","disambiguator":[1377922229528131517,491842461206503580]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":128,"id":{"name":"block_buffer","disambiguator":[5863490318768043264,9384554601350983024]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":129,"id":{"name":"opaque_debug","disambiguator":[5955724391880543345,12225655711726523850]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":130,"id":{"name":"cpuid_bool","disambiguator":[3944863459372053080,10012978824416111698]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":131,"id":{"name":"substrate_bip39","disambiguator":[17869869569785452858,17634889153902495303]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":132,"id":{"name":"hmac","disambiguator":[13299399138808770209,8486335613303949460]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":133,"id":{"name":"crypto_mac","disambiguator":[5021103083656845048,9272942338553678022]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":134,"id":{"name":"subtle","disambiguator":[2461963045928777698,9783036260425898804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":135,"id":{"name":"pbkdf2","disambiguator":[1585251910033992458,4658055053388768448]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":136,"id":{"name":"schnorrkel","disambiguator":[16756806575561678970,14458639493351552668]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":137,"id":{"name":"arrayref","disambiguator":[12864533597306545026,8294063698849415262]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":138,"id":{"name":"curve25519_dalek","disambiguator":[6977723647751213875,9340163827551043317]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":139,"id":{"name":"merlin","disambiguator":[9377376087280658574,8799116673561925753]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":140,"id":{"name":"keccak","disambiguator":[7922441978553466502,10628234470639316489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":141,"id":{"name":"bip39","disambiguator":[1314823592052820078,5424826910968609762]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":142,"id":{"name":"failure","disambiguator":[14582756781862167549,11010751447158768529]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":143,"id":{"name":"failure_derive","disambiguator":[16915148327015633678,6325708317200431250]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":144,"id":{"name":"backtrace","disambiguator":[9482193228311631792,18299589283485015896]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":145,"id":{"name":"rustc_demangle","disambiguator":[4050923033623787977,6585868120045361612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":146,"id":{"name":"addr2line","disambiguator":[3660529096934478798,18165035533582110625]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":147,"id":{"name":"gimli","disambiguator":[467126543121056434,10447895090847301584]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":148,"id":{"name":"object","disambiguator":[12217760478832808573,5860930654909093820]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":149,"id":{"name":"miniz_oxide","disambiguator":[17514238117289429065,16538556448136967903]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":150,"id":{"name":"adler","disambiguator":[10300648466069169448,3652155315817441043]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":151,"id":{"name":"rustc_hash","disambiguator":[2899680881299965521,3351650253772854689]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":152,"id":{"name":"once_cell","disambiguator":[14043164444755290385,2267165041750352920]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":153,"id":{"name":"parking_lot","disambiguator":[13413556939081280175,6595608378640516759]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":154,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":155,"id":{"name":"lock_api","disambiguator":[1370039747192521928,13370481355962836312]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":156,"id":{"name":"parking_lot_core","disambiguator":[6910326554005380636,13334944336695677100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":157,"id":{"name":"unicode_normalization","disambiguator":[5195362221549747439,14521615614827495836]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":158,"id":{"name":"tinyvec","disambiguator":[14392653114268736918,7149426386502746538]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":159,"id":{"name":"tinyvec_macros","disambiguator":[12069190721701906036,1989476166457901195]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":160,"id":{"name":"secp256k1","disambiguator":[7408403086072926232,10619138547561338344]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":161,"id":{"name":"hmac_drbg","disambiguator":[2354928866440715200,11965278983472350123]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":162,"id":{"name":"hash256_std_hasher","disambiguator":[6334138255241792746,1846295599312392070]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":163,"id":{"name":"derive_more","disambiguator":[2698756104843969994,14444477136067550206]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":164,"id":{"name":"dyn_clonable","disambiguator":[8242438631393957323,14003146638030063325]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":165,"id":{"name":"dyn_clone","disambiguator":[4691791614177411806,10864154608713969261]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":166,"id":{"name":"dyn_clonable_impl","disambiguator":[4615130658418671392,6958782800412037695]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":167,"id":{"name":"hex","disambiguator":[1554532179233287652,7706981720287221831]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":168,"id":{"name":"futures","disambiguator":[7191882713553373375,5784363091584244339]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":169,"id":{"name":"futures_core","disambiguator":[18128997065636809979,13049398925650811592]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":170,"id":{"name":"futures_util","disambiguator":[6826120639398116430,15849646236374289672]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":171,"id":{"name":"pin_utils","disambiguator":[14006933666536538846,10325894616585527374]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":172,"id":{"name":"proc_macro_hack","disambiguator":[16105205298844134494,461428951662562663]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":173,"id":{"name":"futures_task","disambiguator":[17591182617236407828,908714568475142235]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":174,"id":{"name":"futures_sink","disambiguator":[18304585830995575034,16327236895633893015]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":175,"id":{"name":"futures_channel","disambiguator":[6517228745129513001,1111405895964483599]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":176,"id":{"name":"slab","disambiguator":[7754159738850082191,972067075306833933]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":177,"id":{"name":"futures_io","disambiguator":[8909187937396878977,2922841661346725167]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":178,"id":{"name":"futures_macro","disambiguator":[7362818316734880593,477739355724548135]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":179,"id":{"name":"futures_executor","disambiguator":[2718974542857099553,14805374385779778428]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","num":180,"id":{"name":"num_cpus","disambiguator":[17237370829952825392,8933627738761765040]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":714,"byte_end":27457,"line_start":17,"line_end":885,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":26,"index":1530},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1119,"byte_end":1130,"line_start":30,"line_end":30,"column_start":25,"column_end":36},"alias_span":null,"name":"VerifyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":396},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1183,"byte_end":1188,"line_start":32,"line_end":32,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1268,"byte_end":1278,"line_start":34,"line_end":34,"column_start":22,"column_end":32},"alias_span":null,"name":"TrieStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":435},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1356,"byte_end":1365,"line_start":36,"line_end":36,"column_start":21,"column_end":30},"alias_span":null,"name":"NodeCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":445},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1390,"byte_end":1402,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"alias_span":null,"name":"StorageProof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1286},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1473,"byte_end":1477,"line_start":40,"line_end":40,"column_start":2,"column_end":6},"alias_span":null,"name":"Trie","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1302},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1479,"byte_end":1486,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"alias_span":null,"name":"TrieMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1244},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1488,"byte_end":1495,"line_start":40,"line_end":40,"column_start":17,"column_end":24},"alias_span":null,"name":"DBValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1652},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1497,"byte_end":1505,"line_start":40,"line_end":40,"column_start":26,"column_end":34},"alias_span":null,"name":"Recorder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1377},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1507,"byte_end":1513,"line_start":40,"line_end":40,"column_start":36,"column_end":42},"alias_span":null,"name":"CError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1260},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1515,"byte_end":1520,"line_start":40,"line_end":40,"column_start":44,"column_end":49},"alias_span":null,"name":"Query","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1351},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1522,"byte_end":1532,"line_start":40,"line_end":40,"column_start":51,"column_end":61},"alias_span":null,"name":"TrieLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1356},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1534,"byte_end":1551,"line_start":40,"line_end":40,"column_start":63,"column_end":80},"alias_span":null,"name":"TrieConfiguration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1078},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1553,"byte_end":1563,"line_start":40,"line_end":40,"column_start":82,"column_end":92},"alias_span":null,"name":"nibble_ops","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":315},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1565,"byte_end":1579,"line_start":40,"line_end":40,"column_start":94,"column_end":108},"alias_span":null,"name":"TrieDBIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":95},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1654,"byte_end":1665,"line_start":43,"line_end":43,"column_start":20,"column_end":31},"alias_span":null,"name":"KeyFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":129},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1686,"byte_end":1698,"line_start":44,"line_end":44,"column_start":20,"column_end":32},"alias_span":null,"name":"prefixed_key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":40},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1767,"byte_end":1773,"line_start":46,"line_end":46,"column_start":19,"column_end":25},"alias_span":null,"name":"HashDBT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":10},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1786,"byte_end":1798,"line_start":46,"line_end":46,"column_start":38,"column_end":50},"alias_span":null,"name":"EMPTY_PREFIX","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":714,"byte_end":27457,"line_start":17,"line_end":885,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":12},{"krate":0,"index":41},{"krate":0,"index":115},{"krate":0,"index":143},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":572},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":479},{"krate":0,"index":483},{"krate":0,"index":210},{"krate":0,"index":216},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":292},{"krate":0,"index":297},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":310},{"krate":0,"index":318},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":330},{"krate":0,"index":336},{"krate":0,"index":344},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":358},{"krate":0,"index":363},{"krate":0,"index":370},{"krate":0,"index":381},{"krate":0,"index":390}],"decl_id":null,"docs":" Utility functions to interact with Substrate's Base-16 Modified Merkle Patricia tree (\"trie\").\n","sig":null,"attributes":[{"value":"/ Utility functions to interact with Substrate's Base-16 Modified Merkle Patricia tree (\"trie\").","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":714,"byte_end":812,"line_start":17,"line_end":17,"column_start":1,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":397},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":28018,"byte_end":28027,"line_start":18,"line_end":18,"column_start":2,"column_end":11},"name":"BadFormat","qualname":"::error::Error::BadFormat","value":"Error::BadFormat","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Bad format.\n","sig":null,"attributes":[{"value":"/ Bad format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":28001,"byte_end":28016,"line_start":17,"line_end":17,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":399},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":28051,"byte_end":28057,"line_start":20,"line_end":20,"column_start":2,"column_end":8},"name":"Decode","qualname":"::error::Error::Decode","value":"Error::Decode(codec::Error)","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Decoding error.\n","sig":null,"attributes":[{"value":"/ Decoding error.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":28030,"byte_end":28049,"line_start":19,"line_end":19,"column_start":2,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":396},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":27992,"byte_end":27997,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n\n    /// Bad format.\n    BadFormat,\n\n    /// Decoding error.\n    Decode(codec::Error),\n}","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":399}],"decl_id":null,"docs":" Error for trie node decoding.\n","sig":null,"attributes":[{"value":"/ Error for trie node decoding.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":27949,"byte_end":27982,"line_start":15,"line_end":15,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","byte_start":34958,"byte_end":34967,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"NodeCodec","qualname":"::node_codec::NodeCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" Concrete implementation of a `NodeCodec` with Parity Codec encoding, generic over the `Hasher`\n","sig":null,"attributes":[{"value":"/ Concrete implementation of a `NodeCodec` with Parity Codec encoding, generic over the `Hasher`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","byte_start":34822,"byte_end":34920,"line_start":85,"line_end":85,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":445},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":42996,"byte_end":43008,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"name":"StorageProof","qualname":"::storage_proof::StorageProof","value":"StorageProof {  }","parent":null,"children":[{"krate":0,"index":446}],"decl_id":null,"docs":" A proof that some set of key-value pairs are included in the storage trie. The proof contains\n the storage values so that the partial storage backend can be reconstructed by a verifier that\n does not already have access to the key-value pairs.","sig":null,"attributes":[{"value":"/ A proof that some set of key-value pairs are included in the storage trie. The proof contains","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":42417,"byte_end":42514,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ the storage values so that the partial storage backend can be reconstructed by a verifier that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":42515,"byte_end":42613,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ does not already have access to the key-value pairs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":42614,"byte_end":42670,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":42671,"byte_end":42674,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The proof consists of the set of serialized nodes in the storage trie accessed when looking up","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":42675,"byte_end":42773,"line_start":25,"line_end":25,"column_start":1,"column_end":99}},{"value":"/ the keys covered by the proof. Verifying the proof requires constructing the partial trie from","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":42774,"byte_end":42872,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ the serialized nodes and performing the key lookups.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":42873,"byte_end":42929,"line_start":27,"line_end":27,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43159,"byte_end":43162,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"name":"new","qualname":"<StorageProof>::new","value":"pub fn new(Vec<Vec<u8>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a storage proof from a subset of encoded trie nodes in a storage backend.\n","sig":null,"attributes":[{"value":"/ Constructs a storage proof from a subset of encoded trie nodes in a storage backend.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43062,"byte_end":43150,"line_start":34,"line_end":34,"column_start":2,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43410,"byte_end":43415,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"name":"empty","qualname":"<StorageProof>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new empty proof.","sig":null,"attributes":[{"value":"/ Returns a new empty proof.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43234,"byte_end":43264,"line_start":39,"line_end":39,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43266,"byte_end":43269,"line_start":40,"line_end":40,"column_start":2,"column_end":5}},{"value":"/ An empty proof is capable of only proving trivial statements (ie. that an empty set of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43271,"byte_end":43361,"line_start":41,"line_end":41,"column_start":2,"column_end":92}},{"value":"/ key-value pairs exist in storage).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43363,"byte_end":43401,"line_start":42,"line_end":42,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43533,"byte_end":43541,"line_start":50,"line_end":50,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<StorageProof>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is an empty proof.\n","sig":null,"attributes":[{"value":"/ Returns whether this is an empty proof.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43481,"byte_end":43524,"line_start":49,"line_end":49,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43743,"byte_end":43753,"line_start":56,"line_end":56,"column_start":9,"column_end":19},"name":"iter_nodes","qualname":"<StorageProof>::iter_nodes","value":"pub fn iter_nodes(Self) -> StorageProofNodeIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over trie nodes constructed from the proof. The nodes are not guaranteed\n to be traversed in any particular order.\n","sig":null,"attributes":[{"value":"/ Create an iterator over trie nodes constructed from the proof. The nodes are not guaranteed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43593,"byte_end":43688,"line_start":54,"line_end":54,"column_start":2,"column_end":97}},{"value":"/ to be traversed in any particular order.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43690,"byte_end":43734,"line_start":55,"line_end":55,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43879,"byte_end":43893,"line_start":61,"line_end":61,"column_start":9,"column_end":23},"name":"into_memory_db","qualname":"<StorageProof>::into_memory_db","value":"pub fn into_memory_db<H: Hasher>(Self) -> crate::MemoryDB<H>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `MemoryDB` from `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a `MemoryDB` from `Self`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43833,"byte_end":43870,"line_start":60,"line_end":60,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":44204,"byte_end":44209,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"name":"merge","qualname":"<StorageProof>::merge","value":"pub fn merge<I>(I) -> Self where I: IntoIterator<Item = Self>","parent":null,"children":[],"decl_id":null,"docs":" Merges multiple storage proofs covering potentially different sets of keys into one proof\n covering all keys. The merged proof output may be smaller than the aggregate size of the input\n proofs due to deduplication of trie nodes.\n","sig":null,"attributes":[{"value":"/ Merges multiple storage proofs covering potentially different sets of keys into one proof","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43954,"byte_end":44047,"line_start":65,"line_end":65,"column_start":2,"column_end":95}},{"value":"/ covering all keys. The merged proof output may be smaller than the aggregate size of the input","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":44049,"byte_end":44147,"line_start":66,"line_end":66,"column_start":2,"column_end":100}},{"value":"/ proofs due to deduplication of trie nodes.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":44149,"byte_end":44195,"line_start":67,"line_end":67,"column_start":2,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":44618,"byte_end":44642,"line_start":81,"line_end":81,"column_start":12,"column_end":36},"name":"StorageProofNodeIterator","qualname":"::storage_proof::StorageProofNodeIterator","value":"StorageProofNodeIterator {  }","parent":null,"children":[{"krate":0,"index":134}],"decl_id":null,"docs":" An iterator over trie nodes constructed from a storage proof. The nodes are not guaranteed to\n be traversed in any particular order.\n","sig":null,"attributes":[{"value":"/ An iterator over trie nodes constructed from a storage proof. The nodes are not guaranteed to","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":44467,"byte_end":44564,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"/ be traversed in any particular order.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":44565,"byte_end":44606,"line_start":80,"line_end":80,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":473},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/trie_stream.rs","byte_start":46342,"byte_end":46352,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"TrieStream","qualname":"::trie_stream::TrieStream","value":"TrieStream {  }","parent":null,"children":[{"krate":0,"index":474}],"decl_id":null,"docs":" Codec-flavored TrieStream.\n","sig":null,"attributes":[{"value":"/ Codec-flavored TrieStream.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/trie_stream.rs","byte_start":46300,"byte_end":46330,"line_start":31,"line_end":31,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/trie_stream.rs","byte_start":46450,"byte_end":46456,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"as_raw","qualname":"<TrieStream>::as_raw","value":"pub fn as_raw(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1858,"byte_end":1864,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"Layout","qualname":"::Layout","value":"","parent":null,"children":[],"decl_id":null,"docs":" substrate trie layout\n","sig":null,"attributes":[{"value":"/ substrate trie layout","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1821,"byte_end":1846,"line_start":49,"line_end":49,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":228},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":2906,"byte_end":2915,"line_start":87,"line_end":87,"column_start":10,"column_end":19},"name":"TrieError","qualname":"::TrieError","value":"trie_db::TrieError<TrieHash<L>, CError<L>>","parent":null,"children":[],"decl_id":null,"docs":" TrieDB error over `TrieConfiguration` trait.\n","sig":null,"attributes":[{"value":"/ TrieDB error over `TrieConfiguration` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":2848,"byte_end":2896,"line_start":86,"line_end":86,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3044,"byte_end":3052,"line_start":89,"line_end":89,"column_start":11,"column_end":19},"name":"AsHashDB","qualname":"::AsHashDB","value":"AsHashDB<H: Hasher>: hash_db::AsHashDB<H, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":2965,"byte_end":3033,"line_start":88,"line_end":88,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":235},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3265,"byte_end":3271,"line_start":92,"line_end":92,"column_start":10,"column_end":16},"name":"HashDB","qualname":"::HashDB","value":"hash_db::HashDB<H, trie_db::DBValue> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3187,"byte_end":3255,"line_start":91,"line_end":91,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":238},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3515,"byte_end":3531,"line_start":96,"line_end":96,"column_start":10,"column_end":26},"name":"PrefixedMemoryDB","qualname":"::PrefixedMemoryDB","value":"memory_db::MemoryDB<H, memory_db::PrefixedKey<H>, trie_db::DBValue,\n                    MemTracker>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n This uses a `KeyFunction` for prefixing keys internally (avoiding\n key conflict for non random keys).\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3328,"byte_end":3396,"line_start":93,"line_end":93,"column_start":1,"column_end":69}},{"value":"/ This uses a `KeyFunction` for prefixing keys internally (avoiding","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3397,"byte_end":3466,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/ key conflict for non random keys).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3467,"byte_end":3505,"line_start":95,"line_end":95,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":240},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3824,"byte_end":3832,"line_start":102,"line_end":102,"column_start":10,"column_end":18},"name":"MemoryDB","qualname":"::MemoryDB","value":"memory_db::MemoryDB<H, memory_db::HashKey<H>, trie_db::DBValue, MemTracker>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n This uses a noops `KeyFunction` (key addressing must be hashed or using\n an encoding scheme that avoid key conflict).\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3621,"byte_end":3689,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ This uses a noops `KeyFunction` (key addressing must be hashed or using","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3690,"byte_end":3765,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ an encoding scheme that avoid key conflict).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3766,"byte_end":3814,"line_start":101,"line_end":101,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":242},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3997,"byte_end":4012,"line_start":106,"line_end":106,"column_start":10,"column_end":25},"name":"GenericMemoryDB","qualname":"::GenericMemoryDB","value":"memory_db::MemoryDB<H, KF, trie_db::DBValue, MemTracker>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3919,"byte_end":3987,"line_start":105,"line_end":105,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":245},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4168,"byte_end":4174,"line_start":111,"line_end":111,"column_start":10,"column_end":16},"name":"TrieDB","qualname":"::TrieDB","value":"trie_db::TrieDB","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database read-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database read-access interface for the a given hasher.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4084,"byte_end":4158,"line_start":110,"line_end":110,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":248},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4293,"byte_end":4302,"line_start":113,"line_end":113,"column_start":10,"column_end":19},"name":"TrieDBMut","qualname":"::TrieDBMut","value":"trie_db::TrieDBMut","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database write-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database write-access interface for the a given hasher.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4208,"byte_end":4283,"line_start":112,"line_end":112,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":251},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4406,"byte_end":4412,"line_start":115,"line_end":115,"column_start":10,"column_end":16},"name":"Lookup","qualname":"::Lookup","value":"trie_db::Lookup","parent":null,"children":[],"decl_id":null,"docs":" Querying interface, as in `trie_db` but less generic.\n","sig":null,"attributes":[{"value":"/ Querying interface, as in `trie_db` but less generic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4339,"byte_end":4396,"line_start":114,"line_end":114,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":255},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4494,"byte_end":4502,"line_start":117,"line_end":117,"column_start":10,"column_end":18},"name":"TrieHash","qualname":"::TrieHash","value":"<<L as TrieLayout>::Hash as Hasher>::Out","parent":null,"children":[],"decl_id":null,"docs":" Hash type for a trie layout.\n","sig":null,"attributes":[{"value":"/ Hash type for a trie layout.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4452,"byte_end":4484,"line_start":116,"line_end":116,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":257},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4672,"byte_end":4682,"line_start":121,"line_end":121,"column_start":9,"column_end":19},"name":"trie_types","qualname":"::trie_types","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":270}],"decl_id":null,"docs":" This module is for non generic definition of trie type.\n Only the `Hasher` trait is generic in this case.\n","sig":null,"attributes":[{"value":"/ This module is for non generic definition of trie type.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4551,"byte_end":4610,"line_start":119,"line_end":119,"column_start":1,"column_end":60}},{"value":"/ Only the `Hasher` trait is generic in this case.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4611,"byte_end":4663,"line_start":120,"line_end":120,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":258},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4695,"byte_end":4701,"line_start":122,"line_end":122,"column_start":11,"column_end":17},"name":"Layout","qualname":"::trie_types::Layout","value":"super::Layout<H>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":260},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4811,"byte_end":4817,"line_start":124,"line_end":124,"column_start":11,"column_end":17},"name":"TrieDB","qualname":"::trie_types::TrieDB","value":"super::TrieDB","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database read-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database read-access interface for the a given hasher.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4726,"byte_end":4800,"line_start":123,"line_end":123,"column_start":2,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":263},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4944,"byte_end":4953,"line_start":126,"line_end":126,"column_start":11,"column_end":20},"name":"TrieDBMut","qualname":"::trie_types::TrieDBMut","value":"super::TrieDBMut","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database write-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database write-access interface for the a given hasher.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4858,"byte_end":4933,"line_start":125,"line_end":125,"column_start":2,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":266},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5065,"byte_end":5071,"line_start":128,"line_end":128,"column_start":11,"column_end":17},"name":"Lookup","qualname":"::trie_types::Lookup","value":"trie_db::Lookup","parent":null,"children":[],"decl_id":null,"docs":" Querying interface, as in `trie_db` but less generic.\n","sig":null,"attributes":[{"value":"/ Querying interface, as in `trie_db` but less generic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":4997,"byte_end":5054,"line_start":127,"line_end":127,"column_start":2,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":270},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5195,"byte_end":5204,"line_start":130,"line_end":130,"column_start":11,"column_end":20},"name":"TrieError","qualname":"::trie_types::TrieError","value":"trie_db::TrieError<H, super::Error>","parent":null,"children":[],"decl_id":null,"docs":" As in `trie_db`, but less generic, error type for the crate.\n","sig":null,"attributes":[{"value":"/ As in `trie_db`, but less generic, error type for the crate.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5120,"byte_end":5184,"line_start":129,"line_end":129,"column_start":2,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":272},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5646,"byte_end":5665,"line_start":141,"line_end":141,"column_start":8,"column_end":27},"name":"generate_trie_proof","qualname":"::generate_trie_proof","value":"pub fn generate_trie_proof<'a, L: TrieConfiguration, I, K,\n                           DB>(&DB, TrieHash<L>, I)\n-> Result<Vec<Vec<u8>>, Box<TrieError<L>>> where I: IntoIterator<Item =\n&'a K>, K: 'a + AsRef<[u8]>, DB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Create a proof for a subset of keys in a trie.","sig":null,"attributes":[{"value":"/ Create a proof for a subset of keys in a trie.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5250,"byte_end":5300,"line_start":133,"line_end":133,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5301,"byte_end":5304,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The `keys` may contain any set of keys regardless of each one of them is included","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5305,"byte_end":5390,"line_start":135,"line_end":135,"column_start":1,"column_end":86}},{"value":"/ in the `db`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5391,"byte_end":5407,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5408,"byte_end":5411,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ For a key `K` that is included in the `db` a proof of inclusion is generated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5412,"byte_end":5493,"line_start":138,"line_end":138,"column_start":1,"column_end":82}},{"value":"/ For a key `K` that is not included in the `db` a proof of non-inclusion is generated.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5494,"byte_end":5583,"line_start":139,"line_end":139,"column_start":1,"column_end":90}},{"value":"/ These can be later checked in `verify_trie_proof`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5584,"byte_end":5638,"line_start":140,"line_end":140,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":6415,"byte_end":6432,"line_start":162,"line_end":162,"column_start":8,"column_end":25},"name":"verify_trie_proof","qualname":"::verify_trie_proof","value":"pub fn verify_trie_proof<'a, L: TrieConfiguration, I, K,\n                         V>(&TrieHash<L>, &[Vec<u8>], I)\n-> Result<(), VerifyError<TrieHash<L>, error::Error>> where\nI: IntoIterator<Item = &'a (K, Option<V>)>, K: 'a + AsRef<[u8]>, V: 'a +\nAsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Verify a set of key-value pairs against a trie root and a proof.","sig":null,"attributes":[{"value":"/ Verify a set of key-value pairs against a trie root and a proof.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":5974,"byte_end":6042,"line_start":154,"line_end":154,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":6043,"byte_end":6046,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Checks a set of keys with optional values for inclusion in the proof that was generated by","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":6047,"byte_end":6141,"line_start":156,"line_end":156,"column_start":1,"column_end":95}},{"value":"/ `generate_trie_proof`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":6142,"byte_end":6168,"line_start":157,"line_end":157,"column_start":1,"column_end":27}},{"value":"/ If the value in the pair is supplied (`(key, Some(value))`), this key-value pair will be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":6169,"byte_end":6261,"line_start":158,"line_end":158,"column_start":1,"column_end":93}},{"value":"/ checked for inclusion in the proof.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":6262,"byte_end":6301,"line_start":159,"line_end":159,"column_start":1,"column_end":40}},{"value":"/ If the value is omitted (`(key, None)`), this key will be checked for non-inclusion in the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":6302,"byte_end":6396,"line_start":160,"line_end":160,"column_start":1,"column_end":95}},{"value":"/ proof.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":6397,"byte_end":6407,"line_start":161,"line_end":161,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":284},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":6804,"byte_end":6819,"line_start":175,"line_end":175,"column_start":8,"column_end":23},"name":"delta_trie_root","qualname":"::delta_trie_root","value":"pub fn delta_trie_root<L: TrieConfiguration, I, A, B, DB,\n                       V>(&mut DB, TrieHash<L>, I)\n-> Result<TrieHash<L>, Box<TrieError<L>>> where I: IntoIterator<Item =\n(A, B)>, A: Borrow<[u8]>, B: Borrow<Option<V>>, V: Borrow<[u8]>,\nDB: hash_db::HashDB<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Determine a trie root given a hash DB and delta values.\n","sig":null,"attributes":[{"value":"/ Determine a trie root given a hash DB and delta values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":6737,"byte_end":6796,"line_start":174,"line_end":174,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":292},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":7511,"byte_end":7526,"line_start":204,"line_end":204,"column_start":8,"column_end":23},"name":"read_trie_value","qualname":"::read_trie_value","value":"pub fn read_trie_value<L: TrieConfiguration,\n                       DB: hash_db::HashDBRef<L::Hash,\n                                              trie_db::DBValue>>(&DB,\n                                                                 &TrieHash<L>,\n                                                                 &[u8])\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the trie.\n","sig":null,"attributes":[{"value":"/ Read a value from the trie.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":7472,"byte_end":7503,"line_start":203,"line_end":203,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":297},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":7833,"byte_end":7853,"line_start":213,"line_end":213,"column_start":8,"column_end":28},"name":"read_trie_value_with","qualname":"::read_trie_value_with","value":"pub fn read_trie_value_with<L: TrieConfiguration, Q: Query<L::Hash, Item =\n                            DBValue>,\n                            DB: hash_db::HashDBRef<L::Hash,\n                                                   trie_db::DBValue>>(&DB,\n                                                                      &TrieHash<L>,\n                                                                      &[u8],\n                                                                      Q)\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the trie with given Query.\n","sig":null,"attributes":[{"value":"/ Read a value from the trie with given Query.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":7777,"byte_end":7825,"line_start":212,"line_end":212,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":303},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":8213,"byte_end":8234,"line_start":227,"line_end":227,"column_start":8,"column_end":29},"name":"empty_child_trie_root","qualname":"::empty_child_trie_root","value":"pub fn empty_child_trie_root<L: TrieConfiguration>()\n-> <L::Hash as Hasher>::Out","parent":null,"children":[],"decl_id":null,"docs":" Determine the empty child trie root.\n","sig":null,"attributes":[{"value":"/ Determine the empty child trie root.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":8165,"byte_end":8205,"line_start":226,"line_end":226,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":305},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":8543,"byte_end":8558,"line_start":234,"line_end":234,"column_start":8,"column_end":23},"name":"child_trie_root","qualname":"::child_trie_root","value":"pub fn child_trie_root<L: TrieConfiguration, I, A, B>(I)\n-> <L::Hash as Hasher>::Out where I: IntoIterator<Item = (A, B)>,\nA: AsRef<[u8]> + Ord, B: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Determine a child trie root given its ordered contents, closed form. H is the default hasher,\n but a generic implementation may ignore this type parameter and use other hashers.\n","sig":null,"attributes":[{"value":"/ Determine a child trie root given its ordered contents, closed form. H is the default hasher,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":8351,"byte_end":8448,"line_start":232,"line_end":232,"column_start":1,"column_end":98}},{"value":"/ but a generic implementation may ignore this type parameter and use other hashers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":8449,"byte_end":8535,"line_start":233,"line_end":233,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":310},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":8926,"byte_end":8947,"line_start":247,"line_end":247,"column_start":8,"column_end":29},"name":"child_delta_trie_root","qualname":"::child_delta_trie_root","value":"pub fn child_delta_trie_root<L: TrieConfiguration, I, A, B, DB, RD,\n                             V>(&[u8], &mut DB, RD, I)\n-> Result<<L::Hash as Hasher>::Out, Box<TrieError<L>>> where\nI: IntoIterator<Item = (A, B)>, A: Borrow<[u8]>, B: Borrow<Option<V>>,\nV: Borrow<[u8]>, RD: AsRef<[u8]>,\nDB: hash_db::HashDB<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Determine a child trie root given a hash DB and delta values. H is the default hasher,\n but a generic implementation may ignore this type parameter and use other hashers.\n","sig":null,"attributes":[{"value":"/ Determine a child trie root given a hash DB and delta values. H is the default hasher,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":8741,"byte_end":8831,"line_start":245,"line_end":245,"column_start":1,"column_end":91}},{"value":"/ but a generic implementation may ignore this type parameter and use other hashers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":8832,"byte_end":8918,"line_start":246,"line_end":246,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":318},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":9628,"byte_end":9650,"line_start":274,"line_end":274,"column_start":8,"column_end":30},"name":"for_keys_in_child_trie","qualname":"::for_keys_in_child_trie","value":"pub fn for_keys_in_child_trie<L: TrieConfiguration, F: FnMut(&[u8]) -> (),\n                              DB>(&[u8], &DB, &[u8], F)\n-> Result<(), Box<TrieError<L>>> where\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Call `f` for all keys in a child trie.\n","sig":null,"attributes":[{"value":"/ Call `f` for all keys in a child trie.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":9578,"byte_end":9620,"line_start":273,"line_end":273,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":10235,"byte_end":10250,"line_start":300,"line_end":300,"column_start":8,"column_end":23},"name":"record_all_keys","qualname":"::record_all_keys","value":"pub fn record_all_keys<L: TrieConfiguration,\n                       DB>(&DB, &TrieHash<L>, &mut Recorder<TrieHash<L>>)\n-> Result<(), Box<TrieError<L>>> where\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Record all keys for a given root.\n","sig":null,"attributes":[{"value":"/ Record all keys for a given root.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":10190,"byte_end":10227,"line_start":299,"line_end":299,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":325},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":10776,"byte_end":10797,"line_start":323,"line_end":323,"column_start":8,"column_end":29},"name":"read_child_trie_value","qualname":"::read_child_trie_value","value":"pub fn read_child_trie_value<L: TrieConfiguration,\n                             DB>(&[u8], &DB, &[u8], &[u8])\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>> where\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the child trie.\n","sig":null,"attributes":[{"value":"/ Read a value from the child trie.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":10731,"byte_end":10768,"line_start":322,"line_end":322,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":330},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":11346,"byte_end":11372,"line_start":341,"line_end":341,"column_start":8,"column_end":34},"name":"read_child_trie_value_with","qualname":"::read_child_trie_value_with","value":"pub fn read_child_trie_value_with<L: TrieConfiguration, Q: Query<L::Hash, Item\n                                  = DBValue>, DB>(&[u8], &DB, &[u8], &[u8], Q)\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>> where\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the child trie with given query.\n","sig":null,"attributes":[{"value":"/ Read a value from the child trie with given query.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":11284,"byte_end":11338,"line_start":340,"line_end":340,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12051,"byte_end":12062,"line_start":361,"line_end":361,"column_start":12,"column_end":23},"name":"KeySpacedDB","qualname":"::KeySpacedDB","value":"","parent":null,"children":[],"decl_id":null,"docs":" `HashDB` implementation that append a encoded prefix (unique id bytes) in addition to the\n prefix of every key value.\n","sig":null,"attributes":[{"value":"/ `HashDB` implementation that append a encoded prefix (unique id bytes) in addition to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":11915,"byte_end":12008,"line_start":359,"line_end":359,"column_start":1,"column_end":94}},{"value":"/ prefix of every key value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12009,"byte_end":12039,"line_start":360,"line_end":360,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12312,"byte_end":12326,"line_start":367,"line_end":367,"column_start":12,"column_end":26},"name":"KeySpacedDBMut","qualname":"::KeySpacedDBMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" `HashDBMut` implementation that append a encoded prefix (unique id bytes) in addition to the\n prefix of every key value.","sig":null,"attributes":[{"value":"/ `HashDBMut` implementation that append a encoded prefix (unique id bytes) in addition to the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12110,"byte_end":12206,"line_start":363,"line_end":363,"column_start":1,"column_end":97}},{"value":"/ prefix of every key value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12207,"byte_end":12237,"line_start":364,"line_end":364,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12238,"byte_end":12241,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ Mutable variant of `KeySpacedDB`, see [`KeySpacedDB`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12242,"byte_end":12300,"line_start":366,"line_end":366,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12863,"byte_end":12866,"line_start":382,"line_end":382,"column_start":9,"column_end":12},"name":"new","qualname":"<KeySpacedDB>::new","value":"pub fn new(&'a DB, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" instantiate new keyspaced db\n","sig":null,"attributes":[{"value":"/ instantiate new keyspaced db","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12822,"byte_end":12854,"line_start":381,"line_end":381,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":13048,"byte_end":13051,"line_start":391,"line_end":391,"column_start":9,"column_end":12},"name":"new","qualname":"<KeySpacedDBMut>::new","value":"pub fn new(&'a mut DB, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" instantiate new keyspaced db\n","sig":null,"attributes":[{"value":"/ instantiate new keyspaced db","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":13007,"byte_end":13039,"line_start":390,"line_end":390,"column_start":2,"column_end":34}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":28103,"byte_end":28108,"line_start":23,"line_end":23,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":28212,"byte_end":28217,"line_start":30,"line_end":30,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":28406,"byte_end":28411,"line_start":40,"line_end":40,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","byte_start":29721,"byte_end":29731,"line_start":39,"line_end":39,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","byte_start":30291,"byte_end":30301,"line_start":53,"line_end":53,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","byte_start":30322,"byte_end":30332,"line_start":55,"line_end":55,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","byte_start":33844,"byte_end":33858,"line_start":39,"line_end":39,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","byte_start":34221,"byte_end":34235,"line_start":58,"line_end":58,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","byte_start":35020,"byte_end":35029,"line_start":89,"line_end":89,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","byte_start":41158,"byte_end":41164,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43046,"byte_end":43058,"line_start":33,"line_end":33,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":44703,"byte_end":44727,"line_start":85,"line_end":85,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":44866,"byte_end":44890,"line_start":93,"line_end":93,"column_start":19,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":45032,"byte_end":45040,"line_start":101,"line_end":101,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/trie_stream.rs","byte_start":46381,"byte_end":46391,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/trie_stream.rs","byte_start":47498,"byte_end":47508,"line_start":67,"line_end":67,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1933,"byte_end":1939,"line_start":52,"line_end":52,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":2108,"byte_end":2114,"line_start":59,"line_end":59,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3182,"byte_end":3183,"line_start":90,"line_end":90,"column_start":76,"column_end":77},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12778,"byte_end":12789,"line_start":378,"line_end":378,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12960,"byte_end":12974,"line_start":387,"line_end":387,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":13184,"byte_end":13195,"line_start":396,"line_end":396,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":13707,"byte_end":13721,"line_start":412,"line_end":412,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":14861,"byte_end":14875,"line_start":443,"line_end":443,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":28103,"byte_end":28108,"line_start":23,"line_end":23,"column_start":29,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":396},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":28212,"byte_end":28217,"line_start":30,"line_end":30,"column_start":19,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":396},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/error.rs","byte_start":28406,"byte_end":28411,"line_start":40,"line_end":40,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":396},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","byte_start":29721,"byte_end":29731,"line_start":39,"line_end":39,"column_start":17,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":413},"to":{"krate":18,"index":118}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","byte_start":30291,"byte_end":30301,"line_start":53,"line_end":53,"column_start":28,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":413},"to":{"krate":18,"index":701}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_header.rs","byte_start":30322,"byte_end":30332,"line_start":55,"line_end":55,"column_start":17,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":413},"to":{"krate":18,"index":130}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","byte_start":33844,"byte_end":33858,"line_start":39,"line_end":39,"column_start":10,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":68},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","byte_start":34221,"byte_end":34235,"line_start":58,"line_end":58,"column_start":20,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":68},"to":{"krate":18,"index":66}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","byte_start":35020,"byte_end":35029,"line_start":89,"line_end":89,"column_start":32,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":435},"to":{"krate":26,"index":1117}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/node_codec.rs","byte_start":41158,"byte_end":41164,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":43046,"byte_end":43058,"line_start":33,"line_end":33,"column_start":6,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":44703,"byte_end":44727,"line_start":85,"line_end":85,"column_start":6,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":44866,"byte_end":44890,"line_start":93,"line_end":93,"column_start":19,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":5283}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/storage_proof.rs","byte_start":45032,"byte_end":45040,"line_start":101,"line_end":101,"column_start":47,"column_end":55},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/trie_stream.rs","byte_start":46381,"byte_end":46391,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/trie_stream.rs","byte_start":47498,"byte_end":47508,"line_start":67,"line_end":67,"column_start":32,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":473},"to":{"krate":33,"index":11}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":1933,"byte_end":1939,"line_start":52,"line_end":52,"column_start":32,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":479},"to":{"krate":26,"index":1351}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":2108,"byte_end":2114,"line_start":59,"line_end":59,"column_start":39,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":479},"to":{"krate":26,"index":1356}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3074,"byte_end":3082,"line_start":89,"line_end":89,"column_start":41,"column_end":49},"kind":"SuperTrait","from":{"krate":25,"index":65},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":3182,"byte_end":3183,"line_start":90,"line_end":90,"column_start":76,"column_end":77},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":234},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12778,"byte_end":12789,"line_start":378,"line_end":378,"column_start":17,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":12960,"byte_end":12974,"line_start":387,"line_end":387,"column_start":17,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":13184,"byte_end":13195,"line_start":396,"line_end":396,"column_start":49,"column_end":60},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":336},"to":{"krate":25,"index":48}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":13707,"byte_end":13721,"line_start":412,"line_end":412,"column_start":46,"column_end":60},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":344},"to":{"krate":25,"index":40}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-trie-2.0.1/src/lib.rs","byte_start":14861,"byte_end":14875,"line_start":443,"line_end":443,"column_start":48,"column_end":62},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":344},"to":{"krate":25,"index":65}}]}