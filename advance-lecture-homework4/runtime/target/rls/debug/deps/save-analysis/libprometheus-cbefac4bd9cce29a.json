{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0","program":"/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","prometheus","--edition=2018","/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=cbefac4bd9cce29a","-C","extra-filename=-cbefac4bd9cce29a","--out-dir","/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","-L","dependency=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps","--extern","cfg_if=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libcfg_if-99a8e150265eb097.rmeta","--extern","fnv=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libfnv-9480b9b5ca08fe13.rmeta","--extern","lazy_static=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/liblazy_static-d07addd12a8987b7.rmeta","--extern","parking_lot=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libparking_lot-42871d6d03d0c9d3.rmeta","--extern","regex=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libregex-b505e769025655e2.rmeta","--extern","thiserror=/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libthiserror-2e1993eeec5b0996.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/lzw/.rustup/toolchains/nightly-2020-10-06-x86_64-unknown-linux-gnu"],"output":"/home/lzw/code/rust/advance-lecture-04-ocw/lecture-demo/runtime/target/rls/debug/deps/libprometheus-cbefac4bd9cce29a.rmeta"},"prelude":{"crate_id":{"name":"prometheus","disambiguator":[9738642071748819101,10614237428774683981]},"crate_root":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src","external_crates":[{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","num":19,"id":{"name":"lazy_static","disambiguator":[16863586403248268720,14388819080293591203]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","num":20,"id":{"name":"parking_lot","disambiguator":[10061552480279027668,1018443910502703418]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","num":21,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","num":22,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","num":23,"id":{"name":"lock_api","disambiguator":[1370039747192521928,13370481355962836312]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","num":24,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","num":25,"id":{"name":"parking_lot_core","disambiguator":[6910326554005380636,13334944336695677100]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","num":26,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","num":27,"id":{"name":"libc","disambiguator":[6571333170903906260,2103687221578517612]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","num":28,"id":{"name":"fnv","disambiguator":[1250549230163845577,2434457741331400523]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","num":29,"id":{"name":"regex","disambiguator":[14166398965641423822,8934033390557199130]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","num":30,"id":{"name":"aho_corasick","disambiguator":[15910827016742496248,14514165624868714725]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","num":31,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","num":32,"id":{"name":"regex_syntax","disambiguator":[10387838999179421385,14884883596696298333]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","num":33,"id":{"name":"thread_local","disambiguator":[972737615355812521,3494330021733074280]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","num":34,"id":{"name":"thiserror","disambiguator":[3504977165750721038,18438939481846699641]}},{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","num":35,"id":{"name":"thiserror_impl","disambiguator":[7259669444938257673,2421612895268393449]}}],"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":68,"byte_end":6214,"line_start":3,"line_end":230,"column_start":1,"column_end":74}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1124},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":67979,"byte_end":67990,"line_start":9,"line_end":9,"column_start":22,"column_end":33},"alias_span":null,"name":"TextEncoder","value":"","parent":{"krate":0,"index":361}},{"kind":"Use","ref_id":{"krate":0,"index":1125},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":67979,"byte_end":67990,"line_start":9,"line_end":9,"column_start":22,"column_end":33},"alias_span":null,"name":"TextEncoder","value":"","parent":{"krate":0,"index":390}},{"kind":"Use","ref_id":{"krate":0,"index":294},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4528,"byte_end":4548,"line_start":184,"line_end":184,"column_start":9,"column_end":29},"alias_span":null,"name":"CounterWithValueType","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4550,"byte_end":4562,"line_start":184,"line_end":184,"column_start":31,"column_end":43},"alias_span":null,"name":"LocalCounter","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4564,"byte_end":4579,"line_start":184,"line_end":184,"column_start":45,"column_end":60},"alias_span":null,"name":"LocalCounterVec","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4581,"byte_end":4596,"line_start":184,"line_end":184,"column_start":62,"column_end":77},"alias_span":null,"name":"LocalIntCounter","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":323},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4598,"byte_end":4616,"line_start":184,"line_end":184,"column_start":79,"column_end":97},"alias_span":null,"name":"LocalIntCounterVec","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":1257},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4656,"byte_end":4670,"line_start":186,"line_end":186,"column_start":32,"column_end":46},"alias_span":null,"name":"LocalHistogram","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":1261},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4672,"byte_end":4691,"line_start":186,"line_end":186,"column_start":48,"column_end":67},"alias_span":null,"name":"LocalHistogramTimer","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":1267},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4693,"byte_end":4710,"line_start":186,"line_end":186,"column_start":69,"column_end":86},"alias_span":null,"name":"LocalHistogramVec","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4742,"byte_end":4753,"line_start":187,"line_end":187,"column_start":30,"column_end":41},"alias_span":null,"name":"LocalMetric","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":662},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4755,"byte_end":4763,"line_start":187,"line_end":187,"column_start":43,"column_end":51},"alias_span":null,"name":"MayFlush","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":1074},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4808,"byte_end":4822,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"alias_span":null,"name":"AFLocalCounter","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":1085},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4824,"byte_end":4840,"line_start":190,"line_end":190,"column_start":25,"column_end":41},"alias_span":null,"name":"AFLocalHistogram","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4842,"byte_end":4858,"line_start":190,"line_end":190,"column_start":43,"column_end":59},"alias_span":null,"name":"CounterDelegator","value":"","parent":{"krate":0,"index":831}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4860,"byte_end":4878,"line_start":190,"line_end":190,"column_start":61,"column_end":79},"alias_span":null,"name":"HistogramDelegator","value":"","parent":{"krate":0,"index":831}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4979,"byte_end":4980,"line_start":201,"line_end":201,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"Atomic","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":1094},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5020,"byte_end":5034,"line_start":203,"line_end":203,"column_start":9,"column_end":23},"alias_span":null,"name":"GenericCounter","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5036,"byte_end":5053,"line_start":203,"line_end":203,"column_start":25,"column_end":42},"alias_span":null,"name":"GenericCounterVec","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":1106},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5055,"byte_end":5074,"line_start":203,"line_end":203,"column_start":44,"column_end":63},"alias_span":null,"name":"GenericLocalCounter","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":315},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5076,"byte_end":5098,"line_start":203,"line_end":203,"column_start":65,"column_end":87},"alias_span":null,"name":"GenericLocalCounterVec","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":1113},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5133,"byte_end":5137,"line_start":205,"line_end":205,"column_start":27,"column_end":31},"alias_span":null,"name":"Desc","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":359},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5139,"byte_end":5148,"line_start":205,"line_end":205,"column_start":33,"column_end":42},"alias_span":null,"name":"Describer","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":1176},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5178,"byte_end":5190,"line_start":206,"line_end":206,"column_start":28,"column_end":40},"alias_span":null,"name":"GenericGauge","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":463},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5192,"byte_end":5207,"line_start":206,"line_end":206,"column_start":42,"column_end":57},"alias_span":null,"name":"GenericGaugeVec","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":655},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5239,"byte_end":5248,"line_start":207,"line_end":207,"column_start":30,"column_end":39},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":658},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5250,"byte_end":5256,"line_start":207,"line_end":207,"column_start":41,"column_end":47},"alias_span":null,"name":"Metric","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":1272},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5258,"byte_end":5262,"line_start":207,"line_end":207,"column_start":49,"column_end":53},"alias_span":null,"name":"Opts","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5290,"byte_end":5299,"line_start":208,"line_end":208,"column_start":26,"column_end":35},"alias_span":null,"name":"MetricVec","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":781},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5301,"byte_end":5317,"line_start":208,"line_end":208,"column_start":37,"column_end":53},"alias_span":null,"name":"MetricVecBuilder","value":"","parent":{"krate":0,"index":850}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5347,"byte_end":5354,"line_start":211,"line_end":211,"column_start":25,"column_end":32},"alias_span":null,"name":"Counter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5356,"byte_end":5366,"line_start":211,"line_end":211,"column_start":34,"column_end":44},"alias_span":null,"name":"CounterVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5368,"byte_end":5378,"line_start":211,"line_end":211,"column_start":46,"column_end":56},"alias_span":null,"name":"IntCounter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5380,"byte_end":5393,"line_start":211,"line_end":211,"column_start":58,"column_end":71},"alias_span":null,"name":"IntCounterVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5419,"byte_end":5426,"line_start":212,"line_end":212,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1124},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5520,"byte_end":5531,"line_start":215,"line_end":215,"column_start":24,"column_end":35},"alias_span":null,"name":"TextEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1125},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5520,"byte_end":5531,"line_start":215,"line_end":215,"column_start":24,"column_end":35},"alias_span":null,"name":"TextEncoder","value":"","parent":{"krate":0,"index":876}},{"kind":"Use","ref_id":{"krate":0,"index":1152},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5640,"byte_end":5645,"line_start":218,"line_end":218,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":404},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5647,"byte_end":5653,"line_start":218,"line_end":218,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":427},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5678,"byte_end":5683,"line_start":219,"line_end":219,"column_start":23,"column_end":28},"alias_span":null,"name":"Gauge","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":465},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5685,"byte_end":5693,"line_start":219,"line_end":219,"column_start":30,"column_end":38},"alias_span":null,"name":"GaugeVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5695,"byte_end":5703,"line_start":219,"line_end":219,"column_start":40,"column_end":48},"alias_span":null,"name":"IntGauge","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":466},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5705,"byte_end":5716,"line_start":219,"line_end":219,"column_start":50,"column_end":61},"alias_span":null,"name":"IntGaugeVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5744,"byte_end":5759,"line_start":220,"line_end":220,"column_start":26,"column_end":41},"alias_span":null,"name":"DEFAULT_BUCKETS","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5787,"byte_end":5806,"line_start":221,"line_end":221,"column_start":27,"column_end":46},"alias_span":null,"name":"exponential_buckets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":590},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5808,"byte_end":5822,"line_start":221,"line_end":221,"column_start":48,"column_end":62},"alias_span":null,"name":"linear_buckets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1237},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5851,"byte_end":5860,"line_start":222,"line_end":222,"column_start":27,"column_end":36},"alias_span":null,"name":"Histogram","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1188},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5862,"byte_end":5875,"line_start":222,"line_end":222,"column_start":38,"column_end":51},"alias_span":null,"name":"HistogramOpts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1231},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5877,"byte_end":5891,"line_start":222,"line_end":222,"column_start":53,"column_end":67},"alias_span":null,"name":"HistogramTimer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5893,"byte_end":5905,"line_start":222,"line_end":222,"column_start":69,"column_end":81},"alias_span":null,"name":"HistogramVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1272},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":5931,"byte_end":5935,"line_start":223,"line_end":223,"column_start":24,"column_end":28},"alias_span":null,"name":"Opts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1283},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":6131,"byte_end":6139,"line_start":229,"line_end":229,"column_start":25,"column_end":33},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":6166,"byte_end":6182,"line_start":230,"line_end":230,"column_start":26,"column_end":42},"alias_span":null,"name":"default_registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":6184,"byte_end":6190,"line_start":230,"line_end":230,"column_start":44,"column_end":50},"alias_span":null,"name":"gather","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":728},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":6192,"byte_end":6200,"line_start":230,"line_end":230,"column_start":52,"column_end":60},"alias_span":null,"name":"register","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":729},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":6202,"byte_end":6212,"line_start":230,"line_end":230,"column_start":62,"column_end":72},"alias_span":null,"name":"unregister","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":68,"byte_end":6214,"line_start":3,"line_end":230,"column_start":1,"column_end":74},"name":"","qualname":"::","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":105},{"krate":0,"index":161},{"krate":0,"index":226},{"krate":0,"index":338},{"krate":0,"index":361},{"krate":0,"index":402},{"krate":0,"index":406},{"krate":0,"index":471},{"krate":0,"index":638},{"krate":0,"index":689},{"krate":0,"index":731},{"krate":0,"index":763},{"krate":0,"index":815},{"krate":0,"index":831},{"krate":0,"index":850},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":1738},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900}],"decl_id":null,"docs":"The Rust client library for [Prometheus](https://prometheus.io/).","sig":null,"attributes":[{"value":"*\nThe Rust client library for [Prometheus](https://prometheus.io/).\n\nUse of this library involves a few core concepts:\n\n* [`Metric`s](core/trait.Metric.html) like [`Counter`s](type.Counter.html) that\n  represent information about your system.\n\n* A [`Registry`](struct.Registry.html) that [`Metric`s](core/trait.Metric.html)\n  are registered with.\n\n* An endpoint that calls [`gather`](fn.gather.html) which returns\n  [`MetricFamily`s](proto/struct.MetricFamily.html) through an\n  [`Encoder`](trait.Encoder.html).\n\n\n# Basic Example\n\n```rust\nuse prometheus::{Opts, Registry, Counter, TextEncoder, Encoder};\n\n// Create a Counter.\nlet counter_opts = Opts::new(\"test_counter\", \"test counter help\");\nlet counter = Counter::with_opts(counter_opts).unwrap();\n\n// Create a Registry and register Counter.\nlet r = Registry::new();\nr.register(Box::new(counter.clone())).unwrap();\n\n// Inc.\ncounter.inc();\n\n// Gather the metrics.\nlet mut buffer = vec![];\nlet encoder = TextEncoder::new();\nlet metric_families = r.gather();\nencoder.encode(&metric_families, &mut buffer).unwrap();\n\n// Output to the standard output.\nprintln!(\"{}\", String::from_utf8(buffer).unwrap());\n```\n\nYou can find more examples within\n[`/examples`](https://github.com/tikv/rust-prometheus/tree/master/examples).\n\n\n# Static Metrics\n\nThis crate supports staticly built metrics. You can use it with\n[`lazy_static`](https://docs.rs/lazy_static/) to quickly build up and collect\nsome metrics.\n\n```rust\n#[macro_use] extern crate lazy_static;\n#[macro_use] extern crate prometheus;\nuse prometheus::{self, IntCounter, TextEncoder, Encoder};\n\nlazy_static! {\n    static ref HIGH_FIVE_COUNTER: IntCounter =\n        register_int_counter!(\"highfives\", \"Number of high fives received\").unwrap();\n}\n\nHIGH_FIVE_COUNTER.inc();\nassert_eq!(HIGH_FIVE_COUNTER.get(), 1);\n```\n\nBy default, this registers with a default registry. To make a report, you can call\n[`gather`](fn.gather.html). This will return a family of metrics you can then feed through an\n[`Encoder`](trait.Encoder.html) and report to Promethus.\n\n```\n# #[macro_use] extern crate lazy_static;\n#[macro_use] extern crate prometheus;\n# use prometheus::IntCounter;\nuse prometheus::{self, TextEncoder, Encoder};\n\n// Register & measure some metrics.\n# lazy_static! {\n#     static ref HIGH_FIVE_COUNTER: IntCounter =\n#        register_int_counter!(\"highfives\", \"Number of high fives received\").unwrap();\n# }\n# HIGH_FIVE_COUNTER.inc();\n\nlet mut buffer = Vec::new();\nlet encoder = TextEncoder::new();\n\n// Gather the metrics.\nlet metric_families = prometheus::gather();\n// Encode them to send.\nencoder.encode(&metric_families, &mut buffer).unwrap();\n\nlet output = String::from_utf8(buffer.clone()).unwrap();\nconst EXPECTED_OUTPUT: &'static str = \"# HELP highfives Number of high fives received\\n# TYPE highfives counter\\nhighfives 1\\n\";\nassert!(output.starts_with(EXPECTED_OUTPUT));\n```\n\nSee [prometheus_static_metric](https://docs.rs/prometheus-static-metric) for\nadditional functionality.\n\n\n# Features\n\nThis library supports four features:\n\n* `gen`: To generate protobuf client with the latest protobuf version instead of\n  using the pre-generated client.\n* `nightly`: Enable nightly only features.\n* `process`: For collecting process info.\n* `push`: Enable push support.\n\n*/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":68,"byte_end":3333,"line_start":3,"line_end":113,"column_start":1,"column_end":3}},{"value":"allow(clippy :: needless_pass_by_value, clippy :: new_without_default,\n        clippy :: new_ret_no_self)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":3335,"byte_end":3444,"line_start":115,"line_end":119,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":3445,"byte_end":3467,"line_start":120,"line_end":120,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":3468,"byte_end":3507,"line_start":121,"line_end":121,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"proto","qualname":"::proto","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":908},{"krate":0,"index":906},{"krate":0,"index":904},{"krate":0,"index":4},{"krate":0,"index":914},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":920},{"krate":0,"index":918},{"krate":0,"index":916},{"krate":0,"index":11},{"krate":0,"index":926},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":932},{"krate":0,"index":930},{"krate":0,"index":928},{"krate":0,"index":15},{"krate":0,"index":938},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":945},{"krate":0,"index":943},{"krate":0,"index":941},{"krate":0,"index":19},{"krate":0,"index":951},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":959},{"krate":0,"index":957},{"krate":0,"index":955},{"krate":0,"index":25},{"krate":0,"index":965},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":971},{"krate":0,"index":969},{"krate":0,"index":967},{"krate":0,"index":33},{"krate":0,"index":977},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":985},{"krate":0,"index":983},{"krate":0,"index":981},{"krate":0,"index":37},{"krate":0,"index":991},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":998},{"krate":0,"index":996},{"krate":0,"index":994},{"krate":0,"index":45},{"krate":0,"index":1004},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1016},{"krate":0,"index":1014},{"krate":0,"index":1012},{"krate":0,"index":51},{"krate":0,"index":1022},{"krate":0,"index":1045},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1037},{"krate":0,"index":1034},{"krate":0,"index":1033},{"krate":0,"index":69},{"krate":0,"index":1047},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1056},{"krate":0,"index":1054},{"krate":0,"index":1052},{"krate":0,"index":71}],"decl_id":null,"docs":" Non-generated version of required structures provided by the protobuf.\n This version is used when the `protobuf` feature is turned off.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"protobuf\"))","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":3797,"byte_end":3830,"line_start":137,"line_end":137,"column_start":1,"column_end":34}},{"value":"path = \"plain_model.rs\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":3831,"byte_end":3857,"line_start":138,"line_end":138,"column_start":1,"column_end":27}},{"value":"/ Non-generated version of required structures provided by the protobuf.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6284,"byte_end":6358,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ This version is used when the `protobuf` feature is turned off.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6359,"byte_end":6426,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"allow(missing_docs)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6428,"byte_end":6451,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":901},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6508,"byte_end":6517,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"LabelPair","qualname":"::proto::LabelPair","value":"LabelPair {  }","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6647,"byte_end":6650,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<LabelPair>::new","value":"pub fn new() -> LabelPair","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Use default()\", since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6581,"byte_end":6635,"line_start":15,"line_end":15,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6853,"byte_end":6863,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"clear_name","qualname":"<LabelPair>::clear_name","value":"pub fn clear_name(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"This method is protobuf specific and will be removed in a future version\",\n             since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6706,"byte_end":6841,"line_start":20,"line_end":23,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6922,"byte_end":6930,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"set_name","qualname":"<LabelPair>::set_name","value":"pub fn set_name(&mut Self, String)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6996,"byte_end":7004,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"get_name","qualname":"<LabelPair>::get_name","value":"pub fn get_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7059,"byte_end":7068,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"set_value","qualname":"<LabelPair>::set_value","value":"pub fn set_value(&mut Self, String)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7135,"byte_end":7144,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"get_value","qualname":"<LabelPair>::get_value","value":"pub fn get_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":914},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7246,"byte_end":7251,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"Gauge","qualname":"::proto::Gauge","value":"Gauge {  }","parent":null,"children":[{"krate":0,"index":915}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7356,"byte_end":7359,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Gauge>::new","value":"pub fn new() -> Gauge","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Use default()\", since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7290,"byte_end":7344,"line_start":51,"line_end":51,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7418,"byte_end":7427,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"set_value","qualname":"<Gauge>::set_value","value":"pub fn set_value(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7491,"byte_end":7500,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"get_value","qualname":"<Gauge>::get_value","value":"pub fn get_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":926},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7600,"byte_end":7607,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"Counter","qualname":"::proto::Counter","value":"Counter {  }","parent":null,"children":[{"krate":0,"index":927}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7714,"byte_end":7717,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Counter>::new","value":"pub fn new() -> Counter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Use default()\", since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7648,"byte_end":7702,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7817,"byte_end":7826,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"set_value","qualname":"<Counter>::set_value","value":"pub fn set_value(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7890,"byte_end":7899,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"get_value","qualname":"<Counter>::get_value","value":"pub fn get_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":938},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7999,"byte_end":8007,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"Quantile","qualname":"::proto::Quantile","value":"Quantile {  }","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8134,"byte_end":8137,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Quantile>::new","value":"pub fn new() -> Quantile","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Use default()\", since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8068,"byte_end":8122,"line_start":93,"line_end":93,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8199,"byte_end":8211,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"set_quantile","qualname":"<Quantile>::set_quantile","value":"pub fn set_quantile(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8278,"byte_end":8290,"line_start":102,"line_end":102,"column_start":12,"column_end":24},"name":"get_quantile","qualname":"<Quantile>::get_quantile","value":"pub fn get_quantile(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8347,"byte_end":8356,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"set_value","qualname":"<Quantile>::set_value","value":"pub fn set_value(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8420,"byte_end":8429,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"get_value","qualname":"<Quantile>::get_value","value":"pub fn get_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":951},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8529,"byte_end":8536,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"Summary","qualname":"::proto::Summary","value":"Summary {  }","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8700,"byte_end":8703,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"new","qualname":"<Summary>::new","value":"pub fn new() -> Summary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Use default()\", since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8634,"byte_end":8688,"line_start":123,"line_end":123,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8764,"byte_end":8780,"line_start":128,"line_end":128,"column_start":12,"column_end":28},"name":"set_sample_count","qualname":"<Summary>::set_sample_count","value":"pub fn set_sample_count(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8851,"byte_end":8867,"line_start":132,"line_end":132,"column_start":12,"column_end":28},"name":"get_sample_count","qualname":"<Summary>::get_sample_count","value":"pub fn get_sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8928,"byte_end":8942,"line_start":136,"line_end":136,"column_start":12,"column_end":26},"name":"set_sample_sum","qualname":"<Summary>::set_sample_sum","value":"pub fn set_sample_sum(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9011,"byte_end":9025,"line_start":140,"line_end":140,"column_start":12,"column_end":26},"name":"get_sample_sum","qualname":"<Summary>::get_sample_sum","value":"pub fn get_sample_sum(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9084,"byte_end":9096,"line_start":144,"line_end":144,"column_start":12,"column_end":24},"name":"set_quantile","qualname":"<Summary>::set_quantile","value":"pub fn set_quantile(&mut Self, Vec<Quantile>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9173,"byte_end":9185,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"get_quantile","qualname":"<Summary>::get_quantile","value":"pub fn get_quantile(&Self) -> &[Quantile]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":965},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9297,"byte_end":9304,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"Untyped","qualname":"::proto::Untyped","value":"Untyped {  }","parent":null,"children":[{"krate":0,"index":966}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9411,"byte_end":9414,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<Untyped>::new","value":"pub fn new() -> Untyped","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Use default()\", since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9345,"byte_end":9399,"line_start":159,"line_end":159,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9618,"byte_end":9627,"line_start":168,"line_end":168,"column_start":12,"column_end":21},"name":"set_value","qualname":"<Untyped>::set_value","value":"pub fn set_value(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"Untyped struct is protobuf specific and will be removed in a future version\",\n             since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9468,"byte_end":9606,"line_start":164,"line_end":167,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9834,"byte_end":9843,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"get_value","qualname":"<Untyped>::get_value","value":"pub fn get_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"Untyped struct is protobuf specific and will be removed in a future version\",\n             since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9684,"byte_end":9822,"line_start":172,"line_end":175,"column_start":5,"column_end":7}}]},{"kind":"Struct","id":{"krate":0,"index":977},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9943,"byte_end":9952,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"Histogram","qualname":"::proto::Histogram","value":"Histogram {  }","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10114,"byte_end":10117,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"new","qualname":"<Histogram>::new","value":"pub fn new() -> Histogram","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Use default()\", since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10048,"byte_end":10102,"line_start":189,"line_end":189,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10180,"byte_end":10196,"line_start":194,"line_end":194,"column_start":12,"column_end":28},"name":"set_sample_count","qualname":"<Histogram>::set_sample_count","value":"pub fn set_sample_count(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10267,"byte_end":10283,"line_start":198,"line_end":198,"column_start":12,"column_end":28},"name":"get_sample_count","qualname":"<Histogram>::get_sample_count","value":"pub fn get_sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10344,"byte_end":10358,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"set_sample_sum","qualname":"<Histogram>::set_sample_sum","value":"pub fn set_sample_sum(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10427,"byte_end":10441,"line_start":206,"line_end":206,"column_start":12,"column_end":26},"name":"get_sample_sum","qualname":"<Histogram>::get_sample_sum","value":"pub fn get_sample_sum(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10500,"byte_end":10510,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"set_bucket","qualname":"<Histogram>::set_bucket","value":"pub fn set_bucket(&mut Self, Vec<Bucket>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10583,"byte_end":10593,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"get_bucket","qualname":"<Histogram>::get_bucket","value":"pub fn get_bucket(&Self) -> &[Bucket]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":991},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10701,"byte_end":10707,"line_start":220,"line_end":220,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::proto::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10846,"byte_end":10849,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"new","qualname":"<Bucket>::new","value":"pub fn new() -> Bucket","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Use default()\", since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10780,"byte_end":10834,"line_start":226,"line_end":226,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10909,"byte_end":10929,"line_start":231,"line_end":231,"column_start":12,"column_end":32},"name":"set_cumulative_count","qualname":"<Bucket>::set_cumulative_count","value":"pub fn set_cumulative_count(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11004,"byte_end":11024,"line_start":235,"line_end":235,"column_start":12,"column_end":32},"name":"get_cumulative_count","qualname":"<Bucket>::get_cumulative_count","value":"pub fn get_cumulative_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11089,"byte_end":11104,"line_start":239,"line_end":239,"column_start":12,"column_end":27},"name":"set_upper_bound","qualname":"<Bucket>::set_upper_bound","value":"pub fn set_upper_bound(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11174,"byte_end":11189,"line_start":243,"line_end":243,"column_start":12,"column_end":27},"name":"get_upper_bound","qualname":"<Bucket>::get_upper_bound","value":"pub fn get_upper_bound(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1004},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11295,"byte_end":11301,"line_start":249,"line_end":249,"column_start":12,"column_end":18},"name":"Metric","qualname":"::proto::Metric","value":"Metric {  }","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11573,"byte_end":11576,"line_start":262,"line_end":262,"column_start":12,"column_end":15},"name":"new","qualname":"<Metric>::new","value":"pub fn new() -> Metric","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Use default()\", since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11507,"byte_end":11561,"line_start":261,"line_end":261,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11636,"byte_end":11645,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"set_label","qualname":"<Metric>::set_label","value":"pub fn set_label(&mut Self, Vec<LabelPair>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11720,"byte_end":11729,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"mut_label","qualname":"<Metric>::mut_label","value":"pub fn mut_label(&mut Self) -> &mut [LabelPair]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11805,"byte_end":11815,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"take_label","qualname":"<Metric>::take_label","value":"pub fn take_label(&mut Self) -> Vec<LabelPair>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11922,"byte_end":11931,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"get_label","qualname":"<Metric>::get_label","value":"pub fn get_label(&Self) -> &[LabelPair]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11995,"byte_end":12004,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"set_gauge","qualname":"<Metric>::set_gauge","value":"pub fn set_gauge(&mut Self, Gauge)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12070,"byte_end":12079,"line_start":286,"line_end":286,"column_start":12,"column_end":21},"name":"get_gauge","qualname":"<Metric>::get_gauge","value":"pub fn get_gauge(&Self) -> &Gauge","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12137,"byte_end":12148,"line_start":290,"line_end":290,"column_start":12,"column_end":23},"name":"set_counter","qualname":"<Metric>::set_counter","value":"pub fn set_counter(&mut Self, Counter)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12218,"byte_end":12229,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"get_counter","qualname":"<Metric>::get_counter","value":"pub fn get_counter(&Self) -> &Counter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12291,"byte_end":12302,"line_start":298,"line_end":298,"column_start":12,"column_end":23},"name":"set_summary","qualname":"<Metric>::set_summary","value":"pub fn set_summary(&mut Self, Summary)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12372,"byte_end":12383,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"get_summary","qualname":"<Metric>::get_summary","value":"pub fn get_summary(&Self) -> &Summary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12585,"byte_end":12596,"line_start":310,"line_end":310,"column_start":12,"column_end":23},"name":"set_untyped","qualname":"<Metric>::set_untyped","value":"pub fn set_untyped(&mut Self, Untyped)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"This method is protobuf specific and will be removed in a future version\",\n             since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12438,"byte_end":12573,"line_start":306,"line_end":309,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12806,"byte_end":12817,"line_start":318,"line_end":318,"column_start":12,"column_end":23},"name":"get_untyped","qualname":"<Metric>::get_untyped","value":"pub fn get_untyped(&Self) -> &Untyped","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"This method is protobuf specific and will be removed in a future version\",\n             since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12659,"byte_end":12794,"line_start":314,"line_end":317,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12879,"byte_end":12892,"line_start":322,"line_end":322,"column_start":12,"column_end":25},"name":"set_histogram","qualname":"<Metric>::set_histogram","value":"pub fn set_histogram(&mut Self, Histogram)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":12966,"byte_end":12979,"line_start":326,"line_end":326,"column_start":12,"column_end":25},"name":"get_histogram","qualname":"<Metric>::get_histogram","value":"pub fn get_histogram(&Self) -> &Histogram","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13045,"byte_end":13061,"line_start":330,"line_end":330,"column_start":12,"column_end":28},"name":"set_timestamp_ms","qualname":"<Metric>::set_timestamp_ms","value":"pub fn set_timestamp_ms(&mut Self, i64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13132,"byte_end":13148,"line_start":334,"line_end":334,"column_start":12,"column_end":28},"name":"get_timestamp_ms","qualname":"<Metric>::get_timestamp_ms","value":"pub fn get_timestamp_ms(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1023},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13277,"byte_end":13284,"line_start":341,"line_end":341,"column_start":5,"column_end":12},"name":"COUNTER","qualname":"::proto::MetricType::COUNTER","value":"MetricType::COUNTER","parent":{"krate":0,"index":1022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13290,"byte_end":13295,"line_start":342,"line_end":342,"column_start":5,"column_end":10},"name":"GAUGE","qualname":"::proto::MetricType::GAUGE","value":"MetricType::GAUGE","parent":{"krate":0,"index":1022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1027},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13301,"byte_end":13308,"line_start":343,"line_end":343,"column_start":5,"column_end":12},"name":"SUMMARY","qualname":"::proto::MetricType::SUMMARY","value":"MetricType::SUMMARY","parent":{"krate":0,"index":1022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1029},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13314,"byte_end":13321,"line_start":344,"line_end":344,"column_start":5,"column_end":12},"name":"UNTYPED","qualname":"::proto::MetricType::UNTYPED","value":"MetricType::UNTYPED","parent":{"krate":0,"index":1022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1031},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13327,"byte_end":13336,"line_start":345,"line_end":345,"column_start":5,"column_end":14},"name":"HISTOGRAM","qualname":"::proto::MetricType::HISTOGRAM","value":"MetricType::HISTOGRAM","parent":{"krate":0,"index":1022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1022},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13260,"byte_end":13270,"line_start":340,"line_end":340,"column_start":10,"column_end":20},"name":"MetricType","qualname":"::proto::MetricType","value":"pub enum MetricType { COUNTER, GAUGE, SUMMARY, UNTYPED, HISTOGRAM, }","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1031}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1047},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13490,"byte_end":13502,"line_start":355,"line_end":355,"column_start":12,"column_end":24},"name":"MetricFamily","qualname":"::proto::MetricFamily","value":"MetricFamily {  }","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13687,"byte_end":13690,"line_start":364,"line_end":364,"column_start":12,"column_end":15},"name":"new","qualname":"<MetricFamily>::new","value":"pub fn new() -> MetricFamily","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Use default()\", since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13621,"byte_end":13675,"line_start":363,"line_end":363,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13756,"byte_end":13766,"line_start":368,"line_end":368,"column_start":12,"column_end":22},"name":"clear_name","qualname":"<MetricFamily>::clear_name","value":"pub fn clear_name(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13825,"byte_end":13833,"line_start":372,"line_end":372,"column_start":12,"column_end":20},"name":"set_name","qualname":"<MetricFamily>::set_name","value":"pub fn set_name(&mut Self, String)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13899,"byte_end":13907,"line_start":376,"line_end":376,"column_start":12,"column_end":20},"name":"get_name","qualname":"<MetricFamily>::get_name","value":"pub fn get_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13962,"byte_end":13970,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"set_help","qualname":"<MetricFamily>::set_help","value":"pub fn set_help(&mut Self, String)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":14036,"byte_end":14044,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"name":"get_help","qualname":"<MetricFamily>::get_help","value":"pub fn get_help(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":14099,"byte_end":14113,"line_start":388,"line_end":388,"column_start":12,"column_end":26},"name":"set_field_type","qualname":"<MetricFamily>::set_field_type","value":"pub fn set_field_type(&mut Self, MetricType)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":14189,"byte_end":14203,"line_start":392,"line_end":392,"column_start":12,"column_end":26},"name":"get_field_type","qualname":"<MetricFamily>::get_field_type","value":"pub fn get_field_type(&Self) -> MetricType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":14409,"byte_end":14421,"line_start":400,"line_end":400,"column_start":12,"column_end":24},"name":"clear_metric","qualname":"<MetricFamily>::clear_metric","value":"pub fn clear_metric(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"This method is protobuf specific and will be removed in a future version\",\n             since = \"0.5.1\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":14262,"byte_end":14397,"line_start":396,"line_end":399,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":14482,"byte_end":14492,"line_start":404,"line_end":404,"column_start":12,"column_end":22},"name":"set_metric","qualname":"<MetricFamily>::set_metric","value":"pub fn set_metric(&mut Self, Vec<Metric>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":14565,"byte_end":14575,"line_start":408,"line_end":408,"column_start":12,"column_end":22},"name":"mut_metric","qualname":"<MetricFamily>::mut_metric","value":"pub fn mut_metric(&mut Self) -> &mut Vec<Metric>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":14652,"byte_end":14663,"line_start":412,"line_end":412,"column_start":12,"column_end":23},"name":"take_metric","qualname":"<MetricFamily>::take_metric","value":"pub fn take_metric(&mut Self) -> Vec<Metric>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":14768,"byte_end":14778,"line_start":416,"line_end":416,"column_start":12,"column_end":22},"name":"get_metric","qualname":"<MetricFamily>::get_metric","value":"pub fn get_metric(&Self) -> &[Metric]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":26924,"byte_end":26930,"line_start":11,"line_end":11,"column_start":11,"column_end":17},"name":"Number","qualname":"::atomic64::Number","value":"Number: Sized + AddAssign + SubAssign + PartialOrd + PartialEq + Copy + Send + Sync","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" An interface for numbers. Used to generically model float metrics and integer metrics, i.e.\n [`Counter`](crate::Counter) and [`IntCounter`](crate::Counter).\n","sig":null,"attributes":[{"value":"/ An interface for numbers. Used to generically model float metrics and integer metrics, i.e.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":26750,"byte_end":26845,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ [`Counter`](crate::Counter) and [`IntCounter`](crate::Counter).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":26846,"byte_end":26913,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27121,"byte_end":27129,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::atomic64::Number::from_i64","value":"pub fn from_i64(i64) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" `std::convert::From<i64> for f64` is not implemented, so that we need to implement our own.\n","sig":null,"attributes":[{"value":"/ `std::convert::From<i64> for f64` is not implemented, so that we need to implement our own.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27018,"byte_end":27113,"line_start":14,"line_end":14,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27180,"byte_end":27188,"line_start":17,"line_end":17,"column_start":8,"column_end":16},"name":"into_f64","qualname":"::atomic64::Number::into_f64","value":"pub fn into_f64(Self) -> f64","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Convert to a f64.\n","sig":null,"attributes":[{"value":"/ Convert to a f64.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27151,"byte_end":27172,"line_start":16,"line_end":16,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":125},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27873,"byte_end":27879,"line_start":58,"line_end":58,"column_start":11,"column_end":17},"name":"Atomic","qualname":"::atomic64::Atomic","value":"Atomic: Send + Sync","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"decl_id":null,"docs":" An interface for atomics. Used to generically model float metrics and integer metrics, i.e.\n [`Counter`](crate::Counter) and [`IntCounter`](crate::IntCounter).\n","sig":null,"attributes":[{"value":"/ An interface for atomics. Used to generically model float metrics and integer metrics, i.e.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27696,"byte_end":27791,"line_start":56,"line_end":56,"column_start":1,"column_end":96}},{"value":"/ [`Counter`](crate::Counter) and [`IntCounter`](crate::IntCounter).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27792,"byte_end":27862,"line_start":57,"line_end":57,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":126},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27958,"byte_end":27959,"line_start":60,"line_end":60,"column_start":10,"column_end":11},"name":"T","qualname":"::atomic64::Atomic::T","value":"type T: Number;","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" The numeric type associated with this atomic.\n","sig":null,"attributes":[{"value":"/ The numeric type associated with this atomic.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27899,"byte_end":27948,"line_start":59,"line_end":59,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28011,"byte_end":28014,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"new","qualname":"::atomic64::Atomic::new","value":"pub fn new(Self::T) -> Self","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Create a new atomic value.\n","sig":null,"attributes":[{"value":"/ Create a new atomic value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27973,"byte_end":28003,"line_start":61,"line_end":61,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28090,"byte_end":28093,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"set","qualname":"::atomic64::Atomic::set","value":"pub fn set(&Self, Self::T)","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Set the value to the provided value.\n","sig":null,"attributes":[{"value":"/ Set the value to the provided value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28042,"byte_end":28082,"line_start":63,"line_end":63,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28146,"byte_end":28149,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"get","qualname":"::atomic64::Atomic::get","value":"pub fn get(&Self) -> Self::T","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Get the value.\n","sig":null,"attributes":[{"value":"/ Get the value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28120,"byte_end":28138,"line_start":65,"line_end":65,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28223,"byte_end":28229,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"inc_by","qualname":"::atomic64::Atomic::inc_by","value":"pub fn inc_by(&Self, Self::T)","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Increment the value by a given amount.\n","sig":null,"attributes":[{"value":"/ Increment the value by a given amount.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28173,"byte_end":28215,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28308,"byte_end":28314,"line_start":70,"line_end":70,"column_start":8,"column_end":14},"name":"dec_by","qualname":"::atomic64::Atomic::dec_by","value":"pub fn dec_by(&Self, Self::T)","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Decrement the value by a given amount.\n","sig":null,"attributes":[{"value":"/ Decrement the value by a given amount.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28258,"byte_end":28300,"line_start":69,"line_end":69,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28390,"byte_end":28399,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"AtomicF64","qualname":"::atomic64::AtomicF64","value":"AtomicF64 {  }","parent":null,"children":[{"krate":0,"index":1063}],"decl_id":null,"docs":" A atomic float.\n","sig":null,"attributes":[{"value":"/ A atomic float.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28342,"byte_end":28361,"line_start":73,"line_end":73,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":29551,"byte_end":29555,"line_start":130,"line_end":130,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicF64>::swap","value":"pub fn swap(&Self, f64, Ordering) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Store the value, returning the previous value.\n","sig":null,"attributes":[{"value":"/ Store the value, returning the previous value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":29489,"byte_end":29539,"line_start":129,"line_end":129,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1066},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":29731,"byte_end":29740,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"AtomicI64","qualname":"::atomic64::AtomicI64","value":"AtomicI64 {  }","parent":null,"children":[{"krate":0,"index":1067}],"decl_id":null,"docs":" A atomic signed integer.\n","sig":null,"attributes":[{"value":"/ A atomic signed integer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":29674,"byte_end":29702,"line_start":135,"line_end":135,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1070},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":30431,"byte_end":30440,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"AtomicU64","qualname":"::atomic64::AtomicU64","value":"AtomicU64 {  }","parent":null,"children":[{"krate":0,"index":1071}],"decl_id":null,"docs":" A atomic unsigned integer.\n","sig":null,"attributes":[{"value":"/ A atomic unsigned integer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":30372,"byte_end":30402,"line_start":171,"line_end":171,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":31162,"byte_end":31178,"line_start":209,"line_end":209,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<AtomicU64>::compare_and_swap","value":"pub fn compare_and_swap(&Self, u64, u64, Ordering) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the value with the provided memory ordering.\n","sig":null,"attributes":[{"value":"/ Get the value with the provided memory ordering.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":31098,"byte_end":31150,"line_start":208,"line_end":208,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":31398,"byte_end":31418,"line_start":214,"line_end":214,"column_start":12,"column_end":32},"name":"inc_by_with_ordering","qualname":"<AtomicU64>::inc_by_with_ordering","value":"pub fn inc_by_with_ordering(&Self, u64, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Increment the value by a given amount with the provided memory ordering.\n","sig":null,"attributes":[{"value":"/ Increment the value by a given amount with the provided memory ordering.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":31310,"byte_end":31386,"line_start":213,"line_end":213,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":31603,"byte_end":31607,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicU64>::swap","value":"pub fn swap(&Self, u64, Ordering) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Stores a value into the atomic integer, returning the previous value.\n","sig":null,"attributes":[{"value":"/ Stores a value into the atomic integer, returning the previous value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":31518,"byte_end":31591,"line_start":218,"line_end":218,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":173},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":32754,"byte_end":32770,"line_start":10,"line_end":10,"column_start":11,"column_end":27},"name":"CounterDelegator","qualname":"::auto_flush::CounterDelegator","value":"CounterDelegator<T: 'static + MayFlush, V: CounterWithValueType>","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" Delegator for auto flush-able local counter\n","sig":null,"attributes":[{"value":"/ Delegator for auto flush-able local counter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":32696,"byte_end":32743,"line_start":9,"line_end":9,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":32875,"byte_end":32890,"line_start":12,"line_end":12,"column_start":8,"column_end":23},"name":"get_root_metric","qualname":"::auto_flush::CounterDelegator::get_root_metric","value":"pub fn get_root_metric(&Self) -> &'static LocalKey<T>","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Get the root local metric for delegate\n","sig":null,"attributes":[{"value":"/ Get the root local metric for delegate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":32825,"byte_end":32867,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":32974,"byte_end":32983,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"get_local","qualname":"::auto_flush::CounterDelegator::get_local","value":"pub fn get_local<'a>(&Self, &'a T) -> &'a GenericLocalCounter<V::ValueType>","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Get the final counter for delegate\n","sig":null,"attributes":[{"value":"/ Get the final counter for delegate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":32928,"byte_end":32966,"line_start":14,"line_end":14,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":179},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33118,"byte_end":33136,"line_start":19,"line_end":19,"column_start":11,"column_end":29},"name":"HistogramDelegator","qualname":"::auto_flush::HistogramDelegator","value":"HistogramDelegator<T: 'static + MayFlush>","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" Delegator for auto flush-able local counter\n","sig":null,"attributes":[{"value":"/ Delegator for auto flush-able local counter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33060,"byte_end":33107,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33216,"byte_end":33231,"line_start":21,"line_end":21,"column_start":8,"column_end":23},"name":"get_root_metric","qualname":"::auto_flush::HistogramDelegator::get_root_metric","value":"pub fn get_root_metric(&Self) -> &'static LocalKey<T>","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Get the root local metric for delegate\n","sig":null,"attributes":[{"value":"/ Get the root local metric for delegate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33166,"byte_end":33208,"line_start":20,"line_end":20,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33315,"byte_end":33324,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"get_local","qualname":"::auto_flush::HistogramDelegator::get_local","value":"pub fn get_local<'a>(&Self, &'a T) -> &'a LocalHistogram","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Get the final counter for delegate\n","sig":null,"attributes":[{"value":"/ Get the final counter for delegate","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33269,"byte_end":33307,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1074},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33444,"byte_end":33458,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"AFLocalCounter","qualname":"::auto_flush::AFLocalCounter","value":"AFLocalCounter {  }","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079}],"decl_id":null,"docs":" Auto flush-able local counter\n","sig":null,"attributes":[{"value":"/ Auto flush-able local counter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33382,"byte_end":33415,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33861,"byte_end":33864,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<AFLocalCounter<T, V, D>>::new","value":"pub fn new(D) -> AFLocalCounter<T, V, D>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new AFLocalCounter from delegator.\n","sig":null,"attributes":[{"value":"/ Construct a new AFLocalCounter from delegator.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33799,"byte_end":33849,"line_start":40,"line_end":40,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":34753,"byte_end":34759,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"inc_by","qualname":"<AFLocalCounter<T, V, D>>::inc_by","value":"pub fn inc_by(&Self, <V::ValueType as Atomic>::T)","parent":null,"children":[],"decl_id":null,"docs":" Increase the given value to the local counter,\n and try to flush to global\n # Panics","sig":null,"attributes":[{"value":"/ Increase the given value to the local counter,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":34566,"byte_end":34616,"line_start":66,"line_end":66,"column_start":5,"column_end":55}},{"value":"/ and try to flush to global","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":34621,"byte_end":34651,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":34656,"byte_end":34668,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":34673,"byte_end":34676,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Panics in debug build if the value is < 0.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":34681,"byte_end":34727,"line_start":70,"line_end":70,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":34732,"byte_end":34741,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35068,"byte_end":35071,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"inc","qualname":"<AFLocalCounter<T, V, D>>::inc","value":"pub fn inc(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Increase the local counter by 1,\n and try to flush to global.\n","sig":null,"attributes":[{"value":"/ Increase the local counter by 1,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":34970,"byte_end":35006,"line_start":80,"line_end":80,"column_start":5,"column_end":41}},{"value":"/ and try to flush to global.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35011,"byte_end":35042,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35047,"byte_end":35056,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35307,"byte_end":35310,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"get","qualname":"<AFLocalCounter<T, V, D>>::get","value":"pub fn get(&Self) -> <V::ValueType as Atomic>::T","parent":null,"children":[],"decl_id":null,"docs":" Return the local counter value.\n","sig":null,"attributes":[{"value":"/ Return the local counter value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35246,"byte_end":35281,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35286,"byte_end":35295,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35569,"byte_end":35574,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"reset","qualname":"<AFLocalCounter<T, V, D>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Restart the counter, resetting its value back to 0.\n","sig":null,"attributes":[{"value":"/ Restart the counter, resetting its value back to 0.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35488,"byte_end":35543,"line_start":100,"line_end":100,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35548,"byte_end":35557,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35782,"byte_end":35787,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"flush","qualname":"<AFLocalCounter<T, V, D>>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" trigger flush of LocalKey<T>\n","sig":null,"attributes":[{"value":"/ trigger flush of LocalKey<T>","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35724,"byte_end":35756,"line_start":109,"line_end":109,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35761,"byte_end":35770,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1085},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35919,"byte_end":35935,"line_start":118,"line_end":118,"column_start":12,"column_end":28},"name":"AFLocalHistogram","qualname":"::auto_flush::AFLocalHistogram","value":"AFLocalHistogram {  }","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089}],"decl_id":null,"docs":" Auto flush-able local counter\n","sig":null,"attributes":[{"value":"/ Auto flush-able local counter","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":35857,"byte_end":35890,"line_start":116,"line_end":116,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":36270,"byte_end":36273,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"new","qualname":"<AFLocalHistogram<T, D>>::new","value":"pub fn new(D) -> AFLocalHistogram<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new AFLocalHistogram from delegator\n","sig":null,"attributes":[{"value":"/ Construct a new AFLocalHistogram from delegator","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":36207,"byte_end":36258,"line_start":126,"line_end":126,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":36618,"byte_end":36625,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"observe","qualname":"<AFLocalHistogram<M, D>>::observe","value":"pub fn observe(&Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Add a single observation to the [`Histogram`](::Histogram).\n","sig":null,"attributes":[{"value":"/ Add a single observation to the [`Histogram`](::Histogram).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":36543,"byte_end":36606,"line_start":137,"line_end":137,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":36890,"byte_end":36914,"line_start":147,"line_end":147,"column_start":12,"column_end":36},"name":"observe_closure_duration","qualname":"<AFLocalHistogram<M, D>>::observe_closure_duration","value":"pub fn observe_closure_duration<F, T>(&Self, F) -> T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Observe execution time of a closure, in second.\n","sig":null,"attributes":[{"value":"/ Observe execution time of a closure, in second.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":36827,"byte_end":36878,"line_start":146,"line_end":146,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":37540,"byte_end":37545,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"clear","qualname":"<AFLocalHistogram<M, D>>::clear","value":"pub fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the local metric.\n","sig":null,"attributes":[{"value":"/ Clear the local metric.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":37501,"byte_end":37528,"line_start":171,"line_end":171,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":37760,"byte_end":37765,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"flush","qualname":"<AFLocalHistogram<M, D>>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the local metrics to the [`Histogram`](::Histogram) metric.\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the [`Histogram`](::Histogram) metric.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":37679,"byte_end":37748,"line_start":178,"line_end":178,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":37956,"byte_end":37970,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"get_sample_sum","qualname":"<AFLocalHistogram<M, D>>::get_sample_sum","value":"pub fn get_sample_sum(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Return accumulated sum of local samples.\n","sig":null,"attributes":[{"value":"/ Return accumulated sum of local samples.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":37900,"byte_end":37944,"line_start":185,"line_end":185,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":38166,"byte_end":38182,"line_start":193,"line_end":193,"column_start":12,"column_end":28},"name":"get_sample_count","qualname":"<AFLocalHistogram<M, D>>::get_sample_count","value":"pub fn get_sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return count of local samples.\n","sig":null,"attributes":[{"value":"/ Return count of local samples.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":38120,"byte_end":38154,"line_start":192,"line_end":192,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1094},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":38920,"byte_end":38934,"line_start":19,"line_end":19,"column_start":12,"column_end":26},"name":"GenericCounter","qualname":"::counter::GenericCounter","value":"GenericCounter {  }","parent":null,"children":[{"krate":0,"index":1096}],"decl_id":null,"docs":" The underlying implementation for [`Counter`] and [`IntCounter`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`Counter`] and [`IntCounter`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":38822,"byte_end":38891,"line_start":17,"line_end":17,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":250},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39059,"byte_end":39066,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"Counter","qualname":"::counter::Counter","value":"GenericCounter<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" A [`Metric`] represents a single numerical value that only ever goes up.\n","sig":null,"attributes":[{"value":"/ A [`Metric`] represents a single numerical value that only ever goes up.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":38973,"byte_end":39049,"line_start":23,"line_end":23,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":251},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39213,"byte_end":39223,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"IntCounter","qualname":"::counter::IntCounter","value":"GenericCounter<AtomicI64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`Counter`]. Provides better performance if metric values\n are all integers.\n","sig":null,"attributes":[{"value":"/ The integer version of [`Counter`]. Provides better performance if metric values","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39097,"byte_end":39181,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/ are all integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39182,"byte_end":39203,"line_start":27,"line_end":27,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39521,"byte_end":39524,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericCounter<P>>::new","value":"pub fn new<S1: Into<String>, S2: Into<String>>(S1, S2) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`GenericCounter`] with the `name` and `help` arguments.\n","sig":null,"attributes":[{"value":"/ Create a [`GenericCounter`] with the `name` and `help` arguments.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39440,"byte_end":39509,"line_start":39,"line_end":39,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39750,"byte_end":39759,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"with_opts","qualname":"<GenericCounter<P>>::with_opts","value":"pub fn with_opts(Opts) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`GenericCounter`] with the `opts` options.\n","sig":null,"attributes":[{"value":"/ Create a [`GenericCounter`] with the `opts` options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39682,"byte_end":39738,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40227,"byte_end":40233,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"inc_by","qualname":"<GenericCounter<P>>::inc_by","value":"pub fn inc_by(&Self, P::T)","parent":null,"children":[],"decl_id":null,"docs":" Increase the given value to the counter.","sig":null,"attributes":[{"value":"/ Increase the given value to the counter.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40073,"byte_end":40117,"line_start":55,"line_end":55,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40122,"byte_end":40125,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40130,"byte_end":40142,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40147,"byte_end":40150,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Panics in debug build if the value is < 0.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40155,"byte_end":40201,"line_start":59,"line_end":59,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40206,"byte_end":40215,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40392,"byte_end":40395,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"inc","qualname":"<GenericCounter<P>>::inc","value":"pub fn inc(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Increase the counter by 1.\n","sig":null,"attributes":[{"value":"/ Increase the counter by 1.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40336,"byte_end":40366,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40371,"byte_end":40380,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40493,"byte_end":40496,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"get","qualname":"<GenericCounter<P>>::get","value":"pub fn get(&Self) -> P::T","parent":null,"children":[],"decl_id":null,"docs":" Return the counter value.\n","sig":null,"attributes":[{"value":"/ Return the counter value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40438,"byte_end":40467,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40472,"byte_end":40481,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40627,"byte_end":40632,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"reset","qualname":"<GenericCounter<P>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Restart the counter, resetting its value back to 0.\n","sig":null,"attributes":[{"value":"/ Restart the counter, resetting its value back to 0.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40546,"byte_end":40601,"line_start":78,"line_end":78,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40606,"byte_end":40615,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40764,"byte_end":40769,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"local","qualname":"<GenericCounter<P>>::local","value":"pub fn local(&Self) -> GenericLocalCounter<P>","parent":null,"children":[],"decl_id":null,"docs":" Return a [`GenericLocalCounter`] for single thread usage.\n","sig":null,"attributes":[{"value":"/ Return a [`GenericLocalCounter`] for single thread usage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40691,"byte_end":40752,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1100},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41220,"byte_end":41237,"line_start":107,"line_end":107,"column_start":12,"column_end":29},"name":"CounterVecBuilder","qualname":"::counter::CounterVecBuilder","value":"CounterVecBuilder {  }","parent":null,"children":[{"krate":0,"index":1102}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41334,"byte_end":41337,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<CounterVecBuilder<P>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":285},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41858,"byte_end":41875,"line_start":135,"line_end":135,"column_start":10,"column_end":27},"name":"GenericCounterVec","qualname":"::counter::GenericCounterVec","value":"MetricVec<CounterVecBuilder<P>>","parent":null,"children":[],"decl_id":null,"docs":" The underlying implementation for [`CounterVec`] and [`IntCounterVec`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`CounterVec`] and [`IntCounterVec`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41773,"byte_end":41848,"line_start":134,"line_end":134,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":287},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42234,"byte_end":42244,"line_start":141,"line_end":141,"column_start":10,"column_end":20},"name":"CounterVec","qualname":"::counter::CounterVec","value":"GenericCounterVec<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" A [`Collector`] that bundles a set of [`Counter`]s that all share\n the same [`Desc`], but have different values for their variable labels. This is\n used if you want to count the same thing partitioned by various dimensions\n (e.g. number of HTTP requests, partitioned by response code and method).\n","sig":null,"attributes":[{"value":"/ A [`Collector`] that bundles a set of [`Counter`]s that all share","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41915,"byte_end":41984,"line_start":137,"line_end":137,"column_start":1,"column_end":70}},{"value":"/ the same [`Desc`], but have different values for their variable labels. This is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41985,"byte_end":42068,"line_start":138,"line_end":138,"column_start":1,"column_end":84}},{"value":"/ used if you want to count the same thing partitioned by various dimensions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42069,"byte_end":42147,"line_start":139,"line_end":139,"column_start":1,"column_end":79}},{"value":"/ (e.g. number of HTTP requests, partitioned by response code and method).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42148,"byte_end":42224,"line_start":140,"line_end":140,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":288},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42397,"byte_end":42410,"line_start":145,"line_end":145,"column_start":10,"column_end":23},"name":"IntCounterVec","qualname":"::counter::IntCounterVec","value":"GenericCounterVec<AtomicI64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`CounterVec`]. Provides better performance if metric\n values are all integers.\n","sig":null,"attributes":[{"value":"/ The integer version of [`CounterVec`]. Provides better performance if metric","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42278,"byte_end":42358,"line_start":143,"line_end":143,"column_start":1,"column_end":81}},{"value":"/ values are all integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42359,"byte_end":42387,"line_start":144,"line_end":144,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42668,"byte_end":42671,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericCounterVec<P>>::new","value":"pub fn new(Opts, &[&str]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`GenericCounterVec`] based on the provided\n [`Opts`] and partitioned by the given label names. At least one label name must be\n provided.\n","sig":null,"attributes":[{"value":"/ Create a new [`GenericCounterVec`] based on the provided","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42487,"byte_end":42547,"line_start":148,"line_end":148,"column_start":5,"column_end":65}},{"value":"/ [`Opts`] and partitioned by the given label names. At least one label name must be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42552,"byte_end":42638,"line_start":149,"line_end":149,"column_start":5,"column_end":91}},{"value":"/ provided.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42643,"byte_end":42656,"line_start":150,"line_end":150,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43101,"byte_end":43106,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"local","qualname":"<GenericCounterVec<P>>::local","value":"pub fn local(&Self) -> GenericLocalCounterVec<P>","parent":null,"children":[],"decl_id":null,"docs":" Return a [`GenericLocalCounterVec`] for single thread usage.\n","sig":null,"attributes":[{"value":"/ Return a [`GenericLocalCounterVec`] for single thread usage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43025,"byte_end":43089,"line_start":160,"line_end":160,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43316,"byte_end":43335,"line_start":169,"line_end":169,"column_start":12,"column_end":31},"name":"GenericLocalCounter","qualname":"::counter::GenericLocalCounter","value":"GenericLocalCounter {  }","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"decl_id":null,"docs":" The underlying implementation for [`LocalCounter`]\n and [`LocalIntCounter`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`LocalCounter`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43204,"byte_end":43258,"line_start":166,"line_end":166,"column_start":1,"column_end":55}},{"value":"/ and [`LocalIntCounter`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43259,"byte_end":43287,"line_start":167,"line_end":167,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":294},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43492,"byte_end":43512,"line_start":175,"line_end":175,"column_start":11,"column_end":31},"name":"CounterWithValueType","qualname":"::counter::CounterWithValueType","value":"CounterWithValueType","parent":null,"children":[{"krate":0,"index":295}],"decl_id":null,"docs":" For auto_flush::AFLocalCounter to use to make type inference possible\n","sig":null,"attributes":[{"value":"/ For auto_flush::AFLocalCounter to use to make type inference possible","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43408,"byte_end":43481,"line_start":174,"line_end":174,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":295},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43570,"byte_end":43579,"line_start":177,"line_end":177,"column_start":10,"column_end":19},"name":"ValueType","qualname":"::counter::CounterWithValueType::ValueType","value":"type ValueType: Atomic;","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"the exact type which implements Atomic\n","sig":null,"attributes":[{"value":"/the exact type which implements Atomic","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43519,"byte_end":43560,"line_start":176,"line_end":176,"column_start":5,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":299},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43721,"byte_end":43733,"line_start":185,"line_end":185,"column_start":10,"column_end":22},"name":"LocalCounter","qualname":"::counter::LocalCounter","value":"GenericLocalCounter<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" An unsync [`Counter`].\n","sig":null,"attributes":[{"value":"/ An unsync [`Counter`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43685,"byte_end":43711,"line_start":184,"line_end":184,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":300},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43890,"byte_end":43905,"line_start":189,"line_end":189,"column_start":10,"column_end":25},"name":"LocalIntCounter","qualname":"::counter::LocalIntCounter","value":"GenericLocalCounter<AtomicI64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`LocalCounter`]. Provides better performance\n if metric values are all integers.\n","sig":null,"attributes":[{"value":"/ The integer version of [`LocalCounter`]. Provides better performance","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43769,"byte_end":43841,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ if metric values are all integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43842,"byte_end":43880,"line_start":188,"line_end":188,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44298,"byte_end":44304,"line_start":205,"line_end":205,"column_start":12,"column_end":18},"name":"inc_by","qualname":"<GenericLocalCounter<P>>::inc_by","value":"pub fn inc_by(&Self, P::T)","parent":null,"children":[],"decl_id":null,"docs":" Increase the given value to the local counter.","sig":null,"attributes":[{"value":"/ Increase the given value to the local counter.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44138,"byte_end":44188,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44193,"byte_end":44196,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44201,"byte_end":44213,"line_start":201,"line_end":201,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44218,"byte_end":44221,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Panics in debug build if the value is < 0.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44226,"byte_end":44272,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44277,"byte_end":44286,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44480,"byte_end":44483,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"inc","qualname":"<GenericLocalCounter<P>>::inc","value":"pub fn inc(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Increase the local counter by 1.\n","sig":null,"attributes":[{"value":"/ Increase the local counter by 1.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44418,"byte_end":44454,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44459,"byte_end":44468,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44618,"byte_end":44621,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"get","qualname":"<GenericLocalCounter<P>>::get","value":"pub fn get(&Self) -> P::T","parent":null,"children":[],"decl_id":null,"docs":" Return the local counter value.\n","sig":null,"attributes":[{"value":"/ Return the local counter value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44557,"byte_end":44592,"line_start":216,"line_end":216,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44597,"byte_end":44606,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44758,"byte_end":44763,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"reset","qualname":"<GenericLocalCounter<P>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Restart the counter, resetting its value back to 0.\n","sig":null,"attributes":[{"value":"/ Restart the counter, resetting its value back to 0.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44677,"byte_end":44732,"line_start":222,"line_end":222,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44737,"byte_end":44746,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44909,"byte_end":44914,"line_start":230,"line_end":230,"column_start":12,"column_end":17},"name":"flush","qualname":"<GenericLocalCounter<P>>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the local metrics to the [`Counter`].\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the [`Counter`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44836,"byte_end":44883,"line_start":228,"line_end":228,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":44888,"byte_end":44897,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":315},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45544,"byte_end":45566,"line_start":255,"line_end":255,"column_start":12,"column_end":34},"name":"GenericLocalCounterVec","qualname":"::counter::GenericLocalCounterVec","value":"GenericLocalCounterVec {  }","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318}],"decl_id":null,"docs":" The underlying implementation for [`LocalCounterVec`]\n and [`LocalIntCounterVec`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`LocalCounterVec`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45443,"byte_end":45500,"line_start":253,"line_end":253,"column_start":1,"column_end":58}},{"value":"/ and [`LocalIntCounterVec`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45501,"byte_end":45532,"line_start":254,"line_end":254,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":322},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45975,"byte_end":45990,"line_start":271,"line_end":271,"column_start":10,"column_end":25},"name":"LocalCounterVec","qualname":"::counter::LocalCounterVec","value":"GenericLocalCounterVec<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" An unsync [`CounterVec`].\n","sig":null,"attributes":[{"value":"/ An unsync [`CounterVec`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45936,"byte_end":45965,"line_start":270,"line_end":270,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":323},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46153,"byte_end":46171,"line_start":275,"line_end":275,"column_start":10,"column_end":28},"name":"LocalIntCounterVec","qualname":"::counter::LocalIntCounterVec","value":"GenericLocalCounterVec<AtomicI64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`LocalCounterVec`].\n Provides better performance if metric values are all integers.\n","sig":null,"attributes":[{"value":"/ The integer version of [`LocalCounterVec`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46029,"byte_end":46076,"line_start":273,"line_end":273,"column_start":1,"column_end":48}},{"value":"/ Provides better performance if metric values are all integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46077,"byte_end":46143,"line_start":274,"line_end":274,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46525,"byte_end":46542,"line_start":285,"line_end":285,"column_start":12,"column_end":29},"name":"with_label_values","qualname":"<GenericLocalCounterVec<P>>::with_label_values","value":"pub fn with_label_values<'a>(&'a mut Self, &[&str])\n-> &'a mut GenericLocalCounter<P>","parent":null,"children":[],"decl_id":null,"docs":" Get a [`GenericLocalCounter`] by label values.\n See more [MetricVec::with_label_values].\n","sig":null,"attributes":[{"value":"/ Get a [`GenericLocalCounter`] by label values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46414,"byte_end":46464,"line_start":283,"line_end":283,"column_start":5,"column_end":55}},{"value":"/ See more [MetricVec::with_label_values].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46469,"byte_end":46513,"line_start":284,"line_end":284,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46944,"byte_end":46963,"line_start":295,"line_end":295,"column_start":12,"column_end":31},"name":"remove_label_values","qualname":"<GenericLocalCounterVec<P>>::remove_label_values","value":"pub fn remove_label_values(&mut Self, &[&str]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Remove a [`GenericLocalCounter`] by label values.\n See more [MetricVec::remove_label_values].\n","sig":null,"attributes":[{"value":"/ Remove a [`GenericLocalCounter`] by label values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46828,"byte_end":46881,"line_start":293,"line_end":293,"column_start":5,"column_end":58}},{"value":"/ See more [MetricVec::remove_label_values].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46886,"byte_end":46932,"line_start":294,"line_end":294,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":47221,"byte_end":47226,"line_start":302,"line_end":302,"column_start":12,"column_end":17},"name":"flush","qualname":"<GenericLocalCounterVec<P>>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the local metrics to the [`CounterVec`] metric.\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the [`CounterVec`] metric.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":47152,"byte_end":47209,"line_start":301,"line_end":301,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1113},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60218,"byte_end":60222,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"Desc","qualname":"::desc::Desc","value":"Desc { fq_name, help, const_label_pairs, variable_labels, id, dim_hash }","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119}],"decl_id":null,"docs":" The descriptor used by every Prometheus [`Metric`](crate::core::Metric). It is essentially\n the immutable meta-data of a metric. The normal metric implementations\n included in this package manage their [`Desc`] under the hood.","sig":null,"attributes":[{"value":"/ The descriptor used by every Prometheus [`Metric`](crate::core::Metric). It is essentially","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":59456,"byte_end":59550,"line_start":57,"line_end":57,"column_start":1,"column_end":95}},{"value":"/ the immutable meta-data of a metric. The normal metric implementations","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":59551,"byte_end":59625,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/ included in this package manage their [`Desc`] under the hood.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":59626,"byte_end":59692,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":59693,"byte_end":59696,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Descriptors registered with the same registry have to fulfill certain","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":59697,"byte_end":59770,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/ consistency and uniqueness criteria if they share the same fully-qualified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":59771,"byte_end":59849,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ name: They must have the same help string and the same label names (aka label","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":59850,"byte_end":59931,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/ dimensions) in each, constLabels and variableLabels, but they must differ in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":59932,"byte_end":60012,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ the values of the constLabels.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60013,"byte_end":60047,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60048,"byte_end":60051,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Descriptors that share the same fully-qualified names and the same label","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60052,"byte_end":60128,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ values of their constLabels are considered equal.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60129,"byte_end":60182,"line_start":68,"line_end":68,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1114},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60301,"byte_end":60308,"line_start":72,"line_end":72,"column_start":9,"column_end":16},"name":"fq_name","qualname":"::desc::Desc::fq_name","value":"std::string::String","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" fq_name has been built from Namespace, Subsystem, and Name.\n","sig":null,"attributes":[{"value":"/ fq_name has been built from Namespace, Subsystem, and Name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60229,"byte_end":60292,"line_start":71,"line_end":71,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1115},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60392,"byte_end":60396,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"help","qualname":"::desc::Desc::help","value":"std::string::String","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" help provides some helpful information about this metric.\n","sig":null,"attributes":[{"value":"/ help provides some helpful information about this metric.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60322,"byte_end":60383,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1116},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60517,"byte_end":60534,"line_start":77,"line_end":77,"column_start":9,"column_end":26},"name":"const_label_pairs","qualname":"::desc::Desc::const_label_pairs","value":"std::vec::Vec<proto::LabelPair>","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" const_label_pairs contains precalculated DTO label pairs based on\n the constant labels.\n","sig":null,"attributes":[{"value":"/ const_label_pairs contains precalculated DTO label pairs based on","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60410,"byte_end":60479,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"/ the constant labels.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60484,"byte_end":60508,"line_start":76,"line_end":76,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1117},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60665,"byte_end":60680,"line_start":80,"line_end":80,"column_start":9,"column_end":24},"name":"variable_labels","qualname":"::desc::Desc::variable_labels","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" variable_labels contains names of labels for which the metric\n maintains variable values.\n","sig":null,"attributes":[{"value":"/ variable_labels contains names of labels for which the metric","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60556,"byte_end":60621,"line_start":78,"line_end":78,"column_start":5,"column_end":70}},{"value":"/ maintains variable values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60626,"byte_end":60656,"line_start":79,"line_end":79,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1118},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60900,"byte_end":60902,"line_start":84,"line_end":84,"column_start":9,"column_end":11},"name":"id","qualname":"::desc::Desc::id","value":"u64","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" id is a hash of the values of the ConstLabels and fqName. This\n must be unique among all registered descriptors and can therefore be\n used as an identifier of the descriptor.\n","sig":null,"attributes":[{"value":"/ id is a hash of the values of the ConstLabels and fqName. This","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60699,"byte_end":60765,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/ must be unique among all registered descriptors and can therefore be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60770,"byte_end":60842,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ used as an identifier of the descriptor.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60847,"byte_end":60891,"line_start":83,"line_end":83,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1119},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":61081,"byte_end":61089,"line_start":88,"line_end":88,"column_start":9,"column_end":17},"name":"dim_hash","qualname":"::desc::Desc::dim_hash","value":"u64","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" dim_hash is a hash of the label names (preset and variable) and the\n Help string. Each Desc with the same fqName must have the same\n dimHash.\n","sig":null,"attributes":[{"value":"/ dim_hash is a hash of the label names (preset and variable) and the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60913,"byte_end":60984,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ Help string. Each Desc with the same fqName must have the same","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":60989,"byte_end":61055,"line_start":86,"line_end":86,"column_start":5,"column_end":71}},{"value":"/ dimHash.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":61060,"byte_end":61072,"line_start":87,"line_end":87,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":61359,"byte_end":61362,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Desc>::new","value":"pub fn new(String, String, Vec<String>, HashMap<String, String>)\n-> Result<Desc>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a new [`Desc`]. Errors are recorded in the Desc\n and will be reported on registration time. variableLabels and constLabels can\n be nil if no such labels should be set. fqName and help must not be empty.\n","sig":null,"attributes":[{"value":"/ Initializes a new [`Desc`]. Errors are recorded in the Desc","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":61115,"byte_end":61178,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/ and will be reported on registration time. variableLabels and constLabels can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":61183,"byte_end":61264,"line_start":93,"line_end":93,"column_start":5,"column_end":86}},{"value":"/ be nil if no such labels should be set. fqName and help must not be empty.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":61269,"byte_end":61347,"line_start":94,"line_end":94,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":359},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":64708,"byte_end":64717,"line_start":199,"line_end":199,"column_start":11,"column_end":20},"name":"Describer","qualname":"::desc::Describer","value":"Describer","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" An interface for describing the immutable meta-data of a [`Metric`](crate::core::Metric).\n","sig":null,"attributes":[{"value":"/ An interface for describing the immutable meta-data of a [`Metric`](crate::core::Metric).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":64604,"byte_end":64697,"line_start":198,"line_end":198,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":64766,"byte_end":64774,"line_start":201,"line_end":201,"column_start":8,"column_end":16},"name":"describe","qualname":"::desc::Describer::describe","value":"pub fn describe(&Self) -> Result<Desc>","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" `describe` returns a [`Desc`].\n","sig":null,"attributes":[{"value":"/ `describe` returns a [`Desc`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":64724,"byte_end":64758,"line_start":200,"line_end":200,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1124},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","byte_start":71538,"byte_end":71549,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"TextEncoder","qualname":"::encoder::text::TextEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of an [`Encoder`] that converts a [`MetricFamily`] proto message\n into text format.\n","sig":null,"attributes":[{"value":"/ An implementation of an [`Encoder`] that converts a [`MetricFamily`] proto message","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","byte_start":71392,"byte_end":71478,"line_start":19,"line_end":19,"column_start":1,"column_end":87}},{"value":"/ into text format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","byte_start":71479,"byte_end":71500,"line_start":20,"line_end":20,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","byte_start":71617,"byte_end":71620,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<TextEncoder>::new","value":"pub fn new() -> TextEncoder","parent":null,"children":[],"decl_id":null,"docs":" Create a new text encoder.\n","sig":null,"attributes":[{"value":"/ Create a new text encoder.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","byte_start":71575,"byte_end":71605,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":397},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68187,"byte_end":68194,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":400}],"decl_id":null,"docs":" An interface for encoding metric families into an underlying wire protocol.\n","sig":null,"attributes":[{"value":"/ An interface for encoding metric families into an underlying wire protocol.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68097,"byte_end":68176,"line_start":16,"line_end":16,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68600,"byte_end":68606,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::encoder::Encoder::encode","value":"pub fn encode<W: Write>(&Self, &[MetricFamily], &mut W) -> Result<()>","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" `encode` converts a slice of MetricFamily proto messages into target\n format and writes the resulting lines to `writer`. It returns the number\n of bytes written and any error encountered. This function does not\n perform checks on the content of the metric and label names,\n i.e. invalid metric or label names will result in invalid text format\n output.\n","sig":null,"attributes":[{"value":"/ `encode` converts a slice of MetricFamily proto messages into target","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68201,"byte_end":68273,"line_start":18,"line_end":18,"column_start":5,"column_end":77}},{"value":"/ format and writes the resulting lines to `writer`. It returns the number","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68278,"byte_end":68354,"line_start":19,"line_end":19,"column_start":5,"column_end":81}},{"value":"/ of bytes written and any error encountered. This function does not","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68359,"byte_end":68429,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ perform checks on the content of the metric and label names,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68434,"byte_end":68498,"line_start":21,"line_end":21,"column_start":5,"column_end":69}},{"value":"/ i.e. invalid metric or label names will result in invalid text format","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68503,"byte_end":68576,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ output.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68581,"byte_end":68592,"line_start":23,"line_end":23,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68723,"byte_end":68734,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"format_type","qualname":"::encoder::Encoder::format_type","value":"pub fn format_type(&Self) -> &str","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" `format_type` returns target format.\n","sig":null,"attributes":[{"value":"/ `format_type` returns target format.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/mod.rs","byte_start":68675,"byte_end":68715,"line_start":26,"line_end":26,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1153},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":84959,"byte_end":84969,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"AlreadyReg","qualname":"::errors::Error::AlreadyReg","value":"Error::AlreadyReg","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":" A duplicate metric collector has already been registered.\n","sig":null,"attributes":[{"value":"/ A duplicate metric collector has already been registered.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":84826,"byte_end":84887,"line_start":8,"line_end":8,"column_start":5,"column_end":66}},{"value":"error(\"Duplicate metrics collector registration attempted\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":84892,"byte_end":84954,"line_start":9,"line_end":9,"column_start":5,"column_end":67}}]},{"kind":"StructVariant","id":{"krate":0,"index":1155},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":85115,"byte_end":85138,"line_start":13,"line_end":13,"column_start":5,"column_end":28},"name":"InconsistentCardinality","qualname":"::errors::Error::InconsistentCardinality","value":"Error::InconsistentCardinality { expect, got }","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":" The label cardinality was inconsistent.\n","sig":null,"attributes":[{"value":"/ The label cardinality was inconsistent.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":84975,"byte_end":85018,"line_start":11,"line_end":11,"column_start":5,"column_end":48}},{"value":"error(\"Inconsistent label cardinality, expect {expect} label values, but got {got}\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":85023,"byte_end":85110,"line_start":12,"line_end":12,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1158},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":85355,"byte_end":85358,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"Msg","qualname":"::errors::Error::Msg","value":"Error::Msg(String)","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":" An error message which is only a string.\n","sig":null,"attributes":[{"value":"/ An error message which is only a string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":85279,"byte_end":85323,"line_start":19,"line_end":19,"column_start":5,"column_end":49}},{"value":"error(\"Error: {0}\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":85328,"byte_end":85350,"line_start":20,"line_end":20,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1161},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":85452,"byte_end":85454,"line_start":24,"line_end":24,"column_start":5,"column_end":7},"name":"Io","qualname":"::errors::Error::Io","value":"Error::Io(std::io::Error)","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":" An error containing a [`std::io::Error`].\n","sig":null,"attributes":[{"value":"/ An error containing a [`std::io::Error`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":85372,"byte_end":85417,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"error(\"Io error: {0}\")","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":85422,"byte_end":85447,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1152},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":84814,"byte_end":84819,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error {\n\n    /// A duplicate metric collector has already been registered.\n    #[error(\"Duplicate metrics collector registration attempted\")]\n    AlreadyReg,\n\n    /// The label cardinality was inconsistent.\n    #[error(\"Inconsistent label cardinality, expect {expect} label values, but got {got}\")]\n    InconsistentCardinality {\n        /// The expected number of labels.\n        expect: usize,\n        /// The actual number of labels.\n        got: usize,\n    },\n\n    /// An error message which is only a string.\n    #[error(\"Error: {0}\")]\n    Msg(String),\n\n    /// An error containing a [`std::io::Error`].\n    #[error(\"Io error: {0}\")]\n    Io(\n       #[from]\n       std::io::Error),\n}","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161}],"decl_id":null,"docs":" The error types for prometheus.\n","sig":null,"attributes":[{"value":"/ The error types for prometheus.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":84745,"byte_end":84780,"line_start":5,"line_end":5,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":404},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":85727,"byte_end":85733,"line_start":32,"line_end":32,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized Result type for prometheus.\n","sig":null,"attributes":[{"value":"/ A specialized Result type for prometheus.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/errors.rs","byte_start":85672,"byte_end":85717,"line_start":31,"line_end":31,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1176},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86287,"byte_end":86299,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"GenericGauge","qualname":"::gauge::GenericGauge","value":"GenericGauge {  }","parent":null,"children":[{"krate":0,"index":1178}],"decl_id":null,"docs":" The underlying implementation for [`Gauge`] and [`IntGauge`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`Gauge`] and [`IntGauge`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86193,"byte_end":86258,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":427},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86441,"byte_end":86446,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Gauge","qualname":"::gauge::Gauge","value":"GenericGauge<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" A [`Metric`] represents a single numerical value that can arbitrarily go up\n and down.\n","sig":null,"attributes":[{"value":"/ A [`Metric`] represents a single numerical value that can arbitrarily go up","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86338,"byte_end":86417,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ and down.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86418,"byte_end":86431,"line_start":22,"line_end":22,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":428},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86589,"byte_end":86597,"line_start":27,"line_end":27,"column_start":10,"column_end":18},"name":"IntGauge","qualname":"::gauge::IntGauge","value":"GenericGauge<AtomicI64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`Gauge`]. Provides better performance if metric values are\n all integers.\n","sig":null,"attributes":[{"value":"/ The integer version of [`Gauge`]. Provides better performance if metric values are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86475,"byte_end":86561,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"/ all integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86562,"byte_end":86579,"line_start":26,"line_end":26,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86887,"byte_end":86890,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericGauge<P>>::new","value":"pub fn new<S1: Into<String>, S2: Into<String>>(S1, S2) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`GenericGauge`] with the `name` and `help` arguments.\n","sig":null,"attributes":[{"value":"/ Create a [`GenericGauge`] with the `name` and `help` arguments.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86808,"byte_end":86875,"line_start":38,"line_end":38,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87114,"byte_end":87123,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"with_opts","qualname":"<GenericGauge<P>>::with_opts","value":"pub fn with_opts(Opts) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`GenericGauge`] with the `opts` options.\n","sig":null,"attributes":[{"value":"/ Create a [`GenericGauge`] with the `opts` options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87048,"byte_end":87102,"line_start":44,"line_end":44,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87501,"byte_end":87504,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"set","qualname":"<GenericGauge<P>>::set","value":"pub fn set(&Self, P::T)","parent":null,"children":[],"decl_id":null,"docs":" Set the gauge to an arbitrary value.\n","sig":null,"attributes":[{"value":"/ Set the gauge to an arbitrary value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87435,"byte_end":87475,"line_start":54,"line_end":54,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87480,"byte_end":87489,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87611,"byte_end":87614,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"inc","qualname":"<GenericGauge<P>>::inc","value":"pub fn inc(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Increase the gauge by 1.\n","sig":null,"attributes":[{"value":"/ Increase the gauge by 1.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87557,"byte_end":87585,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87590,"byte_end":87599,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87711,"byte_end":87714,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"dec","qualname":"<GenericGauge<P>>::dec","value":"pub fn dec(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Decrease the gauge by 1.\n","sig":null,"attributes":[{"value":"/ Decrease the gauge by 1.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87657,"byte_end":87685,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87690,"byte_end":87699,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87896,"byte_end":87899,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"add","qualname":"<GenericGauge<P>>::add","value":"pub fn add(&Self, P::T)","parent":null,"children":[],"decl_id":null,"docs":" Add the given value to the gauge. (The value can be\n negative, resulting in a decrement of the gauge.)\n","sig":null,"attributes":[{"value":"/ Add the given value to the gauge. (The value can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87757,"byte_end":87812,"line_start":72,"line_end":72,"column_start":5,"column_end":60}},{"value":"/ negative, resulting in a decrement of the gauge.)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87817,"byte_end":87870,"line_start":73,"line_end":73,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87875,"byte_end":87884,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88102,"byte_end":88105,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"sub","qualname":"<GenericGauge<P>>::sub","value":"pub fn sub(&Self, P::T)","parent":null,"children":[],"decl_id":null,"docs":" Subtract the given value from the gauge. (The value can be\n negative, resulting in an increment of the gauge.)\n","sig":null,"attributes":[{"value":"/ Subtract the given value from the gauge. (The value can be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":87955,"byte_end":88017,"line_start":79,"line_end":79,"column_start":5,"column_end":67}},{"value":"/ negative, resulting in an increment of the gauge.)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88022,"byte_end":88076,"line_start":80,"line_end":80,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88081,"byte_end":88090,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88214,"byte_end":88217,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"get","qualname":"<GenericGauge<P>>::get","value":"pub fn get(&Self) -> P::T","parent":null,"children":[],"decl_id":null,"docs":" Return the gauge value.\n","sig":null,"attributes":[{"value":"/ Return the gauge value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88161,"byte_end":88188,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88193,"byte_end":88202,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1182},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88620,"byte_end":88635,"line_start":110,"line_end":110,"column_start":12,"column_end":27},"name":"GaugeVecBuilder","qualname":"::gauge::GaugeVecBuilder","value":"GaugeVecBuilder {  }","parent":null,"children":[{"krate":0,"index":1184}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88730,"byte_end":88733,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<GaugeVecBuilder<P>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":463},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89244,"byte_end":89259,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"name":"GenericGaugeVec","qualname":"::gauge::GenericGaugeVec","value":"MetricVec<GaugeVecBuilder<P>>","parent":null,"children":[],"decl_id":null,"docs":" The underlying implementation for [`GaugeVec`] and [`IntGaugeVec`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`GaugeVec`] and [`IntGaugeVec`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89163,"byte_end":89234,"line_start":137,"line_end":137,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":465},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89617,"byte_end":89625,"line_start":144,"line_end":144,"column_start":10,"column_end":18},"name":"GaugeVec","qualname":"::gauge::GaugeVec","value":"GenericGaugeVec<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" A [`Collector`] that bundles a set of [`Gauge`]s that all share\n the same [`Desc`], but have different values for their variable labels. This is\n used if you want to count the same thing partitioned by various dimensions\n (e.g. number of operations queued, partitioned by user and operation type).\n","sig":null,"attributes":[{"value":"/ A [`Collector`] that bundles a set of [`Gauge`]s that all share","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89297,"byte_end":89364,"line_start":140,"line_end":140,"column_start":1,"column_end":68}},{"value":"/ the same [`Desc`], but have different values for their variable labels. This is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89365,"byte_end":89448,"line_start":141,"line_end":141,"column_start":1,"column_end":84}},{"value":"/ used if you want to count the same thing partitioned by various dimensions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89449,"byte_end":89527,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ (e.g. number of operations queued, partitioned by user and operation type).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89528,"byte_end":89607,"line_start":143,"line_end":143,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":466},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89774,"byte_end":89785,"line_start":148,"line_end":148,"column_start":10,"column_end":21},"name":"IntGaugeVec","qualname":"::gauge::IntGaugeVec","value":"GenericGaugeVec<AtomicI64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`GaugeVec`]. Provides better performance if metric values\n are all integers.\n","sig":null,"attributes":[{"value":"/ The integer version of [`GaugeVec`]. Provides better performance if metric values","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89657,"byte_end":89742,"line_start":146,"line_end":146,"column_start":1,"column_end":86}},{"value":"/ are all integers.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89743,"byte_end":89764,"line_start":147,"line_end":147,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":90037,"byte_end":90040,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericGaugeVec<P>>::new","value":"pub fn new(Opts, &[&str]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`GenericGaugeVec`] based on the provided\n [`Opts`] and partitioned by the given label names. At least one label name must\n be provided.\n","sig":null,"attributes":[{"value":"/ Create a new [`GenericGaugeVec`] based on the provided","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89858,"byte_end":89916,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ [`Opts`] and partitioned by the given label names. At least one label name must","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89921,"byte_end":90004,"line_start":152,"line_end":152,"column_start":5,"column_end":88}},{"value":"/ be provided.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":90009,"byte_end":90025,"line_start":153,"line_end":153,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":504},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":93623,"byte_end":93638,"line_start":25,"line_end":25,"column_start":11,"column_end":26},"name":"DEFAULT_BUCKETS","qualname":"::histogram::DEFAULT_BUCKETS","value":"&[f64; ]","parent":null,"children":[],"decl_id":null,"docs":" The default [`Histogram`] buckets. The default buckets are\n tailored to broadly measure the response time (in seconds) of a\n network service. Most likely, however, you will be required to define\n buckets customized to your use case.\n","sig":null,"attributes":[{"value":"/ The default [`Histogram`] buckets. The default buckets are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":93367,"byte_end":93429,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ tailored to broadly measure the response time (in seconds) of a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":93430,"byte_end":93497,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ network service. Most likely, however, you will be required to define","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":93498,"byte_end":93571,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ buckets customized to your use case.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":93572,"byte_end":93612,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1188},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95089,"byte_end":95102,"line_start":73,"line_end":73,"column_start":12,"column_end":25},"name":"HistogramOpts","qualname":"::histogram::HistogramOpts","value":"HistogramOpts { common_opts, buckets }","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190}],"decl_id":null,"docs":" A struct that bundles the options for creating a [`Histogram`] metric. It is\n mandatory to set Name and Help to a non-empty string. All other fields are\n optional and can safely be left at their zero value.\n","sig":null,"attributes":[{"value":"/ A struct that bundles the options for creating a [`Histogram`] metric. It is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":94837,"byte_end":94917,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ mandatory to set Name and Help to a non-empty string. All other fields are","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":94918,"byte_end":94996,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ optional and can safely be left at their zero value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":94997,"byte_end":95053,"line_start":71,"line_end":71,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1189},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95158,"byte_end":95169,"line_start":75,"line_end":75,"column_start":9,"column_end":20},"name":"common_opts","qualname":"::histogram::HistogramOpts::common_opts","value":"metrics::Opts","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" A container holding various options.\n","sig":null,"attributes":[{"value":"/ A container holding various options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95109,"byte_end":95149,"line_start":74,"line_end":74,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1190},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95527,"byte_end":95534,"line_start":82,"line_end":82,"column_start":9,"column_end":16},"name":"buckets","qualname":"::histogram::HistogramOpts::buckets","value":"std::vec::Vec<f64>","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Defines the buckets into which observations are counted. Each\n element in the slice is the upper inclusive bound of a bucket. The\n values must be sorted in strictly increasing order. There is no need\n to add a highest bucket with +Inf bound, it will be added\n implicitly. The default value is DefBuckets.\n","sig":null,"attributes":[{"value":"/ Defines the buckets into which observations are counted. Each","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95182,"byte_end":95247,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/ element in the slice is the upper inclusive bound of a bucket. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95252,"byte_end":95322,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ values must be sorted in strictly increasing order. There is no need","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95327,"byte_end":95399,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ to add a highest bucket with +Inf bound, it will be added","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95404,"byte_end":95465,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ implicitly. The default value is DefBuckets.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95470,"byte_end":95518,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95654,"byte_end":95657,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<HistogramOpts>::new","value":"pub fn new<S1: Into<String>, S2: Into<String>>(S1, S2) -> HistogramOpts","parent":null,"children":[],"decl_id":null,"docs":" Create a [`HistogramOpts`] with the `name` and `help` arguments.\n","sig":null,"attributes":[{"value":"/ Create a [`HistogramOpts`] with the `name` and `help` arguments.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95574,"byte_end":95642,"line_start":86,"line_end":86,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95940,"byte_end":95949,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"namespace","qualname":"<HistogramOpts>::namespace","value":"pub fn namespace<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `namespace` sets the namespace.\n","sig":null,"attributes":[{"value":"/ `namespace` sets the namespace.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95893,"byte_end":95928,"line_start":94,"line_end":94,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":96128,"byte_end":96137,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"subsystem","qualname":"<HistogramOpts>::subsystem","value":"pub fn subsystem<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `subsystem` sets the sub system.\n","sig":null,"attributes":[{"value":"/ `subsystem` sets the sub system.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":96080,"byte_end":96116,"line_start":100,"line_end":100,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":96321,"byte_end":96333,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"name":"const_labels","qualname":"<HistogramOpts>::const_labels","value":"pub fn const_labels(Self, HashMap<String, String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `const_labels` sets the const labels.\n","sig":null,"attributes":[{"value":"/ `const_labels` sets the const labels.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":96268,"byte_end":96309,"line_start":106,"line_end":106,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":96538,"byte_end":96549,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"const_label","qualname":"<HistogramOpts>::const_label","value":"pub fn const_label<S1: Into<String>, S2: Into<String>>(Self, S1, S2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `const_label` adds a const label.\n","sig":null,"attributes":[{"value":"/ `const_label` adds a const label.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":96489,"byte_end":96526,"line_start":112,"line_end":112,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":96780,"byte_end":96795,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"variable_labels","qualname":"<HistogramOpts>::variable_labels","value":"pub fn variable_labels(Self, Vec<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `variable_labels` sets the variable labels.\n","sig":null,"attributes":[{"value":"/ `variable_labels` sets the variable labels.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":96721,"byte_end":96768,"line_start":118,"line_end":118,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97003,"byte_end":97017,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"variable_label","qualname":"<HistogramOpts>::variable_label","value":"pub fn variable_label<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `variable_label` adds a variable label.\n","sig":null,"attributes":[{"value":"/ `variable_label` adds a variable label.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":96948,"byte_end":96991,"line_start":124,"line_end":124,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97200,"byte_end":97207,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"fq_name","qualname":"<HistogramOpts>::fq_name","value":"pub fn fq_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" `fq_name` returns the fq_name.\n","sig":null,"attributes":[{"value":"/ `fq_name` returns the fq_name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97154,"byte_end":97188,"line_start":130,"line_end":130,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97315,"byte_end":97322,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"buckets","qualname":"<HistogramOpts>::buckets","value":"pub fn buckets(Self, Vec<f64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `buckets` set the buckets.\n","sig":null,"attributes":[{"value":"/ `buckets` set the buckets.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97273,"byte_end":97303,"line_start":135,"line_end":135,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1231},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":112424,"byte_end":112438,"line_start":577,"line_end":577,"column_start":12,"column_end":26},"name":"HistogramTimer","qualname":"::histogram::HistogramTimer","value":"HistogramTimer {  }","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":" Timer to measure and record the duration of an event.","sig":null,"attributes":[{"value":"/ Timer to measure and record the duration of an event.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":112029,"byte_end":112086,"line_start":570,"line_end":570,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":112087,"byte_end":112090,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ This timer can be stopped and observed at most once, either automatically (when it","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":112091,"byte_end":112177,"line_start":572,"line_end":572,"column_start":1,"column_end":87}},{"value":"/ goes out of scope) or manually.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":112178,"byte_end":112213,"line_start":573,"line_end":573,"column_start":1,"column_end":36}},{"value":"/ Alternatively, it can be manually stopped and discarded in order to not record its value.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":112214,"byte_end":112307,"line_start":574,"line_end":574,"column_start":1,"column_end":94}},{"value":"must_use =\n  \"Timer should be kept in a variable otherwise it cannot observe duration\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":112308,"byte_end":112395,"line_start":575,"line_end":575,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113297,"byte_end":113313,"line_start":608,"line_end":608,"column_start":12,"column_end":28},"name":"observe_duration","qualname":"<HistogramTimer>::observe_duration","value":"pub fn observe_duration(Self)","parent":null,"children":[],"decl_id":null,"docs":" Observe and record timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe and record timer duration (in seconds).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113075,"byte_end":113126,"line_start":604,"line_end":604,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113131,"byte_end":113134,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ It observes the floating-point number of seconds elapsed since the timer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113139,"byte_end":113215,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ started, and it records that value to the attached histogram.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113220,"byte_end":113285,"line_start":607,"line_end":607,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113601,"byte_end":113616,"line_start":616,"line_end":616,"column_start":12,"column_end":27},"name":"stop_and_record","qualname":"<HistogramTimer>::stop_and_record","value":"pub fn stop_and_record(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Observe, record and return timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe, record and return timer duration (in seconds).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113365,"byte_end":113424,"line_start":612,"line_end":612,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113429,"byte_end":113432,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ It observes and returns a floating-point number for seconds elapsed since","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113437,"byte_end":113514,"line_start":614,"line_end":614,"column_start":5,"column_end":82}},{"value":"/ the timer started, recording that value to the attached histogram.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113519,"byte_end":113589,"line_start":615,"line_end":615,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113903,"byte_end":113919,"line_start":625,"line_end":625,"column_start":12,"column_end":28},"name":"stop_and_discard","qualname":"<HistogramTimer>::stop_and_discard","value":"pub fn stop_and_discard(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Observe and return timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe and return timer duration (in seconds).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113701,"byte_end":113752,"line_start":621,"line_end":621,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113757,"byte_end":113760,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ It returns a floating-point number of seconds elapsed since the timer started,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113765,"byte_end":113847,"line_start":623,"line_end":623,"column_start":5,"column_end":87}},{"value":"/ without recording to any histogram.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":113852,"byte_end":113891,"line_start":624,"line_end":624,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1237},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115431,"byte_end":115440,"line_start":666,"line_end":666,"column_start":12,"column_end":21},"name":"Histogram","qualname":"::histogram::Histogram","value":"Histogram {  }","parent":null,"children":[{"krate":0,"index":1238}],"decl_id":null,"docs":" A [`Metric`] counts individual observations from an event or sample stream\n in configurable buckets. Similar to a [`Summary`](crate::proto::Summary),\n it also provides a sum of observations and an observation count.","sig":null,"attributes":[{"value":"/ A [`Metric`] counts individual observations from an event or sample stream","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114345,"byte_end":114423,"line_start":648,"line_end":648,"column_start":1,"column_end":79}},{"value":"/ in configurable buckets. Similar to a [`Summary`](crate::proto::Summary),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114424,"byte_end":114501,"line_start":649,"line_end":649,"column_start":1,"column_end":78}},{"value":"/ it also provides a sum of observations and an observation count.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114502,"byte_end":114570,"line_start":650,"line_end":650,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114571,"byte_end":114574,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ On the Prometheus server, quantiles can be calculated from a [`Histogram`] using","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114575,"byte_end":114659,"line_start":652,"line_end":652,"column_start":1,"column_end":85}},{"value":"/ the [`histogram_quantile`][1] function in the query language.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114660,"byte_end":114725,"line_start":653,"line_end":653,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114726,"byte_end":114729,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ Note that Histograms, in contrast to Summaries, can be aggregated with the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114730,"byte_end":114808,"line_start":655,"line_end":655,"column_start":1,"column_end":79}},{"value":"/ Prometheus query language (see [the prometheus documentation][2] for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114809,"byte_end":114881,"line_start":656,"line_end":656,"column_start":1,"column_end":73}},{"value":"/ detailed procedures). However, Histograms require the user to pre-define","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114882,"byte_end":114958,"line_start":657,"line_end":657,"column_start":1,"column_end":77}},{"value":"/ suitable buckets, (see [`linear_buckets`] and [`exponential_buckets`] for","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114959,"byte_end":115036,"line_start":658,"line_end":658,"column_start":1,"column_end":78}},{"value":"/ some helper provided here) and they are in general less accurate. The","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115037,"byte_end":115110,"line_start":659,"line_end":659,"column_start":1,"column_end":74}},{"value":"/ Observe method of a [`Histogram`] has a very low performance overhead in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115111,"byte_end":115187,"line_start":660,"line_end":660,"column_start":1,"column_end":77}},{"value":"/ comparison with the Observe method of a Summary.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115188,"byte_end":115240,"line_start":661,"line_end":661,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115241,"byte_end":115244,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ [1]: https://prometheus.io/docs/prometheus/latest/querying/functions/#histogram_quantile","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115245,"byte_end":115337,"line_start":663,"line_end":663,"column_start":1,"column_end":93}},{"value":"/ [2]: https://prometheus.io/docs/practices/histograms/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115338,"byte_end":115395,"line_start":664,"line_end":664,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115573,"byte_end":115582,"line_start":672,"line_end":672,"column_start":12,"column_end":21},"name":"with_opts","qualname":"<Histogram>::with_opts","value":"pub fn with_opts(HistogramOpts) -> Result<Histogram>","parent":null,"children":[],"decl_id":null,"docs":" `with_opts` creates a [`Histogram`] with the `opts` options.\n","sig":null,"attributes":[{"value":"/ `with_opts` creates a [`Histogram`] with the `opts` options.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115497,"byte_end":115561,"line_start":671,"line_end":671,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":116038,"byte_end":116045,"line_start":690,"line_end":690,"column_start":12,"column_end":19},"name":"observe","qualname":"<Histogram>::observe","value":"pub fn observe(&Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Add a single observation to the [`Histogram`].\n","sig":null,"attributes":[{"value":"/ Add a single observation to the [`Histogram`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115976,"byte_end":116026,"line_start":689,"line_end":689,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":116167,"byte_end":116178,"line_start":695,"line_end":695,"column_start":12,"column_end":23},"name":"start_timer","qualname":"<Histogram>::start_timer","value":"pub fn start_timer(&Self) -> HistogramTimer","parent":null,"children":[],"decl_id":null,"docs":" Return a [`HistogramTimer`] to track a duration.\n","sig":null,"attributes":[{"value":"/ Return a [`HistogramTimer`] to track a duration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":116103,"byte_end":116155,"line_start":694,"line_end":694,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":116563,"byte_end":116587,"line_start":707,"line_end":707,"column_start":12,"column_end":36},"name":"observe_closure_duration","qualname":"<Histogram>::observe_closure_duration","value":"pub fn observe_closure_duration<F, T>(&Self, F) -> T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Observe execution time of a closure, in second.\n","sig":null,"attributes":[{"value":"/ Observe execution time of a closure, in second.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":116500,"byte_end":116551,"line_start":706,"line_end":706,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":117242,"byte_end":117247,"line_start":732,"line_end":732,"column_start":12,"column_end":17},"name":"local","qualname":"<Histogram>::local","value":"pub fn local(&Self) -> LocalHistogram","parent":null,"children":[],"decl_id":null,"docs":" Return a [`LocalHistogram`] for single thread usage.\n","sig":null,"attributes":[{"value":"/ Return a [`LocalHistogram`] for single thread usage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":117174,"byte_end":117230,"line_start":731,"line_end":731,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":117382,"byte_end":117396,"line_start":737,"line_end":737,"column_start":12,"column_end":26},"name":"get_sample_sum","qualname":"<Histogram>::get_sample_sum","value":"pub fn get_sample_sum(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Return accumulated sum of all samples.\n","sig":null,"attributes":[{"value":"/ Return accumulated sum of all samples.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":117328,"byte_end":117370,"line_start":736,"line_end":736,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":117499,"byte_end":117515,"line_start":742,"line_end":742,"column_start":12,"column_end":28},"name":"get_sample_count","qualname":"<Histogram>::get_sample_count","value":"pub fn get_sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return count of all samples.\n","sig":null,"attributes":[{"value":"/ Return count of all samples.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":117455,"byte_end":117487,"line_start":741,"line_end":741,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118314,"byte_end":118333,"line_start":776,"line_end":776,"column_start":12,"column_end":31},"name":"HistogramVecBuilder","qualname":"::histogram::HistogramVecBuilder","value":"HistogramVecBuilder {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":585},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118900,"byte_end":118912,"line_start":791,"line_end":791,"column_start":10,"column_end":22},"name":"HistogramVec","qualname":"::histogram::HistogramVec","value":"MetricVec<HistogramVecBuilder>","parent":null,"children":[],"decl_id":null,"docs":" A [`Collector`] that bundles a set of Histograms that all share the\n same [`Desc`], but have different values for their variable labels. This is used\n if you want to count the same thing partitioned by various dimensions\n (e.g. HTTP request latencies, partitioned by status code and method).\n","sig":null,"attributes":[{"value":"/ A [`Collector`] that bundles a set of Histograms that all share the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118586,"byte_end":118657,"line_start":787,"line_end":787,"column_start":1,"column_end":72}},{"value":"/ same [`Desc`], but have different values for their variable labels. This is used","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118658,"byte_end":118742,"line_start":788,"line_end":788,"column_start":1,"column_end":85}},{"value":"/ if you want to count the same thing partitioned by various dimensions","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118743,"byte_end":118816,"line_start":789,"line_end":789,"column_start":1,"column_end":74}},{"value":"/ (e.g. HTTP request latencies, partitioned by status code and method).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118817,"byte_end":118890,"line_start":790,"line_end":790,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119157,"byte_end":119160,"line_start":797,"line_end":797,"column_start":12,"column_end":15},"name":"new","qualname":"<HistogramVec>::new","value":"pub fn new(HistogramOpts, &[&str]) -> Result<HistogramVec>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`HistogramVec`] based on the provided\n [`HistogramOpts`] and partitioned by the given label names. At least\n one label name must be provided.\n","sig":null,"attributes":[{"value":"/ Create a new [`HistogramVec`] based on the provided","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118972,"byte_end":119027,"line_start":794,"line_end":794,"column_start":5,"column_end":60}},{"value":"/ [`HistogramOpts`] and partitioned by the given label names. At least","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119032,"byte_end":119104,"line_start":795,"line_end":795,"column_start":5,"column_end":77}},{"value":"/ one label name must be provided.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119109,"byte_end":119145,"line_start":796,"line_end":796,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119608,"byte_end":119613,"line_start":807,"line_end":807,"column_start":12,"column_end":17},"name":"local","qualname":"<HistogramVec>::local","value":"pub fn local(&Self) -> LocalHistogramVec","parent":null,"children":[],"decl_id":null,"docs":" Return a `LocalHistogramVec` for single thread usage.\n","sig":null,"attributes":[{"value":"/ Return a `LocalHistogramVec` for single thread usage.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119539,"byte_end":119596,"line_start":806,"line_end":806,"column_start":5,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":120095,"byte_end":120109,"line_start":820,"line_end":820,"column_start":8,"column_end":22},"name":"linear_buckets","qualname":"::histogram::linear_buckets","value":"pub fn linear_buckets(f64, f64, usize) -> Result<Vec<f64>>","parent":null,"children":[],"decl_id":null,"docs":" Create `count` buckets, each `width` wide, where the lowest\n bucket has an upper bound of `start`. The final +Inf bucket is not counted\n and not included in the returned slice. The returned slice is meant to be\n used for the Buckets field of [`HistogramOpts`].","sig":null,"attributes":[{"value":"/ Create `count` buckets, each `width` wide, where the lowest","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119721,"byte_end":119784,"line_start":813,"line_end":813,"column_start":1,"column_end":64}},{"value":"/ bucket has an upper bound of `start`. The final +Inf bucket is not counted","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119785,"byte_end":119863,"line_start":814,"line_end":814,"column_start":1,"column_end":79}},{"value":"/ and not included in the returned slice. The returned slice is meant to be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119864,"byte_end":119941,"line_start":815,"line_end":815,"column_start":1,"column_end":78}},{"value":"/ used for the Buckets field of [`HistogramOpts`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119942,"byte_end":119994,"line_start":816,"line_end":816,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119995,"byte_end":119998,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ The function returns an error if `count` is zero or `width` is zero or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":119999,"byte_end":120073,"line_start":818,"line_end":818,"column_start":1,"column_end":75}},{"value":"/ negative.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":120074,"byte_end":120087,"line_start":819,"line_end":819,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":592},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":121116,"byte_end":121135,"line_start":849,"line_end":849,"column_start":8,"column_end":27},"name":"exponential_buckets","qualname":"::histogram::exponential_buckets","value":"pub fn exponential_buckets(f64, f64, usize) -> Result<Vec<f64>>","parent":null,"children":[],"decl_id":null,"docs":" Create `count` buckets, where the lowest bucket has an\n upper bound of `start` and each following bucket's upper bound is `factor`\n times the previous bucket's upper bound. The final +Inf bucket is not counted\n and not included in the returned slice. The returned slice is meant to be\n used for the Buckets field of [`HistogramOpts`].","sig":null,"attributes":[{"value":"/ Create `count` buckets, where the lowest bucket has an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":120624,"byte_end":120682,"line_start":841,"line_end":841,"column_start":1,"column_end":59}},{"value":"/ upper bound of `start` and each following bucket's upper bound is `factor`","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":120683,"byte_end":120761,"line_start":842,"line_end":842,"column_start":1,"column_end":79}},{"value":"/ times the previous bucket's upper bound. The final +Inf bucket is not counted","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":120762,"byte_end":120843,"line_start":843,"line_end":843,"column_start":1,"column_end":82}},{"value":"/ and not included in the returned slice. The returned slice is meant to be","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":120844,"byte_end":120921,"line_start":844,"line_end":844,"column_start":1,"column_end":78}},{"value":"/ used for the Buckets field of [`HistogramOpts`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":120922,"byte_end":120974,"line_start":845,"line_end":845,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":120975,"byte_end":120978,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ The function returns an error if `count` is zero, if `start` is zero or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":120979,"byte_end":121054,"line_start":847,"line_end":847,"column_start":1,"column_end":76}},{"value":"/ negative, or if `factor` is less than or equal 1.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":121055,"byte_end":121108,"line_start":848,"line_end":848,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1257},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":122313,"byte_end":122327,"line_start":898,"line_end":898,"column_start":12,"column_end":26},"name":"LocalHistogram","qualname":"::histogram::LocalHistogram","value":"LocalHistogram {  }","parent":null,"children":[{"krate":0,"index":1258}],"decl_id":null,"docs":" An unsync [`Histogram`].\n","sig":null,"attributes":[{"value":"/ An unsync [`Histogram`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":122256,"byte_end":122284,"line_start":896,"line_end":896,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1261},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":122714,"byte_end":122733,"line_start":914,"line_end":914,"column_start":12,"column_end":31},"name":"LocalHistogramTimer","qualname":"::histogram::LocalHistogramTimer","value":"LocalHistogramTimer {  }","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"decl_id":null,"docs":" An unsync [`HistogramTimer`].\n","sig":null,"attributes":[{"value":"/ An unsync [`HistogramTimer`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":122564,"byte_end":122597,"line_start":911,"line_end":911,"column_start":1,"column_end":34}},{"value":"must_use =\n  \"Timer should be kept in a variable otherwise it cannot observe duration\"","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":122598,"byte_end":122685,"line_start":912,"line_end":912,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":123618,"byte_end":123634,"line_start":945,"line_end":945,"column_start":12,"column_end":28},"name":"observe_duration","qualname":"<LocalHistogramTimer>::observe_duration","value":"pub fn observe_duration(Self)","parent":null,"children":[],"decl_id":null,"docs":" Observe and record timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe and record timer duration (in seconds).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":123396,"byte_end":123447,"line_start":941,"line_end":941,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":123452,"byte_end":123455,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ It observes the floating-point number of seconds elapsed since the timer","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":123460,"byte_end":123536,"line_start":943,"line_end":943,"column_start":5,"column_end":81}},{"value":"/ started, and it records that value to the attached histogram.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":123541,"byte_end":123606,"line_start":944,"line_end":944,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":123922,"byte_end":123937,"line_start":953,"line_end":953,"column_start":12,"column_end":27},"name":"stop_and_record","qualname":"<LocalHistogramTimer>::stop_and_record","value":"pub fn stop_and_record(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Observe, record and return timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe, record and return timer duration (in seconds).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":123686,"byte_end":123745,"line_start":949,"line_end":949,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":123750,"byte_end":123753,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ It observes and returns a floating-point number for seconds elapsed since","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":123758,"byte_end":123835,"line_start":951,"line_end":951,"column_start":5,"column_end":82}},{"value":"/ the timer started, recording that value to the attached histogram.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":123840,"byte_end":123910,"line_start":952,"line_end":952,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":124224,"byte_end":124240,"line_start":962,"line_end":962,"column_start":12,"column_end":28},"name":"stop_and_discard","qualname":"<LocalHistogramTimer>::stop_and_discard","value":"pub fn stop_and_discard(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Observe and return timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe and return timer duration (in seconds).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":124022,"byte_end":124073,"line_start":958,"line_end":958,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":124078,"byte_end":124081,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ It returns a floating-point number of seconds elapsed since the timer started,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":124086,"byte_end":124168,"line_start":960,"line_end":960,"column_start":5,"column_end":87}},{"value":"/ without recording to any histogram.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":124173,"byte_end":124212,"line_start":961,"line_end":961,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":127102,"byte_end":127109,"line_start":1077,"line_end":1077,"column_start":12,"column_end":19},"name":"observe","qualname":"<LocalHistogram>::observe","value":"pub fn observe(&Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Add a single observation to the [`Histogram`].\n","sig":null,"attributes":[{"value":"/ Add a single observation to the [`Histogram`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":127040,"byte_end":127090,"line_start":1076,"line_end":1076,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":127248,"byte_end":127259,"line_start":1082,"line_end":1082,"column_start":12,"column_end":23},"name":"start_timer","qualname":"<LocalHistogram>::start_timer","value":"pub fn start_timer(&Self) -> LocalHistogramTimer","parent":null,"children":[],"decl_id":null,"docs":" Return a `LocalHistogramTimer` to track a duration.\n","sig":null,"attributes":[{"value":"/ Return a `LocalHistogramTimer` to track a duration.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":127181,"byte_end":127236,"line_start":1081,"line_end":1081,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":127667,"byte_end":127691,"line_start":1094,"line_end":1094,"column_start":12,"column_end":36},"name":"observe_closure_duration","qualname":"<LocalHistogram>::observe_closure_duration","value":"pub fn observe_closure_duration<F, T>(&Self, F) -> T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Observe execution time of a closure, in second.\n","sig":null,"attributes":[{"value":"/ Observe execution time of a closure, in second.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":127604,"byte_end":127655,"line_start":1093,"line_end":1093,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128317,"byte_end":128322,"line_start":1119,"line_end":1119,"column_start":12,"column_end":17},"name":"clear","qualname":"<LocalHistogram>::clear","value":"pub fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the local metric.\n","sig":null,"attributes":[{"value":"/ Clear the local metric.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128278,"byte_end":128305,"line_start":1118,"line_end":1118,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128451,"byte_end":128456,"line_start":1124,"line_end":1124,"column_start":12,"column_end":17},"name":"flush","qualname":"<LocalHistogram>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the local metrics to the [`Histogram`] metric.\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the [`Histogram`] metric.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128383,"byte_end":128439,"line_start":1123,"line_end":1123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128573,"byte_end":128587,"line_start":1129,"line_end":1129,"column_start":12,"column_end":26},"name":"get_sample_sum","qualname":"<LocalHistogram>::get_sample_sum","value":"pub fn get_sample_sum(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Return accumulated sum of local samples.\n","sig":null,"attributes":[{"value":"/ Return accumulated sum of local samples.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128517,"byte_end":128561,"line_start":1128,"line_end":1128,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128701,"byte_end":128717,"line_start":1134,"line_end":1134,"column_start":12,"column_end":28},"name":"get_sample_count","qualname":"<LocalHistogram>::get_sample_count","value":"pub fn get_sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return count of local samples.\n","sig":null,"attributes":[{"value":"/ Return count of local samples.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128655,"byte_end":128689,"line_start":1133,"line_end":1133,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1267},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":129098,"byte_end":129115,"line_start":1154,"line_end":1154,"column_start":12,"column_end":29},"name":"LocalHistogramVec","qualname":"::histogram::LocalHistogramVec","value":"LocalHistogramVec {  }","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269}],"decl_id":null,"docs":" An unsync [`HistogramVec`].\n","sig":null,"attributes":[{"value":"/ An unsync [`HistogramVec`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":129038,"byte_end":129069,"line_start":1152,"line_end":1152,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":129496,"byte_end":129513,"line_start":1167,"line_end":1167,"column_start":12,"column_end":29},"name":"with_label_values","qualname":"<LocalHistogramVec>::with_label_values","value":"pub fn with_label_values<'a>(&'a mut Self, &[&str]) -> &'a LocalHistogram","parent":null,"children":[],"decl_id":null,"docs":" Get a [`LocalHistogram`] by label values.\n See more [`MetricVec::with_label_values`].\n","sig":null,"attributes":[{"value":"/ Get a [`LocalHistogram`] by label values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":129388,"byte_end":129433,"line_start":1165,"line_end":1165,"column_start":5,"column_end":50}},{"value":"/ See more [`MetricVec::with_label_values`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":129438,"byte_end":129484,"line_start":1166,"line_end":1166,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":129900,"byte_end":129919,"line_start":1177,"line_end":1177,"column_start":12,"column_end":31},"name":"remove_label_values","qualname":"<LocalHistogramVec>::remove_label_values","value":"pub fn remove_label_values(&mut Self, &[&str]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Remove a [`LocalHistogram`] by label values.\n See more [`MetricVec::remove_label_values`].\n","sig":null,"attributes":[{"value":"/ Remove a [`LocalHistogram`] by label values.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":129787,"byte_end":129835,"line_start":1175,"line_end":1175,"column_start":5,"column_end":53}},{"value":"/ See more [`MetricVec::remove_label_values`].","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":129840,"byte_end":129888,"line_start":1176,"line_end":1176,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":130179,"byte_end":130184,"line_start":1184,"line_end":1184,"column_start":12,"column_end":17},"name":"flush","qualname":"<LocalHistogramVec>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the local metrics to the [`HistogramVec`] metric.\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the [`HistogramVec`] metric.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":130108,"byte_end":130167,"line_start":1183,"line_end":1183,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":655},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143360,"byte_end":143369,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"Collector","qualname":"::metrics::Collector","value":"Collector: Sync + Send","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657}],"decl_id":null,"docs":" An interface for collecting metrics.\n","sig":null,"attributes":[{"value":"/ An interface for collecting metrics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143309,"byte_end":143349,"line_start":15,"line_end":15,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143432,"byte_end":143436,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"desc","qualname":"::metrics::Collector::desc","value":"pub fn desc(&Self) -> Vec<&Desc>","parent":{"krate":0,"index":655},"children":[],"decl_id":null,"docs":" Return descriptors for metrics.\n","sig":null,"attributes":[{"value":"/ Return descriptors for metrics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143389,"byte_end":143424,"line_start":17,"line_end":17,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143492,"byte_end":143499,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"collect","qualname":"::metrics::Collector::collect","value":"pub fn collect(&Self) -> Vec<proto::MetricFamily>","parent":{"krate":0,"index":655},"children":[],"decl_id":null,"docs":" Collect metrics.\n","sig":null,"attributes":[{"value":"/ Collect metrics.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143464,"byte_end":143484,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":658},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143644,"byte_end":143650,"line_start":25,"line_end":25,"column_start":11,"column_end":17},"name":"Metric","qualname":"::metrics::Metric","value":"Metric: Sync + Send + Clone","parent":null,"children":[{"krate":0,"index":659}],"decl_id":null,"docs":" An interface models a single sample value with its meta data being exported to Prometheus.\n","sig":null,"attributes":[{"value":"/ An interface models a single sample value with its meta data being exported to Prometheus.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143539,"byte_end":143633,"line_start":24,"line_end":24,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143717,"byte_end":143723,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"metric","qualname":"::metrics::Metric::metric","value":"pub fn metric(&Self) -> proto::Metric","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Return the protocol Metric.\n","sig":null,"attributes":[{"value":"/ Return the protocol Metric.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143678,"byte_end":143709,"line_start":26,"line_end":26,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":660},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143837,"byte_end":143848,"line_start":31,"line_end":31,"column_start":11,"column_end":22},"name":"LocalMetric","qualname":"::metrics::LocalMetric","value":"LocalMetric","parent":null,"children":[{"krate":0,"index":661}],"decl_id":null,"docs":" An interface models a Metric only usable in single thread environment.\n","sig":null,"attributes":[{"value":"/ An interface models a Metric only usable in single thread environment.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143752,"byte_end":143826,"line_start":30,"line_end":30,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143909,"byte_end":143914,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"flush","qualname":"::metrics::LocalMetric::flush","value":"pub fn flush(&Self)","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":" Flush the local metrics to the global one.\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the global one.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143855,"byte_end":143901,"line_start":32,"line_end":32,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":662},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144084,"byte_end":144092,"line_start":38,"line_end":38,"column_start":11,"column_end":19},"name":"MayFlush","qualname":"::metrics::MayFlush","value":"MayFlush: LocalMetric","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"decl_id":null,"docs":" An interface models a LocalMetric with try to flush functions.\n Not intend to be implemented by user manually, used in macro generated code.\n","sig":null,"attributes":[{"value":"/ An interface models a LocalMetric with try to flush functions.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143926,"byte_end":143992,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/ Not intend to be implemented by user manually, used in macro generated code.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143993,"byte_end":144073,"line_start":37,"line_end":37,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144263,"byte_end":144272,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"try_flush","qualname":"::metrics::MayFlush::try_flush","value":"pub fn try_flush(&Self, &Cell<u64>, u64)","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":" If the LocalMetric is already flushed in last `flush_interval_sec` seconds, then do nothing,\n else flush and update last flush time.\n","sig":null,"attributes":[{"value":"/ If the LocalMetric is already flushed in last `flush_interval_sec` seconds, then do nothing,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144112,"byte_end":144208,"line_start":39,"line_end":39,"column_start":5,"column_end":101}},{"value":"/ else flush and update last flush time.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144213,"byte_end":144255,"line_start":40,"line_end":40,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144626,"byte_end":144635,"line_start":52,"line_end":52,"column_start":8,"column_end":17},"name":"may_flush","qualname":"::metrics::MayFlush::may_flush","value":"pub fn may_flush(&Self)","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":" Open to implementation to fill try_flush parameters\n","sig":null,"attributes":[{"value":"/ Open to implementation to fill try_flush parameters","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144563,"byte_end":144618,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1272},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144756,"byte_end":144760,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"Opts","qualname":"::metrics::Opts","value":"Opts { namespace, subsystem, name, help, const_labels, variable_labels }","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"decl_id":null,"docs":" A struct that bundles the options for creating most [`Metric`] types.\n","sig":null,"attributes":[{"value":"/ A struct that bundles the options for creating most [`Metric`] types.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144647,"byte_end":144720,"line_start":55,"line_end":55,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1273},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145109,"byte_end":145118,"line_start":63,"line_end":63,"column_start":9,"column_end":18},"name":"namespace","qualname":"::metrics::Opts::namespace","value":"std::string::String","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" namespace, subsystem, and name are components of the fully-qualified\n name of the [`Metric`] (created by joining these components with\n \"_\"). Only Name is mandatory, the others merely help structuring the\n name. Note that the fully-qualified name of the metric must be a\n valid Prometheus metric name.\n","sig":null,"attributes":[{"value":"/ namespace, subsystem, and name are components of the fully-qualified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144767,"byte_end":144839,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ name of the [`Metric`] (created by joining these components with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144844,"byte_end":144912,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ \"_\"). Only Name is mandatory, the others merely help structuring the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144917,"byte_end":144989,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ name. Note that the fully-qualified name of the metric must be a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144994,"byte_end":145062,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/ valid Prometheus metric name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145067,"byte_end":145100,"line_start":62,"line_end":62,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1274},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145474,"byte_end":145483,"line_start":69,"line_end":69,"column_start":9,"column_end":18},"name":"subsystem","qualname":"::metrics::Opts::subsystem","value":"std::string::String","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" namespace, subsystem, and name are components of the fully-qualified\n name of the [`Metric`] (created by joining these components with\n \"_\"). Only Name is mandatory, the others merely help structuring the\n name. Note that the fully-qualified name of the metric must be a\n valid Prometheus metric name.\n","sig":null,"attributes":[{"value":"/ namespace, subsystem, and name are components of the fully-qualified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145132,"byte_end":145204,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ name of the [`Metric`] (created by joining these components with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145209,"byte_end":145277,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ \"_\"). Only Name is mandatory, the others merely help structuring the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145282,"byte_end":145354,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ name. Note that the fully-qualified name of the metric must be a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145359,"byte_end":145427,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ valid Prometheus metric name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145432,"byte_end":145465,"line_start":68,"line_end":68,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1275},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145839,"byte_end":145843,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"name","qualname":"::metrics::Opts::name","value":"std::string::String","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" namespace, subsystem, and name are components of the fully-qualified\n name of the [`Metric`] (created by joining these components with\n \"_\"). Only Name is mandatory, the others merely help structuring the\n name. Note that the fully-qualified name of the metric must be a\n valid Prometheus metric name.\n","sig":null,"attributes":[{"value":"/ namespace, subsystem, and name are components of the fully-qualified","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145497,"byte_end":145569,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ name of the [`Metric`] (created by joining these components with","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145574,"byte_end":145642,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ \"_\"). Only Name is mandatory, the others merely help structuring the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145647,"byte_end":145719,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ name. Note that the fully-qualified name of the metric must be a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145724,"byte_end":145792,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ valid Prometheus metric name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145797,"byte_end":145830,"line_start":74,"line_end":74,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1276},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146025,"byte_end":146029,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"name":"help","qualname":"::metrics::Opts::help","value":"std::string::String","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" help provides information about this metric. Mandatory!","sig":null,"attributes":[{"value":"/ help provides information about this metric. Mandatory!","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145858,"byte_end":145917,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145922,"byte_end":145925,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Metrics with the same fully-qualified name must have the same Help","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":145930,"byte_end":146000,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ string.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146005,"byte_end":146016,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":1277},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147127,"byte_end":147139,"line_start":101,"line_end":101,"column_start":9,"column_end":21},"name":"const_labels","qualname":"::metrics::Opts::const_labels","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" const_labels are used to attach fixed labels to this metric. Metrics\n with the same fully-qualified name must have the same label names in\n their ConstLabels.","sig":null,"attributes":[{"value":"/ const_labels are used to attach fixed labels to this metric. Metrics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146044,"byte_end":146116,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ with the same fully-qualified name must have the same label names in","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146121,"byte_end":146193,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ their ConstLabels.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146198,"byte_end":146220,"line_start":85,"line_end":85,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146225,"byte_end":146228,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that in most cases, labels have a value that varies during the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146233,"byte_end":146304,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"/ lifetime of a process. Those labels are usually managed with a metric","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146309,"byte_end":146382,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ vector collector (like CounterVec, GaugeVec). ConstLabels","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146387,"byte_end":146448,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/ serve only special purposes. One is for the special case where the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146453,"byte_end":146523,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/ value of a label does not change during the lifetime of a process,","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146528,"byte_end":146598,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ e.g. if the revision of the running binary is put into a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146603,"byte_end":146663,"line_start":92,"line_end":92,"column_start":5,"column_end":65}},{"value":"/ label. Another, more advanced purpose is if more than one [`Collector`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146668,"byte_end":146743,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ needs to collect Metrics with the same fully-qualified name. In that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146748,"byte_end":146820,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ case, those Metrics must differ in the values of their","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146825,"byte_end":146883,"line_start":95,"line_end":95,"column_start":5,"column_end":63}},{"value":"/ ConstLabels. See the [`Collector`] examples.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146888,"byte_end":146936,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146941,"byte_end":146944,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ If the value of a label never changes (not even between binaries),","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":146949,"byte_end":147019,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/ that label most likely should not be a label at all (but part of the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147024,"byte_end":147096,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/ metric name).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147101,"byte_end":147118,"line_start":100,"line_end":100,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1278},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147509,"byte_end":147524,"line_start":109,"line_end":109,"column_start":9,"column_end":24},"name":"variable_labels","qualname":"::metrics::Opts::variable_labels","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" variable_labels contains names of labels for which the metric maintains\n variable values. Metrics with the same fully-qualified name must have\n the same label names in their variable_labels.","sig":null,"attributes":[{"value":"/ variable_labels contains names of labels for which the metric maintains","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147171,"byte_end":147246,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ variable values. Metrics with the same fully-qualified name must have","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147251,"byte_end":147324,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ the same label names in their variable_labels.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147329,"byte_end":147379,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147384,"byte_end":147387,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that variable_labels is used in `MetricVec`. To create a single","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147392,"byte_end":147464,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ metric must leave it empty.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147469,"byte_end":147500,"line_start":108,"line_end":108,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147634,"byte_end":147637,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<Opts>::new","value":"pub fn new<S1: Into<String>, S2: Into<String>>(S1, S2) -> Opts","parent":null,"children":[],"decl_id":null,"docs":" `new` creates the Opts with the `name` and `help` arguments.\n","sig":null,"attributes":[{"value":"/ `new` creates the Opts with the `name` and `help` arguments.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147558,"byte_end":147622,"line_start":113,"line_end":113,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148008,"byte_end":148017,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"namespace","qualname":"<Opts>::namespace","value":"pub fn namespace<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `namespace` sets the namespace.\n","sig":null,"attributes":[{"value":"/ `namespace` sets the namespace.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147961,"byte_end":147996,"line_start":125,"line_end":125,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148184,"byte_end":148193,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"subsystem","qualname":"<Opts>::subsystem","value":"pub fn subsystem<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `subsystem` sets the sub system.\n","sig":null,"attributes":[{"value":"/ `subsystem` sets the sub system.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148136,"byte_end":148172,"line_start":131,"line_end":131,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148365,"byte_end":148377,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"const_labels","qualname":"<Opts>::const_labels","value":"pub fn const_labels(Self, HashMap<String, String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `const_labels` sets the const labels.\n","sig":null,"attributes":[{"value":"/ `const_labels` sets the const labels.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148312,"byte_end":148353,"line_start":137,"line_end":137,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148552,"byte_end":148563,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"const_label","qualname":"<Opts>::const_label","value":"pub fn const_label<S1: Into<String>, S2: Into<String>>(Self, S1, S2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `const_label` adds a const label.\n","sig":null,"attributes":[{"value":"/ `const_label` adds a const label.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148503,"byte_end":148540,"line_start":143,"line_end":143,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148785,"byte_end":148800,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"variable_labels","qualname":"<Opts>::variable_labels","value":"pub fn variable_labels(Self, Vec<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `variable_labels` sets the variable labels.\n","sig":null,"attributes":[{"value":"/ `variable_labels` sets the variable labels.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148726,"byte_end":148773,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148978,"byte_end":148992,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"variable_label","qualname":"<Opts>::variable_label","value":"pub fn variable_label<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `variable_label` adds a variable label.\n","sig":null,"attributes":[{"value":"/ `variable_label` adds a variable label.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":148923,"byte_end":148966,"line_start":155,"line_end":155,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":149157,"byte_end":149164,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"fq_name","qualname":"<Opts>::fq_name","value":"pub fn fq_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" `fq_name` returns the fq_name.\n","sig":null,"attributes":[{"value":"/ `fq_name` returns the fq_name.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":149111,"byte_end":149145,"line_start":161,"line_end":161,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1283},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":160173,"byte_end":160181,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"Registry","qualname":"::registry::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":1284}],"decl_id":null,"docs":" A struct for registering Prometheus collectors, collecting their metrics, and gathering\n them into `MetricFamilies` for exposition.\n","sig":null,"attributes":[{"value":"/ A struct for registering Prometheus collectors, collecting their metrics, and gathering","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":159999,"byte_end":160090,"line_start":214,"line_end":214,"column_start":1,"column_end":92}},{"value":"/ them into `MetricFamilies` for exposition.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":160091,"byte_end":160137,"line_start":215,"line_end":215,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":160647,"byte_end":160650,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<Registry>::new","value":"pub fn new() -> Registry","parent":null,"children":[],"decl_id":null,"docs":" `new` creates a Registry.\n","sig":null,"attributes":[{"value":"/ `new` creates a Registry.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":160606,"byte_end":160635,"line_start":238,"line_end":238,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":160784,"byte_end":160794,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"new_custom","qualname":"<Registry>::new_custom","value":"pub fn new_custom(Option<String>, Option<HashMap<String, String>>)\n-> Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Create a new registry, with optional custom prefix and labels.\n","sig":null,"attributes":[{"value":"/ Create a new registry, with optional custom prefix and labels.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":160706,"byte_end":160772,"line_start":243,"line_end":243,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":161904,"byte_end":161912,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register(&Self, Box<Collector>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" `register` registers a new [`Collector`] to be included in metrics\n collection. It returns an error if the descriptors provided by the\n [`Collector`] are invalid or if they — in combination with descriptors of\n already registered Collectors — do not fulfill the consistency and\n uniqueness criteria described in the documentation of [`Desc`](crate::core::Desc).","sig":null,"attributes":[{"value":"/ `register` registers a new [`Collector`] to be included in metrics","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":161288,"byte_end":161358,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ collection. It returns an error if the descriptors provided by the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":161363,"byte_end":161433,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ [`Collector`] are invalid or if they — in combination with descriptors of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":161438,"byte_end":161517,"line_start":265,"line_end":265,"column_start":5,"column_end":82}},{"value":"/ already registered Collectors — do not fulfill the consistency and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":161522,"byte_end":161594,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ uniqueness criteria described in the documentation of [`Desc`](crate::core::Desc).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":161599,"byte_end":161685,"line_start":267,"line_end":267,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":161690,"byte_end":161693,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the provided [`Collector`] is equal to a [`Collector`] already registered","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":161698,"byte_end":161778,"line_start":269,"line_end":269,"column_start":5,"column_end":85}},{"value":"/ (which includes the case of re-registering the same [`Collector`]), the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":161783,"byte_end":161858,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ AlreadyReg error returns.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":161863,"byte_end":161892,"line_start":271,"line_end":271,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":162312,"byte_end":162322,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"unregister","qualname":"<Registry>::unregister","value":"pub fn unregister(&Self, Box<Collector>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" `unregister` unregisters the [`Collector`] that equals the [`Collector`] passed\n in as an argument.  (Two Collectors are considered equal if their\n Describe method yields the same set of descriptors.) The function\n returns error when the [`Collector`] is not registered.\n","sig":null,"attributes":[{"value":"/ `unregister` unregisters the [`Collector`] that equals the [`Collector`] passed","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":162005,"byte_end":162088,"line_start":276,"line_end":276,"column_start":5,"column_end":88}},{"value":"/ in as an argument.  (Two Collectors are considered equal if their","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":162093,"byte_end":162162,"line_start":277,"line_end":277,"column_start":5,"column_end":74}},{"value":"/ Describe method yields the same set of descriptors.) The function","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":162167,"byte_end":162236,"line_start":278,"line_end":278,"column_start":5,"column_end":74}},{"value":"/ returns error when the [`Collector`] is not registered.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":162241,"byte_end":162300,"line_start":279,"line_end":279,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":162615,"byte_end":162621,"line_start":287,"line_end":287,"column_start":12,"column_end":18},"name":"gather","qualname":"<Registry>::gather","value":"pub fn gather(&Self) -> Vec<proto::MetricFamily>","parent":null,"children":[],"decl_id":null,"docs":" `gather` calls the Collect method of the registered Collectors and then\n gathers the collected metrics into a lexicographically sorted slice\n of MetricFamily protobufs.\n","sig":null,"attributes":[{"value":"/ `gather` calls the Collect method of the registered Collectors and then","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":162417,"byte_end":162492,"line_start":284,"line_end":284,"column_start":5,"column_end":80}},{"value":"/ gathers the collected metrics into a lexicographically sorted slice","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":162497,"byte_end":162568,"line_start":285,"line_end":285,"column_start":5,"column_end":76}},{"value":"/ of MetricFamily protobufs.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":162573,"byte_end":162603,"line_start":286,"line_end":286,"column_start":5,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":727},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":163454,"byte_end":163470,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"default_registry","qualname":"::registry::default_registry","value":"pub fn default_registry() -> &'static Registry","parent":null,"children":[],"decl_id":null,"docs":" Default registry (global static).\n","sig":null,"attributes":[{"value":"/ Default registry (global static).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":163409,"byte_end":163446,"line_start":319,"line_end":319,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":728},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":163940,"byte_end":163948,"line_start":330,"line_end":330,"column_start":8,"column_end":16},"name":"register","qualname":"::registry::register","value":"pub fn register(Box<Collector>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Registers a new [`Collector`] to be included in metrics collection. It\n returns an error if the descriptors provided by the [`Collector`] are invalid or\n if they - in combination with descriptors of already registered Collectors -\n do not fulfill the consistency and uniqueness criteria described in the\n [`Desc`](crate::core::Desc) documentation.\n","sig":null,"attributes":[{"value":"/ Registers a new [`Collector`] to be included in metrics collection. It","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":163569,"byte_end":163643,"line_start":325,"line_end":325,"column_start":1,"column_end":75}},{"value":"/ returns an error if the descriptors provided by the [`Collector`] are invalid or","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":163644,"byte_end":163728,"line_start":326,"line_end":326,"column_start":1,"column_end":85}},{"value":"/ if they - in combination with descriptors of already registered Collectors -","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":163729,"byte_end":163809,"line_start":327,"line_end":327,"column_start":1,"column_end":81}},{"value":"/ do not fulfill the consistency and uniqueness criteria described in the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":163810,"byte_end":163885,"line_start":328,"line_end":328,"column_start":1,"column_end":76}},{"value":"/ [`Desc`](crate::core::Desc) documentation.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":163886,"byte_end":163932,"line_start":329,"line_end":329,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":729},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":164301,"byte_end":164311,"line_start":338,"line_end":338,"column_start":8,"column_end":18},"name":"unregister","qualname":"::registry::unregister","value":"pub fn unregister(Box<Collector>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Unregisters the [`Collector`] that equals the [`Collector`] passed in as\n an argument. (Two Collectors are considered equal if their Describe method\n yields the same set of descriptors.) The function returns an error if a\n [`Collector`] was not registered.\n","sig":null,"attributes":[{"value":"/ Unregisters the [`Collector`] that equals the [`Collector`] passed in as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":164024,"byte_end":164100,"line_start":334,"line_end":334,"column_start":1,"column_end":77}},{"value":"/ an argument. (Two Collectors are considered equal if their Describe method","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":164101,"byte_end":164179,"line_start":335,"line_end":335,"column_start":1,"column_end":79}},{"value":"/ yields the same set of descriptors.) The function returns an error if a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":164180,"byte_end":164255,"line_start":336,"line_end":336,"column_start":1,"column_end":76}},{"value":"/ [`Collector`] was not registered.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":164256,"byte_end":164293,"line_start":337,"line_end":337,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":730},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":164449,"byte_end":164455,"line_start":343,"line_end":343,"column_start":8,"column_end":14},"name":"gather","qualname":"::registry::gather","value":"pub fn gather() -> Vec<proto::MetricFamily>","parent":null,"children":[],"decl_id":null,"docs":" Return all `MetricFamily` of `DEFAULT_REGISTRY`.\n","sig":null,"attributes":[{"value":"/ Return all `MetricFamily` of `DEFAULT_REGISTRY`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":164389,"byte_end":164441,"line_start":342,"line_end":342,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":781},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":176918,"byte_end":176934,"line_start":17,"line_end":17,"column_start":11,"column_end":27},"name":"MetricVecBuilder","qualname":"::vec::MetricVecBuilder","value":"MetricVecBuilder: Send + Sync + Clone","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"decl_id":null,"docs":" An interface for building a metric vector.\n","sig":null,"attributes":[{"value":"/ An interface for building a metric vector.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":176861,"byte_end":176907,"line_start":16,"line_end":16,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":782},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":177008,"byte_end":177009,"line_start":19,"line_end":19,"column_start":10,"column_end":11},"name":"M","qualname":"::vec::MetricVecBuilder::M","value":"type M: Metric;","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" The associated Metric collected.\n","sig":null,"attributes":[{"value":"/ The associated Metric collected.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":176962,"byte_end":176998,"line_start":18,"line_end":18,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":783},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":177062,"byte_end":177063,"line_start":21,"line_end":21,"column_start":10,"column_end":11},"name":"P","qualname":"::vec::MetricVecBuilder::P","value":"type P: Describer + Sync + Send + Clone;","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" The associated describer.\n","sig":null,"attributes":[{"value":"/ The associated describer.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":177023,"byte_end":177052,"line_start":20,"line_end":20,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":177185,"byte_end":177190,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"build","qualname":"::vec::MetricVecBuilder::build","value":"pub fn build(&Self, &Self::P, &[&str]) -> Result<Self::M>","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" `build` builds a [`Metric`] with option and corresponding label names.\n","sig":null,"attributes":[{"value":"/ `build` builds a [`Metric`] with option and corresponding label names.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":177103,"byte_end":177177,"line_start":23,"line_end":23,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1336},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":181918,"byte_end":181927,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"MetricVec","qualname":"::vec::MetricVec","value":"MetricVec {  }","parent":null,"children":[{"krate":0,"index":1338}],"decl_id":null,"docs":" A [`Collector`] to bundle metrics of the same name that\n differ in their label values. It is usually not used directly but as a\n building block for implementations of vectors of a given metric\n type. [`GaugeVec`](crate::GaugeVec) and [`CounterVec`](crate::CounterVec)\n are examples already provided in this package.\n","sig":null,"attributes":[{"value":"/ A [`Collector`] to bundle metrics of the same name that","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":181558,"byte_end":181617,"line_start":169,"line_end":169,"column_start":1,"column_end":60}},{"value":"/ differ in their label values. It is usually not used directly but as a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":181618,"byte_end":181692,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ building block for implementations of vectors of a given metric","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":181693,"byte_end":181760,"line_start":171,"line_end":171,"column_start":1,"column_end":68}},{"value":"/ type. [`GaugeVec`](crate::GaugeVec) and [`CounterVec`](crate::CounterVec)","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":181761,"byte_end":181838,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ are examples already provided in this package.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":181839,"byte_end":181889,"line_start":173,"line_end":173,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182356,"byte_end":182362,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"create","qualname":"<MetricVec<T>>::create","value":"pub fn create(MetricType, T, T::P) -> Result<MetricVec<T>>","parent":null,"children":[],"decl_id":null,"docs":" `create` creates a MetricVec with description `desc`, a metric type `metric_type` and\n a MetricVecBuilder `new_metric`.\n","sig":null,"attributes":[{"value":"/ `create` creates a MetricVec with description `desc`, a metric type `metric_type` and","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182214,"byte_end":182303,"line_start":186,"line_end":186,"column_start":5,"column_end":94}},{"value":"/ a MetricVecBuilder `new_metric`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182308,"byte_end":182344,"line_start":187,"line_end":187,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184226,"byte_end":184254,"line_start":224,"line_end":224,"column_start":12,"column_end":40},"name":"get_metric_with_label_values","qualname":"<MetricVec<T>>::get_metric_with_label_values","value":"pub fn get_metric_with_label_values(&Self, &[&str]) -> Result<T::M>","parent":null,"children":[],"decl_id":null,"docs":" `get_metric_with_label_values` returns the [`Metric`] for the given slice\n of label values (same order as the VariableLabels in Desc). If that combination of\n label values is accessed for the first time, a new [`Metric`] is created.","sig":null,"attributes":[{"value":"/ `get_metric_with_label_values` returns the [`Metric`] for the given slice","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182710,"byte_end":182787,"line_start":201,"line_end":201,"column_start":5,"column_end":82}},{"value":"/ of label values (same order as the VariableLabels in Desc). If that combination of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182792,"byte_end":182878,"line_start":202,"line_end":202,"column_start":5,"column_end":91}},{"value":"/ label values is accessed for the first time, a new [`Metric`] is created.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182883,"byte_end":182960,"line_start":203,"line_end":203,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182965,"byte_end":182968,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ It is possible to call this method without using the returned [`Metric`]","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182973,"byte_end":183049,"line_start":205,"line_end":205,"column_start":5,"column_end":81}},{"value":"/ to only create the new [`Metric`] but leave it at its start value (e.g. a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183054,"byte_end":183131,"line_start":206,"line_end":206,"column_start":5,"column_end":82}},{"value":"/ [`Histogram`](crate::Histogram) without any observations).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183136,"byte_end":183198,"line_start":207,"line_end":207,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183203,"byte_end":183206,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Keeping the [`Metric`] for later use is possible (and should be considered","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183211,"byte_end":183289,"line_start":209,"line_end":209,"column_start":5,"column_end":83}},{"value":"/ if performance is critical), but keep in mind that Reset, DeleteLabelValues and Delete can","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183294,"byte_end":183388,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/ be used to delete the [`Metric`] from the MetricVec. In that case, the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183393,"byte_end":183467,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ [`Metric`] will still exist, but it will not be exported anymore, even if a","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183472,"byte_end":183551,"line_start":212,"line_end":212,"column_start":5,"column_end":84}},{"value":"/ [`Metric`] with the same label values is created later. See also the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183556,"byte_end":183628,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ CounterVec example.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183633,"byte_end":183656,"line_start":214,"line_end":214,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183661,"byte_end":183664,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ An error is returned if the number of label values is not the same as the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183669,"byte_end":183746,"line_start":216,"line_end":216,"column_start":5,"column_end":82}},{"value":"/ number of VariableLabels in Desc.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183751,"byte_end":183788,"line_start":217,"line_end":217,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183793,"byte_end":183796,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Note that for more than one label value, this method is prone to mistakes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183801,"byte_end":183878,"line_start":219,"line_end":219,"column_start":5,"column_end":82}},{"value":"/ caused by an incorrect order of arguments. Consider get_metric_with(labels) as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183883,"byte_end":183965,"line_start":220,"line_end":220,"column_start":5,"column_end":87}},{"value":"/ an alternative to avoid that type of mistake. For higher label numbers, the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":183970,"byte_end":184049,"line_start":221,"line_end":221,"column_start":5,"column_end":84}},{"value":"/ latter has a much more readable (albeit more verbose) syntax, but it comes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184054,"byte_end":184132,"line_start":222,"line_end":222,"column_start":5,"column_end":83}},{"value":"/ with a performance overhead (for creating and processing the Labels map).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184137,"byte_end":184214,"line_start":223,"line_end":223,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185054,"byte_end":185069,"line_start":240,"line_end":240,"column_start":12,"column_end":27},"name":"get_metric_with","qualname":"<MetricVec<T>>::get_metric_with","value":"pub fn get_metric_with(&Self, &HashMap<&str, &str>) -> Result<T::M>","parent":null,"children":[],"decl_id":null,"docs":" `get_metric_with` returns the [`Metric`] for the given Labels map (the\n label names must match those of the VariableLabels in Desc). If that label map is\n accessed for the first time, a new [`Metric`] is created. Implications of\n creating a [`Metric`] without using it and keeping the\n [`Metric`] for later use are the same as for GetMetricWithLabelValues.","sig":null,"attributes":[{"value":"/ `get_metric_with` returns the [`Metric`] for the given Labels map (the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184356,"byte_end":184430,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ label names must match those of the VariableLabels in Desc). If that label map is","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184435,"byte_end":184520,"line_start":229,"line_end":229,"column_start":5,"column_end":90}},{"value":"/ accessed for the first time, a new [`Metric`] is created. Implications of","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184525,"byte_end":184602,"line_start":230,"line_end":230,"column_start":5,"column_end":82}},{"value":"/ creating a [`Metric`] without using it and keeping the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184607,"byte_end":184665,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/ [`Metric`] for later use are the same as for GetMetricWithLabelValues.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184670,"byte_end":184744,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184749,"byte_end":184752,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ An error is returned if the number and names of the Labels are inconsistent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184757,"byte_end":184836,"line_start":234,"line_end":234,"column_start":5,"column_end":84}},{"value":"/ with those of the VariableLabels in Desc.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184841,"byte_end":184886,"line_start":235,"line_end":235,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184891,"byte_end":184894,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This method is used for the same purpose as","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184899,"byte_end":184946,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ `get_metric_with_label_values`. See there for pros and cons of the two","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":184951,"byte_end":185025,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ methods.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185030,"byte_end":185042,"line_start":239,"line_end":239,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185386,"byte_end":185403,"line_start":247,"line_end":247,"column_start":12,"column_end":29},"name":"with_label_values","qualname":"<MetricVec<T>>::with_label_values","value":"pub fn with_label_values(&Self, &[&str]) -> T::M","parent":null,"children":[],"decl_id":null,"docs":" `with_label_values` works as `get_metric_with_label_values`, but panics if an error\n occurs. The method allows neat syntax like:\n     httpReqs.with_label_values(\"404\", \"POST\").inc()\n","sig":null,"attributes":[{"value":"/ `with_label_values` works as `get_metric_with_label_values`, but panics if an error","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185175,"byte_end":185262,"line_start":244,"line_end":244,"column_start":5,"column_end":92}},{"value":"/ occurs. The method allows neat syntax like:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185267,"byte_end":185314,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/     httpReqs.with_label_values(\"404\", \"POST\").inc()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185319,"byte_end":185374,"line_start":246,"line_end":246,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185702,"byte_end":185706,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"with","qualname":"<MetricVec<T>>::with","value":"pub fn with(&Self, &HashMap<&str, &str>) -> T::M","parent":null,"children":[],"decl_id":null,"docs":" `with` works as `get_metric_with`, but panics if an error occurs. The method allows\n neat syntax like:\n     httpReqs.with(Labels{\"status\":\"404\", \"method\":\"POST\"}).inc()\n","sig":null,"attributes":[{"value":"/ `with` works as `get_metric_with`, but panics if an error occurs. The method allows","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185504,"byte_end":185591,"line_start":251,"line_end":251,"column_start":5,"column_end":92}},{"value":"/ neat syntax like:","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185596,"byte_end":185617,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/     httpReqs.with(Labels{\"status\":\"404\", \"method\":\"POST\"}).inc()","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185622,"byte_end":185690,"line_start":253,"line_end":253,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186584,"byte_end":186603,"line_start":270,"line_end":270,"column_start":12,"column_end":31},"name":"remove_label_values","qualname":"<MetricVec<T>>::remove_label_values","value":"pub fn remove_label_values(&Self, &[&str]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" `remove_label_values` removes the metric where the variable labels are the same\n as those passed in as labels (same order as the VariableLabels in Desc). It\n returns true if a metric was deleted.","sig":null,"attributes":[{"value":"/ `remove_label_values` removes the metric where the variable labels are the same","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185811,"byte_end":185894,"line_start":258,"line_end":258,"column_start":5,"column_end":88}},{"value":"/ as those passed in as labels (same order as the VariableLabels in Desc). It","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185899,"byte_end":185978,"line_start":259,"line_end":259,"column_start":5,"column_end":84}},{"value":"/ returns true if a metric was deleted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":185983,"byte_end":186024,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186029,"byte_end":186032,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ It returns an error if the number of label values is not the same as the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186037,"byte_end":186113,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ number of VariableLabels in Desc.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186118,"byte_end":186155,"line_start":263,"line_end":263,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186160,"byte_end":186163,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Note that for more than one label value, this method is prone to mistakes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186168,"byte_end":186245,"line_start":265,"line_end":265,"column_start":5,"column_end":82}},{"value":"/ caused by an incorrect order of arguments. Consider delete(labels) as an","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186250,"byte_end":186326,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ alternative to avoid that type of mistake. For higher label numbers, the","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186331,"byte_end":186407,"line_start":267,"line_end":267,"column_start":5,"column_end":81}},{"value":"/ latter has a much more readable (albeit more verbose) syntax, but it comes","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186412,"byte_end":186490,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/ with a performance overhead (for creating and processing the Labels map).","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186495,"byte_end":186572,"line_start":269,"line_end":269,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":187156,"byte_end":187162,"line_start":282,"line_end":282,"column_start":12,"column_end":18},"name":"remove","qualname":"<MetricVec<T>>::remove","value":"pub fn remove(&Self, &HashMap<&str, &str>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" `remove` removes the metric where the variable labels are the same as those\n passed in as labels. It returns true if a metric was deleted.","sig":null,"attributes":[{"value":"/ `remove` removes the metric where the variable labels are the same as those","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186694,"byte_end":186773,"line_start":274,"line_end":274,"column_start":5,"column_end":84}},{"value":"/ passed in as labels. It returns true if a metric was deleted.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186778,"byte_end":186843,"line_start":275,"line_end":275,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186848,"byte_end":186851,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ It returns an error if the number and names of the Labels are inconsistent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186856,"byte_end":186934,"line_start":277,"line_end":277,"column_start":5,"column_end":83}},{"value":"/ with those of the VariableLabels in the Desc of the MetricVec.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":186939,"byte_end":187005,"line_start":278,"line_end":278,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":187010,"byte_end":187013,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method is used for the same purpose as `delete_label_values`. See","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":187018,"byte_end":187092,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ there for pros and cons of the two methods.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":187097,"byte_end":187144,"line_start":281,"line_end":281,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":187316,"byte_end":187321,"line_start":287,"line_end":287,"column_start":12,"column_end":17},"name":"reset","qualname":"<MetricVec<T>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" `reset` deletes all metrics in this vector.\n","sig":null,"attributes":[{"value":"/ `reset` deletes all metrics in this vector.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":187257,"byte_end":187304,"line_start":286,"line_end":286,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":815},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1350},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1361},{"krate":0,"index":828},{"krate":0,"index":829}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":825},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":191659,"byte_end":191677,"line_start":13,"line_end":13,"column_start":8,"column_end":26},"name":"duration_to_millis","qualname":"::timer::duration_to_millis","value":"pub fn duration_to_millis(Duration) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Convert a duration to millisecond.\n","sig":null,"attributes":[{"value":"/ Convert a duration to millisecond.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":191603,"byte_end":191641,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"inline","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":191642,"byte_end":191651,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":826},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":191852,"byte_end":191862,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"now_millis","qualname":"::timer::now_millis","value":"pub fn now_millis() -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns milliseconds since ANCHOR.","sig":null,"attributes":[{"value":"/ Returns milliseconds since ANCHOR.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":191759,"byte_end":191797,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":191798,"byte_end":191801,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ANCHOR is some fixed point in history.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":191802,"byte_end":191844,"line_start":19,"line_end":19,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":827},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":192337,"byte_end":192350,"line_start":36,"line_end":36,"column_start":8,"column_end":21},"name":"recent_millis","qualname":"::timer::recent_millis","value":"pub fn recent_millis() -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns recent returned value by `now_millis`.\n","sig":null,"attributes":[{"value":"/ Returns recent returned value by `now_millis`.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":192279,"byte_end":192329,"line_start":35,"line_end":35,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":829},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":192652,"byte_end":192666,"line_start":47,"line_end":47,"column_start":8,"column_end":22},"name":"ensure_updater","qualname":"::timer::ensure_updater","value":"pub fn ensure_updater()","parent":null,"children":[],"decl_id":null,"docs":" Ensures background updater is running, which will call `now_millis` periodically.\n","sig":null,"attributes":[{"value":"/ Ensures background updater is running, which will call `now_millis` periodically.","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/timer.rs","byte_start":192559,"byte_end":192644,"line_start":46,"line_end":46,"column_start":1,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":831},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4410,"byte_end":4415,"line_start":177,"line_end":177,"column_start":9,"column_end":14},"name":"local","qualname":"::local","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"decl_id":null,"docs":"    Unsync local metrics, provides better performance.\n","sig":null,"attributes":[{"value":"*\n\n    Unsync local metrics, provides better performance.\n\n    */","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4422,"byte_end":4489,"line_start":178,"line_end":182,"column_start":5,"column_end":7}}]},{"kind":"Mod","id":{"krate":0,"index":850},"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4898,"byte_end":4902,"line_start":194,"line_end":194,"column_start":9,"column_end":13},"name":"core","qualname":"::core","value":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"decl_id":null,"docs":"    Core traits and types.\n","sig":null,"attributes":[{"value":"*\n\n    Core traits and types.\n\n    */","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4909,"byte_end":4948,"line_start":195,"line_end":199,"column_start":5,"column_end":7}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6565,"byte_end":6574,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7278,"byte_end":7283,"line_start":50,"line_end":50,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7634,"byte_end":7641,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8053,"byte_end":8061,"line_start":92,"line_end":92,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8620,"byte_end":8627,"line_start":122,"line_end":122,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9331,"byte_end":9338,"line_start":158,"line_end":158,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10032,"byte_end":10041,"line_start":188,"line_end":188,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10767,"byte_end":10773,"line_start":225,"line_end":225,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11494,"byte_end":11500,"line_start":260,"line_end":260,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13358,"byte_end":13368,"line_start":348,"line_end":348,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13602,"byte_end":13614,"line_start":362,"line_end":362,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28584,"byte_end":28593,"line_start":89,"line_end":89,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":29473,"byte_end":29482,"line_start":128,"line_end":128,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":29787,"byte_end":29796,"line_start":141,"line_end":141,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":30487,"byte_end":30496,"line_start":177,"line_end":177,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":31082,"byte_end":31091,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33769,"byte_end":33783,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":34168,"byte_end":34182,"line_start":52,"line_end":52,"column_start":5,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":36178,"byte_end":36194,"line_start":125,"line_end":125,"column_start":55,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":36514,"byte_end":36530,"line_start":136,"line_end":136,"column_start":55,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39280,"byte_end":39294,"line_start":30,"line_end":30,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39416,"byte_end":39430,"line_start":38,"line_end":38,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40891,"byte_end":40905,"line_start":90,"line_end":90,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41099,"byte_end":41113,"line_start":100,"line_end":100,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41300,"byte_end":41317,"line_start":111,"line_end":111,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41445,"byte_end":41462,"line_start":119,"line_end":119,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41564,"byte_end":41581,"line_start":125,"line_end":125,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42460,"byte_end":42477,"line_start":147,"line_end":147,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43633,"byte_end":43652,"line_start":180,"line_end":180,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43957,"byte_end":43976,"line_start":191,"line_end":191,"column_start":17,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45149,"byte_end":45168,"line_start":239,"line_end":239,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45339,"byte_end":45358,"line_start":247,"line_end":247,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45699,"byte_end":45721,"line_start":260,"line_end":260,"column_start":37,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46226,"byte_end":46248,"line_start":277,"line_end":277,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":47349,"byte_end":47371,"line_start":309,"line_end":309,"column_start":33,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":47541,"byte_end":47563,"line_start":316,"line_end":316,"column_start":27,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":61104,"byte_end":61108,"line_start":91,"line_end":91,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","byte_start":71557,"byte_end":71568,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","byte_start":71686,"byte_end":71697,"line_start":31,"line_end":31,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86652,"byte_end":86664,"line_start":29,"line_end":29,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86786,"byte_end":86798,"line_start":37,"line_end":37,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88295,"byte_end":88307,"line_start":93,"line_end":93,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88501,"byte_end":88513,"line_start":103,"line_end":103,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88698,"byte_end":88713,"line_start":114,"line_end":114,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88841,"byte_end":88856,"line_start":122,"line_end":122,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88958,"byte_end":88973,"line_start":128,"line_end":128,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89833,"byte_end":89848,"line_start":150,"line_end":150,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95554,"byte_end":95567,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97435,"byte_end":97448,"line_start":142,"line_end":142,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97557,"byte_end":97570,"line_start":148,"line_end":148,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97954,"byte_end":97959,"line_start":167,"line_end":167,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":98518,"byte_end":98528,"line_start":193,"line_end":193,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":98775,"byte_end":98785,"line_start":203,"line_end":203,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":99479,"byte_end":99492,"line_start":232,"line_end":232,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":103262,"byte_end":103275,"line_start":329,"line_end":329,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":109793,"byte_end":109800,"line_start":500,"line_end":500,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":112674,"byte_end":112688,"line_start":586,"line_end":586,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114224,"byte_end":114238,"line_start":640,"line_end":640,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115481,"byte_end":115490,"line_start":670,"line_end":670,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115960,"byte_end":115969,"line_start":688,"line_end":688,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":117590,"byte_end":117599,"line_start":747,"line_end":747,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":117854,"byte_end":117863,"line_start":759,"line_end":759,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118364,"byte_end":118383,"line_start":778,"line_end":778,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118953,"byte_end":118965,"line_start":793,"line_end":793,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":122387,"byte_end":122401,"line_start":902,"line_end":902,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":122976,"byte_end":122995,"line_start":923,"line_end":923,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":124541,"byte_end":124560,"line_start":977,"line_end":977,"column_start":15,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":124672,"byte_end":124690,"line_start":985,"line_end":985,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":126831,"byte_end":126845,"line_start":1068,"line_end":1068,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128806,"byte_end":128820,"line_start":1139,"line_end":1139,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128966,"byte_end":128980,"line_start":1146,"line_end":1146,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":129190,"byte_end":129207,"line_start":1159,"line_end":1159,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":130296,"byte_end":130313,"line_start":1191,"line_end":1191,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":130465,"byte_end":130482,"line_start":1198,"line_end":1198,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147547,"byte_end":147551,"line_start":112,"line_end":112,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":149280,"byte_end":149284,"line_start":167,"line_end":167,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":149519,"byte_end":149528,"line_start":178,"line_end":178,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":149649,"byte_end":149658,"line_start":184,"line_end":184,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":149683,"byte_end":149692,"line_start":186,"line_end":186,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":152876,"byte_end":152888,"line_start":25,"line_end":25,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":153110,"byte_end":153122,"line_start":35,"line_end":35,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":160238,"byte_end":160246,"line_start":221,"line_end":221,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":160591,"byte_end":160599,"line_start":237,"line_end":237,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/value.rs","byte_start":172989,"byte_end":172998,"line_start":17,"line_end":17,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/value.rs","byte_start":173653,"byte_end":173658,"line_start":39,"line_end":39,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":177489,"byte_end":177502,"line_start":36,"line_end":36,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182041,"byte_end":182050,"line_start":179,"line_end":179,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182195,"byte_end":182204,"line_start":185,"line_end":185,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":187403,"byte_end":187412,"line_start":292,"line_end":292,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":3866,"byte_end":3871,"line_start":139,"line_end":139,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/lib.rs","byte_start":4312,"byte_end":4317,"line_start":172,"line_end":172,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":815}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":6565,"byte_end":6574,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7278,"byte_end":7283,"line_start":50,"line_end":50,"column_start":6,"column_end":11},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":7634,"byte_end":7641,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8053,"byte_end":8061,"line_start":92,"line_end":92,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":8620,"byte_end":8627,"line_start":122,"line_end":122,"column_start":6,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":9331,"byte_end":9338,"line_start":158,"line_end":158,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10032,"byte_end":10041,"line_start":188,"line_end":188,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":10767,"byte_end":10773,"line_start":225,"line_end":225,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":11494,"byte_end":11500,"line_start":260,"line_end":260,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13358,"byte_end":13368,"line_start":348,"line_end":348,"column_start":18,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1022},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/plain_model.rs","byte_start":13602,"byte_end":13614,"line_start":362,"line_end":362,"column_start":6,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":26936,"byte_end":26941,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":26944,"byte_end":26953,"line_start":12,"line_end":12,"column_start":13,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2134},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":26956,"byte_end":26965,"line_start":12,"line_end":12,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2138},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":26968,"byte_end":26978,"line_start":12,"line_end":12,"column_start":37,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1801},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":26981,"byte_end":26990,"line_start":12,"line_end":12,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":1764},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":26993,"byte_end":26997,"line_start":12,"line_end":12,"column_start":62,"column_end":66},"kind":"SuperTrait","from":{"krate":2,"index":2048},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27000,"byte_end":27004,"line_start":12,"line_end":12,"column_start":69,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27007,"byte_end":27011,"line_start":12,"line_end":12,"column_start":76,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27881,"byte_end":27885,"line_start":58,"line_end":58,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":125}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":27888,"byte_end":27892,"line_start":58,"line_end":58,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":125}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":28584,"byte_end":28593,"line_start":89,"line_end":89,"column_start":17,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1062},"to":{"krate":0,"index":125}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":29473,"byte_end":29482,"line_start":128,"line_end":128,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":29787,"byte_end":29796,"line_start":141,"line_end":141,"column_start":17,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1066},"to":{"krate":0,"index":125}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":30487,"byte_end":30496,"line_start":177,"line_end":177,"column_start":17,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":125}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/atomic64.rs","byte_start":31082,"byte_end":31091,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":33769,"byte_end":33783,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":34168,"byte_end":34182,"line_start":52,"line_end":52,"column_start":5,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":36178,"byte_end":36194,"line_start":125,"line_end":125,"column_start":55,"column_end":71},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/auto_flush.rs","byte_start":36514,"byte_end":36530,"line_start":136,"line_end":136,"column_start":55,"column_end":71},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39280,"byte_end":39294,"line_start":30,"line_end":30,"column_start":27,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1094},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":39416,"byte_end":39430,"line_start":38,"line_end":38,"column_start":17,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":40891,"byte_end":40905,"line_start":90,"line_end":90,"column_start":31,"column_end":45},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1094},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41099,"byte_end":41113,"line_start":100,"line_end":100,"column_start":28,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1094},"to":{"krate":0,"index":658}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41300,"byte_end":41317,"line_start":111,"line_end":111,"column_start":17,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41445,"byte_end":41462,"line_start":119,"line_end":119,"column_start":27,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":41564,"byte_end":41581,"line_start":125,"line_end":125,"column_start":38,"column_end":55},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1100},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":42460,"byte_end":42477,"line_start":147,"line_end":147,"column_start":17,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43633,"byte_end":43652,"line_start":180,"line_end":180,"column_start":42,"column_end":61},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1106},"to":{"krate":0,"index":294}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":43957,"byte_end":43976,"line_start":191,"line_end":191,"column_start":17,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45149,"byte_end":45168,"line_start":239,"line_end":239,"column_start":33,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1106},"to":{"krate":0,"index":660}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45339,"byte_end":45358,"line_start":247,"line_end":247,"column_start":27,"column_end":46},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":45699,"byte_end":45721,"line_start":260,"line_end":260,"column_start":37,"column_end":59},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":315},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":46226,"byte_end":46248,"line_start":277,"line_end":277,"column_start":17,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":47349,"byte_end":47371,"line_start":309,"line_end":309,"column_start":33,"column_end":55},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":315},"to":{"krate":0,"index":660}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/counter.rs","byte_start":47541,"byte_end":47563,"line_start":316,"line_end":316,"column_start":27,"column_end":49},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":315},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/desc.rs","byte_start":61104,"byte_end":61108,"line_start":91,"line_end":91,"column_start":6,"column_end":10},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","byte_start":71557,"byte_end":71568,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/encoder/text.rs","byte_start":71686,"byte_end":71697,"line_start":31,"line_end":31,"column_start":18,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1124},"to":{"krate":0,"index":397}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86652,"byte_end":86664,"line_start":29,"line_end":29,"column_start":27,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1176},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":86786,"byte_end":86798,"line_start":37,"line_end":37,"column_start":17,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88295,"byte_end":88307,"line_start":93,"line_end":93,"column_start":31,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1176},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88501,"byte_end":88513,"line_start":103,"line_end":103,"column_start":28,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1176},"to":{"krate":0,"index":658}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88698,"byte_end":88713,"line_start":114,"line_end":114,"column_start":17,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88841,"byte_end":88856,"line_start":122,"line_end":122,"column_start":27,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1182},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":88958,"byte_end":88973,"line_start":128,"line_end":128,"column_start":38,"column_end":53},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1182},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/gauge.rs","byte_start":89833,"byte_end":89848,"line_start":150,"line_end":150,"column_start":17,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":95554,"byte_end":95567,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97435,"byte_end":97448,"line_start":142,"line_end":142,"column_start":20,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1188},"to":{"krate":0,"index":359}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97557,"byte_end":97570,"line_start":148,"line_end":148,"column_start":21,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1188},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":97954,"byte_end":97959,"line_start":167,"line_end":167,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":98518,"byte_end":98528,"line_start":193,"line_end":193,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":98775,"byte_end":98785,"line_start":203,"line_end":203,"column_start":20,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":99479,"byte_end":99492,"line_start":232,"line_end":232,"column_start":6,"column_end":19},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":103262,"byte_end":103275,"line_start":329,"line_end":329,"column_start":6,"column_end":19},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":109793,"byte_end":109800,"line_start":500,"line_end":500,"column_start":6,"column_end":13},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":112674,"byte_end":112688,"line_start":586,"line_end":586,"column_start":6,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":114224,"byte_end":114238,"line_start":640,"line_end":640,"column_start":15,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1231},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115481,"byte_end":115490,"line_start":670,"line_end":670,"column_start":6,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":115960,"byte_end":115969,"line_start":688,"line_end":688,"column_start":6,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":117590,"byte_end":117599,"line_start":747,"line_end":747,"column_start":17,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1237},"to":{"krate":0,"index":658}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":117854,"byte_end":117863,"line_start":759,"line_end":759,"column_start":20,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1237},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118364,"byte_end":118383,"line_start":778,"line_end":778,"column_start":27,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":118953,"byte_end":118965,"line_start":793,"line_end":793,"column_start":6,"column_end":18},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":122387,"byte_end":122401,"line_start":902,"line_end":902,"column_start":16,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":122976,"byte_end":122995,"line_start":923,"line_end":923,"column_start":6,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":124541,"byte_end":124560,"line_start":977,"line_end":977,"column_start":15,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":124672,"byte_end":124690,"line_start":985,"line_end":985,"column_start":6,"column_end":24},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":126831,"byte_end":126845,"line_start":1068,"line_end":1068,"column_start":6,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128806,"byte_end":128820,"line_start":1139,"line_end":1139,"column_start":22,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1257},"to":{"krate":0,"index":660}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":128966,"byte_end":128980,"line_start":1146,"line_end":1146,"column_start":15,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":129190,"byte_end":129207,"line_start":1159,"line_end":1159,"column_start":6,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":130296,"byte_end":130313,"line_start":1191,"line_end":1191,"column_start":22,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1267},"to":{"krate":0,"index":660}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/histogram.rs","byte_start":130465,"byte_end":130482,"line_start":1198,"line_end":1198,"column_start":16,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143371,"byte_end":143375,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143378,"byte_end":143382,"line_start":16,"line_end":16,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":655}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143652,"byte_end":143656,"line_start":25,"line_end":25,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":658}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143659,"byte_end":143663,"line_start":25,"line_end":25,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":658}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":143666,"byte_end":143671,"line_start":25,"line_end":25,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":658}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":144094,"byte_end":144105,"line_start":38,"line_end":38,"column_start":21,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":660},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":147547,"byte_end":147551,"line_start":112,"line_end":112,"column_start":6,"column_end":10},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":149280,"byte_end":149284,"line_start":167,"line_end":167,"column_start":20,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1272},"to":{"krate":0,"index":359}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":149519,"byte_end":149528,"line_start":178,"line_end":178,"column_start":14,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":901},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":149649,"byte_end":149658,"line_start":184,"line_end":184,"column_start":13,"column_end":22},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":901},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/metrics.rs","byte_start":149683,"byte_end":149692,"line_start":186,"line_end":186,"column_start":21,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":901},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":152876,"byte_end":152888,"line_start":25,"line_end":25,"column_start":26,"column_end":38},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":703},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":153110,"byte_end":153122,"line_start":35,"line_end":35,"column_start":6,"column_end":18},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":160238,"byte_end":160246,"line_start":221,"line_end":221,"column_start":18,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/registry.rs","byte_start":160591,"byte_end":160599,"line_start":237,"line_end":237,"column_start":6,"column_end":14},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/value.rs","byte_start":172989,"byte_end":172998,"line_start":17,"line_end":17,"column_start":6,"column_end":15},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/value.rs","byte_start":173653,"byte_end":173658,"line_start":39,"line_end":39,"column_start":17,"column_end":22},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":176936,"byte_end":176940,"line_start":17,"line_end":17,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":176943,"byte_end":176947,"line_start":17,"line_end":17,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":176950,"byte_end":176955,"line_start":17,"line_end":17,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":177489,"byte_end":177502,"line_start":36,"line_end":36,"column_start":27,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182041,"byte_end":182050,"line_start":179,"line_end":179,"column_start":47,"column_end":56},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1336},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":182195,"byte_end":182204,"line_start":185,"line_end":185,"column_start":27,"column_end":36},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/lzw/.cargo/registry/src/github.com-1ecc6299db9ec823/prometheus-0.10.0/src/vec.rs","byte_start":187403,"byte_end":187412,"line_start":292,"line_end":292,"column_start":41,"column_end":50},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1336},"to":{"krate":0,"index":655}}]}